/*
· SA-MP Gamemode:[LoS] Life of San Andreas | Bulgaria
· Copyright © 2021-2023, Daniel Miroslavov Andreev
· Всички права са запазени.
*/
#include <a_samp>
#include <a_mysql>
#include <streamer>
#include <Dini>
#include <progress>
#include <playerzone>
#include <GetVehicleColor>
#include <eSelection>

#pragma tabsize 0
#if !defined IsValidVehicle
native IsValidVehicle(vehicleid);
#endif

#define PROPERTY_OFFSET(%0) \
        ((((%0) * ((%0) << 1)) << 2) + 65536)
        
#define Holding(%0) \
    ((newkeys & (%0)) == (%0))
#define Pressed(%0) \
(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

//DEFINE DATABASE
#define SQL_HOSTNAME "eu.db1.qgs.bg"
#define SQL_USERNAME "u2353_5CDNoeNPTr"
#define SQL_DATABASE "s2353_LoS_DB"
#define SQL_PASSWORD "D!d+c^t2hboz1MS68hB=Alm="

//DEFINE MISSIONS CHECKPOINTS
#define SERVER_ADDED_MISSIONS true
#define MISSION_CHECKPOINT_RANGE_FOOT 3.0
#define MISSION_1_START 1292.7451,-2048.0161,58.7255

//DEFINE PLAYER OBJECTS
#define PLAYER_OBJECT_LASER 0
#define PLAYER_OBJECT_CUFFS 1
#define PLAYER_OBJECT_HOOK 2
#define PLAYER_OBJECT_ARMOUR 3
#define PLAYER_OBJECT_MONEYBAG 4
#define ALL_PLAYER_OBJECTS 5

//DEFINE SNOW
#define MAX_SNOW_OBJECTS 3

//DEFINE NPCs
#define MAX_NPC_VEHS 3

//FACTION BASE SPAWNS
#define FACTION_SPAWN_NORMAL 0
#define FACTION_SPAWN_SECOND_BASE 1

//DEFINE GENDERS
#define GENDER_MALE 0
#define GENDER_FEMALE 1

//DEFINE LEVEL EXP
#define EXP_PLUS 6

//DEFINE VEHICLES
#define RESPAWN_VEHS_SECONDS 1500

//DEFINE DYNAMIC OBJECTS
#define DYNAMIC_OBJECT_DISTANCE 300.0

//DEFINE SPAWNS
#define FACTION_SPAWN   0
#define CIVIL_SPAWN 1
#define HOUSE_SPAWN   2
#define BIZ_SPAWN 3

//DEFINE CLOSED DIALOG
#define CLOSED_DIALOG 3500

//DEFINE INVALID INDEX
#define INVALID -1

//DEFINE TURFS
#define MAX_OCCUPY_TURFS 318

//DEFINE MAXES
#define MAX_TURFS 320 //318
#define MAX_SPEEDAREAS 5
#define MAX_GRAFFITI 50000
#define MAX_BIZ 50000
#define MAX_HOUSES 50000
#define MAX_SELLCARS 50000
#define MAX_SELLBIKE 5
#define MAX_SELLCAR 12
#define MAX_SIRRENS 50000
#define MAX_ADD_VEH_OBJECTS 50000
#define MAX_BARRICADES 50000
#define MAX_INVENTORY 35
#define MAX_BUYCLOTHES 35
#define MAX_BARITEMS 9
#define MAX_BUY_BIKES 35
#define MAX_BUY_VEHICLE_ATTACHMENTS 20
#define MAX_PLAYER_CLOTHES 11
#define MAX_RENTVEHS 18
#define MAX_PRIVATEVEHS 500
#define MAX_VOTERS 5000
#define MAX_FUEL_STATIONS 16
#define MAX_DROPPED_ITEMS 5000
#define MAX_DYN_OBJECTS 5000
#define MAX_HOUSE_FURNITURES 10
#define MAX_BUY_FURNITURE 70
#define MAX_WEAPON_SKILL_GUNS 11

//DEFINE ESELECTIONS
#define MODEL_SELECTION_INVENTORY 0
#define MODEL_SELECTION_BUYCLOTHES 1
#define MODEL_SELECTION_GETCLOTHES 2
#define MODEL_SELECTION_DROPCLOTHES 3
#define MODEL_SELECTION_BUYVEHICLEATTACHMENTS 4
#define MODEL_SELECTION_BARITEMS 5
#define MODEL_SELECTION_BUY_FURNITURE 6
#define MODEL_SELECTION_SEE_WEAPONSKILL 7

//DEFINES ACHIEVEMENTS
#define ACHIEVEMENT_BUYLEVEL 0
#define ACHIEVEMENT_BUYHOUSE 1
#define ACHIEVEMENT_BUYBIZ 2
#define ACHIEVEMENT_FIRSTKILL 3
#define ACHIEVEMENT_BUYLEGALWEAPON 4

//DEFINES JOBS
#define SIDEJOB_PIZZA 0
#define SIDEJOB_SWEEP 1
#define SIDEJOB_BUS 2
#define SIDEJOB_DELIVER 3
#define SIDEJOB_COALMINE 4

//DEFINES LOCATIONS
#define PizzaJob 1359.4478, 251.0649, 19.5669
#define TaxiJob 1796.5181, -1937.3527, 13.5469
#define TaxiJobBC - 285.3394, 1554.6484, 75.3594
#define SweepJob 216.4074, 14.7296, 2.5708
#define MechanicJob 1905.0569,-1790.2625,13.5469
#define Garage 1857.6542,-1776.4126,13.5658
#define GarageNeon 1880.8676, -1793.3455, 13.8777
#define BusJob - 544.6848, 2598.0608, 53.5156
#define Police 1542.4430, -1675.6853, 13.5545
#define TheNews 1654.2100, -1654.7755, 22.5156
#define Bank 1412.0486, -1699.9275, 13.5395
#define BankBC - 181.5715, 1057.0537, 19.7422
#define Army 834.7424, -2011.4890, 12.8672
#define Tip0Checkpoint - 184.9305, 1034.8531, 19.7422
#define RobPoint 2447.9617, -1963.0054, 13.5469
#define RobPointBC - 127.2078, 974.5254, 19.8516
#define DeliverJob 61.8512, -221.2861, 1.5724
#define CoalmineJob 833.0172, 863.2982, 12.6990
#define FishingPlace 2142.8645, -90.2162, 2.8011
#define Crip 323.1867, -1190.0559, 76.3544
#define WestCoastWheelers 660.9318, -453.2014, 16.3359
#define Vagos 2170.0305, -1015.4562, 62.9689
#define Ballas 2179.7563, -1672.2792, 14.4752
#define UnseenCriminals 1303.0916, -2056.9265, 58.2359
#define Autosallon 2145.0571, -1121.9507, 25.4710
#define DrugPoint 1360.5676, -1488.5371, 13.5469
#define MiniGamesArena 2200.8750, 1394.8069, 11.0625

//DEFINES DIALOGS
#define DIALOG_REGISTER 0
#define DIALOG_LOGIN 1
#define DIALOG_SELECT_GENDER 2
#define DIALOG_VEHMENU 3
#define DIALOG_REFUEL 4
#define DIALOG_RENTVEH 5
#define DIALOG_ATM 6
#define DIALOG_GENERALSTORE 7
#define DIALOG_GPS 8
#define DIALOG_DRINKSSTORE 9
#define DIALOG_BUYVEH 10
#define DIALOG_HELP_CMDS 11
#define DIALOG_AMMUSTORE 12
#define DIALOG_BUYFISH 13
#define DIALOG_BANK 14
#define DIALOG_LOTTO 15
#define DIALOG_SELECT_LOTTO_NUM 16
#define DIALOG_HOUSE_FURNITURES_SLOT 17
#define DIALOG_HOUSE_FURNITURES_REMOVE 18
#define DIALOG_HOUSE_FURNITURES_ADDOBJECT 19
#define DIALOG_HOUSE_FURNITURES_FINAL 20
#define DIALOG_BANK_TRANSFER 21
#define DIALOG_BANK_TRANSFER_2 22
#define DIALOG_BANK_MENU 23
#define DIALOG_TOP 24
#define DIALOG_MORE_VIPS 25
#define DIALOG_TUNEMECHANIC 28
#define DIALOG_BUYFOODORDRINK 29
#define DIALOG_BUYFOOD 30
#define DIALOG_BUYDRINK 31
#define DIALOG_INVENTORY_MENU 32
#define DIALOG_DROP_INVENTORY 33
#define DIALOG_THROW_INVENTORY 34
#define DIALOG_BUYDRUG 35
#define DIALOG_BUYDRUG_COCA 36
#define DIALOG_BUYDRUG_MARI 37
#define DIALOG_BUYDRUG_HEROIN 38
#define DIALOG_GUNMACHINE_POLICE 39
#define DIALOG_DRIVERCOURSE 40
#define DIALOG_DRIVERCOURSE_HELI 41
#define DIALOG_DRIVERCOURSE_MOTORBIKE 42
#define DIALOG_MYFISH 43
#define DIALOG_DROPFISH 44
#define DIALOG_SELL_FISHCRATE 45
#define DIALOG_SELL_FISH 46
#define DIALOG_BUYCLOTHES_MENU 47
#define DIALOG_WITHDRAW_MONEY 48
#define DIALOG_MY_CLOTHES 50
#define DIALOG_GET_CLOTH 51
#define DIALOG_BUYBIKE 52
#define DIALOG_BUYBIKE_2 53
#define DIALOG_BUYCAR 54
#define DIALOG_BUYCAR_2 55
#define DIALOG_BUYNEON 56
#define DIALOG_GPS_2 57
#define DIALOG_GPS_3 58
#define DIALOG_GPS_4 59
#define DIALOG_GPS_5 60
#define DIALOG_GPS_6 61
#define DIALOG_GUNMACHINE_ARMY 62
#define DIALOG_HELP 63
#define DIALOG_HELP_HOW_TO 64
#define DIALOG_VOTE_RESPAWN 65
#define DIALOG_BANK_DEPOSIT 66
#define DIALOG_VIPHELP_CMDS 67
#define DIALOG_REM_BARRICADE 68
#define DIALOG_GUNMACHINE_FBI 69
#define DIALOG_DOCUMENTS 70
#define DIALOG_VOUCHERS 71
#define DIALOG_VOUCHERS_SERVICE 72
#define DIALOG_VOUCHERS_BUY 73
#define DIALOG_MORE_STATS 74
#define DIALOG_VEHOBJECTS 75
#define DIALOG_BLACKMARKET 76
#define DIALOG_VEHOBJECTS_OBJECTID 77
#define DIALOG_BANK_FACTION_WITHDRAW 79
#define DIALOG_BANK_FACTION 80
#define DIALOG_RENTVEH_2 81
#define DIALOG_VOTE_NORMAL 82
#define DIALOG_MANAGE_CREWS 83
#define DIALOG_MANAGE_CREWS_OPTIONS_NOT_EXIST 84
#define DIALOG_MANAGE_CREWS_OPTIONS_EXIST 85
#define DIALOG_VEHTEXT_REMOVE 86
#define DIALOG_VEHTEXT_ADD 87
#define DIALOG_INTERATICE_MENU 88
#define DIALOG_HOUSE_FURNITURES_MANAGE 89
#define DIALOG_BUYFURNITURES_MENU 90
#define DIALOG_FUELSTATIONS_GPS 91
#define DIALOG_FUELSTATIONS_REFILLPT 92
#define DIALOG_AHELP 93
#define DIALOG_ATTACHMENTS 94
#define DIALOG_ATTACHMENTS_FINAL_2 95
#define DIALOG_ATTACHMENTS_2 96
#define DIALOG_ATTACHMENTS_FINAL_3 97
#define DIALOG_ATTACHMENTS_FINAL_4 98
#define DIALOG_JOIN_MINIGAME 99
#define DIALOG_UNSEEN_HOUSE_EXIT 100
#define DIALOG_DROP_GUN 101

//DEFINE FUEL STATIONS
#define LOC_FUELSTATION_1 1004.0327, -937.5370, 42.3281
#define LOC_FUELSTATION_2 1942.3719, -1772.8666, 13.6406
#define LOC_FUELSTATION_3 -1606.7223, -2713.3562, 48.5335
#define LOC_FUELSTATION_4 -2026.7813, 156.5509, 29.0391
#define LOC_FUELSTATION_5 -2243.8149, -2559.8899, 31.9219
#define LOC_FUELSTATION_6 -1676.2601, 413.5443, 7.1797
#define LOC_FUELSTATION_7 2201.8296, 2475.1350, 10.8203
#define LOC_FUELSTATION_8 615.3391, 1690.0454, 6.9922
#define LOC_FUELSTATION_9 -1328.2731, 2677.5278, 50.0625
#define LOC_FUELSTATION_10 70.3842, 1219.0177, 18.8116
#define LOC_FUELSTATION_11 2113.3835, 919.5655, 10.8203
#define LOC_FUELSTATION_12 2641.0115, 1106.6252, 10.8203
#define LOC_FUELSTATION_13 2146.7964, 2747.8115, 10.8203
#define LOC_FUELSTATION_14 -1471.1836, 1863.7598, 32.6328
#define LOC_FUELSTATION_15 655.7673, -565.0798, 16.3359
#define LOC_FUELSTATION_16 1381.8230, 459.1453, 20.3452

//DEFINE ATMS
#define LOC_ATM_1 1458.6890, -1749.3188, 13.5469
#define LOC_ATM_2 1657.5769, -1722.8644, 13.5469
#define LOC_ATM_3 1811.3879, -1875.6643, 13.5842
#define LOC_ATM_4 1929.1722, -1782.7507, 13.5469
#define LOC_ATM_5 2232.6438, -1162.0020, 25.8906
#define LOC_ATM_6 2479.9419, -1757.4442, 13.5469
#define LOC_ATM_7 1944.4203, -2061.4573, 13.5469
#define LOC_ATM_8 1746.6118, -1460.3717, 13.5211
#define LOC_ATM_9 1742.0966, -1272.7473, 13.5467
#define LOC_ATM_10 1014.8442, -929.2678, 42.3281
#define LOC_ATM_11 788.2813, -1105.2966, 23.9199

//DEFINE JOBS LOCATIONS
#define JOB_SWEEP_LOC1 230.3458, 4.8751, 2.4297
#define JOB_SWEEP_LOC2 163.2046, -69.7645, 1.4297
#define JOB_SWEEP_LOC3 130.9483, -172.6051, 1.4297
#define JOB_SWEEP_LOC4 179.9236, -237.0661, 1.4297
#define JOB_SWEEP_LOC5 215.4658, -284.0241, 1.4297
#define JOB_SWEEP_LOC6 285.2109, -191.7871, 1.4297
#define JOB_SWEEP_LOC7 256.0008, -69.4049, 1.4337
#define JOB_SWEEP_LOC8 234.8276, -12.3627, 1.4297
#define JOB_SWEEP_FINAL 262.1429, 12.1672, 2.4423
#define JOB_BUS_LOC1 - 492.0854, 2590.6606, 53.4092
#define JOB_BUS_LOC2 - 816.7968, 2735.0400, 45.5960
#define JOB_BUS_LOC3 - 246.7704, 2628.4109, 62.7063
#define JOB_BUS_LOC4 1037.6808, 2548.0510, 10.7990
#define JOB_BUS_LOC5 1727.3340, 1525.1199, 10.8486
#define JOB_BUS_LOC6 1954.5763, 1269.8358, 10.8023
#define JOB_BUS_LOC7 2329.0063, 707.7830, 10.8450
#define JOB_BUS_LOC8 2551.7371, 806.0624, 11.0539
#define JOB_BUS_LOC9 2570.6350, 1377.9829, 10.8390
#define JOB_BUS_LOC10 2156.7212, 1980.0901, 10.8423
#define JOB_BUS_LOC11 2090.7424, 2331.0515, 10.7376
#define JOB_BUS_FINAL - 514.2125, 2635.6538, 53.1411
#define JOB_PIZZA_LOC1 1347.3176, 261.5433, 19.0054
#define JOB_PIZZA_LOC2 1325.8622, 235.8132, 19.0011
#define JOB_PIZZA_LOC3 1250.5085, 269.2145, 19.0022
#define JOB_PIZZA_LOC4 1224.6180, 229.2364, 19.0038
#define JOB_PIZZA_LOC5 1246.1251, 189.0443, 19.0040
#define JOB_PIZZA_LOC6 1300.7002, -81.3719, 36.1007
#define JOB_PIZZA_LOC7 2153.9312, 39.2667, 25.9335
#define JOB_PIZZA_LOC8 2238.1694, 96.1132, 25.9275
#define JOB_PIZZA_LOC9 2262.7029, 96.1770, 25.9315
#define JOB_PIZZA_LOC10 2338.9824, 115.8092, 25.9338
#define JOB_PIZZA_LOC11 2338.6538, 191.3587, 26.0873
#define JOB_PIZZA_FINAL 1358.2748, 231.7729, 19.2940
#define JOB_DELIVER_LOC1 60.7311, -247.2814, 1.6431
#define JOB_DELIVER_LOC2 209.1989, -214.6360, 1.4961
#define JOB_DELIVER_LOC3 286.0172, -171.3172, 1.4969
#define JOB_DELIVER_LOC4 252.1217, -67.9598, 1.5319
#define JOB_DELIVER_LOC5 - 274.8907, -152.5432, 2.4861
#define JOB_DELIVER_LOC6 33.6504, -632.7850, 3.1989
#define JOB_DELIVER_LOC7 647.9800, -630.6303, 16.6544
#define JOB_DELIVER_LOC8 686.2236, -580.2846, 16.3260
#define JOB_DELIVER_LOC9 815.0588, -535.6743, 16.3248
#define JOB_DELIVER_LOC10 850.3950, -570.7001, 16.9646
#define JOB_DELIVER_LOC11 1256.1289, -346.3912, 5.1546
#define JOB_DELIVER_LOC12 519.7785, -137.4073, 37.9809
#define JOB_DELIVER_LOC13 288.1827, -164.0959, 1.5655
#define JOB_DELIVER_FINAL 120.2661, -285.0057, 1.6455
#define JOB_COALMINE_LOC1 809.2472, 842.9479, 9.8030
#define JOB_COALMINE_LOC2 764.9946, 889.3522, -1.2541
#define JOB_COALMINE_LOC3 683.7329, 971.1793, -12.7109
#define JOB_COALMINE_LOC4 724.9157, 884.9314, -26.4536
#define JOB_COALMINE_LOC5 616.0866, 906.8915, -44.5193
#define JOB_COALMINE_LOC6 497.2571, 891.3735, -32.0035
#define JOB_COALMINE_LOC7 535.6892, 790.3248, -20.1947
#define JOB_COALMINE_LOC8 688.4577, 748.3844, -5.5390
#define JOB_COALMINE_FINAL 849.5752, 856.4982, 13.3516

//DEFINE COLORS
#define COLOR_DUEL 0xFFE400FF //TELNET: 0xFFE400FF
#define COLOR_NPC 0x000000FF
#define COLOR_AFK 0xCAE7F6FF	//TELNET: 0xD6F34AFF
#define COLOR_WEAPONSKILL 0xB37D57FF
#define COLOR_JOB 0xe7905eFF
#define COLOR_PHONE 0x8cccdeFF
#define COLOR_FISH 0x2C80C4FF
#define COLOR_WEAPONS 0xB37D57FF
#define COLOR_LIGHTYELLOW 0xffff66FF
#define COLOR_LIGHTYELLOW2 0xffee81FF
#define COLOR_LIGHTBLUE_GRAY 0x9CAAB5FF
#define COLOR_LIGHTBLUE_GRAY2 0xA9C4EEFF
#define COLOR_LIGHTPINK 0xF9B7FFFF
#define COLOR_YELLOW 0xFFFF00FF
#define COLOR_DARKRED 0xE11111FF
#define COLOR_DARKRED2 0xE60000FF
#define COLOR_PAINTBALL 0xEE4B2BFF
#define COLOR_HOUSE 0x00FF40FF
#define COLOR_LIGHTGREEN 0x1FE731FF
#define COLOR_LIGHTGREEN2 0x88C864FF
#define COLOR_LIGHTGREEN3 0x7CFF7AFF
#define COLOR_LIGHTGREEN4 0x06D52EFF
#define COLOR_LIGHTGREEN5 0x38D900FF
#define COLOR_LIGHTGREEN6 0x5EF403FF 
#define COLOR_MAXLIGHTGREEN 0x00FF00FF
#define COLOR_WHITE 0xFFFFFFFF
#define COLOR_STRANGER 0xf0f0f0FF
#define COLOR_LIGHTBLUE 0x74DFFFFF
#define COLOR_LIGHTBLUE2 0xAAC4E5FF
#define COLOR_LIGHTBLUE3 0x33CCFFFF
#define COLOR_ADVERT 0x26A126FF
#define COLOR_REPORT 0x00A2B7FF
#define COLOR_VIP 0x27cc63FF
#define COLOR_MISSION 0xFF3737FF
#define COLOR_FACTION 0x33CCFFFF
#define COLOR_FACEBOOK 0x4B71D5FF
#define COLOR_TWITTER 0xB0EBFFFF
#define COLOR_DARKWEB 0xE60000FF
#define COLOR_TYPICAL_BLUE 0x5F63F0FF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0x7B7B7BFF
#define COLOR_SMOKEWHITE 0xebebebFF
#define COLOR_DARKPURPLE 0xBF62DAFF
#define COLOR_LIGHTPURPLE 0xD5AED2FF
#define COLOR_LIGHTPURPLE2 0xC2A2DAFF
#define COLOR_LIGHTPURPLE3 0xDDA2F0FF
#define COLOR_LIGHTPURPLE4 0xB5A2C5FF
#define COLOR_LIGHTRED 0xFF4D4DFF
#define COLOR_LIGHTRED2 0xF73E3EFF
#define COLOR_GREY 0xAFAFAFFF
#define COLOR_CYAN 0x01FCFFFF
#define COLOR_GREEN 0x33AA33FF
#define COLOR_RADIO 0x6d610fFF
#define COLOR_LIGHTORANGE 0xEE975BFF
#define COLOR_ORANGE 0xF97804FF
#define COLOR_OOC 0x009EF2FF
#define COLOR_MECHANICS 0xFF927BFF
#define COLOR_POLICE 0x6699ffFF
#define COLOR_POLICE_2 0x0040FFFF
#define COLOR_ARMY 0xC49A02FF
#define COLOR_KACC 0xC49A02FF
#define COLOR_NEWS 0xFF80C0FF //OLD: 0x00cc00FF
#define COLOR_BUS 0x91C5E3FF
#define COLOR_ADMINDUTY 0x87fff7FF
#define COLOR_ANSWER 0xA1D286FF
#define COLOR_VIP_ORANGE 0xF97804FF
#define COLOR_VIP_RED 0x800000FF
#define COLOR_VIP_RED_2 0xFF3737FF
#define COLOR_ADMIN 0x009BFFFF
#define COLOR_ADMIN_DARKGREEN 0x408080FF
#define COLOR_ADMIN_RED 0xE60000FF
#define COLOR_ADMIN_ORANGE 0xF97804FF
#define COLOR_ADMIN_GREEN 0x00E600FF
#define COLOR_FUELSTATION 0x8BB8F1FF
#define COLOR_NEWBIE 0xA1D286FF
#define COLOR_INVISIBLE 0xFFFFFF00
#define COLOR_ORGANISATOR 0xF78616FF
#define COLOR_BIZ 0x00CCCCFF
#define COLOR_AUTOMESSAGE 0x33A8FFFF
#define COLOR_GPS 0x6CD5F9FF
#define COLOR_RED 0xFF0000FF
#define COLOR_LOTTO 0xFF80C0FF
#define COLOR_LOTTO2 0xFF00FFFF
#define COLOR_FBI 0xAA8CFFFF
#define COLOR_TURF 0xC800FFFF
#define COLOR_ROBBERY 0xE60600FF
#define COLOR_EVENT 0x80FF00FF
#define COLOR_GRAFFITS 0xFBFF7CFF
#define COLOR_ERROR 0xF27979FF
#define COLOR_PRIVATEVEH 0x82D821FF
#define COLOR_VEH 0x9ACD32FF
#define COLOR_DRUGS 0xff2d2dFF

//DEFINE PLAYER COLORS
#define COLOR_PLAYER_POLICE 0x0040FFFF
#define COLOR_PLAYER_WHITE 0xffffffFF
#define COLOR_PLAYER_FBI 0xAA8CFFFF
#define COLOR_PLAYER_CRIP 0x000099FF
#define COLOR_PLAYER_WCW 0x7f7f7fFF
#define COLOR_PLAYER_VAGOS 0xFFFF00FF
#define COLOR_PLAYER_BALLAS 0xC2A2DAFF
#define COLOR_PLAYER_UNSEEN 0xFF3737FF //316C87
#define COLOR_PLAYER_ARMY 0xA47B2BFF
#define COLOR_PLAYER_KACC 0xA47B2BFF
#define COLOR_PLAYER_ITALIAN 0xA9F5E1FF
#define COLOR_PLAYER_AZTECAS 0x33CCFFFF
#define COLOR_PLAYER_TRIADS 0xF97804FF
#define COLOR_PLAYER_GROVE 0x33AA33FF

//DEFINE GANG COLORS
#define COLOR_FACTION_POLICE 0x0040FFFF
#define COLOR_FACTION_WHITE 0xffffffFF
#define COLOR_FACTION_FBI 0xAA8CFFFF
#define COLOR_FACTION_CRIP 0x000099FF
#define COLOR_FACTION_WCW 0x7f7f7fFF
#define COLOR_FACTION_VAGOS 0xFFFF00FF
#define COLOR_FACTION_BALLAS 0xC2A2DAFF
#define COLOR_FACTION_UNSEEN 0xFF3737FF //316C87
#define COLOR_FACTION_ARMY 0xA47B2BFF
#define COLOR_FACTION_ITALIAN 0xA9F5E1FF
#define COLOR_FACTION_AZTECAS 0x33CCFFFF
#define COLOR_FACTION_TRIADS 0xF97804FF
#define COLOR_FACTION_GROVE 0x33AA33FF

//DEFINE PLAYER TURFS
#define COLOR_CIVIL_TURF 0x00000033
#define COLOR_CRIP_TURF 0x00009996
#define COLOR_WCW_TURF 0xB7030096
#define COLOR_VAGOS_TURF 0xFFFF0096
#define COLOR_BALLAS_TURF 0xC2A2DA96
#define COLOR_UNSEEN_TURF 0xFF373796 //316C87
#define COLOR_ITALIAN_TURF 0xA9F5E196
#define COLOR_AZTECAS_TURF 0x33CCFF96
#define COLOR_TRIADS_TURF 0xF9780496
#define COLOR_GROVE_TURF 0x33AA3396

//DEFINE GRAFFITI
#define COLOR_CIVIL_GRAFFITI 0xFFFFFFFF
#define COLOR_CRIP_GRAFFITI 0xFF000099
#define COLOR_ITALIAN_GRAFFITI 0xFFA9F5E1
#define COLOR_AZTECAS_GRAFFITI 0xFF33CCFF
#define COLOR_WCW_GRAFFITI 0xFF7f7f7f
#define COLOR_VAGOS_GRAFFITI 0xFFFFFF00
#define COLOR_BALLAS_GRAFFITI 0xFFC2A2DA
#define COLOR_UNSEEN_GRAFFITI 0xFFFF3737 //316C87
#define COLOR_TRIADS_GRAFFITI 0xFFF97804
#define COLOR_GROVE_GRAFFITI 0xFF33AA33

//DEFINE JOBS
#define JOB_NO 0
#define JOB_TAXI 1
#define JOB_MECHANIC 2
#define JOB_NEWS 3
#define JOB_FUELCOMPANY 4
#define MAX_JOBS 5

//DEFINE ATTACHEMENTS
#define MAX_PLAYER_ATTACHMENTS 4

//DEFINE FACTIONS
#define FACTION_CIVILIAN 0
#define FACTION_LSPD 1
#define FACTION_KACC 2
#define FACTION_FBI 3
#define FACTION_CRIP 4
#define FACTION_WCW 5
#define FACTION_VAGOS 6
#define FACTION_BALLAS 7
#define FACTION_UNSEEN 8
#define FACTION_ARMY 9
#define FACTION_ITALIAN_MAFIA 10
#define FACTION_AZTECAS 11
#define FACTION_LVPD 12
#define FACTION_TRIADS 13
#define FACTION_GROVE 14
#define FACTION_RCPD 15
#define MAX_FACTIONS 16

//DEFINE TOP RECORDS
#define MAX_TOP_RECORDS 1
#define TOP_RECORD_KILLS 0

//DEFINE CREWS
#define MAX_CREWS 10

forward IsPlayerInTurf(playerid, Float: min_x, Float: min_y, Float: max_x, Float: max_y);
forward CorDetector(Float: radi, playerid, targetid);
forward CorVehDetector(Float: radi, playerid, targetid);
forward GeneralTimer1s();
forward GeneralTimerms();
forward GeneralTimer2ms();

//Important
new Database;

new VehicleNames[][] = { "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
	"Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
	"Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
	"Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
	"Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
	"Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
	"Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
	"Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
	"Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
	"Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
	"Oceanic", "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
	"Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
	"Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
	"Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
	"Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa", "RC Goblin",
	"Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
	"Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
	"Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
	"FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
	"Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
	"Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
	"Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
	"Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
	"Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
	"Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
	"Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
	"Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
	"News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
	"Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car",
	"Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
	"Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
	"Tiller", "Utility Trailer" };

enum graffitiInfo
{
	GraffitiID,
	Float: gX,
	Float: gY,
	Float: gZ,
	Float: gXY,
	Float: gYY,
	Float: gZY,
	gObjectID,
	GraffitiOwner
}

new maxGraffiti;
new GraffitiInfo[MAX_GRAFFITI][graffitiInfo];
enum allowedSpeedInfo
{
	AreaID,
	Float: zMinX,
	Float: zMinY,
	Float: zMaxX,
	Float: zMaxY,
	MaxSpeed
}

new MaxSpeedAreaInfo[MAX_SPEEDAREAS][allowedSpeedInfo] = {
		{ 0, 1724.0, 867.0, 1874.0, 2377.0, 130 },
	{ 1, 1086.0, 1737.0, 1724.0, 2377.0, 90 },
	{ 2, 1087.0, 1097.0, 1725.0, 1737.0, 90 },
	{ 3, 1875.0, 866.0, 2513.0, 1506.0, 110 },
	{ 4, 1875.0, 1506.0, 2513.0, 2146.0, 100 }
};

enum turfinfo
{
	TurfID,
	TurfName[256],
	Float: zMinX,
	Float: zMinY,
	Float: zMaxX,
	Float: zMaxY,
	TurfColor,
	TurfOwner,
	TurfWarGang
}

new TurfInfo[MAX_TURFS][turfinfo] = {
		{
		0, "Eastern Boys", 919.0, 2056.5, 997.0, 2180.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		1, "Soldier Boys", -1786.6000061035156, 936.4000244140625, -1723.6000061035156, 964.4000244140625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		2, "Da Nang Boyz", 2520.2269897460938, 1716.6477661132812, 2676.2269897460938, 1942.6477661132812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		3, "SOA", 2564.0, 2303.0, 2664.0, 2366.0, COLOR_CIVIL_TURF, 0, 0
	},
	{
		4, "Mara Salvatrucha 13", -58.93389892578125, 1022.3609924316406, 19.06610107421875, 1092.3609924316406, COLOR_CIVIL_TURF, 0, 0
	},
	{
		5, "Los Santos Vagos", 2459.74609375, -1084.98046875, 2634.74609375, -1000.98046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		6, "Grove Street Families", 2373.9481201171875, -1725.944580078125, 2541.9481201171875, -1627.944580078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		7, "Rolling Heigh Ballas", 2134.0, -1497.5, 2201.0, -1394.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		8, "343 Black Street Avenu", -855.333251953125, 1461.8333129882812, -734.333251953125, 1588.8333129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		9, "Varrios Los Aztecas", 731.48046875, -602.4765625, 855.48046875, -480.4765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		10, "Italian Mafia", -720.0249633789062, 928.0124816894531, -656.0249633789062, 977.0124816894531, COLOR_CIVIL_TURF, 0, 0
	},
	{
		11, "Vinewood Cripz", 264.593994140625, -1195.3716125488281, 335.593994140625, -1130.3716125488281, COLOR_CIVIL_TURF, 0, 0
	},
	{
		12, "Las Venturas Triads", 1898.9168701171875, 922.8713989257812, 1991.9168701171875, 958.8713989257812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		13, "Bounty Hunters", 676.375, -1309.5703125, 788.375, -1255.5703125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		14, "Yakuza", 2562.73046875, 2705.30078125, 2614.73046875, 2795.30078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		15, "Syndicate Texas", 1712.734375, 2726.2890625, 1819.734375, 2882.2890625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		16, "Bulgarian Mafia", 1196.0, -844.166748046875, 1370.0, -750.166748046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		17, "Blood Mafia", 1072.500244140625, -1272.0001220703125, 1139.500244140625, -1215.0001220703125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		18, "No Fly Zone 1", -82.015625, 1626.0078125, 178.984375, 1870.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		19, "No Fly Zone 2", 180.984375, 1626.015625, 440.984375, 1870.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		20, "No Fly Zone 3", -81.015625, 1872.015625, 178.984375, 2114.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		21, "No Fly Zone 4", 180.984375, 1872.015625, 440.984375, 2114.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		22, "Fort Carson 1", -338.0078125, 1015.015625, -182.0078125, 1199.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		23, "Fort Carson 2", -180.0078125, 1097.0234375, 37.9921875, 1199.0234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		24, "The Sherman Dam", -864.020751953125, 1990.5208282470703, -536.020751953125, 2109.5208282470703, COLOR_CIVIL_TURF, 0, 0
	},
	{
		25, "Valle Ocultado", -895.0103759765625, 2734.506935119629, -718.0103759765625, 2793.506935119629, COLOR_CIVIL_TURF, 0, 0
	},
	{
		26, "Arco Del Oeste", -879.0, 2265.4999771118164, -616.0, 2466.4999771118164, COLOR_CIVIL_TURF, 0, 0
	},
	{
		27, "Aldea Malvada", -1356.8637084960938, 2483.193199157715, -1256.8637084960938, 2583.193199157715, COLOR_CIVIL_TURF, 0, 0
	},
	{
		28, "Las Payasdas", -321.6527099609375, 2645.5312423706055, -138.6527099609375, 2786.5312423706055, COLOR_CIVIL_TURF, 0, 0
	},
	{
		29, "Aircraft Graveyard", -81.617919921875, 2400.50691986084, 448.382080078125, 2561.50691986084, COLOR_CIVIL_TURF, 0, 0
	},
	{
		30, "Regular Tom", -338.6353759765625, 1671.9756469726562, -246.6353759765625, 1806.9756469726562, COLOR_CIVIL_TURF, 0, 0
	},
	{
		31, "The Big Ear", -416.649169921875, 1468.7499694824219, -192.649169921875, 1644.7499694824219, COLOR_CIVIL_TURF, 0, 0
	},
	{
		32, "Robada Intersection", -1125.0625, 1145.0390625, -790.0625, 1331.0390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		33, "Green Palms", 111.984375, 1337.0078125, 282.984375, 1481.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		34, "Bayside Tunnel", -2274.015625, 2528.0078125, -1884.015625, 2694.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		35, "Bayside", -2642.0234375, 2201.015625, -2341.0234375, 2549.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		36, "Bayside Marina", -2339.0390625, 2224.015625, -2167.0390625, 2487.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		37, "Gant Bridge", -2716.0546875, 1848.0625, -2641.0546875, 2176.0625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		38, "Gant Bridge 2", -2715.0653533935547, 1509.0653991699219, -2640.0653533935547, 1846.0653991699219, COLOR_CIVIL_TURF, 0, 0
	},
	{
		39, "Battery Point", -2715.071029663086, 1271.0653457641602, -2535.071029663086, 1507.0653457641602, COLOR_CIVIL_TURF, 0, 0
	},
	{
		40, "San Fierro Bay", -2527.015625, 1522.0078125, -2298.015625, 1568.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		41, "Esplanade North 1", -1979.015625, 1383.0078125, -1627.015625, 1558.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		42, "Esplanade East 1", -1553.015625, 1020.0078125, -1413.015625, 1237.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		43, "Paradiso 1", -2715.078125, 1015.078125, -2536.078125, 1269.078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		44, "Paradiso 2", -2746.0625, 813.5, -2536.0625, 1013.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		45, "Palisades 1", -2962.078125, 1017.078125, -2717.078125, 1311.078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		46, "Palisades 2", -2962.078125, 768.078125, -2748.078125, 1016.078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		47, "Palisades 3", -2964.0874938964844, 475.0875244140625, -2750.0874938964844, 767.0875244140625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		48, "Juniper Hollow 1", -2533.0859375, 1192.5390625, -2275.0859375, 1380.5390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		49, "Juniper Hollow 2", -2535.09375, 1091.5390625, -2247.09375, 1191.5390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		50, "Juniper Hollow 3", -2535.09375, 920.5390625, -2248.09375, 1089.5390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		51, "Santa Flora 1", -2746.0625, 703.5000247955322, -2536.0625, 812.5000247955322, COLOR_CIVIL_TURF, 0, 0
	},
	{
		52, "Santa Flora 2", -2749.0874938964844, 476.0875244140625, -2536.0874938964844, 702.0875244140625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		53, "Downtown 1", -1996.0312194824219, 403.4165496826172, -1806.0312194824219, 596.4165496826172, COLOR_CIVIL_TURF, 0, 0
	},
	{
		54, "Ocean Flats 1", -2854.0, 156.08740234375, -2536.0, 280.08740234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		55, "City Hall", -2854.0, 281.08740234375, -2536.0, 474.08740234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		56, "Ocean Flats 2", -2848.0, -59.91259765625, -2699.0, 155.08740234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		57, "Ocean Flats 3", -2698.0, -59.91259765625, -2536.0, 154.08740234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		58, "Ocean Flats 4", -2848.0, -203.91259765625, -2696.0, -60.91259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		59, "Paradiso", -2695.0, -203.91259765625, -2427.0, -60.91259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		60, "Missionary Hill", -2654.0, -811.60009765625, -2279.0, -500.60009765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		61, "Avispa Country Club 1", -2848.0, -423.91259765625, -2655.0, -205.91259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		62, "Avispa Country Club 2", -2653.0, -341.91259765625, -2270.0, -205.91259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		63, "Easter Bay Chemicals", -1125.2734375, -760.96875, -969.2734375, -590.96875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		64, "Fallen Tree", -621.25, -565.9921875, -467.25, -467.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		65, "The Farm 1", -1201.25, -1329.9921875, -962.25, -909.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		66, "Esplanade North 2", -1979.0234375, 1193.0078125, -1751.0234375, 1382.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		67, "Esplanade North 3", -1749.0234375, 1193.01171875, -1553.0234375, 1382.01171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		68, "Calton Heights 1", -2273.0859375, 1193.546875, -1979.0859375, 1380.546875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		69, "Doherty 1", -2266.0078125, -342.94921875, -2005.0078125, -62.94921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		70, "Garcia", -2425.0, -203.8984375, -2268.0, -60.8984375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		71, "Calton Heights 2", -2246.015625, 1015.54296875, -1883.015625, 1191.54296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		72, "Juniper Hill 1", -2535.09765625, 705.55078125, -2253.09765625, 918.55078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		73, "Doherty 2", -2136.0267181396484, 110.04461669921875, -1997.0267181396484, 337.04461669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		74, "Juniper Hill 2", -2535.09765625, 475.5546875, -2396.09765625, 704.5546875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		75, "Queens", -2535.09765625, 164.5703125, -2396.09765625, 474.5703125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		76, "Garcia", -2535.0, -59.9921875, -2260.0, 163.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		77, "Doherty 3", -2258.01171875, -61.9921875, -1998.01171875, 109.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		78, "Doherty 4", -2257.0267181396484, 111.04463958740234, -2138.0267181396484, 337.04463958740234, COLOR_CIVIL_TURF, 0, 0
	},
	{
		79, "Garcia 2", -2394.09765625, 164.015625, -2259.09765625, 485.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		80, "Kings 1", -2257.020751953125, 338.04156494140625, -1997.020751953125, 500.04156494140625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		81, "Juniper Hill 3", -2395.1041259765625, 486.5624084472656, -2257.1041259765625, 704.5624084472656, COLOR_CIVIL_TURF, 0, 0
	},
	{
		82, "China Town", -2251.1041259765625, 707.5416564941406, -1997.1041259765625, 920.5416564941406, COLOR_CIVIL_TURF, 0, 0
	},
	{
		83, "Kings 2", -2255.1041259765625, 501.5625, -1996.1041259765625, 705.5625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		84, "Financial 1", -1882.0208129882812, 1087.5625, -1554.0208129882812, 1191.5625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		85, "Financial 2", -1880.020751953125, 965.5625, -1742.020751953125, 1086.5625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		86, "Downtown 2", -1741.0255737304688, 965.5625610351562, -1554.0255737304688, 1086.5625610351562, COLOR_CIVIL_TURF, 0, 0
	},
	{
		87, "Esplanade East 2", -1553.0255737304688, 820.0171356201172, -1411.0255737304688, 1018.0171356201172, COLOR_CIVIL_TURF, 0, 0
	},
	{
		88, "Downtown 8", -2147.681884765625, 921.5483856201172, -1881.681884765625, 1014.5483856201172, COLOR_CIVIL_TURF, 0, 0
	},
	{
		89, "Downtown 3", -1880.0284423828125, 733.4035034179688, -1788.0284423828125, 964.4035034179688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		90, "Downtown 1", -1996.1079711914062, 733.5540771484375, -1881.1079711914062, 920.5540771484375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		91, "Downtown 4", -1995.1136474609375, 597.5540771484375, -1714.1136474609375, 731.5540771484375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		92, "Downtown 5", -1723.6051635742188, 819.4034729003906, -1554.6051635742188, 964.4034729003906, COLOR_CIVIL_TURF, 0, 0
	},
	{
		93, "Downtown 6", -1786.6051635742188, 732.4035339355469, -1725.6051635742188, 936.4035339355469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		94, "Downtown 7", -1723.6079711914062, 734.0256958007812, -1534.6079711914062, 819.0256958007812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		95, "Easter Basin 1", -1533.1353759765625, 462.5623779296875, -1217.1353759765625, 518.5623779296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		96, "Easter Basin 2", -1469.1353759765625, 303.5623779296875, -1216.1353759765625, 461.5623779296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		97, "Easter Basin 3", -1712.1353759765625, 302.56238555908203, -1470.1353759765625, 461.56238555908203, COLOR_CIVIL_TURF, 0, 0
	},
	{
		98, "Easter Bay Airport 1", -1558.7017211914062, -537.332160949707, -1173.7017211914062, -402.33216094970703, COLOR_CIVIL_TURF, 0, 0
	},
	{
		99, "Easter Bay Airport 2", -1675.7074584960938, -401.3293151855469, -1297.7074584960938, -267.3293151855469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		100, "Easter Bay Airport 3", -1296.7102661132812, -400.3293151855469, -1171.7102661132812, -110.32931518554688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		101, "Easter Bay Airport 4", -1437.681884765625, -266.98846435546875, -1297.681884765625, 56.01153564453125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		102, "Easter Bay Airport 5", -1680.681884765625, -266.17034912109375, -1438.681884765625, -109.17034912109375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		103, "Foster Valley 1", -1994.681884765625, -869.4430541992188, -1828.681884765625, -630.4430541992188, COLOR_CIVIL_TURF, 0, 0
	},
	{
		104, "Foster Valley 6", -1994.6875, -1064.4402160644531, -1829.6875, -870.4402160644531, COLOR_CIVIL_TURF, 0, 0
	},
	{
		105, "Foster Valley 7", -1994.6875, -1325.4402465820312, -1828.6875, -1065.4402465820312, COLOR_CIVIL_TURF, 0, 0
	},
	{
		106, "Mount Chiliad 1", -2866.013900756836, -1281.9828186035156, -2205.013900756836, -1072.9828186035156, COLOR_CIVIL_TURF, 0, 0
	},
	{
		107, "Mount Chiliad 2", -2866.0243072509766, -1783.9689178466797, -2639.0243072509766, -1283.9689178466797, COLOR_CIVIL_TURF, 0, 0
	},
	{
		108, "Mount Chiliad 3", -2638.03515625, -1782.96875, -2414.03515625, -1282.96875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		109, "Mount Chiliad 4", -2412.046875, -1504.96875, -2066.046875, -1282.96875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		110, "Mount Chiliad 5", -2412.05078125, -1782.96875, -2018.05078125, -1505.96875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		111, "Mount Chiliad 6", -2638.03515625, -1973.96484375, -2103.03515625, -1783.96484375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		112, "Angel Pine 1", -2247.0, -2394.9921875, -2052.0, -2222.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		113, "Angel Pine 2", -2247.01171875, -2589.98828125, -1956.01171875, -2395.98828125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		114, "Sandy Creeks 1", -1657.0, -2803.9921875, -1494.0, -2666.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		115, "The Farm 3", -1488.015625, -1607.4921875, -1380.015625, -1399.4921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		116, "Back O'Beyond 3", -1106.015625, -2726.4765625, -731.015625, -2365.4765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		117, "Back O'Beyond 4", -728.015625, -2730.4765625, -365.015625, -2365.4765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		118, "Back O'Beyond 2", -1102.015625, -2363.4765625, -733.015625, -2014.4765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		119, "Back O'Beyond 1", -730.0234375, -2362.4921875, -362.0234375, -2013.4921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		120, "Sandy Cabin", -1660.03125, -2285.4921875, -1604.03125, -2203.4921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		121, "Sandy Creeks 3", -1660.03125, -2553.4765625, -1413.03125, -2286.4765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		122, "Sandy Creeks 5", -1602.0546875, -2284.4765625, -1351.0546875, -2020.4765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		123, "Sandy Creeks 4", -1892.015625, -2202.4921875, -1604.015625, -2010.4921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		124, "Sandy Creeks 2", -1887.0, -2553.48828125, -1662.0, -2203.48828125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		125, "Mount Chiliad 7", -1949.015625, -1756.98828125, -1725.015625, -1508.98828125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		126, "The Panopticon", -601.6666259765625, -203.83349609375, -412.6666259765625, -22.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		127, "Blueberry Acres", -294.6666259765625, -202.83349609375, 102.3333740234375, 216.16650390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		128, "Blueberry", 104.3333740234375, -202.83349609375, 368.3333740234375, 16.16650390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		129, "Dillimore", 593.666748046875, -657.83349609375, 729.666748046875, -423.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		130, "Martin Bridge", -221.333251953125, 269.833251953125, -112.333251953125, 467.833251953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		131, "Fallow Bridge", 423.666748046875, 380.833251953125, 595.666748046875, 609.833251953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		132, "The Mako Span", 1678.0, 427.833251953125, 1783.0, 602.833251953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		133, "Montgomery", 1146.0, 148.833251953125, 1421.0, 426.833251953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		134, "Hunter Quarry", 393.33349609375, 710.1666259765625, 822.33349609375, 1009.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		135, "Flint Range", -609.5310668945312, -1622.4690551757812, -158.53106689453125, -1193.4690551757812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		136, "Flint Intersection", -157.53106689453125, -1537.4690551757812, 18.46893310546875, -1258.4690551757812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		137, "Palomino Creek", 2122.0, -177.16668701171875, 2597.0, 212.83331298828125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		138, "Northstar Rock", 2386.0, -829.83349609375, 2805.0, -447.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		139, "Montgomery Intersection", 1546.000244140625, 198.16650390625, 1751.000244140625, 388.16650390625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		140, "Ocean Docks 1", 2653.0, -2586.1669921875, 2817.0, -2311.1669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		141, "Ocean Docks 3", 2359.0, -2715.1669921875, 2561.0, -2465.1669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		142, "LS International Airport 1", 1256.0, -2384.1669921875, 1845.0, -2190.1669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		143, "LS International Airport 2", 1341.0, -2689.1669921875, 1729.0, -2385.1669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		144, "LS International Airport 4", 1730.0, -2689.1669921875, 2124.0, -2385.1669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		145, "LS International Airport 3", 1847.0, -2383.1669921875, 2053.0, -2190.1669921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		146, "Playa Del Seville", 2624.0003662109375, -2145.0001831054688, 2846.0003662109375, -1903.0001831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		147, "Ocean Docks 4", 2054.0003051757812, -2342.1626892089844, 2387.0003051757812, -2190.1626892089844, COLOR_CIVIL_TURF, 0, 0
	},
	{
		148, "Ocean Docks 2", 2487.0003662109375, -2463.1627197265625, 2651.0003662109375, -2315.1627197265625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		149, "Ocean Docks 5", 2388.0003051757812, -2286.000213623047, 2805.0003051757812, -2147.000213623047, COLOR_CIVIL_TURF, 0, 0
	},
	{
		150, "East  Beach 1", 2626.80029296875, -1902.2001953125, 2848.80029296875, -1650.2001953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		151, "Ganton 2", 2541.9378051757812, -1851.9377136230469, 2625.9378051757812, -1626.9377136230469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		152, "Willow Field 1", 2424.80029296875, -2038.2001953125, 2622.80029296875, -1854.2001953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		153, "East  Beach 2", 2734.80029296875, -1649.2001953125, 2884.80029296875, -1403.2001953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		154, "East  Beach 3", 2626.80029296875, -1649.2001953125, 2732.80029296875, -1452.2001953125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		155, "East  Beach 4", 2734.80029296875, -1401.199951171875, 2883.80029296875, -1173.199951171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		156, "Las Colinas 1", 2734.80029296875, -1172.199951171875, 2884.80029296875, -1049.199951171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		157, "Las Colinas 2", 2459.75, -1169.9921875, 2733.75, -1084.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		158, "Los Flores", 2463.75, -1450.9921875, 2733.75, -1170.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		159, "East Los Santos 1", 2330.75, -1626.98828125, 2626.75, -1452.98828125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		160, "East Los Santos 2", 2329.749755859375, -1450.9855651855469, 2462.749755859375, -1169.9855651855469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		161, "Esplanade North 4", -1484.0, 1471.5, -1360.0, 1504.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		162, "Ganton 1", 2257.9968872070312, -1852.9400634765625, 2541.9968872070312, -1725.9400634765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		163, "Ocean Docks 6", 2257.7745361328125, -2145.17041015625, 2623.7745361328125, -2040.17041015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		164, "Willow Field 3", 2005.75, -2189.15625, 2256.75, -1978.15625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		165, "Willow Field 2", 2258.0, -2038.90625, 2424.0, -1852.90625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		166, "Idlewood 1", 1964.979248046875, -1977.0001831054688, 2256.979248046875, -1726.0001831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		167, "Ganton 2", 2214.975311279297, -1724.9876098632812, 2372.975311279297, -1626.9876098632812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		168, "East Los Santos 3", 2202.9912109375, -1626.4884033203125, 2328.9912109375, -1395.4884033203125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		169, "Unity Station", 1684.73828125, -1960.9765625, 1821.73828125, -1841.9765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		170, "El Corona 1", 1684.7265625, -2189.97265625, 1819.7265625, -1961.97265625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		171, "El Corona 2", 1820.7421875, -2189.14453125, 2004.7421875, -1978.14453125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		172, "Idlewood 2", 1822.7265625, -1977.14453125, 1963.7265625, -1723.14453125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		173, "Idlewood 3", 1963.984375, -1725.0, 2213.984375, -1627.0, COLOR_CIVIL_TURF, 0, 0
	},
	{
		174, "Commerce 1", 1513.666748046875, -1840.5001831054688, 1821.666748046875, -1675.5001831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		175, "Glen Park 1", 1851.6628112792969, -1258.8251037597656, 2131.662811279297, -1135.8251037597656, COLOR_CIVIL_TURF, 0, 0
	},
	{
		176, "Downtown Los Santos 1", 1460.666748046875, -1430.83349609375, 1712.666748046875, -1303.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		177, "Downtown Los Santos 2", 1460.666748046875, -1302.83349609375, 1712.666748046875, -1171.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		178, "Commerce 2", 1460.666748046875, -1673.83349609375, 1711.666748046875, -1431.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		179, "Glen Park 2", 1852.666748046875, -1496.83349609375, 2131.666748046875, -1259.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		180, "Idlewood 4", 1962.979248046875, -1626.5, 2202.979248046875, -1497.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		181, "Idlewood 5", 1822.9753112792969, -1721.8251037597656, 1963.9753112792969, -1496.8251037597656, COLOR_CIVIL_TURF, 0, 0
	},
	{
		182, "Downtown Los Santos 3", 1712.666748046875, -1496.83349609375, 1850.666748046875, -1171.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		183, "Little Mexico", 1712.6531372070312, -1673.8179321289062, 1821.6531372070312, -1496.8179321289062, COLOR_CIVIL_TURF, 0, 0
	},
	{
		184, "Conference Center", 1032.666748046875, -1838.8334350585938, 1511.666748046875, -1674.8334350585938, COLOR_CIVIL_TURF, 0, 0
	},
	{
		185, "Mulholland Intersection", 1460.666748046875, -1170.83349609375, 1850.666748046875, -874.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		186, "Downtown Los Santos 3", 1315.666748046875, -1433.83349609375, 1459.666748046875, -1016.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		187, "Verona Beach 1", 1104.666748046875, -1673.83349609375, 1459.666748046875, -1434.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		188, "Santa Maria Beach 1", 84.666748046875, -1932.83349609375, 423.666748046875, -1707.83349609375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		189, "Santa Maria Beach 2", 424.666748046875, -1931.8333740234375, 731.666748046875, -1707.8333740234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		190, "Verona Beach 2", 733.666748046875, -1901.8334350585938, 1032.666748046875, -1674.8334350585938, COLOR_CIVIL_TURF, 0, 0
	},
	{
		191, "Market 1", 1141.5001220703125, -1434.1666870117188, 1314.5001220703125, -1138.1666870117188, COLOR_CIVIL_TURF, 0, 0
	},
	{
		192, "Market 2", 898.5001220703125, -1434.0, 1140.5001220703125, -1272.0, COLOR_CIVIL_TURF, 0, 0
	},
	{
		193, "Verona Beach 4", 941.666748046875, -1673.8333740234375, 1103.666748046875, -1434.8333740234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		194, "Verona Beach 3", 733.6646728515625, -1673.829345703125, 940.6646728515625, -1434.829345703125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		195, "Market Station", 676.3777465820312, -1433.573745727539, 897.3777465820312, -1309.573745727539, COLOR_CIVIL_TURF, 0, 0
	},
	{
		196, "Rodeo 1", 565.0453491210938, -1707.4430541992188, 732.0453491210938, -1434.4430541992188, COLOR_CIVIL_TURF, 0, 0
	},
	{
		197, "Rodeo 3", 438.9287109375, -1706.4373779296875, 563.9287109375, -1582.4373779296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		198, "Rodeo 4", 107.9168701171875, -1706.4376831054688, 436.9168701171875, -1531.4376831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		199, "Rodeo 2", 438.9168701171875, -1580.4376831054688, 562.9168701171875, -1255.4376831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		200, "Rodeo 5", 103.9168701171875, -1530.3543395996094, 437.9168701171875, -1195.3543395996094, COLOR_CIVIL_TURF, 0, 0
	},
	{
		201, "Vinewood 1", 563.9168701171875, -1433.4375, 674.9168701171875, -1255.4375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		202, "Vinewood 2", 788.375244140625, -1308.5625, 898.375244140625, -1022.5625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		203, "Richman 1", 438.9168701171875, -1255.4375, 786.9168701171875, -1072.4375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		204, "Market 4", 899.375244140625, -1271.5626220703125, 1072.375244140625, -1022.5626220703125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		205, "Market 3", 1073.5001220703125, -1215.5626525878906, 1140.5001220703125, -1022.5626525878906, COLOR_CIVIL_TURF, 0, 0
	},
	{
		206, "Market 2", 1141.500244140625, -1137.166748046875, 1314.500244140625, -843.166748046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		207, "Richman 2", 430.3751220703125, -1072.4376831054688, 787.3751220703125, -964.4376831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		208, "Vinewood 3", 788.3751220703125, -1021.5626831054688, 1140.3751220703125, -922.5626831054688, COLOR_CIVIL_TURF, 0, 0
	},
	{
		209, "Mulholland 2", 788.3751220703125, -921.5627136230469, 1137.3751220703125, -804.5627136230469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		210, "Richman 3", 393.60009765625, -963.400146484375, 787.60009765625, -701.400146484375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		211, "Hilltop Farms", 1003.25, -384.9921875, 1138.25, -283.9921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		212, "Mulholland 1", 1315.6608276367188, -1015.8305358886719, 1458.6608276367188, -847.8305358886719, COLOR_CIVIL_TURF, 0, 0
	},
	{
		213, "East Los Santos 4", 2133.984375, -1394.4921875, 2328.984375, -1135.4921875, 0xFF0000FF
	},
	{
		214, "Las Colinas 4", 1852.65625, -1133.81640625, 2326.65625, -980.81640625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		215, "Las Colinas 3", 2328.65625, -1168.80078125, 2458.65625, -980.80078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		216, "Hanky Panky Point", 2608.9921875, 15.0078125, 2743.9921875, 275.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		217, "Blackfield Chapel", 1342.33349609375, 646.1666259765625, 1756.33349609375, 797.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		218, "Last Dime Motel", 1825.0, 623.1666259765625, 1990.0, 791.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		219, "Rockshore West 1", 1993.0, 623.1666259765625, 2272.0, 791.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		220, "Rockshore West 2", 2273.0, 623.1666259765625, 2705.0, 791.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		221, "Linden Side", 2781.0, 835.1666259765625, 2897.0, 1020.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		222, "Linden Station", 2755.0, 1218.5, 2883.0, 1390.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		223, "The Camel's Toe", 2084.98828125, 1184.171875, 2411.98828125, 1365.171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		224, "Come-A-Lot", 2084.98046875, 984.17578125, 2333.98046875, 1181.17578125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		225, "The Pink Swan", 1816.75, 1105.0208129882812, 2082.75, 1268.0208129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		226, "LVA Freight Depot 1", 1484.750244140625, 1051.0416259765625, 1815.750244140625, 1190.0416259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		227, "Blackfiled College 1", 956.0, 954.1666259765625, 1198.0, 1183.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		228, "Blackfield", 1017.0, 1184.1666259765625, 1197.0, 1680.1666259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		229, "White Wood Esates 1", 906.0, 1681.8333129882812, 1017.0, 2046.8333129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		230, "White Wood Esates 2", 1019.0, 1679.8333129882812, 1199.0, 2046.8333129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		231, "White Wood Esates 3", 897.0, 2048.166664123535, 1016.0, 2423.166664123535, COLOR_CIVIL_TURF, 0, 0
	},
	{
		232, "White Wood Esates 5", 672.0, 1850.8333129882812, 812.0, 2097.8333129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		233, "White Wood Esates 4", 1017.0, 2050.166664123535, 1200.0, 2423.166664123535, COLOR_CIVIL_TURF, 0, 0
	},
	{
		234, "Yellow Bell Golf Club", 1120.33349609375, 2719.5, 1535.33349609375, 2861.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		235, "Yellow Bell Station", 1204.33349609375, 2507.5, 1534.33349609375, 2717.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		236, "Prickle Pine 1", 1536.3125, 2508.5078125, 1710.3125, 2861.5078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		237, "Prickle Pine 2", 1912.7214965820312, 2646.318192958832, 2080.7214965820312, 2787.318192958832, COLOR_CIVIL_TURF, 0, 0
	},
	{
		238, "K.A.C.C", 2614.7271728515625, 2648.40057516098, 2755.7271728515625, 2872.40057516098, COLOR_CIVIL_TURF, 0, 0
	},
	{
		239, "Spiny Bed 2", 2240.3180541992188, 2724.3750166893005, 2456.3180541992188, 2827.3750166893005, COLOR_CIVIL_TURF, 0, 0
	},
	{
		240, "LVA Freight Depot 4", 1259.750244140625, 874.0416259765625, 1482.750244140625, 1190.0416259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		241, "Las Venturas Airport 1", 1240.7293701171875, 1689.0416259765625, 1818.7293701171875, 1773.0416259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		242, "Redsands West 1", 1239.6668701171875, 2068.062469482422, 1514.6668701171875, 2269.062469482422, COLOR_CIVIL_TURF, 0, 0
	},
	{
		243, "Redsands West 5", 1238.6668701171875, 1884.0416564941406, 1563.6668701171875, 2065.0416564941406, COLOR_CIVIL_TURF, 0, 0
	},
	{
		244, "Redsands West 3", 1380.75, 2272.0078125, 1738.75, 2392.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		245, "Redsands West 4", 1516.6796875, 2068.04296875, 1728.6796875, 2269.04296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		246, "Las Venturas Airport 2", 1239.7293701171875, 1773.0416259765625, 1393.7293701171875, 1882.0416259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		247, "The High Roller", 1818.75, 1270.0208129882812, 2083.75, 1444.0208129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		248, "Pirates In Men's Pants 1", 1818.75, 1571.0078125, 2082.75, 1700.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		249, "The Visage 1", 1821.65625, 1906.0625, 2108.65625, 2067.0625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		250, "The Visage 2", 1819.7265625, 1703.04296875, 2083.7265625, 1903.04296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		251, "Redsands East 1", 1729.6796875, 2069.04296875, 1957.6796875, 2173.04296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		252, "Redsands East 2", 1729.6796875, 2173.01171875, 1955.6796875, 2272.01171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		253, "Redsands East 4", 1741.7421875, 2273.01171875, 1985.7421875, 2460.01171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		254, "Redsands East 3", 1957.66796875, 2068.046875, 2109.66796875, 2273.046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		255, "Pilgram 1", 2332.73828125, 1367.015625, 2635.73828125, 1496.015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		256, "The Camel's Toe 2", 2413.98046875, 1185.17578125, 2634.98046875, 1365.17578125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		257, "Come-A-Lot 2", 2338.0, 981.17578125, 2637.0, 1182.17578125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		258, "Royal Casino 2", 2086.75, 1367.0078125, 2330.75, 1531.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		259, "Pilgram 2", 2331.75, 1497.0078125, 2655.75, 1714.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		260, "Royal Casino 1", 2085.75, 1532.0208129882812, 2328.75, 1762.0208129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		261, "Las Venturas Airport 8", 1240.7293701171875, 1192.0416259765625, 1539.7293701171875, 1458.0416259765625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		262, "Come-A-Lot 4", 2084.979248046875, 878.1874389648438, 2548.979248046875, 981.1874389648438, COLOR_CIVIL_TURF, 0, 0
	},
	{
		263, "Caligula's Palace", 2086.7083740234375, 1764.0624389648438, 2327.7083740234375, 1903.0624389648438, COLOR_CIVIL_TURF, 0, 0
	},
	{
		264, "Redsands West 2", 1238.0, 2271.5, 1379.0, 2397.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		265, "The Emerald Isle 1", 1986.729248046875, 2275.0208129882812, 2249.729248046875, 2460.0208129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		266, "Old Venturas Strip 1", 2110.666748046875, 2034.0625, 2330.666748046875, 2273.0625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		267, "Starfish Casino1 1", 2109.6458740234375, 1904.0625, 2329.6458740234375, 2033.0625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		268, "Roca Escalante 1", 2250.729248046875, 2274.8333282470703, 2371.729248046875, 2527.8333282470703, COLOR_CIVIL_TURF, 0, 0
	},
	{
		269, "Old Venturas Strip 2", 2333.666748046875, 2034.062484741211, 2561.666748046875, 2273.062484741211, COLOR_CIVIL_TURF, 0, 0
	},
	{
		270, "Starfish Casino 2", 2330.666748046875, 1883.062484741211, 2517.666748046875, 2033.062484741211, COLOR_CIVIL_TURF, 0, 0
	},
	{
		271, "Starfish Casino 4", 2329.7083740234375, 1716.0624694824219, 2517.7083740234375, 1882.0624694824219, COLOR_CIVIL_TURF, 0, 0
	},
	{
		272, "Roca Escalante 2", 2373.729248046875, 2274.8333129882812, 2492.729248046875, 2527.8333129882812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		273, "Creek", 2743.0, 2308.166664123535, 2932.0, 2621.166664123535, COLOR_CIVIL_TURF, 0, 0
	},
	{
		274, "Sobell Rail Yards", 2772.0, 1570.1666564941406, 2942.0, 1722.1666564941406, COLOR_CIVIL_TURF, 0, 0
	},
	{
		275, "Roca Escalante 2", 2494.729248046875, 2367.0, 2689.729248046875, 2529.0, COLOR_CIVIL_TURF, 0, 0
	},
	{
		276, "Roca Escalante 4", 2494.729248046875, 2275.0, 2562.729248046875, 2366.0, COLOR_CIVIL_TURF, 0, 0
	},
	{
		277, "Old Venturas Strip 3", 2564.0, 2033.9999694824219, 2741.0, 2302.999969482422, COLOR_CIVIL_TURF, 0, 0
	},
	{
		278, "Old Venturas Strip 4", 2743.0, 1959.1666641235352, 2853.0, 2306.166664123535, COLOR_CIVIL_TURF, 0, 0
	},
	{
		279, "Starfish Casino 3", 2520.20849609375, 1945.0624771118164, 2742.20849609375, 2032.0624771118164, COLOR_CIVIL_TURF, 0, 0
	},
	{
		280, "Rockshore West 3", 2220.0, 508.5, 2426.0, 611.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		281, "LVA Freight Depot 2", 1484.74609375, 877.05859375, 1648.74609375, 1050.05859375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		282, "LVA Freight Depot 3", 1650.74609375, 877.05859375, 1815.74609375, 1050.05859375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		283, "Las Venturas Airport 9", 1540.72265625, 1348.046875, 1815.72265625, 1458.046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		284, "Las Venturas Airport 10", 1540.72265625, 1191.046875, 1815.72265625, 1347.046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		285, "Las Venturas Airport 3", 1395.7265625, 1773.05859375, 1623.7265625, 1882.05859375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		286, "Las Venturas Airport 4", 1624.72265625, 1775.05859375, 1817.72265625, 1882.05859375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		287, "Las Venturas Airport 5", 1240.72265625, 1459.046875, 1534.72265625, 1688.046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		289, "Las Venturas Airport 6", 1536.72265625, 1460.046875, 1648.72265625, 1688.046875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		290, "Redsands West 6", 1566.65234375, 1883.05859375, 1818.65234375, 2065.05859375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		291, "El Castillo Del Diablo 2", -535.015625, 2362.01171875, -148.015625, 2499.01171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		292, "El Castillo Del Diablo 1", -336.00390625, 2196.0234375, 132.99609375, 2361.0234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		293, "LIL'Probe Inn", -67.03125, 1308.0234375, 80.96875, 1437.0234375, COLOR_CIVIL_TURF, 0, 0
	},
	{
		294, "Octane Springs", 509.9765625, 1602.0078125, 725.9765625, 1789.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		295, "Desert Station", -1543.015625, 1770.5078125, -1357.015625, 1927.5078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		296, "Foster Valley 5", -2171.015625, -1005.4921875, -1996.015625, -693.4921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		297, "Las Venturas Airport 7", 1649.703125, 1460.0625, 1817.703125, 1688.0625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		298, "Four Dragons Casino 2", 1816.736328125, 961.0207214355469, 1952.736328125, 1104.0207214355469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		299, "Four Dragons Casino 1", 1954.736328125, 960.0207214355469, 2082.736328125, 1104.0207214355469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		300, "Pirates In Men's Pants 2", 1818.7501220703125, 1446.0172729492188, 2084.7501220703125, 1570.0172729492188, COLOR_CIVIL_TURF, 0, 0
	},
	{
		301, "Spiny Bed 1", 2082.7109375, 2659.0078125, 2238.7109375, 2838.0078125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		302, "Blackfiled College 2", 955.9921875, 773.171875, 1198.9921875, 952.171875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		303, "The Farm 2", -1169.5234375, -1719.4921875, -1030.5234375, -1599.4921875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		304, "Easter Basin 7", -1712.1214599609375, 462.56238555908203, -1533.1214599609375, 731.562385559082, COLOR_CIVIL_TURF, 0, 0
	},
	{
		305, "Easter Basin 6", -1805.0103759765625, 403.4165496826172, -1713.0103759765625, 595.4165496826172, COLOR_CIVIL_TURF, 0, 0
	},
	{
		306, "Downtown 8", -1996.0416259765625, 164.42355346679688, -1856.0416259765625, 402.4235534667969, COLOR_CIVIL_TURF, 0, 0
	},
	{
		307, "Doherty 5", -1996.0416259765625, 43.43049621582031, -1707.0416259765625, 164.4304962158203, COLOR_CIVIL_TURF, 0, 0
	},
	{
		308, "Foster Valley 2", -2224.8401489257812, -553.9342041015625, -1956.8401489257812, -343.9342041015625, COLOR_CIVIL_TURF, 0, 0
	},
	{
		309, "Easter Basin 8", -1706.0416259765625, 1.444366455078125, -1470.0416259765625, 164.44436645507812, COLOR_CIVIL_TURF, 0, 0
	},
	{
		310, "Easter Basin 9", -1855.0416259765625, 165.4304962158203, -1607.0416259765625, 264.4304962158203, COLOR_CIVIL_TURF, 0, 0
	},
	{
		311, "Easter Basin 5", -1855.0416259765625, 265.4234924316406, -1713.0416259765625, 402.4234924316406, COLOR_CIVIL_TURF, 0, 0
	},
	{
		312, "Easter Basin 4", -1712.1353759765625, 265.5623779296875, -1291.1353759765625, 301.5623779296875, COLOR_CIVIL_TURF, 0, 0
	},
	{
		313, "Doherty 6", -1997.0124969482422, -69.56874999403954, -1707.0124969482422, 42.431250005960464, COLOR_CIVIL_TURF, 0, 0
	},
	{
		314, "Doherty 7", -2004.0242614746094, -342.9828338623047, -1848.0242614746094, -70.98283386230469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		315, "Doherty 8", -1847.0277099609375, -370.9828338623047, -1706.0277099609375, -70.98283386230469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		316, "Foster Valley 3", -1955.8437194824219, -629.923828125, -1847.8437194824219, -343.923828125, COLOR_CIVIL_TURF, 0, 0
	},
	{
		317, "Mulholland 3", 788.3751220703125, -803.5627136230469, 1138.3751220703125, -650.5627136230469, COLOR_CIVIL_TURF, 0, 0
	},
	{
		318, "Foster Valley 4", -1847.03125, -629.9765625, -1703.03125, -370.9765625, COLOR_CIVIL_TURF, 0, 0
	},
	
	//FACTION TURFS
	{
		319, "Vinewood Cripz", 876.954345703125, -808.2980346679688, 905.954345703125, -778.0, COLOR_CRIP_TURF, 0, 0
	},
	{
		320, "West Coast Wheelers", 800.1134033203125, -562.1163940429688, 826.1134033203125, -536.1163940429688, COLOR_WCW_TURF, 0, 0
	}
};

enum jInfo
{
	jName[256]
}

new JobInfo[MAX_JOBS][jInfo] = { "No Job",
	"Taxi Job",
	"Mechanic Job",
	"The News",
	"Fuel Company Job" };

enum f_turfInfo
{
	attackedTurfID,
	attackedFaction,
	startedWar,
	finishTimer,
	turfPlayers
}

new AttackTurfInfo[MAX_FACTIONS][f_turfInfo] = {
		{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, 0, 0
	}
};

enum f_graffitiInfo
{
	attackedGraffitiID,
	attackedFaction,
	attackPlayerStarter,
	startedWar,
	finishTimer,
	startTimer
}

new AttackGraffitiInfo[MAX_FACTIONS][f_graffitiInfo] = {
		{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	},
	{
		INVALID, INVALID, INVALID, INVALID, 0, 0
	}
};

enum cInfo{
	cName[32],
	bool: cExists
}
new CrewInfo[MAX_CREWS][cInfo];

enum trInfo{
    trName[256],

    //Record 1
    trRecord1,
    trPlayerName1[256],
    bool: trReached1,
    //Record 2
    trRecord2,
    trPlayerName2[256],
    bool: trReached2,
    //Record 3
    trRecord3,
    trPlayerName3[256],
    bool: trReached3,
}

new TopRecordInfo[MAX_TOP_RECORDS][trInfo] = {
    {
        "Най-много убийства", 60, "No Name", false, 40, "No Name", false, 20, "No Name", false
    }
};


enum fInfo
{
	    fName[256],    
		fRankName1[64],
		fRankName2[64],
		fRankName3[64],
		fRankName4[64],
		fRankName5[64],
		fRankName6[64],
		fColor,
		fGrColor,
		fTurfs,
		fTurfTime,
		fBankAccount,
		fGraffits
}

new FactionInfo[MAX_FACTIONS][fInfo] = {
        {
        "Civilian", "N/A", "N/A", "N/A", "N/A", "N/A", "N/A", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, MAX_TURFS, 0
    },
    {
        "Los Santos Police Department", "Младши Полицай", "Полицай", "Старши полицай", "Главен инспектор", "Главен комисар", "Главен секретар", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
    },
    {
        "K.A.C.C. Military Aviation", "Войник", "Сержант", "Майор", "Лейтенант", "Капитан", "Генерал", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
    },
    {
        "FBI", "Кадет", "Aгент", "Началник на дивизия", "Асистент-директор", "Заместник-директор", "Директор", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
    },
    {
        "Vinewood Cripz", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_CRIP_TURF, COLOR_CRIP_GRAFFITI, 0, 0
    },
    {
        "West Coast Wheelers", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_WCW_TURF, COLOR_WCW_GRAFFITI, 0, 0
    },
    {
        "Los Santos Vagos", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_VAGOS_TURF, COLOR_VAGOS_GRAFFITI, 0, 0
    },
    {
        "Rolling Heights Ballas", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_BALLAS_TURF, COLOR_BALLAS_GRAFFITI, 0, 0
    },
    {
        "Unseen Criminals", "Член", "Лоялен член", "Съветник", "Лоялен съветник", "Заместник-шеф", "Шеф", COLOR_UNSEEN_TURF, COLOR_UNSEEN_GRAFFITI, 0, 0
    },
    {
        "San Andreas Army", "Войник", "Сержант", "Майор", "Лейтенант", "Капитан", "Генерал", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
    },
    {
        "Italian Mafia", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_ITALIAN_TURF, COLOR_ITALIAN_GRAFFITI, 0, 0
    },
    {
        "Varrios Los Aztecas", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_AZTECAS_TURF, COLOR_AZTECAS_GRAFFITI, 0, 0
    },
    {
        "Las Venturas Police Department", "Младши Полицай", "Полицай", "Старши полицай", "Главен инспектор", "Главен комисар", "Главен секретар", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
    },
    {
        "Las Venturas Triads", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_TRIADS_TURF, COLOR_TRIADS_GRAFFITI, 0, 0
    },
    {
        "Grove Street Families", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_GROVE_TURF, COLOR_GROVE_GRAFFITI, 0, 0
    },
    {
        "Red County Police Department", "Младши Полицай", "Полицай", "Старши полицай", "Главен инспектор", "Главен комисар", "Главен секретар", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
    }
};

enum vehForSaleInfo
{
	sbVehName[60],
		sbVehPrice,
		sbVehLevel,
		sbVehModel
}

new sellBikeFromStoreInfo[MAX_SELLBIKE][vehForSaleInfo] = {
		{
		"NRG-500", 253800, 26, 522
	},
	{
		"FCR-900", 232900, 25, 521
	},
	{
		"BMX", 221800, 8, 481
	},
	{
		"Bike", 221600, 7, 509
	},
	{
		"Mountain bike", 321700, 7, 510
	}
};

new sellCarFromStoreInfo[MAX_SELLCAR][vehForSaleInfo] = {
		{
		"Manana", 4142800, 18, 410
	},
	{
		"Esperanto", 6142800, 19, 419
	},
	{
		"Infernus", 7142800, 45, 411
	},
	{
		"Sultan", 8142800, 50, 560
	},
	{
		"NRG-500", 8142800, 26, 522
	},
	{
		"FCR-900", 8142800, 25, 521
	},
	{
		"Washington", 9142800, 22, 421
	},
	{
		"Premier", 11142800, 23, 426
	},
	{
		"Stallion", 11142800, 24, 439
	},
	{
		"Romero", 7142800, 25, 442
	},
	{
		"Solair", 8142800, 26, 458
	},
	{
		"Hermes", 8142800, 27, 474
	}
};

enum privateVehInfo
{
	vVeh,
	vVehID,
	vVehC1,
	vVehC2,
	vVehSpoiler,
	vVehPaintJob,
	vVehHood,
	vVehRoof,
	vVehVentsR,
	vVehVentsL,
	vVehExhaust,
	vVehWheels,
	vVehStereo,
	vVehHyd,
	vVehBumperF,
	vVehBumperR,
	vVehNitro,
	vVehSideskirt,
	vVehLights,
	vVehNeonColor,
	vVehNeon[2],
	vVehStickerName1[256],
	vVehStickerName2[256],
	Float: vVehStickerX[2],
	Float: vVehStickerY[2],
	Float: vVehStickerZ[2],
	Float: vVehStickerXY[2],
	Float: vVehStickerYY[2],
	Float: vVehStickerZY[2],
	vVehSticker[2],
	vVehObjID[20],
	vVehObject[20],
	Text3D: vVeh3DText,
	vVehText[64],
	Float: vVehObjectX[20],
	Float: vVehObjectY[20],
	Float: vVehObjectZ[20],
	Float: vVehObjectRX[20],
	Float: vVehObjectRZ[20],
	Float: vVehObjectRY[20],
	Float: vVehX,
	Float: vVehY,
	Float: vVehZ,
	Float: vVehA,
	vParked,
	vLocked,
	vPrice,
	vLevel,
	vOwner,
	vOwnerName[256]
}

new PrivateVehInfo[MAX_PRIVATEVEHS][privateVehInfo];
enum hInfo
{
	Float: hX,
	Float: hY,
	Float: hZ,
	hOwner,
    bool: hExists,
	hLocked,
	hOwnerName[256],
	hPrice,
	hInterior,
	hLevel,
	hVeh,
	hArmour,
	hVehID,
	hVehC1,
	hVehC2,
	Float: hVehX,
	Float: hVehY,
	Float: hVehZ,
	Float: hVehA,
	hHaveVeh,
	hTempFurObj,
	hFurSlot[MAX_HOUSE_FURNITURES],
	hFurObject[MAX_HOUSE_FURNITURES],
	hFurID[MAX_HOUSE_FURNITURES],
    bool: hFurVirtualWorld[MAX_HOUSE_FURNITURES],
	Float: hFurX[MAX_HOUSE_FURNITURES],
	Float: hFurY[MAX_HOUSE_FURNITURES],
	Float: hFurZ[MAX_HOUSE_FURNITURES],
	Float: hFurRX[MAX_HOUSE_FURNITURES],
	Float: hFurRY[MAX_HOUSE_FURNITURES],
	Float: hFurRZ[MAX_HOUSE_FURNITURES],
	hName[256]
}

new HouseInfo[MAX_HOUSES][hInfo];
enum bInfo
{
	Float: bX,
	Float: bY,
	Float: bZ,
	bOwner,
	bLocked,
	bOwnerName[256],
	bPayOut,
	bLevel,
	bEarnings,
	bFee,
	bStock,
	bItemsNumber,
	bName[256],
	bPrice,
	bType,
}

new BizInfo[MAX_BIZ][bInfo];
enum scInfo
{
	scVeh,
	scVehPrice,
	scVehLevel,
	scVehID,
	Float: scX,
	Float: scY,
	Float: scZ,
	Float: scAngle,
	scVehC1,
	scVehC2,
	scFaction
}

new SellCarInfo[MAX_SELLCARS][scInfo];
//Inventory - open
enum invInfo
{
	invExists,
	invID,
	invItem[32],
	invModel,
	invQuantity
};

new InventoryInfo[MAX_PLAYERS][MAX_INVENTORY][invInfo];
enum e_InventoryItems
{
	e_InventoryItem[32],
		e_InventoryModel
};

//Inventory - close
enum buycInfo
{
	bool: buycExists,
	buycID,
	buycItem[32],
	buycModel,
	buycPrice
};

new BuyClothesInfo[MAX_PLAYERS][MAX_BUYCLOTHES][buycInfo];

//Furnitures - open
enum buyfInfo
{
    bool: buyfExists,
    buyfID,
    buyfItem[32],
    buyfModel,
    buyfPrice
};

new BuyFurnitureInfo[MAX_BUY_FURNITURE][buyfInfo];

//Furnitures - close

//VehicleAttachments
enum vehAttachmentsInfo
{
	vaExists,
	vaID,
	vaItem[32],
	vaModel,
	vaPrice
};

new VehicleBuyAttachmentsInfo[MAX_BUY_VEHICLE_ATTACHMENTS][vehAttachmentsInfo];

//b
enum barrInfo
{
	barrExists,
	barrID,
	barrItem[32],
	barrModel
};

new BarricadeItemsInfo[MAX_BARITEMS][barrInfo];
enum droppedItems
{
	droppedID,
	droppedItem[32],
	droppedPlayer[24],
	droppedModel,
	droppedQuantity,
	Float: droppedPos[3],
	droppedWeapon,
	bool: isDroppedGun,
	droppedAmmo,
	droppedInt,
	droppedWorld,
	droppedObject,
	Text3D: droppedText3D
};

new DroppedItems[MAX_DROPPED_ITEMS][droppedItems];

enum pInfo
{
		pIP[35],
		pPassword[500],
        pVipText[64],
		pAdmin,
		pVoucherBGN,
		pClothes[MAX_PLAYER_CLOTHES],
        pAttachements[MAX_PLAYER_ATTACHMENTS],
        pAttachementsSlot[MAX_PLAYER_ATTACHMENTS],
        pAttachementsBone[MAX_PLAYER_ATTACHMENTS],
		pFishSlot[11],
		pFishWeight[11],
		pPrivateVeh[3],
		pPrivateVehFreeSlot,
		pInvCapacity,
		pFightStyle,
		pSpawn,
		pWeaponSkill[11],
		pWeaponSkillPoints[11],
		pAchievement[11],
		pCiggs,
		pCrew,
		pWarns,
		pAdminWarns,
		pVip,
		pMuted,
		pJailed,
		pGiftPaydays,
		pStruv,
		pHeroin,
		pMarijuana,
		pFactionBaseSpawn,
		pCocaine,
		pWeapon[13],
		pWeaponAmmo[13],
		pJob,
		pLaser,
		pMission,
		pHouseOwnedID,
		pBizOwnedID,
		pPoliceJail,
		pWantedLevel,
		pFaction,
		pRank,
		pSkin,
		pNormalSkin,
		pGender,
		pPlayedSeconds,
		pFine,
		pSelectedGender,
		pArmourPack,
		pCash,
		pBank,
		pLevel,
		pExp,
		pVipGunSpamTimer,
		pSweeperTimer,
		pSweeperPassed,
		pSweeperLevel,
		pPizzaTimer,
		pPizzaLevel,
		pPizzaPassed,
		pCoalmineTimer,
		pCoalmineLevel,
		pCoalminePassed,
		pDeliverTimer,
		pDeliverLevel,
		pDeliverPassed,
        pKills,
		pBusTimer,
		pBusLevel,
		pBusPassed,
		pLastVRepair,
		pLastYear,
		pLastMonth,
		pLastDay,
		pLastMinute,
		pLastSecond,
		pLastHour,
        pVipTextColor,
        bool: pEvent,
		bool: pVudica,
		bool: pAdminDuty,
		bool: pAFK,
		bool: pTracker,
		bool: pMoneyBag,
		bool: pDice,
		bool: pGPS,
		bool: pPoliceDuty,
		bool: pTaxiDuty,
		bool: pFuelCoDuty,
		bool: pArmyDuty,
		bool: pKACCDuty,
		bool: pFbiDuty,
		bool: pDisableNews,
		bool: pDisableCarRadio,
		bool: pJobBoss,
        bool: pFactionSkin,
		Float: pArmour,
        Float: pAttachements_X[MAX_PLAYER_ATTACHMENTS],
        Float: pAttachements_Y[MAX_PLAYER_ATTACHMENTS],
        Float: pAttachements_Z[MAX_PLAYER_ATTACHMENTS],
        Float: pAttachements_RX[MAX_PLAYER_ATTACHMENTS],
        Float: pAttachements_RY[MAX_PLAYER_ATTACHMENTS],
        Float: pAttachements_RZ[MAX_PLAYER_ATTACHMENTS]
}

new PlayerInfo[MAX_PLAYERS][pInfo];
enum ptInfo
{
	ptSetToSpawnVar,
	ptShowIntro,
	ptAFKBack,
	ptBan,
	ptKick,
	ptEndIntro,
	ptSpawn,
	ptFuel,
	ptTurnEngine,
	ptUnfreeze,
	ptSnowTimer,
	ptFreeze,
	ptPoliceStunned,
	ptClearAnimation,
	ptLastOverSpeed,
	ptFishTimer,
	pResetPlayerLabel,
	ptPark,
	ptRinging,
	ptHideGiveCash,
	ptWorkingVeh,
	ptFirstMission,
	ptClearChatAnimation,
	ptVehicleTurnEngineOn,
	ptFinishDrugEffect,
	ptHideCommandInfo,
	ptHideMessageInfo,
	ptHideCashInfo,
	ptHideScreenLevelInfo,
	ptAntiAssaultSpamAttacker,
	ptAntiAssaultSpamDamaged,
	ptSetArmourObject,
	ptRemoveArmourObject,
	ptSetPlayerArmourObjTimer,
	ptDuelTimer,
	ptDuelTimer2,
	ptDuelTimer3,
	ptDuelTimer4
}

new PlayerTimerInfo[MAX_PLAYERS][ptInfo];
enum vtInfo
{
	vtRespawn,
	vtRentTime,
	vtRadioChange,
	vtTaxiFareTimer,
	vtLastAlarmON,
	vtTurnAlarmOFF,
    vtDeathTimer
}

new VehicleTimerInfo[MAX_VEHICLES][vtInfo];
enum vInfo
{
	vRentedBy,
	vRentable,
	vRentPrice,
	vTaxiFare,
    vTankFuel,
	vForSaleShop,
	vForSaleID,
	vIsPrivate,
	vPrivateID,
	vForHouse,
	vForHouseID,
	vRentLock
}

new VehicleInfo[MAX_VEHICLES][vInfo];

enum pLastPos
{
	Float: Coords[3],
	Float: lpPx,
	Float: lpPy,
	Float: lpPz,
	lpInterior,
	lpVWorld,
	lpUsed
};

new LastPos[MAX_PLAYERS][pLastPos];

enum fsInfo
{
    fsLocation[64],
    fsFuel,
    Float: fsCoordsX,
    Float: fsCoordsY,
    Float: fsCoordsZ
};

new FuelStationInfo[MAX_FUEL_STATIONS][fsInfo] = {
    {
        "Temple", 5000, LOC_FUELSTATION_1
    },
    {
        "Idlewood", 5000, LOC_FUELSTATION_2
    },
    {
        "Whetstone", 5000, LOC_FUELSTATION_3
    },
    {
        "San Fierro 1", 5000, LOC_FUELSTATION_4
    },
    {
        "Angel Pine", 5000, LOC_FUELSTATION_5
    },
    {
        "San Fierro 2", 5000, LOC_FUELSTATION_6
    },
    {
        "The Emerland Isle", 5000, LOC_FUELSTATION_7
    },
    {
        "Bone County 1", 5000, LOC_FUELSTATION_8
    },
    {
        "Tierra Robeda 1", 5000, LOC_FUELSTATION_9
    },
    {
        "Bone County 2", 5000, LOC_FUELSTATION_10
    },
    {
        "Las Venturas 1", 5000, LOC_FUELSTATION_11
    },
    {
        "Las Venturas 2", 5000, LOC_FUELSTATION_12
    },
    {
        "Spinybed", 5000, LOC_FUELSTATION_13
    },
    {
        "Tierra Robeda 2", 5000, LOC_FUELSTATION_14
    },
    {
        "Dillimore", 5000, LOC_FUELSTATION_15
    },
    {
        "Montgomery", 5000, LOC_FUELSTATION_16
    }
};

enum pSpec
{
	Float: Coords[3],
	Float: sPx,
	Float: sPy,
	Float: sPz,
	sPint,
	sLocal,
	Float: sAngle,
	sVw,
	sCam,
};

//VOTES
new respawnVehsVoteYES = 0;
new respawnVehsVoteNO = 0;
new respawnVehsVoteTimer = 0;
new normalVoteTimer = 0;
new normalVoteYES = 0;
new normalVoteNO = 0;
new normalVoteQuestion[256];

//NPCs
new npcVeh[MAX_NPC_VEHS];

//MISSIONS
new bool: sentMissionMSG[MAX_PLAYERS] = false;

//ROBBERY
new robberyTime;
new atmRobberyGettingMoneyTimer;
new robberyTimerToStart;
new normalRobberyMoney;
new atmRobberyMoney;
new normalRobberyVirtualWorld;
new atmRobberyWaitingTimer;
new normalRobberyWaitingTimer;
new atmRobberyPlaceIndex;
new robberyGettingMoneyTimer;
new robberyCollectTimeCheck;
new atmRobberyCollectTimeCheck;
new normalRobPlace;
new normalRobberyMembers;
new normalRobberyLeaderID = INVALID;
new atmRobberID = INVALID;
new bool: isRobber[MAX_PLAYERS] = false;
new bool: isAtmRobber[MAX_PLAYERS] = false;
new bool: normalRobberyStartedGettingCash = false;
new bool: startedAtmRob = false;
new bool: startedNormalRobbery = false;
new bool: startedNormalRobGettingMoney = false;
new bool: isNormalRobberyLeaderPlayer[MAX_PLAYERS] = false;

//EVENT
new bool: startedEvent = false;
new bool: eventAward = false;
new bool: stopJoinEvent = false;
new eventLimit = 0;
new eventPlayers = 0;
new eventExpReward = 0;
new eventCashReward = 0;
new eventInterior = -1;
new eventCount=0;
new bool: eventFreeze = false;
new const eventVirtualWorld = 999;

//FUEL STATIONS
new Text3D: fuelStationText[17];

//VEHICLES
new vehFuel[MAX_VEHICLES] = 100;
new fuelVehTrailer[MAX_VEHICLES] = -1;
new bool: fuelTruckHasTrailer[MAX_VEHICLES] = false;
new bool: vehEngineStatusON[MAX_VEHICLES] = true;
new bool: vehLONStatusON[MAX_VEHICLES] = true;
new bool: vehBONTEStatusON[MAX_VEHICLES] = false;
new bool: vehAlarmStatusON[MAX_VEHICLES] = false;
new bool: vehBOOTStatusON[MAX_VEHICLES] = false;

//RENT Vehicle
new bool: rentorVeh[MAX_PLAYERS] = false;
new vehRented[MAX_PLAYERS];

//PLAYER REGISTER
new newRegPassword[MAX_PLAYERS][32];

//PLAYER FPS
new pDrunkLevelLast[MAX_PLAYERS];
new pFPS[MAX_PLAYERS]=30;

//TURFS
new bool: turfAttacker[MAX_PLAYERS];

//TIMERS
new respawnVehsTimer = 0;

//PAINTBALL
new paintBallEndTimer;
new paintBallOpenTimer;
new paintBallStartTimer;
new paintBallPlayers;
new bool: paintBallOpen = true;
new bool: paintBallStarted = false;

//PICKUPS
new bankPickupDollar;
new buyBikePickup;
new buyCarPickup;
new RobPickup;
new bankPickup;
new blackMarket;
new bikeShopPickup;
new minigamesArenaPickup;
new taxiPickup;
new lspdPickup;
new lvpdPickup;
new rcpdPickup;
new fbiPickup[2];
new newsPickup[2];
new fineGunLicPickup;
new robberyStartPickup;
new robberyStartPickup2;
new ATMPickup[11];
new pressEnterInside[8];
new pressEnterOutside[9];
new giftPickup;
new BIZPICKUP[26];
new FOODPICKUP[4];
new housePickup[MAX_HOUSES];
new bizPickup[MAX_BIZ];
new BizActors[MAX_BIZ];
new pizzaJobPickup;
new sweepJobPickup;
new mechanicJobPickup;
new busJobPickup;
new deliverJobPickup;
new coalmineJobPickup;

//CHRISTMAS OBJECTS
new bool: christmasTime = false;
new bool: startedSnow[MAX_PLAYERS] = false;
new snowFallingObject[MAX_PLAYERS][MAX_SNOW_OBJECTS];

//GENERAL TIMER VARIABLES
new bool: paydayTimer = false;
new bool: lottoTellTimer = false;
new bool: lottoTimer = false;

//CELL OBJECTS
new rcpdCell1;
new rcpdCell2;
new bool: rcpdCell1open=false;
new bool: rcpdCell2open=false;

//PLAYER PM
new replyPM[MAX_PLAYERS] = INVALID;

//PLAYER DUEL SYSTEM
new duelEnemy[MAX_PLAYERS] = -1;
new bool: isInDuel[MAX_PLAYERS] = false;
new duelMoneyBet[MAX_PLAYERS] = 0;
new duelSended[MAX_PLAYERS] = -1;
new duelInvitor[MAX_PLAYERS] = -1;
new beforeDuelInterior[MAX_PLAYERS] = 0;
new beforeDuelVirtualWorld[MAX_PLAYERS] = 0;
new Float: beforeDuelHealth[MAX_PLAYERS] = 0.0;
new Float: beforeDuelArmour[MAX_PLAYERS] = 0.0;
new Float: beforeDuelX[MAX_PLAYERS];
new Float: beforeDuelY[MAX_PLAYERS];
new Float: beforeDuelZ[MAX_PLAYERS];

//PLAYER TEXTS
new Text: LevelStats_CurrentLevel[MAX_PLAYERS];
new Text: LevelStats_NextLevel[MAX_PLAYERS];
new Text: LevelStats_Info[MAX_PLAYERS];
new Text: LevelStats_BACKGROUND[MAX_PLAYERS];
new Text: MessageInfo[MAX_PLAYERS];
new Text: CashInfo[MAX_PLAYERS];
new Text: CommandInfo[MAX_PLAYERS];
new Text: WelcomeText[2];
new Text: introBlackLines[2];
new Text: RESTARTText;
new Text: Box[2];
new Text: Clock[MAX_PLAYERS];
new Text: SiteText;
new Text: PaintBallTimerText;
new Text: ServerLogo[MAX_PLAYERS];
new Text: Date[MAX_PLAYERS];
new Text: AreaImage[MAX_PLAYERS];
new Text: GiveCashText[MAX_PLAYERS];
new Text: SpeedStatus[MAX_PLAYERS];
new Text: FuelStatus[MAX_PLAYERS];
new Text: VehicleNameSpeedo[MAX_PLAYERS];
new Text: VehicleSpeedo[4];
new Text: FareStatus[MAX_PLAYERS];
new Text: TankFuel[MAX_PLAYERS];
new Text: levelText[MAX_PLAYERS];
new Text: expText[MAX_PLAYERS];

//PLAYER BARS
new Bar: LevelStats_EXP[MAX_PLAYERS];

//3D TEXTS
new Text3D: houseLabel[MAX_HOUSES];
new Text3D: bizLabel[MAX_BIZ];
new Text3D: PlayerLabel[MAX_PLAYERS];

//HOUSE SYSTEM
new bool: editFurniturePos[5000];

//FACTIONS VEHS
new lspdVehs[38];
new lvpdVehs[38];
new rcpdVehs[20];
new fbiVehs[22];
new cripVehs[12];
new italianVehs[7];
new aztecasVehs[13];
new triadsVehs[7];
new groveVehs[20];
new wcwVehs[5];
new vagosVehs[10];
new ballasVehs[13];
new lspdVehObjects[38][3];
new UnseenCriminalsVehObjects[60][5];
new unseenCriminalsVehs[60];
new KACCVehs[75];
new armyVehs[29];
new bool: isRcpdVeh[MAX_VEHICLES] = false;
new bool: isArmySpecialVeh[MAX_VEHICLES] = false;
new bool: isLspdDutyVeh[MAX_VEHICLES] = false;
new bool: isLspdVeh[MAX_VEHICLES] = false;
new bool: isLvpdDutyVeh[MAX_VEHICLES] = false;
new bool: isLvpdVeh[MAX_VEHICLES] = false;
new bool: isFbiVeh[MAX_VEHICLES] = false;
new bool: isCripVeh[MAX_VEHICLES] = false;
new bool: isItalianVeh[MAX_VEHICLES] = false;
new bool: isAztecasVeh[MAX_VEHICLES] = false;
new bool: isGroveVeh[MAX_VEHICLES] = false;
new bool: isTriadsVeh[MAX_VEHICLES] = false;
new bool: isWcwVeh[MAX_VEHICLES] = false;
new bool: isVagosVeh[MAX_VEHICLES] = false;
new bool: isBallasVeh[MAX_VEHICLES] = false;
new bool: isUnseenCriminalsVeh[MAX_VEHICLES] = false;
new bool: isKACCVeh[MAX_VEHICLES] = false;
new bool: isArmyVeh[MAX_VEHICLES] = false;
new bool: eSpecVehsArmy = false;

//FACTIONS ARMOUR
new fbiArmour[2];
new KACCArmour;
new ArmyArmour;
new lspdArmour;
new lvpdArmour;
new rcpdArmour;

//JOB VEHS
new newsVehs[4];
new taxiVehs[4];
new pizzaRcVehs[6];
new sweepVehs[4];
new coalmineVehs[4];
new deliverVehs[2];
new mechanicVehs[2];
new fueltruck[3];
new fuelremarke[3];
new busVehs[5];
new boatFish[2];
new bool: isTaxiVehWorking[MAX_VEHICLES] = false;
new bool: isNewsVeh[MAX_VEHICLES] = false;
new bool: isTaxiVeh[MAX_VEHICLES] = false;
new bool: isPizzaVeh[MAX_VEHICLES] = false;
new bool: isSweepVeh[MAX_VEHICLES] = false;
new bool: isDeliverVeh[MAX_VEHICLES] = false;
new bool: isCoalmineVeh[MAX_VEHICLES] = false;
new bool: isMechanicVeh[MAX_VEHICLES] = false;
new bool: isFuelComapnyVeh[MAX_VEHICLES] = false;
new bool: isBusVeh[MAX_VEHICLES] = false;

//PLAYER JOBS
new bool: inTaxiVeh[MAX_PLAYERS] = false;
new bool: isWorkingSweep[MAX_PLAYERS] = false;
new bool: isWorkingBus[MAX_PLAYERS] = false;
new bool: isWorkingPizza[MAX_PLAYERS] = false;
new bool: isBusVehWorking[MAX_VEHICLES] = false;
new bool: isWorkingDeliver[MAX_PLAYERS] = false;
new bool: isWorkingCoalmine[MAX_PLAYERS] = false;

//VEHICLES
new workingOnVeh[MAX_PLAYERS];
new buyingVehStoreIndex[MAX_PLAYERS] = INVALID;
new playerVehToBuy[MAX_PLAYERS] = INVALID;

//VEHICLE SELL SYSTEM
new vehOffererOfferTo[MAX_PLAYERS] = INVALID;
new vehOfferPrivateVehIndex[MAX_PLAYERS] = INVALID;
new vehOfferPrivateVehPrice[MAX_PLAYERS];
new vehBuyerBuyFrom[MAX_PLAYERS] = INVALID;
new vehOfferPrivateVehSlot[MAX_PLAYERS] = INVALID;

//VEHICLE RENT SYSTEM
new rentVehs[MAX_RENTVEHS];

//VEHICLE RADIO SYSTEM
new radioveh[MAX_VEHICLES] = 1;

//LOGIN/REGISTER SYSTEM
new bool: isLogged[MAX_PLAYERS] = false;

//CREWS
new selectedCrewID[MAX_PLAYERS] = INVALID;

//PLAYER SYSTEMS
new lastVipUsersID[MAX_PLAYERS]= INVALID;
new attachIndex[MAX_PLAYERS] = INVALID;
new furnitureSelect[MAX_PLAYERS];
new furnitureModel[MAX_PLAYERS];
new objectID[MAX_PLAYERS] = INVALID;
new Unspec[MAX_PLAYERS][pSpec];
new AFKDetect[MAX_PLAYERS];
new vehApplyObjectID[MAX_PLAYERS] = INVALID;
new vehOptionsSlotID[MAX_PLAYERS] = INVALID;
new seeingStats[MAX_PLAYERS] = INVALID;
new playerAfkSeconds[MAX_PLAYERS];
new playerAfkMinutes[MAX_PLAYERS];
new changeGunTimer[MAX_PLAYERS];
new playerCurrentGun[MAX_PLAYERS] = 0;
new passwordChances[MAX_PLAYERS] = 3;
new vehicleStickerPlayer[MAX_PLAYERS] = INVALID;
new hisLastVeh[MAX_PLAYERS] = INVALID;
new inBuyVehVW[MAX_PLAYERS] = INVALID;
new fishToDrop[MAX_PLAYERS];
new buyFoodSelect[MAX_PLAYERS];
new buyDrinkSelect[MAX_PLAYERS];
new inventorySelect[MAX_PLAYERS];
new buySkinsSelect[MAX_PLAYERS];
new barrItemsSelect[MAX_PLAYERS];
new weaponSList_ItemsSelect[MAX_PLAYERS];
new busTeleportTimer[MAX_PLAYERS];
new vehLocker[MAX_PLAYERS] = INVALID;
new paintBallKills[MAX_PLAYERS] = 0;
new buyItemWithBGNIndex[MAX_PLAYERS] = INVALID;
new policeSiren[MAX_PLAYERS] = INVALID;
new addVehObjectID[MAX_PLAYERS] = INVALID;
new addVehObjectIDType[MAX_PLAYERS] = INVALID;
new policeBarricade[MAX_PLAYERS][20];
new bankTransferUser[60][MAX_PLAYERS];
new housePickupIndex[MAX_PICKUPS] = INVALID;
new bizPickupIndex[MAX_PICKUPS] = INVALID;
new Float: beforeArmour[MAX_PLAYERS];
new Float: beforeHealth[MAX_PLAYERS];
new Float: findVehX[MAX_PLAYERS], Float: findVehY[MAX_PLAYERS], Float: findVehZ[MAX_PLAYERS];
new bool: loadedClothes[MAX_PLAYERS];
new bool: inPaintBall[MAX_PLAYERS] = false;
new bool: inEvent[MAX_PLAYERS] = false;
new bool: eventCreator[MAX_PLAYERS] = false;
new bool: didVote[MAX_PLAYERS] = false;
new bool: isBizPickup[MAX_PICKUPS] = false;
new bool: isHousePickup[MAX_PICKUPS] = false;
new bool: logoTextEnabled[MAX_PLAYERS] = true;
new bool: timeTextEnabled[MAX_PLAYERS] = true;
new bool: setToSpawn[MAX_PLAYERS] = false;
new bool: inNormalRobbery[MAX_PLAYERS] = false;
new bool: firstSpawn[MAX_PLAYERS] = true;
new bool: adminVeh[MAX_VEHICLES] = false;
new bool: spawned[MAX_PLAYERS] = false;
new bool: spec[MAX_PLAYERS] = false;
new bool: newProfile_firstSpawn[MAX_PLAYERS] = false;
new bool: scripterMode[MAX_PLAYERS] = false;
new bool: gpsOn[MAX_PLAYERS] = false;
new bool: firstTryGetDocuments[MAX_PLAYERS] = false;
new bool: gateopening[MAX_PLAYERS] = false;


//SYSTEMS: MAX
new maxbiz = 1;
new maxhouses = 1;
new maxcarsforbuy = 1;

//HOUSE SELL SYSTEM
new houseOffererOfferTo[MAX_PLAYERS] = INVALID;
new houseOfferPrice[MAX_PLAYERS];
new houseBuyerBuyFrom[MAX_PLAYERS] = INVALID;

//HOUSE FURNITURES OBJECTS SYSTEM
new Float: tempHouseFurRX[MAX_PLAYERS];
new Float: tempHouseFurRY[MAX_PLAYERS];
new Float: tempHouseFurRZ[MAX_PLAYERS];
new Float: tempHouseFurX[MAX_PLAYERS];
new Float: tempHouseFurY[MAX_PLAYERS];
new Float: tempHouseFurZ[MAX_PLAYERS];
new houseUsedFurSlot[MAX_PLAYERS];
new houseObjectPrice[MAX_PLAYERS];

//BIZ SELL SYSTEM
new bizOffererOfferTo[MAX_PLAYERS] = INVALID;
new bizOfferPrice[MAX_PLAYERS];
new bizBuyerBuyFrom[MAX_PLAYERS] = INVALID;

//SERVER SYSTEMS
new serverrestarttimer = 0;
new serverGmxTimer = 0;
new serverWeather;
new serverTime;

//GATES
new groveGate;
new groveGateTimer;
new unseenCriminalsGate1_LV;
new unseenCriminalsGate2_LV;
new unseenCriminalsGateTimer_LV;
new unseenCriminalsGate1;
new unseenCriminalsGate2;
new unseenCriminalsGate1Timer;
new unseenCriminalsGate2Timer;
new lspdGateDoor;
new lspdGateDoorTimer;
new lspdGate;
new lspdGateTimer;
new lvpdPort2;
new lvpdPort1;
new lspdPort;
new kaccPort;
new kaccPort2;
new armyPort1;
new armyPort2;
new lvpdPort2Timer;
new lvpdPort1Timer;
new lspdPortTimer;
new kaccPortTimer;
new armyPort1Timer;
new armyPort2Timer;

//AUDIO STREAMS
new joinAudioStream[][] = {
		{
		"https://luxforums.xyz/music/intro2.mp3" },
	{
		"https://luxforums.xyz/music/intro3.mp3" }
};

new radioAudioStream[][] = {
		{
		"www.google.com" },
	{
		"http://live.btvradio.bg/njoy.mp3.m3u" },
	{
		"http://193.108.24.21:8000/fresh.m3u" }
};

new radioAudioStreamNames[][] = {
		{
		"OFF" },
	{
		"NJOY" },
	{
		"FRESH" }
};

//OBJECTS
new bool: isGraffitiObject[MAX_GRAFFITI];
new bool: isSirenObject[MAX_SIRRENS] = false;
new bool: isAddVehObject[MAX_ADD_VEH_OBJECTS] = false;
new bool: isBarricadeObject[MAX_BARRICADES] = false;

//LOTTERY
new lottoReward = 92000;
new lottoNumber[MAX_PLAYERS];

//TEAM INVITE
new TeamInvite[MAX_PLAYERS] = INVALID;

//JOB INVITE
new JobInvite[MAX_PLAYERS] = INVALID;

//REPAIR OFFER
new RepairInvite[MAX_PLAYERS] = INVALID;

//SPECIAL INDEXES
new graffitiSpecialIndex[MAX_GRAFFITI];
new buyVehFromStoreIndex[MAX_PLAYERS];

//VEHICLE OCCUPIED DAMAGE
new deadVeh[MAX_VEHICLES] = false;
new Float: wdamage[13] = {
        25.0,
        40.0,
        140.0,
        90.0,
        135.0,
        60.0,
        20.0,
        25.0,
        30.0,
        30.0,
        20.0,
        75.0,
        125.0
};

//IMPORTANT:

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}

	result[index - offset] = EOS;
	return result;
}

IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)	//1818
	{
		if (string[i] > '9' || string[i]<'0') return 0;
	}

	return 1;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	new count;
	while (text[pos] < 0x21)
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID;
		pos++;
	}

	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if (userid >= 0 && userid < MAX_PLAYERS)
		{
			if (!IsPlayerConnected(userid))
			{
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid;
			}
		}
	}

	new len = strlen(text[pos]);
	new name[MAX_PLAYER_NAME];
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof(name));
			if (strcmp(name, text[pos], true, len) == 0)
			{
				if (len == strlen(name))
				{
					return i;
				}
				else
				{
					count++;
					userid = i;
				}
			}
		}
	}

	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow search");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}

		userid = INVALID_PLAYER_ID;
	}

	return userid;
}

main()
{
	printf("\n·  Сървърът беше пуснат успешно.");
	printf("·  Grand Thef Auto SA:MP - Life of San Andreas\n\n");
	printf("·  Copyright (C) 2021-2022, Daniel Miroslavov Andreev");
	printf("·  Всички права са запазени.\n\n");
}

GetPlayerPrivateVehFreeSlot(playerid)
{
	new freeSlot;
	for (new i = 2; i >= 0; i--)
	{
		if (PlayerInfo[playerid][pPrivateVeh][i] == -1)
		{
			freeSlot = i;
		}
	}

	return freeSlot;
}

GetPlayerNearPrivateVeh(playerid)
{
	for (new i = 0; i < 3; i++)
	{
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
		if (hisVehID != -1)
		{
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			if (IsValidVehicle(vehicleid))
			{
				if(IsPlayerInRangeOfVehicle(playerid, vehicleid, 8.0))
				{
					return vehicleid;
				}
			}
		}
	}
	return -1;
}

GetPlayerPrivateVehID(playerid)
{
	new privateVehID = -1;
	for (new i = 0; i < 3; i++)
	{
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
		if (hisVehID != -1)
		{
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			if (IsValidVehicle(vehicleid))
			{
				if (GetPlayerVehicleID(playerid) == vehicleid)
				{
					privateVehID = i;
				}
			}
		}
	}

	return privateVehID;
}

IsPlayerInHisPrivateVeh(playerid)
{
	new bool: inCar = false;
	for (new i; i < 3; i++)
	{
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
		if (hisVehID != -1)
		{
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			if (IsValidVehicle(vehicleid))
			{
				if (GetPlayerVehicleID(playerid) == vehicleid)
				{
					inCar = true;
				}
			}
		}
	}

	if (inCar == true)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

forward OpenWeaponSkillList(playerid);
public OpenWeaponSkillList(playerid)
{
	new items[MAX_WEAPON_SKILL_GUNS], skill[MAX_WEAPON_SKILL_GUNS];

	for (new i = 0; i < MAX_WEAPON_SKILL_GUNS; i++)
	{
		if(i == 0)
		{
			items[i] = 346;
		}
		else if(i == 1)
		{
			items[i] = 347;
		}
		else if(i == 2)
		{
			items[i] = 348;
		}
		else if(i == 3)
		{
			items[i] = 349;
		}
		else if(i == 4)
		{
			items[i] = 350;
		}
		else if(i == 5)
		{
			items[i] = 351;
		}
		else if(i == 6)
		{
			items[i] = 352;
		}
		else if(i == 7)
		{
			items[i] = 353;
		}
		else if(i == 8)
		{
			items[i] = 355;
		}
		else if(i == 9)
		{
			items[i] = 2035;
		}
		else if(i == 10)
		{
			items[i] = 2036;
		}
		skill[i] = PlayerInfo[playerid][pWeaponSkill][i];
	}

	weaponSList_ItemsSelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Weapon Skills", MODEL_SELECTION_SEE_WEAPONSKILL, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1, true, skill);
}

forward OpenBarricadeItems(playerid);
public OpenBarricadeItems(playerid)
{
	new items[MAX_BARITEMS];

	for (new i = 0; i < MAX_BARITEMS; i++)
	{
		if (BarricadeItemsInfo[i][barrExists])
		{
			items[i] = BarricadeItemsInfo[i][barrModel];
		}
		else
		{
			items[i] = -1;
		}
	}

	barrItemsSelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Barricades", MODEL_SELECTION_BARITEMS, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenDropClothes(playerid);
public OpenDropClothes(playerid)
{
	new items[MAX_PLAYER_CLOTHES];

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] != 0)
		{
			items[i] = PlayerInfo[playerid][pClothes][i];
		}
		else
		{
			items[i] = -1;
		}
	}

	return ShowModelSelectionMenu(playerid, "Drop Skin", MODEL_SELECTION_DROPCLOTHES, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenGetClothes(playerid);
public OpenGetClothes(playerid)
{
	new items[MAX_PLAYER_CLOTHES];

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] != 0)
		{
			items[i] = PlayerInfo[playerid][pClothes][i];
		}
		else
		{
			items[i] = -1;
		}
	}

	return ShowModelSelectionMenu(playerid, "Select Skin", MODEL_SELECTION_GETCLOTHES, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenBuyVehAttachments(playerid);
public OpenBuyVehAttachments(playerid)
{
	new items[MAX_BUY_VEHICLE_ATTACHMENTS];

	for (new i = 0; i < MAX_BUY_VEHICLE_ATTACHMENTS; i++)
	{
		if (VehicleBuyAttachmentsInfo[i][vaExists])
		{
			items[i] = VehicleBuyAttachmentsInfo[i][vaModel];
		}
		else
		{
			items[i] = -1;
		}
	}

	return ShowModelSelectionMenu(playerid, "Buy Attachments", MODEL_SELECTION_BUYVEHICLEATTACHMENTS, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenBuySkins(playerid);
public OpenBuySkins(playerid)
{
	new items[MAX_BUYCLOTHES], price[MAX_BUYCLOTHES];

	for (new i = 0; i < MAX_BUYCLOTHES; i++)
	{
		if (BuyClothesInfo[playerid][i][buycExists])
		{
			items[i] = BuyClothesInfo[playerid][i][buycModel];
			price[i] = BuyClothesInfo[playerid][i][buycPrice];
		}
		else
		{
			items[i] = -1;
			price[i] = -1;
		}
	}

	buySkinsSelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Buy Skin", MODEL_SELECTION_BUYCLOTHES, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);
}

forward OpenBuyHouseFurniture(playerid);
public OpenBuyHouseFurniture(playerid)
{
    new items[MAX_BUY_FURNITURE], price[MAX_BUY_FURNITURE];

    for (new i = 0; i < MAX_BUY_FURNITURE; i++)
    {
        if (BuyFurnitureInfo[i][buyfExists])
        {
            items[i] = BuyFurnitureInfo[i][buyfModel];
            price[i] = BuyFurnitureInfo[i][buyfPrice];
        }
        else
        {
            items[i] = -1;
            price[i] = -1;
        }
    }

    buySkinsSelect[playerid] = 0;
    return ShowModelSelectionMenu(playerid, "Buy Furniture", MODEL_SELECTION_BUY_FURNITURE, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);
}

forward OpenInventory(playerid);
public OpenInventory(playerid)
{
	new items[MAX_INVENTORY], amounts[MAX_INVENTORY];

	for (new i = 0; i < PlayerInfo[playerid][pInvCapacity]; i++)
	{
		if (InventoryInfo[playerid][i][invExists])
		{
			items[i] = InventoryInfo[playerid][i][invModel];
			amounts[i] = InventoryInfo[playerid][i][invQuantity];
		}
		else
		{
			items[i] = -1;
			amounts[i] = -1;
		}
	}

	inventorySelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Inventory", MODEL_SELECTION_INVENTORY, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1, true, amounts);
}

stock IsPlayerSpawned(playerid)
{
	if(spawned[playerid] == true)
		return true;
	return false;
}

stock IsPlayerOnFoot(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
		return false;
	return true;
}

stock TurfAttacked(turf)
{
	for (new i = 0; i < MAX_FACTIONS; i++)
	{
		if (AttackTurfInfo[i][attackedTurfID] == turf)
		{
			return true;
		}
	}

	return false;
}

stock CloseDB()
{
	mysql_close(Database);
}

stock ConnectToDB()
{
	Database = mysql_connect(SQL_HOSTNAME, SQL_USERNAME, SQL_DATABASE, SQL_PASSWORD);
}

SQL_CreateUser(playerid)
{
	new faction = PlayerInfo[playerid][pFaction];
	new factionName[60];
	format(factionName, 60, "%s", FactionInfo[faction][fName]);

	static query[512];
	format(query, sizeof(query), "INSERT INTO `users` (`Username`, `Level`, `Exp`, `Admin`, `Vip`, `Faction`, `Cash`) VALUES('%s', '%d', '%d', '%d', '%d', '%s', '%d')", GetPlayerNickname(playerid), PlayerInfo[playerid][pLevel],
		PlayerInfo[playerid][pExp], PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pVip], factionName, PlayerInfo[playerid][pCash]);
	mysql_function_query(Database, query, false, "", "");
}

SQL_SaveUser(playerid)
{
	new faction = PlayerInfo[playerid][pFaction];
	new factionName[60];
	format(factionName, 60, "%s", FactionInfo[faction][fName]);
	new query[2400];
	format(query, sizeof(query), " UPDATE `users` SET `Level` = %d, `Exp` = %d, `Admin` = %d, `Vip` = %d, `Faction` = '%s', `Cash` = '%d' WHERE Username = '%s'  ",
		PlayerInfo[playerid][pLevel],
		PlayerInfo[playerid][pExp],
		PlayerInfo[playerid][pAdmin],
		PlayerInfo[playerid][pVip],
		factionName,
		PlayerInfo[playerid][pCash],
		GetPlayerNickname(playerid)	//Username to UPDATE
);
	mysql_function_query(Database, query, false, "", "");
}

stock GivePlayerHP(playerid, Float: HP)
{
	if (PlayerHealth(playerid) + HP >= 100)
	{
		SetPlayerHealth(playerid, 100);
	}
	else
	{
		new Float: currentHP = PlayerHealth(playerid);
		SetPlayerHealth(playerid, HP + currentHP);
	}
}

Float: PlayerHealth(playerid)
{
	new Float: health = 0.0;
	GetPlayerHealth(playerid, health);
	return health;
}

stock EncryptPassword(password[])
{
	new aux_password[500];
	new encrypted_password2[500];
	new final_encryption[500];
	for (new i = 0; i < (strlen(password) *2); i++)
	{
		aux_password[i] = password[i] + 7;
		encrypted_password2[2 *i + 1] = aux_password[i];
		encrypted_password2[2 *i] = i + 189;
		final_encryption[i] = encrypted_password2[i];
	}

	return final_encryption;
}

stock DecryptPassword(encrypred)
{
	new len = sizeof(encrypted);
	new decrypted_password[len / 2];
	for (new i = 0; i < len / 2; i++)
	{
		decrypted_password[i] = encrypred[2 *i + 1] - 7;
	}

	printf("encrypted: %s || decrypted: %s", encrypred, decrypted_password);
	return decrypted_password;
}

stock FormatNumber(iNum, const szChar[] = ",")
{
	new szStr[16];
	format(szStr, sizeof(szStr), "%d", iNum);
	for (new iLen = strlen(szStr) - 3; iLen > 0; iLen -= 3)
	{
		strins(szStr, szChar, iLen);
	}

	return szStr;
}

stock NearFactionParking(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 25, 2442.6689, -1638.8025, 13.5821)) return FACTION_GROVE;
	if (IsPlayerInRangeOfPoint(playerid, 25, 337.4588, -1214.6744, 76.4043)) return FACTION_CRIP;
	if (IsPlayerInRangeOfPoint(playerid, 25, 1352.5125, -2026.1936, 56.4046)) return FACTION_UNSEEN;
	return -1;
}

stock NearParking(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 50, 2155.8245, -1135.9541, 25.3614) || IsPlayerInRangeOfPoint(playerid, 23, 1795.6138, -1911.3533, 13.3968) ||
		IsPlayerInRangeOfPoint(playerid, 50, 1085.3721, 1076.5508, 10.8359))
	{
		return true;
	}

	return false;
}

stock PlayerHasWeapon(playerid, weaponid)
{
	new weapon, ammo;

	for (new i = 0; i < 13; i++)
	{
		if (PlayerData[playerid][pWeapon][i] == weaponid)
		{
			GetPlayerWeaponData(playerid, i, weapon, ammo);

			if (weapon == weaponid && ammo > 0) return 1;
		}
	}
	return 0;
}

stock BarricadeItems_GetFreeID()
{
	for (new i = 0; i < MAX_BARITEMS; i++)
	{
		if (!BarricadeItemsInfo[i][barrExists])
			return i;
	}
	return -1;
}

stock BuyVehicleAttachment_GetFreeID()
{
	for (new i = 0; i < MAX_BUY_VEHICLE_ATTACHMENTS; i++)
	{
		if (!VehicleBuyAttachmentsInfo[i][vaExists])
			return i;
	}

	return -1;
}

stock BuyFurnitures_GetFreeID()
{
    for (new i = 0; i < MAX_BUY_FURNITURE; i++)
    {
        if (!BuyFurnitureInfo[i][buyfExists])
            return i;
    }

    return -1;
}

stock BuyClothes_GetFreeID(playerid)
{
	for (new i = 0; i < MAX_BUYCLOTHES; i++)
	{
		if (!BuyClothesInfo[playerid][i][buycExists])
			return i;
	}

	return -1;
}

stock Inventory_GetFreeID(playerid)
{
	for (new i = 0; i < MAX_INVENTORY; i++)
	{
		if (!InventoryInfo[playerid][i][invExists])
			return i;
	}

	return -1;
}

stock InventoryItemsCount(playerid)
{
	new count;

	for (new i = 0; i != MAX_INVENTORY; i++)
		if (InventoryInfo[playerid][i][invExists])
		{
			count++;
		}

	return count;
}

stock Inventory_GetItemID(playerid, item[])
{
	for (new i = 0; i < MAX_INVENTORY; i++)
	{
		if (!InventoryInfo[playerid][i][invExists])
			continue;

		if (!strcmp(InventoryInfo[playerid][i][invItem], item)) return i;
	}

	return -1;
}

IsWeaponModel(model)
{
	static
	const g_aWeaponModels[] = { 0, 331, 333, 334, 335, 336, 337, 338, 339, 341, 321, 322, 323, 324,
		325, 326, 342, 343, 344, 0, 0, 0, 346, 347, 348, 349, 350, 351, 352,
		353, 355, 356, 372, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
		367, 368, 368, 371
	};

	for (new i = 0; i < sizeof(g_aWeaponModels); i++)
		if (g_aWeaponModels[i] == model)
		{
			return 1;
		}

	return 0;
}

PickupItem(playerid, itemid)
{
	if (itemid != -1 && DroppedItems[itemid][droppedModel])
	{
		if(!DroppedItems[itemid][isDroppedGun])
		{
			new id = Inventory_Add(playerid, DroppedItems[itemid][droppedItem], DroppedItems[itemid][droppedModel], DroppedItems[itemid][droppedQuantity]);
			if (id == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате място в инвентара си");
		}
		new itemName[70];
		format(itemName, 70, DroppedItems[itemid][droppedItem]);
		if (strcmp(itemName, "GPS Устройство", true) == 0)
		{
			if (PlayerInfo[playerid][pGPS]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате този предмет в инвентара си.");
			PlayerInfo[playerid][pGPS] = true;
		}
		
		if(!DroppedItems[itemid][isDroppedGun])
		{
			SendClientMessage(playerid, COLOR_LIGHTRED2, "[Инвентар] {ffffff}Вие взехте предмет от земята.");
		}
		else
		{
			new const itemModel = DroppedItems[itemid][droppedModel];
			new const ammu = DroppedItems[itemid][droppedQuantity];
			new weaponname[32];
            GetWeaponName(itemModel, weaponname, 32);
			new string256[256];
			format(string256, 256, "[Get a Gun] {ffffff}Вие взехте оръжие %s от земята с %d патрона.", weaponname, ammu);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			GivePlayerWeapon(playerid, itemModel, ammu);
		}
		
		Item_Delete(itemid);
	}

	return 1;
}

stock Inventory_Count(playerid, item[])
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid != -1)
		return InventoryInfo[playerid][itemid][invQuantity];

	return 0;
}

Item_Delete(itemid)
{
	if (itemid != -1 && DroppedItems[itemid][droppedModel])
	{
		DroppedItems[itemid][droppedModel] = 0;
		DroppedItems[itemid][droppedQuantity] = 0;
		DroppedItems[itemid][droppedPos][0] = 0.0;
		DroppedItems[itemid][droppedPos][1] = 0.0;
		DroppedItems[itemid][droppedPos][2] = 0.0;
		DroppedItems[itemid][droppedInt] = 0;
		DroppedItems[itemid][droppedWorld] = 0;

		DestroyDynamicObject(DroppedItems[itemid][droppedObject]);
		DestroyDynamic3DTextLabel(DroppedItems[itemid][droppedText3D]);
	}

	return 1;
}

DropItem(item[], player[], model, quantity, Float: x, Float: y, Float: z, interior, world, bool: isWeapon)
{
	for (new i = 0; i != MAX_DROPPED_ITEMS; i++)
	{
		if (!DroppedItems[i][droppedModel])
		{
			format(DroppedItems[i][droppedItem], 32, item);
			format(DroppedItems[i][droppedPlayer], 24, player);

			DroppedItems[i][droppedModel] = model;
			DroppedItems[i][droppedQuantity] = quantity;
			DroppedItems[i][droppedPos][0] = x;
			DroppedItems[i][droppedPos][1] = y;
			DroppedItems[i][droppedPos][2] = z;

			DroppedItems[i][droppedInt] = interior;
			DroppedItems[i][droppedWorld] = world;

			if(isWeapon)
			{
				DroppedItems[i][isDroppedGun] = true;
				DroppedItems[i][droppedObject] = CreateDynamicObject(model, x, y, z, 93.7, 120.0, 120.0, world, interior);
			}
			else
			{
				DroppedItems[i][isDroppedGun] = false;
				DroppedItems[i][droppedObject] = CreateDynamicObject(model, x, y, z, 0.0, 0.0, 0.0, world, interior);
			}

			new string3DText[256];
			format(string3DText, 256, "%s: %d бр.\nНатисни Y", item, quantity);
			DroppedItems[i][droppedText3D] = CreateDynamic3DTextLabel(string3DText, COLOR_CYAN, x, y, z, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, world, interior);
			return i;
		}
	}
	return -1;
}

Item_Nearest(playerid)
{
	for (new i = 0; i != MAX_DROPPED_ITEMS; i++){
		if (DroppedItems[i][droppedModel] && IsPlayerInRangeOfPoint(playerid, 1.5, DroppedItems[i][droppedPos][0], DroppedItems[i][droppedPos][1], DroppedItems[i][droppedPos][2]))
		{
			if (GetPlayerInterior(playerid) == DroppedItems[i][droppedInt] && GetPlayerVirtualWorld(playerid) == DroppedItems[i][droppedWorld])
				return i;
		}
	}

	return -1;
}

DropPlayerGun(playerid, gun, ammu)
{
	new
	Float: x,
		Float: y,
		Float: z,
		Float: angle,
		string[32];
		
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);
	ApplyAnimationWithCondition(playerid, "GRENADE", "WEAPON_throwu", 4.1, 0, 0, 0, 0, 0, 1);
	
	new weaponname[32];
    GetWeaponName(gun, weaponname, 32);
	format(string, 32, "%s", weaponname);
	DropItem(string, GetPlayerNickname(playerid), gun, ammu, x, y, z - 0.9, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid), true);
}

DropPlayerItem(playerid, itemid, quantity = 1)
{
	if (itemid == -1 || !InventoryInfo[playerid][itemid][invExists])
		return 0;

	new
	Float: x,
		Float: y,
		Float: z,
		Float: angle,
		string[32];

	format(string, 32, "%s", InventoryInfo[playerid][itemid][invItem]);

	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);

	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);

	DropItem(string, accountNickname, InventoryInfo[playerid][itemid][invModel], quantity, x, y, z - 0.9, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid), false);
	format(string, 32, "%s", InventoryInfo[playerid][itemid][invItem]);
	Inventory_Remove(playerid, string, quantity);

	ApplyAnimationWithCondition(playerid, "GRENADE", "WEAPON_throwu", 4.1, 0, 0, 0, 0, 0, 1);

	return 1;
}

stock Inventory_Remove(playerid, item[], quantity = 1)
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid != -1)
	{
		if (InventoryInfo[playerid][itemid][invQuantity] > 0)
		{
			InventoryInfo[playerid][itemid][invQuantity] -= quantity;
		}

		if (quantity == -1 || InventoryInfo[playerid][itemid][invQuantity] < 1)
		{
			InventoryInfo[playerid][itemid][invExists] = false;
			InventoryInfo[playerid][itemid][invModel] = 0;
			InventoryInfo[playerid][itemid][invQuantity] = 0;
		}

		return 1;
	}

	return 0;
}

stock BuyVehicleAttachment_Add(item[], model, price)
{
	new itemid = BuyVehicleAttachment_GetFreeID();
	VehicleBuyAttachmentsInfo[itemid][vaExists] = true;
	VehicleBuyAttachmentsInfo[itemid][vaModel] = model;
	VehicleBuyAttachmentsInfo[itemid][vaPrice] = price;
	format(VehicleBuyAttachmentsInfo[itemid][vaItem], 32, item);
}

stock LoadBuyVehicleAttachments()
{
	BuyVehicleAttachment_Add("Wheel", 1083, 530);
	BuyVehicleAttachment_Add("Wheel", 1084, 630);
	BuyVehicleAttachment_Add("Wheel", 1085, 730);
	BuyVehicleAttachment_Add("Little Lamp", 3785, 730);
}

stock BuyFurnitures_Add(item[], model, price)
{
    new itemid = BuyFurnitures_GetFreeID();
    BuyFurnitureInfo[itemid][buyfExists] = true;
    BuyFurnitureInfo[itemid][buyfModel] = model;
    BuyFurnitureInfo[itemid][buyfPrice] = price;
    format(BuyFurnitureInfo[itemid][buyfItem], 32, item);
}

stock LoadBuyFurnitures()
{
    BuyFurnitures_Add("Door", 2875, 11500);
    BuyFurnitures_Add("Door", 2876, 11500);
    BuyFurnitures_Add("Door", 2879, 11600);
    BuyFurnitures_Add("Door", 1532, 11200);
    BuyFurnitures_Add("Bed", 14866, 11000);
    BuyFurnitures_Add("Office Desk", 2604, 11250);
    BuyFurnitures_Add("Bedside table from the kitchen", 2339, 11200);
    BuyFurnitures_Add("The counter", 2441, 11200);
    BuyFurnitures_Add("Small office desk", 2206, 11200);
    BuyFurnitures_Add("Ceiling fan", 1657, 11200);
    BuyFurnitures_Add("Round dining table", 2030, 11200);
    BuyFurnitures_Add("Black TV", 1518, 11200);
    BuyFurnitures_Add("Office chair", 1721, 11200);
    BuyFurnitures_Add("Water dispenser", 1808, 11200);
    BuyFurnitures_Add("A small grill for the house", 19831, 11200);
    BuyFurnitures_Add("Bush", 1364, 11200);
    BuyFurnitures_Add("Plant", 2001, 11200);
    BuyFurnitures_Add("Plant", 2195, 11200);
    BuyFurnitures_Add("White light", 19121, 11200);
    BuyFurnitures_Add("Blue light", 19122, 11200);
    BuyFurnitures_Add("Red light", 19124, 11200);
    BuyFurnitures_Add("Lock device", 19273, 11200);
    BuyFurnitures_Add("Red Christmas box", 19057, 11200);
    BuyFurnitures_Add("Blue Christmas box", 19058, 11200);
    BuyFurnitures_Add("Christmas tree", 19076, 11200);
    BuyFurnitures_Add("Prison Cell 1", 19304, 11200);
    BuyFurnitures_Add("Prison Cell 2", 19303, 11200);
    BuyFurnitures_Add("Wall", 19360, 11200);
    BuyFurnitures_Add("Wall", 19368, 11200);
    BuyFurnitures_Add("Wall", 19358, 11200);
    BuyFurnitures_Add("Laptop", 19893, 11200);
    BuyFurnitures_Add("Fridge", 19916, 11200);
    BuyFurnitures_Add("Sofa 1", 11682, 11200);
    BuyFurnitures_Add("Sofa 2", 11683, 11200);
    BuyFurnitures_Add("Sofa 3", 11685, 11200);
    BuyFurnitures_Add("Lamp", 11726, 11200);
    BuyFurnitures_Add("Fireplace", 11725, 11200);
    BuyFurnitures_Add("Blue neon", 18648, 11200);
    BuyFurnitures_Add("Green neon", 18649, 11200);
    BuyFurnitures_Add("Cactus", 651, 11200);
    BuyFurnitures_Add("Basket Ball", 946, 11200);
    BuyFurnitures_Add("Boxes", 1421, 11200);
    BuyFurnitures_Add("Dyn TV", 1429, 11200);
    BuyFurnitures_Add("Couch", 1706, 11200);
    BuyFurnitures_Add("Swank Cabinet", 1730, 11200);
    BuyFurnitures_Add("Bookshelf", 1742, 11200);
    BuyFurnitures_Add("Shelves", 2063, 11200);
    BuyFurnitures_Add("M Light", 2070, 11200);
    BuyFurnitures_Add("Kitch", 2133, 11200);
    BuyFurnitures_Add("Frame Clip 1", 2257, 11200);
    BuyFurnitures_Add("Frame Clip 2", 2256, 11200);
    BuyFurnitures_Add("Fridge", 2531, 11200);
}

stock BuyClothes_Add(playerid, item[], model, price)
{
	new itemid = BuyClothes_GetFreeID(playerid);
	BuyClothesInfo[playerid][itemid][buycExists] = true;
	BuyClothesInfo[playerid][itemid][buycModel] = model;
	BuyClothesInfo[playerid][itemid][buycPrice] = price;
	format(BuyClothesInfo[playerid][itemid][buycItem], 32, item);
}

stock RemovePlayerAllBuyClothes(playerid)
{
	new maxClothesId = BuyClothes_GetFreeID(playerid);
	for (new itemid = 0; itemid < maxClothesId; itemid++)
	{
		BuyClothesInfo[playerid][itemid][buycExists] = false;
	}
}

stock LoadPlayerBuyClothes(playerid)
{
	RemovePlayerAllBuyClothes(playerid);
	if (PlayerInfo[playerid][pGender] == GENDER_MALE)
	{
		BuyClothes_Add(playerid, "Skin", 3, 8120);
		BuyClothes_Add(playerid, "Skin", 7, 8330);
		BuyClothes_Add(playerid, "Skin", 16, 9430);
		BuyClothes_Add(playerid, "Skin", 21, 9530);
		BuyClothes_Add(playerid, "Skin", 23, 7630);
		BuyClothes_Add(playerid, "Skin", 30, 7730);
		BuyClothes_Add(playerid, "Skin", 44, 6830);
		BuyClothes_Add(playerid, "Skin", 46, 6930);
	}

	if (PlayerInfo[playerid][pGender] == GENDER_FEMALE)
	{
		BuyClothes_Add(playerid, "Skin", 91, 6830);
		BuyClothes_Add(playerid, "Skin", 93, 7630);
		BuyClothes_Add(playerid, "Skin", 148, 6830);
		BuyClothes_Add(playerid, "Skin", 150, 7630);
		BuyClothes_Add(playerid, "Skin", 169, 9530);
	}
}

stock BarricadeItems_Add(item[], model)
{
	new itemid = BarricadeItems_GetFreeID();
	BarricadeItemsInfo[itemid][barrExists] = true;
	BarricadeItemsInfo[itemid][barrModel] = model;
	format(BarricadeItemsInfo[itemid][barrItem], 32, item);
}

stock LoadBarricadeItems()
{
	BarricadeItems_Add("Barrier", 1282);
	BarricadeItems_Add("Barrier", 1427);
	BarricadeItems_Add("Barrier", 1949);
	BarricadeItems_Add("Barrier", 1425);
	BarricadeItems_Add("Barrier", 1422);
	BarricadeItems_Add("Barrier", 3091);
	BarricadeItems_Add("Barrier", 1423);
	BarricadeItems_Add("Barrier", 1428);
	BarricadeItems_Add("Barrier", 1459);
}
stock Inventory_Add(playerid, item[], model, quantity = 1)
{
	new itemid = Inventory_GetFreeID(playerid);
	new getItemId = Inventory_GetItemID(playerid, item);
	if (getItemId == -1)
	{
		InventoryInfo[playerid][itemid][invExists] = true;
		InventoryInfo[playerid][itemid][invModel] = model;
		InventoryInfo[playerid][itemid][invQuantity] = quantity;
		format(InventoryInfo[playerid][itemid][invItem], 32, item);
	}
	else
	{
		InventoryInfo[playerid][getItemId][invQuantity] += quantity;
	}

	return 1;
}

stock GetVehicleName(vehicleid)
{
	new String[256];
	format(String, sizeof(String), "%s", VehicleNames[GetVehicleModel(vehicleid) - 400]);
	return String;
}

stock QuitRobbery(playerid)
{
	RestartPlayerSkin(playerid);
	inNormalRobbery[playerid] = false;
	RemovePlayerAttachedObject(playerid, 2);
	normalRobberyMembers -= 1;
}

stock StopAtmRobbery()
{
	startedAtmRob = false;
	isAtmRobber[atmRobberID] = false;
	atmRobberyGettingMoneyTimer = 0;
	atmRobberyCollectTimeCheck = 0;
	RemovePlayerAttachedObject(atmRobberID, 2);
	atmRobberID = -1;
	atmRobberyWaitingTimer = 15 * 60;
}

stock StopRobbery()
{
	robberyTimerToStart = 0;
	robberyGettingMoneyTimer = 0;
	robberyCollectTimeCheck = 0;
	normalRobberyStartedGettingCash = false;
	robberyGettingMoneyTimer = 0;
	startedNormalRobbery = false;
	startedNormalRobGettingMoney = false;
	normalRobberyMembers = 0;
	normalRobberyWaitingTimer = 15 * 60;
	if (normalRobberyLeaderID != -1)
	{
		isNormalRobberyLeaderPlayer[normalRobberyLeaderID] = false;
		normalRobberyLeaderID = -1;
	}

	for (new i; i < MAX_PLAYERS; i++)
	{
		if (inNormalRobbery[i] == true)
		{
			QuitRobbery(i);
		}
	}
}

stock CollectAtmRobberyCash()
{
	atmRobberyMoney += 22;
	new stringrobbery[560];
	format(stringrobbery, 560, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~STOLEN CASH:~n~~g~$%d", atmRobberyMoney);
	GameTextForPlayer(atmRobberID, stringrobbery, 3000, 3);
}

stock CollectRobberyCash()
{
	normalRobberyMoney += 12;
	new stringrobbery[560];
	format(stringrobbery, 560, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~STOLEN CASH:~n~~g~$%d", normalRobberyMoney);
	for (new allRobbers; allRobbers < MAX_PLAYERS; allRobbers++)
	{
		if (inNormalRobbery[allRobbers] == true)
		{
			GameTextForPlayer(allRobbers, stringrobbery, 3000, 3);
		}
	}
}

stock IsPlayerInRangeOfGraffit(playerid, graffit)
{
	new Float: grafX = GraffitiInfo[graffit][gX];
	new Float: grafY = GraffitiInfo[graffit][gY];
	new Float: grafZ = GraffitiInfo[graffit][gZ];
	if (IsPlayerInRangeOfPoint(playerid, 10.0, grafX, grafY, grafZ))
	{
		return 1;
	}

	return 0;
}

stock MaxAllowedSpeedArea(playerid)
{
	new Float: X3, Float: Y3, Float: Z3;
	GetPlayerPos(playerid, X3, Y3, Z3);
	for (new i; i < MAX_SPEEDAREAS; i++)
	{
		if ((X3 <= MaxSpeedAreaInfo[i][zMaxX] && X3 >= MaxSpeedAreaInfo[i][zMinX]) && (Y3 <= MaxSpeedAreaInfo[i][zMaxY] && Y3 >= MaxSpeedAreaInfo[i][zMinY]))
		{
			return i;
		}
	}

	return -1;
}

stock FuelStationClose(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 10, 1004.0327, -937.5370, 42.3281))
	{
		return 0;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 1942.3719, -1772.8666, 13.6406))
	{
		return 1;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1606.7223, -2713.3562, 48.5335))
	{
		return 2;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -2026.7813, 156.5509, 29.0391))
	{
		return 3;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -2243.8149, -2559.8899, 31.9219))
	{
		return 4;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1676.2601, 413.5443, 7.1797))
	{
		return 5;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2201.8296, 2475.1350, 10.8203))
	{
		return 6;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 615.3391, 1690.0454, 6.9922))
	{
		return 7;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1328.2731, 2677.5278, 50.0625))
	{
		return 8;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 70.3842, 1219.0177, 18.8116))
	{
		return 9;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2113.3835, 919.5655, 10.8203))
	{
		return 10;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2641.0115, 1106.6252, 10.8203))
	{
		return 11;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2146.7964, 2747.8115, 10.8203))
	{
		return 12;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 1595.7935, 2199.5996, 10.8203))
	{
		return 13;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1471.1836, 1863.7598, 32.6328))
	{
		return 14;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 655.7673, -565.0798, 16.3359))
	{
		return 15;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 1381.8230, 459.1453, 20.3452))
	{
		return 16;
	}
}

MechanicCarmodDialog(playerid)
{
	ShowPlayerDialog(playerid, DIALOG_TUNEMECHANIC, DIALOG_STYLE_LIST, "Изберете какво ще тунинговате", "Nitro\nCar Color\nWheels\nStereo\nHydraulics\nCar Components", "Select", "Cancel");
	return 1;
}

RegularCarDialog(playerid)
{
	//workingOnVeh[playerid]
	new vehid = workingOnVeh[playerid];
	new vehmd = GetVehicleModel(vehid);
	new string[128];
	if (vehmd == 401 || vehmd == 496 || vehmd == 518 || vehmd == 540 || vehmd == 546 || vehmd == 589)
	{
		string = "Spoiler\nHood\nRoof\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 549)
	{
		string = "Spoiler\nHood\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 550)
	{
		string = "Spoiler\nHood\nRoof\nVents\nLights\n{FF0000}Back";
	}
	else if (vehmd == 585 || vehmd == 603)
	{
		string = "Spoiler\nRoof\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 410 || vehmd == 436)
	{
		string = "Spoiler\nRoof\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 439 || vehmd == 458)
	{
		string = "Spoiler\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 551 || vehmd == 492 || vehmd == 529)
	{
		string = "Spoiler\nHood\nRoof\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 489 || vehmd == 505)
	{
		string = "Spoiler\nHood\nRoof\nLights\n{FF0000}Back";
	}
	else if (vehmd == 516)
	{
		string = "Spoiler\nHood\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 491 || vehmd == 517)
	{
		string = "Spoiler\nVents\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 418 || vehmd == 527 || vehmd == 580)
	{
		string = "Spoiler\nRoof\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 420 || vehmd == 587)
	{
		string = "Spoiler\nHood\n{FF0000}Back";
	}
	else if (vehmd == 547)
	{
		string = "Spoiler\nVents\n{FF0000}Back";
	}
	else if (vehmd == 415)
	{
		string = "Spoiler\nSideskirt\n{FF0000}Back";
	}

	ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Choose one", string, "Select", "Cancel");
	return 1;
}

stock GMXStart1()
{
	SendClientMessageToAll(COLOR_LIGHTRED2, "[РЕСТАРТ INFO] Понеже сървърът се рестартира, всички играчи ще бъдат KICKED, за да се запаметят");
	SaveServer();
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		PlayerTimerInfo[i][ptKick] = 1;
	}

	serverGmxTimer = 2;
}

stock GMXStart2()
{
	SendRconCommand("gmx");
}

stock IsPlayerInRangeOfAnyVehicle(playerid, Float: Range)
{
	new vehicleID = -1;
	for (new i; i < MAX_VEHICLES; i++)
	{
		if (IsPlayerInRangeOfVehicle(playerid, i, Range))
		{
			vehicleID = i;
		}
	}

	return vehicleID;
}

stock IsPlayerInRangeOfVehicle(playerid, vehicleid, Float: Range)
{
	new Float: Pos[3];
	GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
	return IsPlayerInRangeOfPoint(playerid, Range, Pos[0], Pos[1], Pos[2]);
}

stock IsValidPrivateVehID(id)
{
	new privateveh[64];
	format(privateveh, 64, "/PrivateVehs/%d.ini", id);
	if (dini_Exists(privateveh)) return 1;
	return 0;
}

stock ReturnNextUnusedPrivateVehID()
{
	new privateveh[64];
	for (new pv = 1; pv < MAX_PRIVATEVEHS; pv++)
	{
		format(privateveh, 64, "/PrivateVehs/%d.ini", pv);
		if (!dini_Exists(privateveh)) return pv;
	}

	return 0;
}

stock ReturnNextUnusedBizID()
{
	new biz[64];
	for (new b; b < maxbiz + 2; b++)
	{
		format(biz, 64, "/Bizz/%d.ini", b);
		if (!dini_Exists(biz)) return b;
	}

	return true;
}

stock ReturnNextUnusedHouseID()
{
	new house[64];
	for (new h; h < maxhouses + 2; h++)
	{
		format(house, 64, "/Houses/%d.ini", h);
		if (!dini_Exists(house)) return h;
	}

	return true;
}

stock LoadAllBiz()
{
	for (new alb = 0; alb < maxbiz + 2; alb++)
	{
		new biz[64];
		format(biz, 64, "/Bizz/%d.ini", alb);
		if (dini_Exists(biz))
		{
			maxbiz += 1;
			BizInfo[alb][bX] = dini_Float(biz, "bX");
			BizInfo[alb][bY] = dini_Float(biz, "bY");
			BizInfo[alb][bZ] = dini_Float(biz, "bZ");
			BizInfo[alb][bOwner] = dini_Int(biz, "bOwner");
			BizInfo[alb][bLocked] = dini_Int(biz, "bLocked");
			BizInfo[alb][bPrice] = dini_Int(biz, "bPrice");
			BizInfo[alb][bType] = dini_Int(biz, "bType");
			BizInfo[alb][bPayOut] = dini_Int(biz, "bPayOut");
			BizInfo[alb][bLevel] = dini_Int(biz, "bLevel");
			BizInfo[alb][bFee] = dini_Int(biz, "bFee");
			BizInfo[alb][bStock] = dini_Int(biz, "bStock");
			BizInfo[alb][bItemsNumber] = dini_Int(biz, "bItemsNumber");
			BizInfo[alb][bEarnings] = dini_Int(biz, "bEarnings");
			format(BizInfo[alb][bOwnerName], 256, "%s", dini_Get(biz, "bOwnerName"));
			format(BizInfo[alb][bName], 256, "%s", dini_Get(biz, "bName"));
			bizPickup[alb] = CreateDynamicPickup(1272, 1, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ], 0);
			AddBizLabel(alb);
			AddBizActor(alb);
			bizPickupIndex[bizPickup[alb]] = alb;
			isBizPickup[bizPickup[alb]] = true;
			AddBizIcon(alb);
		}
	}

	printf("Life of San Andreas Server - System: Всички бизнеси бяха заредени.");
}

stock AddHouseLabel(houseid)
{
	new string256[256];
	if(HouseInfo[houseid][hOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Къщата се продава\n\n{42F23D}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", HouseInfo[houseid][hName], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel]);
		houseLabel[houseid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, HouseInfo[houseid][hX], HouseInfo[houseid][hY], HouseInfo[houseid][hZ] + 0.3, 15);
	}
	else
	{
		format(string256, 256, "{42F23D}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", HouseInfo[houseid][hName], HouseInfo[houseid][hOwnerName], HouseInfo[houseid][hLevel]);
		houseLabel[houseid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, HouseInfo[houseid][hX], HouseInfo[houseid][hY], HouseInfo[houseid][hZ] + 0.3, 15);
	}
}

stock AddBizLabel(bizid)
{
	new string256[256];
	if (BizInfo[bizid][bOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Бизнесът се продава\n\n{689DF9}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
		bizLabel[bizid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ] + 0.3, 15);
	}
	else
	{
		format(string256, 256, "{689DF9}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", BizInfo[bizid][bName], BizInfo[bizid][bOwnerName], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
		bizLabel[bizid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ] + 0.3, 15);
	}
}

stock AddHouseIcon(houseid)
{
	if (HouseInfo[houseid][hOwner] == 0)
	{
		CreateDynamicMapIconEx(HouseInfo[houseid][hX], HouseInfo[houseid][hY], HouseInfo[houseid][hZ], 31, 0, MAPICON_LOCAL, 145.0);
	}
}

stock AddBizIcon(bizid)
{
	if (BizInfo[bizid][bType] == 1) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 2) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 17, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 3) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 6, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 4) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 5) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 45, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 6) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 29, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 7) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 8) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 45, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 9) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 6, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 10) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 6, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 11) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 48, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 12) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 13) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 54, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 14) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 54, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 15) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 16) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 17) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 18) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 19) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 17, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 20) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 29, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 21) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 17, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 22) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 9, 0, MAPICON_LOCAL, 125.0);
}

stock AutoMessage()
{
	new randomMessage = randomex(0, 13);
	if (randomMessage == 0)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Ако откриете бъг, докладвайте го на {40BF00}Discord: didkoandreevofficial#5949");
	}

	if (randomMessage == 1)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Ако нямате Discord и искате да се свържите с притежателя, то потърсете {40BF00}Skype: didko.bg@abv.bg");
	}

	if (randomMessage == 2)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Ако искате да потърсите помощ от администратор, напишете {40BF00}/ask");
	}

	if (randomMessage == 3)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Можете да се присъедините към различни {40BF00}банди/мафии");
	}

	if (randomMessage == 4)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}За да вдигнете ниво трябва да съберете достатъчно {40BF00}точки Exp");
	}

	if (randomMessage == 5)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Можете да пишете на лично до админи с цел помощ, чрез {40BF00}/pm");
	}

	if (randomMessage == 6)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}В сървъра имате възможност за правене на престъпни дейности, като {40BF00}обири");
	}

	if (randomMessage == 7)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Можете да видите вашата каса, чрез {40BF00}/mybgn{ffffff} и да пазарувате с парите от нея, чрез {40BF00}/vouchers");
	}

	if (randomMessage == 8)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Можете да промените Spawn-а си на Къща/Бизнес, чрез {40BF00}/spawn");
	}

	if (randomMessage == 9)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Можете да заключите превоза си, чрез {40BF00}/olock");
	}

	if (randomMessage == 10)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}За да влезете или излезете от бизнес/къща, напишете {40BF00}/enter (за вход), /exit (за изход)");
	}

	if (randomMessage == 11)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Всяка организация си има {40BF00}лични превози {ffffff}, които могат да бъдат карани само от членовете й");
	}

	if (randomMessage == 12)
	{
		SendClientMessageToAll(COLOR_LIGHTBLUE3, "[Message] {FFFFFF}Ако стоите AFK твърде дълго, {40BF00}ще бъдете вкаран в AFK режим {ffffff}и няма да получавате играно време за Payday");
	}
}

stock SavePrivateVehicle(vehID)
{
	new string256[256];
	format(string256, 256, "/PrivateVehs/%d.ini", vehID);
	if (!dini_Exists(string256))
	{
		dini_Create(string256);
	}

	dini_Set(string256, "vOwnerName", PrivateVehInfo[vehID][vOwnerName]);
	dini_IntSet(string256, "vOwner", PrivateVehInfo[vehID][vOwner]);
	dini_IntSet(string256, "vVehID", PrivateVehInfo[vehID][vVehID]);
	dini_IntSet(string256, "vVehNeonColor", PrivateVehInfo[vehID][vVehNeonColor]);
	dini_Set(string256, "vVehStickerName1", PrivateVehInfo[vehID][vVehStickerName1]);
	dini_Set(string256, "vVehStickerName2", PrivateVehInfo[vehID][vVehStickerName2]);
	for (new i; i < 2; i++)
	{
		new stickerString[256];
		format(stickerString, 256, "vVehStickerX[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehStickerX][i]);
		format(stickerString, 256, "vVehStickerY[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehStickerY][i]);
		format(stickerString, 256, "vVehStickerZ[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehStickerZ][i]);
	}

	for (new i; i < 20; i++)
	{
		new stickerString[256];
		format(stickerString, 256, "vVehObject[%d]", i);
		dini_IntSet(string256, stickerString, PrivateVehInfo[vehID][vVehObject][i]);
		format(stickerString, 256, "vVehObjectX[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectX][i]);
		format(stickerString, 256, "vVehObjectY[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectY][i]);
		format(stickerString, 256, "vVehObjectZ[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectZ][i]);
		format(stickerString, 256, "vVehObjectRX[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectRX][i]);
		format(stickerString, 256, "vVehObjectRY[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectRY][i]);
		format(stickerString, 256, "vVehObjectRZ[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectRZ][i]);
	}
	new vehColor1, vehColor2;
	new vehicleid = PrivateVehInfo[vehID][vVeh];
	GetVehicleColor(vehicleid, vehColor1, vehColor2);
	dini_Set(string256, "vVehText", PrivateVehInfo[vehID][vVehText]);
	dini_IntSet(string256, "vVehSpoiler", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER));
	dini_IntSet(string256, "vVehHood", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD));
	dini_IntSet(string256, "vVehRoof", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF));
	dini_IntSet(string256, "vVehNitro", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO));
	dini_IntSet(string256, "vVehSideskirt", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT));
	dini_IntSet(string256, "vVehLights", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS));
	dini_IntSet(string256, "vVehExhaust", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST));
	dini_IntSet(string256, "vVehStereo", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO));
	dini_IntSet(string256, "vVehWheels", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS));
	dini_IntSet(string256, "vVehHyd", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS));
	dini_IntSet(string256, "vVehBumperF", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER));
	dini_IntSet(string256, "vVehBumperR", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER));
	dini_IntSet(string256, "vVehVentsR", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT));
	dini_IntSet(string256, "vVehVentsL", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT));
	dini_IntSet(string256, "vVehC1", vehColor1);
	dini_IntSet(string256, "vVehC2", vehColor2);
	dini_IntSet(string256, "vVehPaintJob", PrivateVehInfo[vehID][vVehPaintJob]);
	dini_IntSet(string256, "vParked", PrivateVehInfo[vehID][vParked]);
	dini_IntSet(string256, "vLocked", PrivateVehInfo[vehID][vLocked]);
	dini_FloatSet(string256, "vVehX", PrivateVehInfo[vehID][vVehX]);
	dini_FloatSet(string256, "vVehY", PrivateVehInfo[vehID][vVehY]);
	dini_FloatSet(string256, "vVehZ", PrivateVehInfo[vehID][vVehZ]);
	dini_FloatSet(string256, "vVehA", PrivateVehInfo[vehID][vVehA]);

}

stock SaveBiz(bizID)
{
	new string256[256];
	format(string256, 256, "/Bizz/%d.ini", bizID);
	if (dini_Exists(string256))
	{
		dini_FloatSet(string256, "bX", BizInfo[bizID][bX]);
		dini_FloatSet(string256, "bY", BizInfo[bizID][bY]);
		dini_FloatSet(string256, "bZ", BizInfo[bizID][bZ]);
		dini_IntSet(string256, "bOwner", BizInfo[bizID][bOwner]);
		dini_IntSet(string256, "bLocked", BizInfo[bizID][bLocked]);
		dini_IntSet(string256, "hPrice", BizInfo[bizID][bPrice]);
		dini_IntSet(string256, "bPayOut", BizInfo[bizID][bPayOut]);
		dini_IntSet(string256, "bLevel", BizInfo[bizID][bLevel]);
		dini_IntSet(string256, "bEarnings", BizInfo[bizID][bEarnings]);
		dini_IntSet(string256, "bFee", BizInfo[bizID][bFee]);
		dini_IntSet(string256, "bStock", BizInfo[bizID][bStock]);
		dini_IntSet(string256, "bItemsNumber", BizInfo[bizID][bItemsNumber]);
		dini_IntSet(string256, "bType", BizInfo[bizID][bType]);
		dini_Set(string256, "bName", BizInfo[bizID][bName]);
		dini_Set(string256, "bOwnerName", BizInfo[bizID][bOwnerName]);
	}
}

stock SaveHouse(houseID)
{
	new string256[256];
	format(string256, 256, "/Houses/%d.ini", houseID);
	if (dini_Exists(string256))
	{
		dini_FloatSet(string256, "hX", HouseInfo[houseID][hX]);
		dini_FloatSet(string256, "hY", HouseInfo[houseID][hY]);
		dini_FloatSet(string256, "hZ", HouseInfo[houseID][hZ]);
		dini_IntSet(string256, "hOwner", HouseInfo[houseID][hOwner]);
		dini_IntSet(string256, "hLocked", HouseInfo[houseID][hLocked]);
		dini_IntSet(string256, "hLevel", HouseInfo[houseID][hLevel]);
		dini_IntSet(string256, "hPrice", HouseInfo[houseID][hPrice]);
		dini_IntSet(string256, "hInterior", HouseInfo[houseID][hInterior]);
		dini_Set(string256, "hOwnerName", HouseInfo[houseID][hOwnerName]);
		dini_IntSet(string256, "hVehID", HouseInfo[houseID][hVehID]);
		dini_IntSet(string256, "hArmour", HouseInfo[houseID][hArmour]);
		dini_IntSet(string256, "hVehC1", HouseInfo[houseID][hVehC1]);
		dini_IntSet(string256, "hVehC2", HouseInfo[houseID][hVehC2]);
		dini_FloatSet(string256, "hVehX", HouseInfo[houseID][hVehX]);
		dini_FloatSet(string256, "hVehY", HouseInfo[houseID][hVehY]);
		dini_FloatSet(string256, "hVehZ", HouseInfo[houseID][hVehZ]);
		dini_FloatSet(string256, "hVehA", HouseInfo[houseID][hVehA]);
		dini_Set(string256, "hName", HouseInfo[houseID][hName]);
		new stringSecond[256];
		for (new i; i < 10; i++)
		{
            format(stringSecond, 256, "hFurVirtualWorld[%d]", i);
            dini_BoolSet(string256, stringSecond, HouseInfo[houseID][hFurVirtualWorld][i]);
			format(stringSecond, 256, "hFurID[%d]", i);
			dini_IntSet(string256, stringSecond, HouseInfo[houseID][hFurID][i]);
			format(stringSecond, 256, "hFurSlot[%d]", i);
			dini_IntSet(string256, stringSecond, HouseInfo[houseID][hFurSlot][i]);
			format(stringSecond, 256, "hFurX[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurX][i]);
			format(stringSecond, 256, "hFurY[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurY][i]);
			format(stringSecond, 256, "hFurZ[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurZ][i]);
			format(stringSecond, 256, "hFurRX[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurRX][i]);
			format(stringSecond, 256, "hFurRY[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurRY][i]);
			format(stringSecond, 256, "hFurRZ[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurRZ][i]);
		}
	}
}

//UPDATE
stock UpdateBiz3DText(bizid)
{
	new string256[256];
	if (BizInfo[bizid][bOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Бизнесът се продава\n\n{689DF9}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
	}
	else
	{
		format(string256, 256, "{689DF9}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", BizInfo[bizid][bName], BizInfo[bizid][bOwnerName], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
	}
	UpdateDynamic3DTextLabelText(bizLabel[bizid], COLOR_WHITE, string256);
}

stock UpdateHouse3DText(houseid)
{
	new string256[256];
	if(HouseInfo[houseid][hOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Къщата се продава\n\n{42F23D}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", HouseInfo[houseid][hName], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel]);
		UpdateDynamic3DTextLabelText(houseLabel[houseid], COLOR_WHITE, string256);
	}
	else
	{
		format(string256, 256, "{42F23D}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш напиши {FF0000}/enter", HouseInfo[houseid][hName], HouseInfo[houseid][hOwnerName], HouseInfo[houseid][hLevel]);
		UpdateDynamic3DTextLabelText(houseLabel[houseid], COLOR_WHITE, string256);
	}
}
//UPDATE

stock CheckForSpeed(playerid, speed, Float: x, Float: y, Float: z)
{
	if (IsPlayerInRangeOfPoint(playerid, 8.5, x, y, z) && GetVehicleKmh(GetPlayerVehicleID(playerid)) > speed)
	{
		if (PlayerTimerInfo[playerid][ptLastOverSpeed] == 0)
		{
			if (IsPlayerDriver(playerid))
			{
				if (!PlayerInfo[playerid][pPoliceDuty])
				{
					PlayerInfo[playerid][pFine] += 50;
					new string256[256];
					if (PlayerInfo[playerid][pWantedLevel] == 0) GivePlayerWanted(playerid, 1);
					new playerFine = PlayerInfo[playerid][pFine] + (PlayerInfo[playerid][pWantedLevel] *2000);
					format(string256, 256, "[Speed Camera] {ebebeb}Вие превишихте скоростта! Лимитът тук е %d Km/h, а ви бяхте хванат с %d Km/h", speed, GetVehicleKmh(GetPlayerVehicleID(playerid)));
					SendClientMessage(playerid, 0x169CFFFF, string256);
					format(string256, 256, "Всичките ви глоби са $%d! Платете ги в полицията!", playerFine);
					SendClientMessage(playerid, 0xebebebFF, string256);
					format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте заподозрян в престъпление: Превишена скорост! Ниво на издирване: %d", PlayerInfo[playerid][pWantedLevel]);
					SendClientMessage(playerid, COLOR_LIGHTRED, string256);
					format(string256, 256, "* Камерата за скорост премигна, когато %s премина през нея!", GetPlayerNickname(playerid));
					SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
					PlayerTimerInfo[playerid][ptLastOverSpeed] = 30;
				}
			}
		}
	}
}

stock UpdatePlayerWantedStars(playerid)
{
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
}

stock GetPlayerAllWanted(playerid)
{
	PlayerInfo[playerid][pWantedLevel] = 0;
	UpdatePlayerWantedStars(playerid);
}

stock GetPlayerNickname(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}

stock GetAccountNickname(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}

stock GivePlayerWanted(playerid, level)
{
	PlayerInfo[playerid][pWantedLevel] += level;
	if (PlayerInfo[playerid][pWantedLevel] > 6) PlayerInfo[playerid][pWantedLevel] = 6;
	UpdatePlayerWantedStars(playerid);
}

stock GetVehicleKmh(vehicleid)
{
	new Float: x, Float: y, Float: z, vel;
	GetVehicleVelocity(vehicleid, x, y, z);
	vel = floatround(floatsqroot(x *x + y *y + z *z) *180);
	return vel;
}

stock SetPlayerDefaultColor(playerid)
{
	if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
	{
		if (PlayerInfo[playerid][pFbiDuty])
		{
			SetPlayerColor(playerid, COLOR_PLAYER_FBI);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}

	if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD || PlayerInfo[playerid][pFaction] == FACTION_RCPD)
	{
		if (PlayerInfo[playerid][pPoliceDuty])
		{
			SetPlayerColor(playerid, COLOR_PLAYER_POLICE);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_CRIP);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_ITALIAN_MAFIA)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_ITALIAN);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_AZTECAS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_TRIADS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_GROVE);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_WCW)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_WCW);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_BALLAS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_UNSEEN)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_UNSEEN);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_VAGOS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_KACC)
	{
		if (PlayerInfo[playerid][pKACCDuty])
		{
			SetPlayerColor(playerid, COLOR_PLAYER_KACC);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_ARMY)
	{
		if (PlayerInfo[playerid][pArmyDuty])
		{
			SetPlayerColor(playerid, COLOR_PLAYER_ARMY);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}
	//Admin Duty
	if (PlayerInfo[playerid][pAdminDuty])
	{
		SetPlayerColor(playerid, COLOR_ADMINDUTY);
	}
}

stock SetAdminOffDuty(playerid)
{
	PlayerInfo[playerid][pAdminDuty] = false;
	SetPlayerDefaultColor(playerid);
	RestartPlayerSkin(playerid);
}

stock SetAdminOnDuty(playerid)
{
	PlayerInfo[playerid][pAdminDuty] = true;
	SetPlayerColor(playerid, COLOR_ADMINDUTY);
	RestartPlayerSkin(playerid);
}

stock SetFbiOffDuty(playerid)
{
	PlayerInfo[playerid][pFbiDuty] = false;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetFbiOnDuty(playerid)
{
	PlayerInfo[playerid][pFbiDuty] = true;
	SetPlayerColor(playerid, COLOR_PLAYER_FBI);
	RestartPlayerSkin(playerid);
}

stock SetPoliceOffDuty(playerid)
{
	PlayerInfo[playerid][pPoliceDuty] = false;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetPoliceOnDuty(playerid)
{
	PlayerInfo[playerid][pPoliceDuty] = true;
	SetPlayerColor(playerid, COLOR_PLAYER_POLICE);
	RestartPlayerSkin(playerid);
}

stock SetFuelCoOffDuty(playerid)
{
	PlayerInfo[playerid][pFuelCoDuty] = false;
}

stock SetFuelCoOnDuty(playerid)
{
	PlayerInfo[playerid][pFuelCoDuty] = true;
}

stock SetTaxiOffDuty(playerid)
{
	PlayerInfo[playerid][pTaxiDuty] = false;
	StopTaxiFare(playerid);
}

stock SetTaxiOnDuty(playerid)
{
	PlayerInfo[playerid][pTaxiDuty] = true;
}

stock SetKACCOffDuty(playerid)
{
	PlayerInfo[playerid][pKACCDuty] = false;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetArmyOffDuty(playerid)
{
	PlayerInfo[playerid][pArmyDuty] = false;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetKACCOnDuty(playerid)
{
	PlayerInfo[playerid][pKACCDuty] = true;
	SetPlayerColor(playerid, COLOR_PLAYER_KACC);
	RestartPlayerSkin(playerid);
}

stock SetArmyOnDuty(playerid)
{
	PlayerInfo[playerid][pArmyDuty] = true;
	SetPlayerColor(playerid, COLOR_PLAYER_ARMY);
	RestartPlayerSkin(playerid);
}

stock randomex(min, max)
{
	//Credits to y_less
	new rand = random(max - min) + min;
	return rand;
}

stock SetAllVehFuel()
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		new vehFuelRandom = randomex(96, 100);
		vehFuel[i] = vehFuelRandom;
	}
}

stock ToggleAllVehiclesEngineOFF()
{
	for (new i; i < MAX_VEHICLES; i++)
	{
		new vehModel = GetVehicleModel(i);
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			ToggleEngine(i, VEHICLE_PARAMS_OFF);
			vehEngineStatusON[i] = false;
		}
	}
}

stock SendJobMessage(JOB, color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pJob] == JOB)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendNewsMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (!PlayerInfo[i][pDisableNews])
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendAdminOnDutyMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdminDuty] == 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendVipChatMessage(color, string[])
{
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (PlayerInfo[i][pVip] >= 1)
        {
            SendClientMessage(i, color, string);
        }
    }
}

stock SendAdminMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendTaxiPlayersMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pJob] == JOB_TAXI)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendMechanicPlayersMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pJob] == JOB_MECHANIC)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendPolicePlayersMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pFaction] == FACTION_LSPD || PlayerInfo[i][pFaction] == FACTION_LVPD || PlayerInfo[i][pFaction] == FACTION_RCPD)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock GiveAllRobbersMoney()
{
	new dividedMoney = normalRobberyMoney / normalRobberyMembers;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (inNormalRobbery[i] == true)
		{
			GivePlayerCash(i, dividedMoney);
		}
	}
}

stock SendNormalRobberyMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (inNormalRobbery[i] == true)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendDMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		new hisFaction = PlayerInfo[i][pFaction];
		if (hisFaction == FACTION_KACC ||
			hisFaction == FACTION_ARMY ||
			hisFaction == FACTION_FBI ||
			hisFaction == FACTION_LSPD ||
			hisFaction == FACTION_RCPD ||
			hisFaction == FACTION_LVPD)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendEventMessage(color, string[])
{
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (inEvent[i])
        {
            SendClientMessage(i, color, string);
        }
    }
}

stock SendFactionMessage(TEAM, color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pFaction] == TEAM)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SaveTurf(turfid)
{
	new stringTurf[180];
	format(stringTurf, 180, "/Turfs/%d.ini", turfid);
	if (!dini_Exists(stringTurf))
	{
		dini_Create(stringTurf);
	}

	dini_IntSet(stringTurf, "TurfOwner", TurfInfo[turfid][TurfOwner]);
}

stock SaveCrew(crewID)
{
	new string[128];
	format(string, sizeof(string), "/Crews/%d.ini", crewID);
	dini_BoolSet(string, "cExists", CrewInfo[crewID][cExists]);
	dini_Set(string, "cName", CrewInfo[crewID][cName]);
}

stock GetCrewName(crewID)
{
	return CrewInfo[crewID][cName];
}

stock LoadCrew(crewID)
{
	new string[128];
	if (!dini_Exists(string))
	{
		SaveCrew(crewID);
	}

	format(string, sizeof(string), "/Factions/%d.ini", crewID);
	format(CrewInfo[crewID][cName], 32, "%s", dini_Get(string, "cName"));
	CrewInfo[crewID][cExists] = dini_Bool(string, "cExists");
}

stock SaveFaction(factionid)
{
	new stringFaction[180];
	format(stringFaction, 180, "/Factions/%d.ini", factionid);
	dini_Set(stringFaction, "fRankName1", FactionInfo[factionid][fRankName1]);
	dini_Set(stringFaction, "fRankName2", FactionInfo[factionid][fRankName2]);
	dini_Set(stringFaction, "fRankName3", FactionInfo[factionid][fRankName3]);
	dini_Set(stringFaction, "fRankName4", FactionInfo[factionid][fRankName4]);
	dini_Set(stringFaction, "fRankName5", FactionInfo[factionid][fRankName5]);
	dini_Set(stringFaction, "fRankName6", FactionInfo[factionid][fRankName6]);
	dini_IntSet(stringFaction, "fTurfs", FactionInfo[factionid][fTurfs]);
	dini_IntSet(stringFaction, "fTurfTime", FactionInfo[factionid][fTurfTime]);
	dini_IntSet(stringFaction, "fBankAccount", FactionInfo[factionid][fBankAccount]);
}

stock LoadFaction(factionid)
{
	new stringFaction[180];
	if (!dini_Exists(stringFaction))
	{
		SaveFaction(factionid);
	}

	format(stringFaction, 180, "/Factions/%d.ini", factionid);
	format(FactionInfo[factionid][fRankName1], 64, "%s", dini_Get(stringFaction, "fRankName1"));
	format(FactionInfo[factionid][fRankName2], 64, "%s", dini_Get(stringFaction, "fRankName2"));
	format(FactionInfo[factionid][fRankName3], 64, "%s", dini_Get(stringFaction, "fRankName3"));
	format(FactionInfo[factionid][fRankName4], 64, "%s", dini_Get(stringFaction, "fRankName4"));
	format(FactionInfo[factionid][fRankName5], 64, "%s", dini_Get(stringFaction, "fRankName5"));
	format(FactionInfo[factionid][fRankName6], 64, "%s", dini_Get(stringFaction, "fRankName6"));
	FactionInfo[factionid][fTurfs] = dini_Int(stringFaction, "fTurfs");
	FactionInfo[factionid][fTurfTime] = dini_Int(stringFaction, "fTurfTime");
	FactionInfo[factionid][fBankAccount] = dini_Int(stringFaction, "fBankAccount");
}

stock LoadPrivateVehs()
{
	for (new alv = 1; alv < MAX_PRIVATEVEHS; alv++)
	{
		new vehstring[64];
		format(vehstring, 64, "/PrivateVehs/%d.ini", alv);
		if (dini_Exists(vehstring))
		{
			PrivateVehInfo[alv][vVehID] = dini_Int(vehstring, "vVehID");
			PrivateVehInfo[alv][vVehC1] = dini_Int(vehstring, "vVehC1");
			PrivateVehInfo[alv][vVehC2] = dini_Int(vehstring, "vVehC2");
			PrivateVehInfo[alv][vParked] = dini_Int(vehstring, "vParked");
			PrivateVehInfo[alv][vLocked] = dini_Int(vehstring, "vLocked");
			PrivateVehInfo[alv][vVehX] = dini_Float(vehstring, "vVehX");
			PrivateVehInfo[alv][vVehY] = dini_Float(vehstring, "vVehY");
			PrivateVehInfo[alv][vVehZ] = dini_Float(vehstring, "vVehZ");
			PrivateVehInfo[alv][vVehA] = dini_Float(vehstring, "vVehA");
			PrivateVehInfo[alv][vOwner] = dini_Int(vehstring, "vOwner");
			PrivateVehInfo[alv][vLevel] = dini_Int(vehstring, "vLevel");
			PrivateVehInfo[alv][vPrice] = dini_Int(vehstring, "vPrice");
			PrivateVehInfo[alv][vVehSpoiler] = dini_Int(vehstring, "vVehSpoiler");
			PrivateVehInfo[alv][vVehPaintJob] = dini_Int(vehstring, "vVehPaintJob");
			PrivateVehInfo[alv][vVehHood] = dini_Int(vehstring, "vVehHood");
			PrivateVehInfo[alv][vVehRoof] = dini_Int(vehstring, "vVehRoof");
			PrivateVehInfo[alv][vVehNitro] = dini_Int(vehstring, "vVehNitro");
			PrivateVehInfo[alv][vVehSideskirt] = dini_Int(vehstring, "vVehSideskirt");
			PrivateVehInfo[alv][vVehLights] = dini_Int(vehstring, "vVehLights");
			PrivateVehInfo[alv][vVehNeonColor] = dini_Int(vehstring, "vVehNeonColor");
			format(PrivateVehInfo[alv][vVehStickerName1], 256, "%s", dini_Get(vehstring, "vVehStickerName1"));
			format(PrivateVehInfo[alv][vVehStickerName2], 256, "%s", dini_Get(vehstring, "vVehStickerName2"));
			PrivateVehInfo[alv][vVehExhaust] = dini_Int(vehstring, "vVehExhaust");
			PrivateVehInfo[alv][vVehStereo] = dini_Int(vehstring, "vVehStereo");
			PrivateVehInfo[alv][vVehWheels] = dini_Int(vehstring, "vVehWheels");
			PrivateVehInfo[alv][vVehHyd] = dini_Int(vehstring, "vVehHyd");
			PrivateVehInfo[alv][vVehBumperF] = dini_Int(vehstring, "vVehBumperF");
			PrivateVehInfo[alv][vVehBumperR] = dini_Int(vehstring, "vVehBumperR");
			PrivateVehInfo[alv][vVehVentsR] = dini_Int(vehstring, "vVehVentsR");
			PrivateVehInfo[alv][vVehVentsL] = dini_Int(vehstring, "vVehVentsL");
			format(PrivateVehInfo[alv][vVehText], 64, dini_Get(vehstring, "vVehText"));

			for (new objSlot; objSlot < 20; objSlot++)
			{
				new stringObj[256];
				format(stringObj, 256, "vVehObject[%d]", objSlot);
				PrivateVehInfo[alv][vVehObject][objSlot] = dini_Int(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectX[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectX][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectY[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectY][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectZ[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectZ][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectRX[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectRX][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectRY[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectRY][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectRZ[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectRZ][objSlot] = dini_Float(vehstring, stringObj);
			}

			format(PrivateVehInfo[alv][vOwnerName], 256, "%s", dini_Get(vehstring, "vOwnerName"));
			PrivateVehInfo[alv][vVeh] = AddStaticVehicleEx(PrivateVehInfo[alv][vVehID], PrivateVehInfo[alv][vVehX], PrivateVehInfo[alv][vVehY],
				PrivateVehInfo[alv][vVehZ], PrivateVehInfo[alv][vVehA], PrivateVehInfo[alv][vVehC1], PrivateVehInfo[alv][vVehC2], RESPAWN_VEHS_SECONDS);
			new vehicle = PrivateVehInfo[alv][vVeh];
			if (PrivateVehInfo[alv][vVehPaintJob] != -1)
			{
				ChangeVehiclePaintjob(vehicle, PrivateVehInfo[alv][vVehPaintJob]);
			}

			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehSpoiler]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehHood]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehRoof]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehNitro]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehSideskirt]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehLights]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehExhaust]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehWheels]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehHyd]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehBumperF]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehBumperR]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehVentsR]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehVentsL]);
			for (new i = 0; i < 2; i++)
			{
				if (strcmp(GetVehicleStickerName(alv, i), "", true) != 0)
				{
					if (IsValidDynamicObject(PrivateVehInfo[alv][vVehSticker][i]))
					{
						DestroyDynamicObject(PrivateVehInfo[alv][vVehSticker][i]);
					}

					new vehStickerText[256];
					format(vehStickerText, 256, "%s", GetVehicleStickerName(alv, i));
					new vehSticker = PrivateVehInfo[alv][vVehSticker][i];
					new Float: vehStickerX = PrivateVehInfo[alv][vVehStickerX][i];
					new Float: vehStickerY = PrivateVehInfo[alv][vVehStickerY][i];
					new Float: vehStickerZ = PrivateVehInfo[alv][vVehStickerZ][i];
					new Float: vehStickerXY = PrivateVehInfo[alv][vVehStickerXY][i];
					new Float: vehStickerYY = PrivateVehInfo[alv][vVehStickerYY][i];
					new Float: vehStickerZY = PrivateVehInfo[alv][vVehStickerZY][i];
					vehSticker = CreateDynamicObject(19482, vehStickerX, vehStickerY, vehStickerZ, vehStickerXY, vehStickerYY, vehStickerZY, -1, 0, -1, 200);
					SetDynamicObjectMaterialText(vehSticker, 0, vehStickerText, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, 1);
					AttachDynamicObjectToVehicle(vehSticker, vehicle, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
				}
			}

			if (PrivateVehInfo[alv][vVehNeonColor] != 0)	//neon
			{
				new neonObjectID = PrivateVehInfo[alv][vVehNeonColor];
				PrivateVehInfo[alv][vVehNeon][0] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
				AttachDynamicObjectToVehicle(PrivateVehInfo[alv][vVehNeon][0], vehicle, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
				PrivateVehInfo[alv][vVehNeon][1] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
				AttachDynamicObjectToVehicle(PrivateVehInfo[alv][vVehNeon][1], vehicle, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
			}

			//Veh 3D Text
			SetPrivateVeh3DText(alv);
			//Veh Objects - open
			for (new i = 0; i < 20; i++)
			{
				if (PrivateVehInfo[alv][vVehObject][i] != 0)
				{
					if (IsValidDynamicObject(PrivateVehInfo[alv][vVehObjID][i]))
					{
						DestroyDynamicObject(PrivateVehInfo[alv][vVehObjID][i]);
					}

					//Apply Objects - open
					new vehObjID = PrivateVehInfo[alv][vVehObject][i];
					new Float: vehObjX = PrivateVehInfo[alv][vVehObjectX][i];
					new Float: vehObjY = PrivateVehInfo[alv][vVehObjectY][i];
					new Float: vehObjZ = PrivateVehInfo[alv][vVehObjectZ][i];
					new Float: vehObjRX = PrivateVehInfo[alv][vVehObjectRX][i];
					new Float: vehObjRY = PrivateVehInfo[alv][vVehObjectRY][i];
					new Float: vehObjRZ = PrivateVehInfo[alv][vVehObjectRZ][i];
					new Float: X, Float: Y, Float: Z;
					GetVehiclePos(vehicle, X, Y, Z);
					PrivateVehInfo[alv][vVehObjID][i] = CreateDynamicObject(vehObjID, X, Y, Z, 0, 0, 0);
					new vehObjectToApply = PrivateVehInfo[alv][vVehObjID][i];
					AttachDynamicObjectToVehicle(vehObjectToApply, vehicle, vehObjX, vehObjY, vehObjZ, vehObjRX, vehObjRY, vehObjRZ);
					//Apply Objects - close
				}
			}

			//Veh Objects - close
			if (PrivateVehInfo[alv][vParked] == 0)
			{
				SetVehicleVirtualWorld(vehicle, 1);
			}

			VehicleInfo[vehicle][vPrivateID] = alv;	//TO GO
			VehicleInfo[vehicle][vIsPrivate] = 1;
		}
	}

	printf("Life of San Andreas Server - System: Бяха заредени личните коли");
}

stock LoadForSaleVehs()
{
	//los santos - open
	CreateVehicleForSale(602, 603, 29, 35, 7500000, 12500000, 2147.7273, -1138.5842, 25.2063, 271.7172, -1);
	CreateVehicleForSale(410, 413, 29, 35, 7500000, 12500000, 2161.3896, -1147.9052, 24.1477, 91.4249, -1);
	CreateVehicleForSale(400, 402, 29, 35, 7500000, 12500000, 2161.0999, -1153.4089, 23.6361, 90.4401, -1);
	CreateVehicleForSale(400, 402, 29, 35, 7500000, 12500000, 2148.9880, -1166.5461, 23.5474, 268.5250, -1);
	//los santos - close

	//Unseen Criminals parking - open
	CreateVehicleForSale(560, 563, 29, 35, 4500000, 8500000, 1364.1583, -2010.9843, 55.5357, 98.4610, FACTION_UNSEEN);
	CreateVehicleForSale(560, 563, 29, 35, 4500000, 8500000, 1354.4113, -1970.9375, 55.0355, 186.0497, FACTION_UNSEEN);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 8500000, 1360.9735, -1982.6582, 55.1311, 97.6973, FACTION_UNSEEN);
	CreateVehicleForSale(560, 563, 29, 35, 4500000, 8500000, 1334.1180, -1998.7860, 55.7561, 276.2170, FACTION_UNSEEN);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 8500000, 1338.5596, -2030.3345, 56.1962, 279.1299, FACTION_UNSEEN);
	CreateVehicleForSale(560, 563, 29, 35, 4500000, 8500000, 1355.7002, -2022.0438, 55.8289, 276.6876, FACTION_UNSEEN);
	//Unseen Criminals parking - close

	//grove parking - open
	CreateVehicleForSale(560, 563, 29, 35, 4500000, 8500000, 2446.7234, -1633.9835, 13.2876, 359.0670, FACTION_GROVE);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 7500000, 2431.2769, -1639.2097, 13.3469, 88.8931, FACTION_GROVE);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 6500000, 2439.4626, -1643.8770, 13.2666, 1.5688, FACTION_GROVE);
	//grove parking - close

	//cripz parking - open
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 7500000, 332.7053, -1215.7590, 75.9377, 306.6836, FACTION_CRIP);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 7500000, 333.6089, -1233.5009, 75.7774, 39.7690, FACTION_CRIP);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 7500000, 350.8266, -1214.0458, 76.1751, 309.7294, FACTION_CRIP);
	CreateVehicleForSale(565, 568, 29, 35, 4500000, 7500000, 346.1837, -1208.2499, 76.1743, 306.2271, FACTION_CRIP);
	//cripz parking - close

	printf("Life of San Andreas Server - System: Бяха заредени колите за продан");
}

stock CreateVehicleForSale(rndVehID1, rndVehID2, rndLevel1, rndLevel2, rndPrice1, rndPrice2, Float: X, Float: Y, Float: Z, Float: A, forFaction = -1)
{
	new currentVeh;
	new randomC1, randomC2;
	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(rndVehID1, rndVehID2), X, Y, Z, A, randomC1, randomC2, RESPAWN_VEHS_SECONDS);
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(rndPrice1, rndPrice2);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(rndLevel1, rndLevel2);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	SellCarInfo[maxcarsforbuy][scFaction] = forFaction;

	new string256[256];
	VehicleInfo[SellCarInfo[maxcarsforbuy][scVeh]][vForSaleShop] = 1;
	format(string256, 256, "{ffff00}%s\n{ffffff}Цена: {40BF00}$%s\n{ffffff}Изисквания:\n{ff0000}Ниво: %d", GetVehicleName(maxcarsforbuy), FormatNumber(SellCarInfo[maxcarsforbuy][scVehPrice]), SellCarInfo[maxcarsforbuy][scVehLevel]);
	CreateDynamic3DTextLabel(string256, 0xFFFFFFFF, 0.0, 0.0, 0.0, 12.0, INVALID_PLAYER_ID, SellCarInfo[maxcarsforbuy][scVeh], 0, 0, 0, -1, 12.0);

	maxcarsforbuy++;
}

stock ShowPlayerLevelExp(playerid)
{
	TextDrawShowForPlayer(playerid, expText[playerid]);
	TextDrawShowForPlayer(playerid, levelText[playerid]);
	UpdatePlayerLevelExp(playerid);
}

stock UpdatePlayerLevelExp(playerid)
{
	new nextLevelEXP = PlayerInfo[playerid][pLevel] + EXP_PLUS;
	new string256[256];
	format(string256, 256, "~g~~h~Level: ~w~%d", PlayerInfo[playerid][pLevel]);
	TextDrawSetString(levelText[playerid], string256);
	format(string256, 256, "~b~~h~Exp: ~r~%d~w~/~g~~h~%d", PlayerInfo[playerid][pExp], nextLevelEXP);
	TextDrawSetString(expText[playerid], string256);

	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
}

stock SaveRecord(recordID)
{
    new stringRecord[64];
    new record[180];
    format(record, 180, "/Records/%d.ini", recordID);

    //Record
    format(stringRecord, sizeof(stringRecord), "trRecord1");
    dini_IntSet(record, stringRecord, TopRecordInfo[recordID][trRecord1]);
    format(stringRecord, sizeof(stringRecord), "trRecord2");
    dini_IntSet(record, stringRecord, TopRecordInfo[recordID][trRecord2]);
    format(stringRecord, sizeof(stringRecord), "trRecord3");
    dini_IntSet(record, stringRecord, TopRecordInfo[recordID][trRecord3]);

    //dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeapon][i]);

    //Reached
    format(stringRecord, sizeof(stringRecord), "trReached1",recordID);
    dini_BoolSet(record, stringRecord, TopRecordInfo[recordID][trReached1]);
    format(stringRecord, sizeof(stringRecord), "trReached2",recordID);
    dini_BoolSet(record, stringRecord, TopRecordInfo[recordID][trReached2]);
    format(stringRecord, sizeof(stringRecord), "trReached3",recordID);
    dini_BoolSet(record, stringRecord, TopRecordInfo[recordID][trReached3]);

    //Name
    format(stringRecord, sizeof(stringRecord), "trPlayerName1");
    dini_Set(record, stringRecord, TopRecordInfo[recordID][trPlayerName1]);
    format(stringRecord, sizeof(stringRecord), "trPlayerName2");
    dini_Set(record, stringRecord, TopRecordInfo[recordID][trPlayerName2]);
    format(stringRecord, sizeof(stringRecord), "trPlayerName3");
    dini_Set(record, stringRecord, TopRecordInfo[recordID][trPlayerName3]);
}

stock LoadAllRecords()
{
    new stringRecord[64];
    for(new i=0; i<MAX_TOP_RECORDS; i++)
    {
        new record[180];
        format(record, 180, "/Records/%d.ini", i);
        if (dini_Exists(record))
        {
            //Get Record
            format(stringRecord, sizeof(stringRecord), "trRecord1");
            TopRecordInfo[i][trRecord1] = dini_Int(record, stringRecord);
            format(stringRecord, sizeof(stringRecord), "trRecord2");
            TopRecordInfo[i][trRecord2] = dini_Int(record, stringRecord);
            format(stringRecord, sizeof(stringRecord), "trRecord3");
            TopRecordInfo[i][trRecord3] = dini_Int(record, stringRecord);

            //Get Reached
            format(stringRecord, sizeof(stringRecord), "trReached1");
            TopRecordInfo[i][trReached1] = dini_Bool(record, stringRecord);
            format(stringRecord, sizeof(stringRecord), "trReached2");
            TopRecordInfo[i][trReached2] = dini_Bool(record, stringRecord);
            format(stringRecord, sizeof(stringRecord), "trReached3");
            TopRecordInfo[i][trReached3] = dini_Bool(record, stringRecord);

            //Get Name
            format(stringRecord, sizeof(stringRecord), "trPlayerName1",i);
            format(TopRecordInfo[i][trPlayerName1], 256, "%s", dini_Get(record, stringRecord));
            format(stringRecord, sizeof(stringRecord), "trPlayerName2",i);
            format(TopRecordInfo[i][trPlayerName2], 256, "%s", dini_Get(record, stringRecord));
            format(stringRecord, sizeof(stringRecord), "trPlayerName3");
            format(TopRecordInfo[i][trPlayerName3], 256, "%s", dini_Get(record, stringRecord));
        }
        else
        {
            SaveRecord(i);
        }
    }
    printf("Life of San Andreas Server - System: Всички рекорди бяха заредени.");
}

stock LoadAllHouses()
{
	for (new alh = 0; alh < maxhouses + 2; alh++)
	{
		new house[64];
		format(house, 64, "/Houses/%d.ini", alh);
		if (dini_Exists(house))
		{
			maxhouses += 1;
			HouseInfo[alh][hX] = dini_Float(house, "hX");
			HouseInfo[alh][hY] = dini_Float(house, "hY");
			HouseInfo[alh][hZ] = dini_Float(house, "hZ");
			HouseInfo[alh][hOwner] = dini_Int(house, "hOwner");
			HouseInfo[alh][hLocked] = dini_Int(house, "hLocked");
			HouseInfo[alh][hLevel] = dini_Int(house, "hLevel");
			HouseInfo[alh][hPrice] = dini_Int(house, "hPrice");
			HouseInfo[alh][hInterior] = dini_Int(house, "hInterior");
			HouseInfo[alh][hVehID] = dini_Int(house, "hVehID");
			HouseInfo[alh][hArmour] = dini_Int(house, "hArmour");
			HouseInfo[alh][hVehC1] = dini_Int(house, "hVehC1");
			HouseInfo[alh][hVehC2] = dini_Int(house, "hVehC2");
			HouseInfo[alh][hVehX] = dini_Float(house, "hVehX");
			HouseInfo[alh][hVehY] = dini_Float(house, "hVehY");
			HouseInfo[alh][hVehZ] = dini_Float(house, "hVehZ");
			HouseInfo[alh][hVehA] = dini_Float(house, "hVehA");
			format(HouseInfo[alh][hName], 256, "%s", dini_Get(house, "hName"));
			new stringSecond[256];
			for (new i; i < 10; i++)
			{
                format(stringSecond, 256, "hFurVirtualWorld[%d]", i);
                HouseInfo[alh][hFurVirtualWorld][i] = dini_Bool(house, stringSecond);
				format(stringSecond, 256, "hFurSlot[%d]", i);
				HouseInfo[alh][hFurSlot][i] = dini_Int(house, stringSecond);
				format(stringSecond, 256, "hFurID[%d]", i);
				HouseInfo[alh][hFurID][i] = dini_Int(house, stringSecond);
				format(stringSecond, 256, "hFurX[%d]", i);
				HouseInfo[alh][hFurX][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurY[%d]", i);
				HouseInfo[alh][hFurY][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurZ[%d]", i);
				HouseInfo[alh][hFurZ][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurRX[%d]", i);
				HouseInfo[alh][hFurRX][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurRY[%d]", i);
				HouseInfo[alh][hFurRY][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurRZ[%d]", i);
				HouseInfo[alh][hFurRZ][i] = dini_Float(house, stringSecond);
			}

			new houseVW = alh;
			houseVW += 50;
			for (new i; i < MAX_HOUSE_FURNITURES; i++)
			{
				if (HouseInfo[alh][hFurSlot][i] == 1)
				{
                    if(HouseInfo[alh][hFurVirtualWorld][i])
                    {
					   HouseInfo[alh][hFurObject][i] = CreateDynamicObject(HouseInfo[alh][hFurID][i], HouseInfo[alh][hFurX][i], HouseInfo[alh][hFurY][i], HouseInfo[alh][hFurZ][i],
						  HouseInfo[alh][hFurRX][i], HouseInfo[alh][hFurRY][i], HouseInfo[alh][hFurRZ][i], houseVW, -1);
                    }
                    else
                    {
                        HouseInfo[alh][hFurObject][i] = CreateDynamicObject(HouseInfo[alh][hFurID][i], HouseInfo[alh][hFurX][i], HouseInfo[alh][hFurY][i], HouseInfo[alh][hFurZ][i],
                            HouseInfo[alh][hFurRX][i], HouseInfo[alh][hFurRY][i], HouseInfo[alh][hFurRZ][i], 0, -1);    
                    }
				}
			}

			format(HouseInfo[alh][hOwnerName], 256, "%s", dini_Get(house, "hOwnerName"));
			housePickup[alh] = CreateDynamicPickup(1273, 1, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ], 0);
			AddHouseIcon(alh);
            HouseInfo[alh][hExists] = true;
			housePickupIndex[housePickup[alh]] = alh;
			isHousePickup[housePickup[alh]] = true;
			AddHouseLabel(alh);
		}
	}

	printf("Life of San Andreas Server - System: Всички къщи бяха заредени.");
}

stock DefineRadioStations()
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		if (radioveh[i] < sizeof(radioAudioStreamNames))
		{
			new maxRadios = sizeof(radioAudioStreamNames) - 1;
			radioveh[i] = randomex(0, maxRadios);
		}
	}
}

stock ChangeHours()
{
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);

	if(hours >=0 && hours <= 3)
	{
		SetWorldTime(5);
		serverTime = 5;
	}
	else if(hours >= 4 && hours <= 5)
	{
		SetWorldTime(0);
		serverTime = 0;
	}
	else if(hours >= 6 && hours <= 9)
	{
		SetWorldTime(6);
		serverTime = 6;
	}
	else if(hours >= 10 && hours <= 17)
	{
		SetWorldTime(12);
		serverTime = 12;
	}
	else if(hours >= 18)
	{
		SetWorldTime(23);
		serverTime = 23;
	}
}

stock AddBizPickups()
{
	BIZPICKUP[0] = CreatePickup(1239, 1, -22.9671, -55.6587, 1003.5469, -1);
	CreateDynamic3DTextLabel("Денонощен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, -22.9671, -55.6587, 1003.5469, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	//CreateDynamic3DTextLabel(string3DText, COLOR_CYAN, x, y, z, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, world, interior);
	
	BIZPICKUP[1] = CreatePickup(1239, 1, 496.7184, -76.0349, 998.7578, -1);
	CreateDynamic3DTextLabel("Бар\n\n{70EA16}Използвайте {FF0000}/drink {70EA16}за да направите поръчка от бара", COLOR_WHITE, 496.7184, -76.0349, 998.7578, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[2] = CreatePickup(1239, 1, -224.7806, 1403.9601, 27.7734, -1);
	CreateDynamic3DTextLabel("Бар\n\n{70EA16}Използвайте {FF0000}/drink {70EA16}за да направите поръчка от бара", COLOR_WHITE, -224.7806, 1403.9601, 27.7734, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[3] = CreatePickup(1239, 1, -30.7964, -29.0106, 1003.5573, -1);
	CreateDynamic3DTextLabel("Денонощен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, -30.7964, -29.0106, 1003.5573, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[4] = CreatePickup(1239, 1, 291.3295, -106.2229, 1001.5156, -1);
	CreateDynamic3DTextLabel("Магазин за оръжия\n\n{70EA16}Използвайте {FF0000}/buygun {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 291.3295, -106.2229, 1001.5156, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[5] = CreatePickup(1239, 1, 296.3936, -80.8117, 1001.5156, -1);
	CreateDynamic3DTextLabel("Магазин за оръжия\n\n{70EA16}Използвайте {FF0000}/buygun {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 296.3936, -80.8117, 1001.5156, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[6] = CreatePickup(1239, 1, 308.2184, -141.4642, 999.6016, -1);
	CreateDynamic3DTextLabel("Магазин за оръжия\n\n{70EA16}Използвайте {FF0000}/buygun {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 308.2184, -141.4642, 999.6016, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[7] = CreatePickup(1239, 1, -22.0741, -138.6289, 1003.5469, -1);
	CreateDynamic3DTextLabel("Денонощен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, -22.0741, -138.6289, 1003.5469, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[8] = CreatePickup(1239, 1, 203.9277, -43.2615, 1001.8047, -1);
	CreateDynamic3DTextLabel("Магазин за облекла\n\n{70EA16}Използвайте {FF0000}/buyskin {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 203.9277, -43.2615, 1001.8047, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[9] = CreatePickup(1239, 1, 207.1997, -129.1777, 1003.5078, -1);
	CreateDynamic3DTextLabel("Магазин за облекла\n\n{70EA16}Използвайте {FF0000}/buyskin {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 207.1997, -129.1777, 1003.5078, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[10] = CreatePickup(1239, 1, 377.3176, -67.4344, 1001.5078, -1);
	CreateDynamic3DTextLabel("Хранителен магазин\n\n{70EA16}Използвайте {FF0000}/buyfood {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 377.3176, -67.4344, 1001.5078, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[11] = CreatePickup(1239, 1, 369.6004, -6.0170, 1001.8589, -1);
	CreateDynamic3DTextLabel("Хранителен магазин\n\n{70EA16}Използвайте {FF0000}/buyfood {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 369.6004, -6.0170, 1001.8589, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[12] = CreatePickup(1239, 1, 450.4710, -83.6515, 999.5547, -1);
	CreateDynamic3DTextLabel("Хранителен магазин\n\n{70EA16}Използвайте {FF0000}/buyfood {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 450.4710, -83.6515, 999.5547, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[13] = CreatePickup(1239, 1, 1782.3506, 1665.1987, -12.8913, -1);
	CreateDynamic3DTextLabel("Риболовен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 1782.3506, 1665.1987, -12.8913, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[14] = CreatePickup(1239, 1, 773.6641, -72.9778, 1000.6484, -1);
	CreateDynamic3DTextLabel("Фитнес\n\n{70EA16}Използвайте {FF0000}/train {70EA16}за да научите нови бойни умения", COLOR_WHITE, 773.6641, -72.9778, 1000.6484, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[15] = CreatePickup(1239, 1, 773.0745, -39.3959, 1000.6865, -1);
	CreateDynamic3DTextLabel("Фитнес\n\n{70EA16}Използвайте {FF0000}/train {70EA16}за да научите нови бойни умения", COLOR_WHITE, 773.0745, -39.3959, 1000.6865, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
}

stock AddFoodPickups()
{
	FOODPICKUP[0] = CreatePickup(1239, 1, 2434.4692, 1005.0504, 10.8203, -1);
	FOODPICKUP[1] = CreatePickup(1239, 1, 2153.7478, 981.3260, 10.8125, -1);
	FOODPICKUP[2] = CreatePickup(1239, 1, 2034.2792, 1526.3484, 10.8203, -1);
	//goto
}

stock AddAllActors()
{
	new policeActor;
	policeActor = CreateActor(280, 1552.5909, -1678.1149, 16.1953, 91.6356);	// lspd
	ApplyActorAnimation(policeActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	policeActor = CreateActor(281, 1552.5822, -1672.9746, 16.1953, 95.0823);	// lspd
	ApplyActorAnimation(policeActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	policeActor = CreateActor(281, 1543.8276, -1631.8647, 13.4006, 91.1149);	// lspd
	ApplyActorAnimation(policeActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new policeLvpdActor;
	policeLvpdActor = CreateActor(281, 2292.8647, 2431.5969, 10.8203, 181.8041);	// lvpd
	ApplyActorAnimation(policeLvpdActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new armyActor;
	armyActor = CreateActor(287, 829.4398, -2025.7986, 12.8672, 2.4099);	// army
	ApplyActorAnimation(armyActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	armyActor = CreateActor(287, 826.1551, -2025.7532, 12.8672, 352.9865);	// army
	ApplyActorAnimation(armyActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	armyActor = CreateActor(287, 844.7677, -2025.6830, 12.8672, 349.5397);	// army
	ApplyActorAnimation(armyActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new fbiActor;
	fbiActor = CreateActor(280, 329.6326, -1512.6997, 36.0391, 231.5602);	// fbi
	ApplyActorAnimation(fbiActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new hospitalActor;
	hospitalActor = CreateActor(280, 1173.2739, -1327.2816, 15.3940, 274.9885);	// hospital
	ApplyActorAnimation(hospitalActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
}

stock GetCrewsCount()
{
	new count = 0;
	for (new i; i < MAX_CREWS; i++)
	{
		if(CrewInfo[i][cExists])
			count++;
	}
	return count;
}

stock LoadAllCrews()
{
	for (new i; i < MAX_CREWS; i++)
	{
		LoadCrew(i);
	}
	printf("Life of San Andreas Server - System: Всички Crews бяха заредени! Брой: %d",GetCrewsCount());
}

stock AddAllNPCs()
{
     ConnectNPC("[BOT]Pilot", "airplane_LSAIR");
     npcVeh[0] = CreateVehicle(577, 0.0, 0.0, 5.0, 0.0, 3, 3, 5000);
     ConnectNPC("[BOT]Rhino1", "rhino1");
     npcVeh[1] = CreateVehicle(432, 0.0, 0.0, 5.0, 0.0, 3, 3, 5000);
     ConnectNPC("[BOT]Hydra1", "hydra1");
     npcVeh[2] = CreateVehicle(520, 0.0, 0.0, 5.0, 0.0, 3, 3, 5000);
     printf("Life of San Andreas Server - System: Всички NPC-та бяха заредени!");
}

public OnGameModeInit()
{
	SetGameModeText("LoS 1.0");
	SendRconCommand("hostname [LoS] Life of San Andreas | Bulgaria");
	SendRconCommand("rcon_password BulgariaNRcon33");
	SetTimer("GeneralTimer1s", 1000, 1);
	SetTimer("GeneralTimerms", 500, 1);
	SetTimer("GeneralTimer2ms", 200, 1);
	serverWeather = 1;
	SetWeather(1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	//ConnectToDB();
	LoadTurfs();
	LoadGraffiti();
	LoadAllCrews();
	AddAllActors();
	AddAllObjects();
	AddSnowIfWinter();
	AddBizPickups();
	AddFoodPickups();
	DefineScreenTexts();
	DefineFuelStations();
	DefineRadioStations();
	SetAllVehFuel();
	LoadAllHouses();
    LoadAllRecords();
	LoadForSaleVehs();
	LoadAllBiz();
	LoadPrivateVehs();
	ChangeHours();
	LoadBarricadeItems();
	LoadBuyVehicleAttachments();
    LoadBuyFurnitures();
	for (new i; i < MAX_FACTIONS; i++)
	{
		LoadFaction(i);
	}
	//christmasTime
	AddPlayerClass(240, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(47, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(55, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(93, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);

	giftPickup = CreateDynamicPickup(19056, 1, 1480.3031, -1702.7001, 14.5226);
	bankPickupDollar = CreateDynamicPickup(1274, 1, 1376.5142,-29.1997,1000.8729, 1, 2);	//BANK
	buyBikePickup = CreateDynamicPickup(1318, 1, 703.5286, -514.7781, -5.6289, 501, 1);	//BIKE SHOP
	buyCarPickup = CreateDynamicPickup(1318, 1, 2131.8313, -1150.7656, 24.1215, 0, 0);	//CAR SHOP
	RobPickup = CreateDynamicPickup(1274, 1, 2144.2419, 1639.6534, 993.5761, -1);
	//jobs - open
	pizzaJobPickup = CreateDynamicPickup(1275, 1, 1359.4478, 251.0649, 19.5669);	//Pizza Job
	sweepJobPickup = CreateDynamicPickup(1275, 1, 216.4074, 14.7296, 2.5708);	//Sweep Job
	mechanicJobPickup = CreateDynamicPickup(1275, 1, 1905.0569,-1790.2625,13.5469);	//Mechanic Job
	busJobPickup = CreateDynamicPickup(1275, 1, -544.6848, 2598.0608, 53.5156);	//Bus Job
	deliverJobPickup = CreateDynamicPickup(1275, 1, 40.8841, -247.4925, 1.7635);	//Deliver Job
	coalmineJobPickup = CreateDynamicPickup(1275, 1, 833.0172, 863.2982, 12.6990);	//Coallmine Job
	//jobs - close

	//CreateDynamicPickup(1318, 1,255.3226,73.6972,1003.6406);//sapd Guns todo later
	//CreateDynamicPickup(1318, 1,2280.1428,2395.9788,10.8203);//LV BUS
	//CreateDynamicPickup(1318, 1,-287.8196,1519.5582,75.3594);//Bone County BUS
	//CreateDynamicPickup(1318, 1,-169.5904,1142.1956,19.7422);//Bone County BUS 2

	CreateDynamicPickup(11746, 1, 1795.6138, -1911.3533, 13.3968);	//MAIN GARAGE GETMYCAR
	CreateDynamicPickup(11746, 1, 1796.0702, -1922.7603, 13.3912);	//MAIN GARAGE destroymycar

	CreateDynamicPickup(1239, 1, 732.7747, -1476.2097, 5.4688);	//FISH
	bankPickup = CreateDynamicPickup(1274, 1, 1412.0486, -1699.9275, 13.5395);	// BANK
	CreateDynamicPickup(19132, 1, 1499.2130, -1025.9926, 601.5460, 1);	// BANK
	blackMarket = CreateDynamicPickup(1254, 1, 1857.1810, -1874.2731, 13.4829);
	bikeShopPickup = CreateDynamicPickup(19132, 1, 701.7157, -518.4803, 16.3245);
	CreateDynamicPickup(1239, 1, 3190.9307, -1757.5547, 3001.0859);	//THE NEWS /NEWS
	fineGunLicPickup = CreateDynamicPickup(1239, 1, 1560.4720, -1672.3912, 2113.0349);	//lspd FINE
	robberyStartPickup = CreateDynamicPickup(1314, 1, -127.4285, 974.5004, 19.8516);	//robbery start
	robberyStartPickup2 = CreateDynamicPickup(1314, 1, 2447.9617, -1963.0054, 13.5469);	//robbery start
	CreateDynamicPickup(1275, 1, 1349.9863, 1577.2742, 1467.6976, 1);	//lspd Duty
	CreateDynamicPickup(1275, 1, 256.7999,63.6477,1003.6406, 1);	//rcpd Duty
	CreateDynamicPickup(1275, 1, 1588.2194, -1676.2596, 2982.2800, 1);	//lvpd Duty
	CreateDynamicPickup(1275, 1, 2503.0823,2778.9441,10.8203);	//Military Aviation Duty
	CreateDynamicPickup(1275, 1, 283.4168, 1387.7717, 10.5859);	//Fuel Company Duty
	CreateDynamicPickup(1275, 1, 211.5823, 1812.2897, 21.8594);	//San Andreas Army Duty
	CreateDynamicPickup(1275, 1, 1571.7607, -1689.3435, 62.1910, 1);	//FBI Duty
	CreateDynamicPickup(1318, 1, 1578.2095, -1636.5558, 13.5550);	//lspd Arrest point
	CreateDynamicPickup(1318, 1, 2337.2117, 2459.1912, 14.9742);	//lvpd Arrest point
	minigamesArenaPickup = CreateDynamicPickup(1318, 1, MiniGamesArena, 0, 0);	//paintball
	taxiPickup = CreateDynamicPickup(19132, 1, 1796.5181, -1937.3527, 13.5469);	//taxi out

	CreateDynamicPickup(1247, 1, 1568.0807, -1672.6967, 2982.2800, 1, 6);	//lvpd
	CreateDynamicPickup(1247, 1, 246.7134,62.8534,1003.6406, 1, 6);	//rcpd
	CreateDynamicPickup(1247, 1, 1363.3411, 1567.6639, 1468.7877, 1, 6);	//lspd
	lspdPickup = CreateDynamicPickup(1247, 1, 1555.5004, -1675.5570, 16.1953, 0, 0);	//lspd
	lvpdPickup = CreateDynamicPickup(1247, 1, 2287.1235, 2432.0078, 10.8203, 0, 0);	//lvpd
	rcpdPickup = CreateDynamicPickup(1247, 1, 626.9652,-571.6403,17.9207, 0, 0);	//rcpd
	fbiPickup[0] = CreateDynamicPickup(1247, 1, 326.1825, -1513.9746, 36.0325);	//FBI
	fbiPickup[1] = CreateDynamicPickup(1247, 1, -329.7000, 1537.0417, 76.6117);	//FBI
	CreateDynamicPickup(1247, 1, 1565.4529, -1693.0446, 62.1910, 1, 5);	//FBI
	CreateDynamicPickup(1247, 1, 1565.4529, -1693.0446, 62.1910, 1, 6);	//FBI

	newsPickup[0] = CreateDynamicPickup(19132, 1, 1654.2100, -1654.7755, 22.5156, 0, 0);	//THE NEWS
	CreateDynamicPickup(19132, 1, 3190.9485, -1762.9432, 3001.0859, 0, 0);	//THE NEWS
	CreateDynamicPickup(1239, 1, 1923.3948, -1792.1030, 13.3828);
	ATMPickup[0] = CreateDynamicPickup(1274, 1, LOC_ATM_1);	//atm
	ATMPickup[1] = CreateDynamicPickup(1274, 1, LOC_ATM_2);	//atm
	ATMPickup[2] = CreateDynamicPickup(1274, 1, LOC_ATM_3);	//atm
	ATMPickup[3] = CreateDynamicPickup(1274, 1, LOC_ATM_4);	//atm
	ATMPickup[4] = CreateDynamicPickup(1274, 1, LOC_ATM_5);	//atm
	ATMPickup[5] = CreateDynamicPickup(1274, 1, LOC_ATM_6);	//atm
	ATMPickup[6] = CreateDynamicPickup(1274, 1, LOC_ATM_7);	//atm
	ATMPickup[7] = CreateDynamicPickup(1274, 1, LOC_ATM_8);	//atm
	ATMPickup[8] = CreateDynamicPickup(1274, 1, LOC_ATM_9);	//atm
	ATMPickup[9] = CreateDynamicPickup(1274, 1, LOC_ATM_10);	//atm
	ATMPickup[10] = CreateDynamicPickup(1274, 1, LOC_ATM_11);	//atm
	//gangs - open
	pressEnterOutside[0] = CreateDynamicPickup(19132, 1, 300.3634, -1154.5724, 81.3906);	//crip - out
	pressEnterInside[0] = CreateDynamicPickup(19132, 1, 140.1744, 1366.1003, 1083.8594, 2);	//crip - in
	pressEnterOutside[1] = CreateDynamicPickup(19132, 1, 2148.9360,-1484.9001,26.6240);	//ballas - out
	pressEnterInside[1] = CreateDynamicPickup(19132, 1, 318.5366, 1114.6714, 1083.8828);	//ballas - in
	pressEnterOutside[2] = CreateDynamicPickup(19132, 1, 1879.1915,2339.4619,10.9799);	//vagos - out
	pressEnterInside[2] = CreateDynamicPickup(19132, 1, 140.1744, 1366.1003, 1083.8594, 1);	//vagos - in
	pressEnterOutside[3] = CreateDynamicPickup(19132, 1, 1122.7068, -2036.9517, 69.8942);	//unseen ls - out
	pressEnterInside[3] = CreateDynamicPickup(19132, 1, 887.7363,1918.0835,-88.9744, 1);	//unseen - in
	pressEnterOutside[4] = CreateDynamicPickup(19132, 1, 2814.7825,973.3302,10.7500);	//italian mafia - out
	pressEnterInside[4] = CreateDynamicPickup(19132, 1, 447.0938, 1397.3625, 1084.3047, 1);	//italian mafia - in
	pressEnterOutside[5] = CreateDynamicPickup(19132, 1, 742.3114,-495.7193,18.0129);	//aztecas - out
	pressEnterInside[5] = CreateDynamicPickup(19132, 1, 2237.5168, -1081.1450, 1049.0234, 1);	//aztecas - in
	pressEnterOutside[6] = CreateDynamicPickup(19132, 1, 1924.3322, 959.7982, 10.8203);	//triads - out
	pressEnterInside[6] = CreateDynamicPickup(19132, 1, 2196.8513, -1204.4027, 1049.0234, 1);	//triads - in
	pressEnterOutside[7] = CreateDynamicPickup(19132, 1, 2495.3496, -1690.8401, 14.7656);	//grove - out
	pressEnterInside[7] = CreateDynamicPickup(19132, 1, 2495.9983, -1692.9227, 1014.7422, 1);	//grove - in
	pressEnterOutside[8] = CreateDynamicPickup(19132, 1, 1035.6404,1016.3115,11.0000);	//unseen lv - out
	//gangs - close
	//gangs enter - open
	Create3DTextLabel("Vinewood Cripz's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_CRIP, 300.3634, -1154.5724, 81.3906, 15, 0, 0);
	Create3DTextLabel("Rolling Heights Ballas's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_BALLAS, 2148.9360,-1484.9001,26.6240, 15, 0, 0);
	Create3DTextLabel("Los Santos Vagos's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_VAGOS, 1879.1915,2339.4619,10.9799, 15, 0, 0);
	Create3DTextLabel("Unseen Criminals' House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_UNSEEN, 1122.7068, -2036.9517, 69.8942, 15, 0, 0);
	Create3DTextLabel("Unseen Criminals' House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_UNSEEN, 1035.6404,1016.3115,11.0000, 15, 0, 0);
	Create3DTextLabel("Italian Mafia's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_ITALIAN, 2814.7825,973.3302,10.7500, 15, 0, 0);
	Create3DTextLabel("Varrios Los Aztecas's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_AZTECAS, 742.3114,-495.7193,18.0129, 15, 0, 0);
	Create3DTextLabel("Triads's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_TRIADS, 1924.3322, 959.7982, 10.8203, 15, 0, 0);
	Create3DTextLabel("Grove Street Families's House\n{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да влезеш", COLOR_FACTION_GROVE, 2495.3496, -1690.8401, 14.7656, 15, 0, 0);
	//gangs enter - close
    //fuel co - open
    Create3DTextLabel("{ff0000}За да заредиш цистерната напиши\n{FFFF00}/refillpt", 0xFFFFFFFF, 264.3938,1457.5801,10.5859, 25, 0, 0);
    //fuel co - close
	//main garage - open
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/getmycar {FF0000}за да вземеш личния си превоз", 0xFFFFFFFF, 1795.6138, -1911.3533, 13.3968, 23, 0, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/destroymycar {FF0000}за да премахнеш превоза си завинаги", 0xFFFFFFFF, 1796.0702, -1922.7603, 13.3912, 23, 0, 0);
	//main garage - close
	//jobs - open
	Create3DTextLabel("{e7905e}Pizza Job", 0xFFFFFFFF, 1359.4478, 251.0649, 19.5669, 15, 0, 0);
	Create3DTextLabel("{e7905e}Bus Job", 0xFFFFFFFF, -544.6848, 2598.0608, 53.5156, 15, 0, 0);
	Create3DTextLabel("{e7905e}Sweep Job", 0xFFFFFFFF, 216.4074, 14.7296, 2.5708, 15, 0, 0);
	Create3DTextLabel("{e7905e}Mechanic Job", 0xFFFFFFFF, 1905.0569,-1790.2625,13.5469, 15, 0, 0);
	Create3DTextLabel("{e7905e}Deliver Job", 0xFFFFFFFF, 40.8841, -247.4925, 1.7635, 15, 0, 0);
	//jobs - close
	//info - open
	Create3DTextLabel("{4E84FF}Mini-games Arena", 0xFFFFFFFF, MiniGamesArena, 17, 0, 0);
	//Create3DTextLabel("Защо да станете VIP?\n{00ff00}Ако сте VIP получавате бонуси от сървъра за по-лесно развитие.\n{ff0000}/viphelp за повече информация",COLOR_WHITE,2297.3643,2405.6240,10.8203,25,0,0);
	//Create3DTextLabel("Не знаете командите?\n{ffff00}Можете да видите всички неща в сървъра само с една команда\n{ff0000}/help - команден панел",COLOR_WHITE,1535.8749,-1684.2134,13.5469,25,0,0);
	Create3DTextLabel("За да пишете в чата, използвайте Копчето {FFFFFF}T\n{FF0000}За да видите помощното меню, използвайте {FFFFFF}/help", 0xFF0000FF, 1263.1691,-2005.7627,59.5326, 15, 0, 0);
	Create3DTextLabel("За да влезете в кола, като шофьор натиснете {FFFFFF}F или {FFFFFF}ENTER\n{FF0000}За да влезете в кола, като пътник, натиснете {FFFFFF}G", 0xFF0000FF, 1273.4897,-2048.4534,59.2869, 15, 0, 0);
	Create3DTextLabel("Препоръчително е да прегледаш командите в сървъра, чрез {FFFFFF}/help", 0xFF0000FF, 1466.2894, -1718.4205, 13.4117, 15, 0, 0);
	Create3DTextLabel("За да влезеш в бизнес или къща трябва да напишеш {FFFFFF}/enter\n{FF0000}За да излезеш от бизнес  или къща напиши {FFFFFF}/exit", 0xFF0000FF, 1352.0023, -1756.2389, 13.5078, 15, 0, 0);

	Create3DTextLabel("{FFFFFF}Сайт на сървъра:{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: didkoandreevofficial#5949", 0xFFFFFFFF, 1539.1895, -1675.9332, 13.5469, 25, 0, 0);
	Create3DTextLabel("{FFFFFF}Сайт на сървъра:{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: didkoandreevofficial#5949", 0xFFFFFFFF, 1479.8158, -1666.9128, 20.2849, 25, 0, 0);
	Create3DTextLabel("{FFFFFF}Сайт на сървъра:{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: didkoandreevofficial#5949", 0xFFFFFFFF, 1356.6085, -1747.1986, 13.5469, 25, 0, 0);
	Create3DTextLabel("{FFFFFF}Сайт на сървъра:{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: didkoandreevofficial#5949", 0xFFFFFFFF, 1146.6317, -1754.0505, 13.6106, 25, 0, 0);
	Create3DTextLabel("{FFFFFF}Сайт на сървъра:{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: didkoandreevofficial#5949", 0xFFFFFFFF, 2028.6649, 1545.4738, 10.8185, 25, 0, 0);
	Create3DTextLabel("{FFFFFF}Сайт на сървъра:{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: didkoandreevofficial#5949", 0xFFFFFFFF, 1761.9965, -1907.2566, 16.6065, 25, 0, 0);

	Create3DTextLabel("{FF0000}За да си купиш лично превозно средство, трябва първо да влезеш в него и да натиснеш {FFFFFF}'Купи'", 0xFFFFFFFF, 2155.8245, -1135.9541, 25.3614, 35, 0, 0);	//ls
	Create3DTextLabel("{00FF00}Използвай {ff0000}/neon {00ff00}за да сложиш neon на твоето лично превозно средство", 0xFFFFFFFF, 1880.8676, -1793.3455, 13.8777, 25, 0, 0);
	//faction parkings - open
	Create3DTextLabel("{33AA33}Grove's Car Shop\n{FF0000}За да си купиш лично превозно средство, трябва първо да влезеш в него и да натиснеш {FFFFFF}'Купи'", 0xFFFFFFFF, 2442.6689, -1638.8025, 13.5821, 35, 0, 0);	//grove
	Create3DTextLabel("{33AA33}Grove's Parking\n{FF0000}За да пуснеш своя превоз тук, използвай {FFFFFF}/getmycar", 0xFFFFFFFF, 2454.2627, -1639.1873, 13.5824, 35, 0, 0);	//grove
	Create3DTextLabel("{FF3737}Unseen Criminals's Car Shop\n{FF0000}За да си купиш лично превозно средство, трябва първо да влезеш в него и да натиснеш {FFFFFF}'Купи'", 0xFFFFFFFF, 1352.5125, -2026.1936, 56.4046, 35, 0, 0);	//vip
	Create3DTextLabel("{FF3737}Unseen Criminals's Parking\n{FF0000}За да пуснеш своя превоз тук, използвай {FFFFFF}/getmycar", 0xFFFFFFFF, 1347.4932, -1988.9811, 55.8832, 35, 0, 0);	//vip
	Create3DTextLabel("{000099}Cripz's Car Shop\n{FF0000}За да си купиш лично превозно средство, трябва първо да влезеш в него и да натиснеш {FFFFFF}'Купи'", 0xFFFFFFFF, 337.4588, -1214.6744, 76.4043, 35, 0, 0);	//cripz
	Create3DTextLabel("{000099}Cripz's Parking\n{FF0000}За да пуснеш своя превоз тук, използвай {FFFFFF}/getmycar", 0xFFFFFFFF, 330.8026, -1220.3998, 76.2929, 35, 0, 0);	//cripz
	//faction parkings - close
	//info - close
	Create3DTextLabel("{00ff00}За да си вземете подарък оттук натиснете {FF0000}Y", 0xFFFFFFFF, 1480.3031, -1702.7001, 14.5226, 25, 0, 0);	//gift

	Create3DTextLabel("{ebebeb}Лотария\n{00ff00}За да пробвате късмета си, натиснете Y", 0xFFFFFFFF, 1535.3966, -1712.6166, 13.5469, 25, 0, 0);	//lottery

	Create3DTextLabel("{ebebeb}Риболов\n{2C80C4}За да метнете въдицата, трябва да сте тук или в лодка\nИзползвайте /fish за да хвърлите въдицата", 0xFFFFFFFF, 2102.1777, -104.5141, 2.2685, 25, 0, 0);	//FISH

	Create3DTextLabel("{ebebeb}The News\n{00cc00}Оттук можете да предавате новините или да качите обява", 0xFFFFFFFF, 3190.9307, -1757.5547, 3001.0859, 6, 0, 0);	//THE NEWS
	Create3DTextLabel("{ebebeb}The News\n{00cc00}Оттук можете да предавате новините или да качите обява", 0xFFFFFFFF, 3190.9307, -1757.5547, 3001.0859, 6, 1, 0);	//THE NEWS
	Create3DTextLabel("{0040FF}Arrest Point\n{FFFFFF}За да арестуваш играч, напиши {ff0000}/arrest", 0xFFFFFFFF, 1578.2095, -1636.5558, 13.5550, 12, 0, 0);	//lspd
	Create3DTextLabel("{0040FF}Arrest Point\n{FFFFFF}За да арестуваш играч, напиши {ff0000}/arrest", 0xFFFFFFFF, 2337.2117, 2459.1912, 14.9742, 12, 0, 0);	//lvpd
	Create3DTextLabel("{0040FF}LVPD Duty\n{FFFFFF}Използвайте {40BF00}/policeduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1588.2194, -1676.2596, 2982.2800, 5, 1, 6);	//lvpd
	Create3DTextLabel("{0040FF}LSPD Duty\n{FFFFFF}Използвайте {40BF00}/policeduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1349.9863, 1577.2742, 1467.6976, 5, 1, 6);	//lspd
	Create3DTextLabel("{0040FF}RCPD Duty\n{FFFFFF}Използвайте {40BF00}/policeduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 256.7999,63.6477,1003.6406, 5, 1, 6);	//rcpd
	Create3DTextLabel("{AA8CFF}FBI Duty\n{FFFFFF}Използвайте {40BF00}/fbiduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1571.7607, -1689.3435, 62.1910, 5, 1, 5);	//FBI
	Create3DTextLabel("{AA8CFF}FBI Duty\n{FFFFFF}Използвайте {40BF00}/fbiduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1571.7607, -1689.3435, 62.1910, 5, 1, 6);	//FBI
	Create3DTextLabel("{A47B2B}Military Aviation Duty\n{FFFFFF}Използвайте {40BF00}/kaccduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 2503.0823,2778.9441,10.8203, 5, 0, 0);	//Military Aviation
	Create3DTextLabel("{A47B2B}San Andreas Army Duty\n{FFFFFF}Използвайте {40BF00}/armyduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 211.5823, 1812.2897, 21.8594, 5, 0, 0);	//San Andreas Army
	Create3DTextLabel("{ffff00}Taxi Co Duty\n{FFFFFF}Използвайте {40BF00}/taxiduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1843.5786, 664.0244, 29.3228, 5, 1, 1);	//taxi
	Create3DTextLabel("{8BB8F1}Fuel Co Duty\n{FFFFFF}Използвайте {40BF00}/fuelcoduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 283.4168, 1387.7717, 10.5859, 5, 0, 0);	//fuel co duty
	Create3DTextLabel("За да смените радиостанцията на колата си, натиснете {FFFFFF}Num8 или Num2 (стрелките в дясно)\n{FF0000}За да изключите съобщенията за радиото, използвайте {FFFFFF}/audiomsg", 0xFF0000FF, 1133.4510, -1702.3698, 13.7400, 25, 0, 0);	//RENT A CAR

	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 701.7798, -510.9636, -5.5826, 25, 501, 1);	//BIKE SHOP
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 1388.7638,-26.7493,1000.8729, 25, 1, 2);	//BANK
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 1565.4529, -1693.0446, 62.1910, 25, 1, 5);	//FBI HQ
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 1565.4529, -1693.0446, 62.1910, 25, 1, 6);	//FBI HQ
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 246.7134,62.8534,1003.6406, 25, 1, 6);	//rcpd
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 1568.0807, -1672.6967, 2982.2800, 25, 1, 6);	//lvpd
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 1363.3411, 1567.6639, 1468.7877, 25, 1, 6);	//lspd
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 3190.9485, -1762.9432, 3001.0859, 3, 0);	//THE NEWS
	Create3DTextLabel("{FFFFFF}Натисни {FF0000}ENTER {FFFFFF}за да излезеш", 0xFFFFFFFF, 1839.1335, 653.5633, 29.2490, 5, 1, 1);	//TAXI INTERIOR
	//budki - open
	CreateDynamicObject(1342, 2434.298828, 1003.920288, 10.780442, 0.000000, 0.000000, 89.500000);
	CreateDynamicObject(1342, 2153.808593, 982.416320, 10.828252, 0.000000, 0.000000, -90.100059);
	CreateDynamicObject(1342, 2033.182006, 1526.586547, 10.828511, 0.000000, 0.000000, 0.000000);
	//budki - close
	//201 - OLD COLOR UNSEEN CRIMINALS
	unseenCriminalsVehs[1] = AddStaticVehicleEx(579, 1140.7024, -2030.0927, 68.9443, 271.9881, 181, 181, RESPAWN_VEHS_SECONDS);	// vipcar1
	unseenCriminalsVehs[2] = AddStaticVehicleEx(411, 1255.6378, -2042.1813, 59.3249, 359.8566, 181, 181, RESPAWN_VEHS_SECONDS);	// car1
	unseenCriminalsVehs[3] = AddStaticVehicleEx(560, 1251.7574, -2042.4465, 59.4194, 0.4784, 181, 181, RESPAWN_VEHS_SECONDS);	// car2
	unseenCriminalsVehs[4] = AddStaticVehicleEx(411, 1271.4974, -2044.0261, 58.8500, 358.9579, 181, 181, RESPAWN_VEHS_SECONDS);	// car3
	unseenCriminalsVehs[5] = AddStaticVehicleEx(560, 1276.9476, -2020.6675, 58.7760, 90.2432, 181, 181, RESPAWN_VEHS_SECONDS);	// car4
	unseenCriminalsVehs[6] = AddStaticVehicleEx(560, 1276.9994, -2025.1597, 58.7716, 85.8770, 181, 181, RESPAWN_VEHS_SECONDS);	// car5
	unseenCriminalsVehs[7] = AddStaticVehicleEx(522, 1278.1010, -2062.0664, 58.6463, 359.6728, 181, 181, RESPAWN_VEHS_SECONDS);	// car6
	unseenCriminalsVehs[8] = AddStaticVehicleEx(468, 1276.6409, -2062.0776, 58.8024, 352.7481, 181, 181, RESPAWN_VEHS_SECONDS);	// car7
	unseenCriminalsVehs[9] = AddStaticVehicleEx(468, 1276.4377, -2049.3789, 58.8788, 182.2628, 181, 181, RESPAWN_VEHS_SECONDS);	// car8
	unseenCriminalsVehs[10] = AddStaticVehicleEx(522, 1277.4562, -2049.7666, 58.7532, 182.2534, 181, 181, RESPAWN_VEHS_SECONDS);	// car9
	unseenCriminalsVehs[11] = AddStaticVehicleEx(409, 1278.7852, -2033.7179, 58.8042, 358.9998, 181, 181, RESPAWN_VEHS_SECONDS);	// car10
	unseenCriminalsVehs[12] = AddStaticVehicleEx(409, 1243.1193, -2023.9547, 59.8040, 181.6419, 181, 181, RESPAWN_VEHS_SECONDS);	// car11
	unseenCriminalsVehs[13] = AddStaticVehicleEx(522, 1207.2748, -2040.2957, 68.5738, 268.0774, 181, 181, RESPAWN_VEHS_SECONDS);	// car12
	unseenCriminalsVehs[14] = AddStaticVehicleEx(522, 1207.3162, -2033.1997, 68.5826, 260.5836, 181, 181, RESPAWN_VEHS_SECONDS);	// car13
	unseenCriminalsVehs[15] = AddStaticVehicleEx(559, 1204.9845, -2036.9940, 68.6641, 269.6446, 181, 181, RESPAWN_VEHS_SECONDS);	// car14
	unseenCriminalsVehs[16] = AddStaticVehicleEx(562, 1198.2272, -2037.3168, 68.6674, 271.6273, 181, 181, RESPAWN_VEHS_SECONDS);	// car15
	unseenCriminalsVehs[18] = AddStaticVehicleEx(579, 1140.4452, -2041.7126, 68.7708, 270.5093, 181, 181, RESPAWN_VEHS_SECONDS);	// car17
	unseenCriminalsVehs[19] = AddStaticVehicleEx(562, 1138.6310, -2063.9929, 68.6323, 2.5411, 181, 181, RESPAWN_VEHS_SECONDS);	// car18
	unseenCriminalsVehs[20] = AddStaticVehicleEx(559, 1138.4088, -2010.0665, 68.5695, 181.0400, 181, 181, RESPAWN_VEHS_SECONDS);	// car19
	unseenCriminalsVehs[21] = AddStaticVehicleEx(411, 1263.9884, -2009.7825, 59.0687, 1.7343, 181, 181, RESPAWN_VEHS_SECONDS);	// car19
	unseenCriminalsVehs[22] = AddStaticVehicleEx(411, 1255.8369, -2010.4225, 59.3190, 0.0286, 181, 181, RESPAWN_VEHS_SECONDS);	// car19

	//LV Unseen Criminals
	unseenCriminalsVehs[23] = AddStaticVehicleEx(579,1001.5400,1156.4467,10.7128,178.2186,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[24] = AddStaticVehicleEx(579,1006.3364,1156.2443,10.6863,179.3593,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[25] = AddStaticVehicleEx(560,1007.7924,1072.1794,10.6111,352.6338,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[26] = AddStaticVehicleEx(560,1007.4467,1079.8263,10.6113,357.5544,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[27] = AddStaticVehicleEx(468,1030.1729,1076.1088,9.8244,296.2825,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[28] = AddStaticVehicleEx(468,1030.1069,1077.1608,9.8331,304.4337,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[29] = AddStaticVehicleEx(468,1029.9562,1074.7225,9.8230,306.4756,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[30] = AddStaticVehicleEx(409,981.1917,1137.2202,10.6203,268.2046,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[31] = AddStaticVehicleEx(409,981.5210,1133.6381,10.6203,270.9675,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[32] = AddStaticVehicleEx(409,981.6752,1141.1497,10.6203,267.1857,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[33] = AddStaticVehicleEx(560,1085.3552,1151.7148,10.6100,274.2654,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[34] = AddStaticVehicleEx(560,1092.4883,1152.8470,10.6126,268.1737,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[35] = AddStaticVehicleEx(579,1151.2556,1121.0653,10.8414,212.1386,181,181, RESPAWN_VEHS_SECONDS); // unseen veh
	unseenCriminalsVehs[36] = AddStaticVehicleEx(579,1156.1470,1113.8339,10.8318,212.3542,181,181, RESPAWN_VEHS_SECONDS); // unseen veh


	for (new i; i < 37; i++)
	{
		isUnseenCriminalsVeh[unseenCriminalsVehs[i]] = true;
	}

	ballasVehs[1]=AddStaticVehicleEx(517,2142.6514,-1413.9413,24.6928,89.5360,242,0, RESPAWN_VEHS_SECONDS);  // kola1 - ballas
	ballasVehs[2]=AddStaticVehicleEx(522,2150.4158,-1412.9873,25.4909,181.1308,242,0, RESPAWN_VEHS_SECONDS);  // motor - ballas
	ballasVehs[3]=AddStaticVehicleEx(522,2150.4785,-1416.4919,25.4929,180.3405,242,0, RESPAWN_VEHS_SECONDS);  // motor2 - ballas
	ballasVehs[4]=AddStaticVehicleEx(560,2157.7717,-1423.7246,25.2054,89.1576,242,242, RESPAWN_VEHS_SECONDS);  // sultan - ballas
	ballasVehs[5]=AddStaticVehicleEx(536,2141.6545,-1429.4076,24.3500,89.7899,242,242, RESPAWN_VEHS_SECONDS);  // kola2 - ballas
	ballasVehs[6]=AddStaticVehicleEx(566,2155.0444,-1454.5491,25.3726,90.0047,242,242, RESPAWN_VEHS_SECONDS);  // kola3 - ballas
	ballasVehs[7]=AddStaticVehicleEx(576,2162.3745,-1454.5953,25.1046,90.2217,242,242, RESPAWN_VEHS_SECONDS);  // kola4 - ballas
	ballasVehs[8]=AddStaticVehicleEx(487,2163.9646,-1465.8907,25.7057,1.0011,242,0, RESPAWN_VEHS_SECONDS);  // heli - ballas
	ballasVehs[9]=AddStaticVehicleEx(411,2130.9939,-1491.8048,23.5404,359.6788,242,242, RESPAWN_VEHS_SECONDS);  // infernus - ballas
	ballasVehs[10]=AddStaticVehicleEx(508,2121.8989,-1495.8799,24.3548,323.1362,242,242, RESPAWN_VEHS_SECONDS);  // kola za interior - ballas
	ballasVehs[11]=AddStaticVehicleEx(481,2128.7788,-1497.3928,23.4840,358.7587,242,242, RESPAWN_VEHS_SECONDS);  // kolelo - ballas
	ballasVehs[12]=AddStaticVehicleEx(481,2130.0701,-1497.3970,23.4555,1.2986,242,242, RESPAWN_VEHS_SECONDS);  // kolelo2 - ballas

	for (new i; i < 13; i++)
	{
		isBallasVeh[ballasVehs[i]] = true;
	}

	vagosVehs[0]=CreateVehicle(474,1880.3109,2286.1875,10.7425,269.7603,6,6,RESPAWN_VEHS_SECONDS);  // vagos1
	vagosVehs[1]=CreateVehicle(412,1909.2897,2289.5784,10.6562,91.3783,6,6,RESPAWN_VEHS_SECONDS);  // vagos2
	vagosVehs[2]=CreateVehicle(541,1912.0590,2302.3689,10.4453,0.6415,6,6,RESPAWN_VEHS_SECONDS);  // bulleta
	vagosVehs[3]=CreateVehicle(534,1911.9614,2309.6794,10.5437,359.1782,6,6,RESPAWN_VEHS_SECONDS);  // vagos4
	vagosVehs[4]=CreateVehicle(411,1912.0503,2318.0942,10.5474,356.3801,6,6,RESPAWN_VEHS_SECONDS);  // vagos5
	vagosVehs[5]=CreateVehicle(560,1912.1449,2325.5798,10.5248,356.6646,6,6,RESPAWN_VEHS_SECONDS);  // vagos6
	vagosVehs[6]=CreateVehicle(411,1909.1853,2348.1267,10.6149,273.3006,6,6,RESPAWN_VEHS_SECONDS);  // infernus
	vagosVehs[7]=CreateVehicle(487,1875.9656,2290.4939,16.1995,269.9442,6,0,RESPAWN_VEHS_SECONDS);  // helivagos1
	vagosVehs[8]=CreateVehicle(487,1875.6268,2339.5623,16.1990,269.4076,6,0,RESPAWN_VEHS_SECONDS);  // helivagos2
	vagosVehs[9]=CreateVehicle(506,1890.2362,2323.3767,10.5249,180.8689,6,6,RESPAWN_VEHS_SECONDS);  // vagoscar

	for (new i; i < 10; i++)
	{
		isVagosVeh[vagosVehs[i]] = true;
	}

	wcwVehs[0] = AddStaticVehicleEx(463, 668.9206, -468.6561, 15.8763, 94.5791, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[1] = AddStaticVehicleEx(463, 668.8983, -467.4272, 15.8756, 85.5821, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[2] = AddStaticVehicleEx(463, 668.5870, -457.5571, 15.8760, 90.2854, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[3] = AddStaticVehicleEx(554, 662.5587, -441.1763, 16.4194, 359.8766, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[4] = AddStaticVehicleEx(554, 667.4305, -441.0134, 16.4280, 359.8657, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw

	for (new i; i < 5; i++)
	{
		isWcwVeh[wcwVehs[i]] = true;
	}

	cripVehs[0] = AddStaticVehicleEx(411, 282.6102, -1160.0824, 80.6411, 225.3297, 53, 53, RESPAWN_VEHS_SECONDS);	// infernus - vcripz
	cripVehs[1] = AddStaticVehicleEx(411, 286.7418, -1156.0349, 80.6380, 225.1132, 53, 53, RESPAWN_VEHS_SECONDS);	// infernus2 - vcripz
	cripVehs[2] = AddStaticVehicleEx(487, 263.3456, -1171.7356, 79.6268, 278.1578, 53, 53, RESPAWN_VEHS_SECONDS);	// heli - cripz
	cripVehs[3] = AddStaticVehicleEx(560, 278.0644, -1174.9341, 80.4535, 288.3980, 53, 53, RESPAWN_VEHS_SECONDS);	// sultan - vcripz
	cripVehs[4] = AddStaticVehicleEx(560, 280.8209, -1177.5951, 80.5118, 290.0709, 53, 53, RESPAWN_VEHS_SECONDS);	// sultan2 - vcripz
	cripVehs[5] = AddStaticVehicleEx(562, 286.8073, -1183.2435, 80.5736, 290.7241, 53, 53, RESPAWN_VEHS_SECONDS);	// elegy - cripz
	cripVehs[6] = AddStaticVehicleEx(562, 283.8889, -1180.3596, 80.5570, 292.7408, 53, 53, RESPAWN_VEHS_SECONDS);	// elegy2 - cripz
	cripVehs[7] = AddStaticVehicleEx(541, 273.3555, -1159.8564, 80.5399, 224.3608, 53, 53, RESPAWN_VEHS_SECONDS);	// kola - vcripz
	cripVehs[8] = AddStaticVehicleEx(573, 288.1286, -1147.2111, 81.5615, 222.8329, 53, 53, RESPAWN_VEHS_SECONDS);	// interior - vcripz
	cripVehs[9] = AddStaticVehicleEx(522, 305.4707, -1159.1051, 80.4810, 131.6496, 53, 53, RESPAWN_VEHS_SECONDS);	// motor - vcripz
	cripVehs[10] = AddStaticVehicleEx(522, 304.4301, -1157.9576, 80.4809, 136.7975, 53, 53, RESPAWN_VEHS_SECONDS);	// motor2 - vcripz
	cripVehs[11] = AddStaticVehicleEx(579, 317.2428, -1166.5176, 80.8455, 133.5803, 53, 53, RESPAWN_VEHS_SECONDS);	// djip - vcripz

	for (new i; i < 12; i++)
	{
		isCripVeh[cripVehs[i]] = true;
	}

	italianVehs[0] = AddStaticVehicleEx(560,2811.0271,927.3677,10.4555,2.1007,0,0, RESPAWN_VEHS_SECONDS); // italian 1
	italianVehs[1] = AddStaticVehicleEx(522,2810.3843,971.8659,10.3249,172.9180,0,0, RESPAWN_VEHS_SECONDS); // italian
	italianVehs[2] = AddStaticVehicleEx(522,2811.5176,971.4970,10.3222,178.4489,0,0, RESPAWN_VEHS_SECONDS); // italian
	italianVehs[3] = AddStaticVehicleEx(560,2823.7219,939.4424,10.4541,180.2965,0,0, RESPAWN_VEHS_SECONDS); // italian
	italianVehs[4] = AddStaticVehicleEx(421,2833.4839,939.4521,10.6324,179.8643,0,0, RESPAWN_VEHS_SECONDS); // italian
	italianVehs[5] = AddStaticVehicleEx(421,2830.1929,939.0891,10.6325,179.3895,0,0, RESPAWN_VEHS_SECONDS); // italian
	italianVehs[6] = AddStaticVehicleEx(578,2855.1443,903.0364,11.2210,357.4491,0,0, RESPAWN_VEHS_SECONDS); // italian

	for (new i; i < 7; i++)
	{
		isItalianVeh[italianVehs[i]] = true;
	}
	aztecasVehs[1]=AddStaticVehicleEx(560,752.0851,-503.2887,16.9567,180.3046,2,2,RESPAWN_VEHS_SECONDS);  // sultan - aztecas
	aztecasVehs[2]=AddStaticVehicleEx(560,752.1932,-495.7025,17.0342,179.0867,2,2,RESPAWN_VEHS_SECONDS);  // sultan2 - aztecas
	aztecasVehs[3]=AddStaticVehicleEx(522,748.9619,-522.2308,15.9083,180.3538,2,2,RESPAWN_VEHS_SECONDS);  // motor - aztecas
	aztecasVehs[4]=AddStaticVehicleEx(522,747.5856,-521.9755,15.9080,180.3337,2,2,RESPAWN_VEHS_SECONDS);  // motor2 - aztecas
	aztecasVehs[5]=AddStaticVehicleEx(579,762.8350,-514.2790,16.7327,180.0451,2,2,RESPAWN_VEHS_SECONDS);  // djipka - aztecas
	aztecasVehs[6]=AddStaticVehicleEx(579,762.8936,-506.9639,17.2283,179.3087,2,2,RESPAWN_VEHS_SECONDS);  // djipka2 - aztecas
	aztecasVehs[7]=AddStaticVehicleEx(567,771.9294,-545.5295,16.6317,358.3828,2,2,RESPAWN_VEHS_SECONDS);  // kola - aztecas
	aztecasVehs[8]=AddStaticVehicleEx(411,785.6984,-502.3122,16.9807,180.6297,2,2,RESPAWN_VEHS_SECONDS);  // infernus - aztecas
	aztecasVehs[9]=AddStaticVehicleEx(411,785.8930,-510.4932,16.5555,181.4656,2,2,RESPAWN_VEHS_SECONDS);  // infernus - aztecas
	aztecasVehs[10]=AddStaticVehicleEx(487,743.9529,-541.0137,16.6115,358.6243,2,2,RESPAWN_VEHS_SECONDS);  // heli - aztecas
	aztecasVehs[11]=AddStaticVehicleEx(562,750.7774,-545.9088,16.4508,359.3824,2,2,RESPAWN_VEHS_SECONDS);  // elegy - aztecas
	aztecasVehs[12]=AddStaticVehicleEx(573,726.5473,-516.5283,16.9103,179.7132,2,2,RESPAWN_VEHS_SECONDS);  // interior - aztecas

	for (new i; i < 13; i++)
	{
		isAztecasVeh[aztecasVehs[i]] = true;
	}

	triadsVehs[0] = AddStaticVehicleEx(409, 1882.5085, 954.0179, 10.6203, 269.7534, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 1
	triadsVehs[1] = AddStaticVehicleEx(409, 1882.5139, 960.4418, 10.6203, 268.4453, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 2
	triadsVehs[2] = AddStaticVehicleEx(560, 1881.7281, 967.3627, 10.5243, 90.6629, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 3
	triadsVehs[3] = AddStaticVehicleEx(560, 1938.8333, 929.3604, 10.3766, 272.1086, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 4
	triadsVehs[4] = AddStaticVehicleEx(415, 1951.2225, 929.2953, 10.4416, 268.1323, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 5
	triadsVehs[5] = AddStaticVehicleEx(415, 1911.9263, 963.4897, 10.5916, 356.5119, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 6

	for (new i; i < 6; i++)
	{
		isTriadsVeh[triadsVehs[i]] = true;
	}

	groveVehs[0] = AddStaticVehicleEx(522, 2482.3757, -1652.5487, 13.0282, 142.6509, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[1] = AddStaticVehicleEx(566, 2498.3342, -1649.1823, 13.3081, 157.4072, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[2] = AddStaticVehicleEx(492, 2515.5366, -1665.1935, 13.5741, 91.9201, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[3] = AddStaticVehicleEx(429, 2516.7124, -1672.0027, 13.6131, 60.6237, 86, 0, RESPAWN_VEHS_SECONDS);
	groveVehs[4] = AddStaticVehicleEx(411, 2509.9509, -1686.9349, 13.2954, 50.8308, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[5] = AddStaticVehicleEx(567, 2488.0681, -1682.6639, 13.1949, 92.3377, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[6] = AddStaticVehicleEx(560, 2473.2893, -1695.6903, 13.1662, 0.0001, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[7] = AddStaticVehicleEx(560, 2473.2490, -1704.8604, 13.1925, 359.8790, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[8] = AddStaticVehicleEx(482, 2466.2520, -1688.1406, 13.6778, 267.1897, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[9] = AddStaticVehicleEx(579, 2470.4138, -1670.1687, 13.2181, 11.2582, 86, 86, RESPAWN_VEHS_SECONDS);

	for (new i; i < 10; i++)
	{
		isGroveVeh[groveVehs[i]] = true;
	}

	rentVehs[0] = AddStaticVehicleEx(402, 1755.0973, -1774.8459, 13.3670, 0.8262, 27, 27, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[1] = AddStaticVehicleEx(426, 1763.6781, -1775.1096, 13.2804, 358.4435, 2, 2, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[2] = AddStaticVehicleEx(421, 1759.6372, -1775.4369, 13.4188, 358.9511, 2, 2, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[3] = AddStaticVehicleEx(421, 1756.8501, -1755.7599, 13.4266, 359.9999, 27, 27, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[4] = AddStaticVehicleEx(426, 2016.7606, -1411.3591, 16.7357, 181.4750, 2, 2, RESPAWN_VEHS_SECONDS);	// veh rent 1
	rentVehs[5] = AddStaticVehicleEx(560, 2013.2618, -1411.5509, 16.6975, 183.3817, 32, 32, RESPAWN_VEHS_SECONDS);	// veh rent 2
	rentVehs[6] = AddStaticVehicleEx(560, 2010.3580, -1411.6415, 16.6970, 180.5936, 74, 74, RESPAWN_VEHS_SECONDS);	// veh rent 3
	rentVehs[7] = AddStaticVehicleEx(560, 1778.1798, -1891.0409, 13.0930, 89.5972, 74, 74, RESPAWN_VEHS_SECONDS);	// rent1
	rentVehs[8] = AddStaticVehicleEx(560, 1778.6654, -1895.5081, 13.0938, 90.7846, 26, 26, RESPAWN_VEHS_SECONDS);	// rent2
	rentVehs[9] = AddStaticVehicleEx(560, 2148.5098, 1408.6110, 10.5249, 0.1174, 27, 27, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[10] = AddStaticVehicleEx(560, 2142.1719, 1398.1527, 10.5179, 0.0000, 26, 26, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[11] = AddStaticVehicleEx(410, 2135.6799, 1398.3303, 10.4870, 0.0001, 26, 26, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[12] = AddStaticVehicleEx(412, 2122.7632, 1408.0493, 10.6587, 359.9999, 26, 26, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[13] = AddStaticVehicleEx(560, 2107.4343, 2479.3813, 10.5253, 359.9962, 2, 2, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[14] = AddStaticVehicleEx(560, 2102.4788, 2479.0344, 10.5252, 0.0000, 26, 26, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[15] = AddStaticVehicleEx(412, 2152.8865, 2475.6279, 10.6575, 270.7264, 25, 25, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[16] = AddStaticVehicleEx(412, 2152.3303, 2482.6260, 10.6575, 90.3772, 25, 25, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[17] = AddStaticVehicleEx(429, 2130.2063, 2469.9106, 10.5000, 360.0000, 25, 25, RESPAWN_VEHS_SECONDS);	// spawn 2 rent

	VehicleInfo[rentVehs[0]][vRentPrice] = 700;
	VehicleInfo[rentVehs[1]][vRentPrice] = 600;
	VehicleInfo[rentVehs[2]][vRentPrice] = 600;
	VehicleInfo[rentVehs[3]][vRentPrice] = 800;
	VehicleInfo[rentVehs[4]][vRentPrice] = 800;
	VehicleInfo[rentVehs[5]][vRentPrice] = 1200;
	VehicleInfo[rentVehs[6]][vRentPrice] = 2200;
	VehicleInfo[rentVehs[7]][vRentPrice] = 500;
	VehicleInfo[rentVehs[8]][vRentPrice] = 600;
	VehicleInfo[rentVehs[9]][vRentPrice] = 700;
	VehicleInfo[rentVehs[10]][vRentPrice] = 800;
	VehicleInfo[rentVehs[11]][vRentPrice] = 900;
	VehicleInfo[rentVehs[12]][vRentPrice] = 1200;
	VehicleInfo[rentVehs[13]][vRentPrice] = 1300;
	VehicleInfo[rentVehs[14]][vRentPrice] = 1100;
	VehicleInfo[rentVehs[15]][vRentPrice] = 1500;
	VehicleInfo[rentVehs[16]][vRentPrice] = 1600;
	VehicleInfo[rentVehs[17]][vRentPrice] = 1200;

	for (new i; i < MAX_RENTVEHS; i++)
	{
		VehicleInfo[rentVehs[i]][vRentable] = 1;
		VehicleInfo[rentVehs[i]][vRentedBy] = -1;
	}

	fbiVehs[0] = AddStaticVehicleEx(490, 282.4861, -1532.2808, 24.7222, 55.3871, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 1
	fbiVehs[1] = AddStaticVehicleEx(490, 285.9610, -1527.8297, 24.7214, 55.8582, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 2
	fbiVehs[2] = AddStaticVehicleEx(490, 294.1013, -1539.2716, 24.7217, 233.4837, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 3
	fbiVehs[3] = AddStaticVehicleEx(528, 294.7350, -1513.7788, 24.6389, 53.7180, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 3
	fbiVehs[4] = AddStaticVehicleEx(528, 298.1688, -1508.7887, 24.6408, 54.9414, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 5
	fbiVehs[5] = AddStaticVehicleEx(527, 300.7641, -1491.5259, 24.3092, 53.3279, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 6
	fbiVehs[6] = AddStaticVehicleEx(527, 304.1890, -1487.1415, 24.3092, 54.8809, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 7
	fbiVehs[7] = AddStaticVehicleEx(527, 307.4280, -1482.2848, 24.3092, 55.4559, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 8

	fbiVehs[8] = AddStaticVehicleEx(411, -314.9803, 1514.3760, 75.0846, 359.0541, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[9] = AddStaticVehicleEx(411, -318.1299, 1514.3147, 75.1101, 360.0000, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[10] = AddStaticVehicleEx(421, -321.0093, 1514.6639, 75.2411, 0.0039, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[11] = AddStaticVehicleEx(421, -324.1725, 1514.7667, 75.2418, 359.7255, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[12] = AddStaticVehicleEx(436, -327.4367, 1513.8722, 75.1741, 0.0000, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[13] = AddStaticVehicleEx(436, -330.2361, 1515.0977, 75.1306, 0.2344, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[14] = AddStaticVehicleEx(490, -333.1547, 1515.2537, 75.4891, 0.1562, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[15] = AddStaticVehicleEx(490, -336.7874, 1514.9791, 75.4883, 359.5294, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[16] = AddStaticVehicleEx(490, -339.6838, 1514.4314, 75.4874, 359.4469, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1

	fbiVehs[17] = AddStaticVehicleEx(560, 337.8166, -1529.9153, 33.0104, 321.8966, 0, 0, RESPAWN_VEHS_SECONDS);	// sultan fbi
	fbiVehs[18] = AddStaticVehicleEx(560, 342.5491, -1523.9473, 32.9862, 318.3999, 0, 0, RESPAWN_VEHS_SECONDS);	// sultan fbi
	fbiVehs[19] = AddStaticVehicleEx(522, 355.5958, -1542.3398, 33.0157, 19.3788, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi motor
	fbiVehs[20] = AddStaticVehicleEx(522, 354.7134, -1542.6071, 32.9518, 22.4995, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi motor
	fbiVehs[21] = AddStaticVehicleEx(522, 353.8041, -1543.0680, 32.8971, 22.5546, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi motor

	for (new i; i < 22; i++)
	{
		isFbiVeh[fbiVehs[i]] = true;
	}

	newsVehs[0] = AddStaticVehicleEx(582, 1655.1990, -1718.6079, 20.5390, 359.3306, 1, 142, RESPAWN_VEHS_SECONDS);	// news
	newsVehs[1] = AddStaticVehicleEx(582, 1662.8997, -1718.9016, 20.5414, 359.3341, 1, 142, RESPAWN_VEHS_SECONDS);	// news
	newsVehs[2] = AddStaticVehicleEx(487, 1668.7084, -1700.9755, 20.6612, 271.4148, 1, 142, RESPAWN_VEHS_SECONDS);	// news
	for (new i; i < 3; i++)
	{
		isNewsVeh[newsVehs[i]] = true;
	}

	lspdVehs[0] = AddStaticVehicleEx(497, 1550.9646, -1643.7083, 28.5792, 89.3442, 0, 1, RESPAWN_VEHS_SECONDS);	// heli1
	isLspdDutyVeh[lspdVehs[0]] = true;
	lspdVehs[1] = AddStaticVehicleEx(497, 1553.4291, -1707.0154, 28.5715, 88.2664, 0, 1, RESPAWN_VEHS_SECONDS);	// heli2
	isLspdDutyVeh[lspdVehs[1]] = true;
	lspdVehs[2] = AddStaticVehicleEx(560, 1534.6431, -1655.0360, 13.1891, 0.5602, 1, 1, RESPAWN_VEHS_SECONDS);	// lspd-car1
	lspdVehs[3] = AddStaticVehicleEx(560, 1534.8180, -1688.5358, 13.1670, 355.5221, 1, 1, RESPAWN_VEHS_SECONDS);	// lspd-car2
	lspdVehs[4] = AddStaticVehicleEx(599, 1602.2394, -1683.2700, 6.0828, 90.6304, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-djip1
	isLspdDutyVeh[lspdVehs[4]] = true;
	lspdVehs[5] = AddStaticVehicleEx(599, 1601.5393, -1704.6410, 6.0790, 268.9965, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-djip2
	isLspdDutyVeh[lspdVehs[5]] = true;
	lspdVehs[6] = AddStaticVehicleEx(599, 1583.3994, -1709.8268, 6.0819, 180.3757, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-djip3
	isLspdDutyVeh[lspdVehs[6]] = true;
	lspdVehs[7] = AddStaticVehicleEx(601, 1563.5790, -1710.0881, 5.6493, 179.3469, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-voda
	isLspdDutyVeh[lspdVehs[7]] = true;
	lspdVehs[8] = AddStaticVehicleEx(601, 1530.9926, -1684.1453, 5.6534, 90.2107, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-voda2
	isLspdDutyVeh[lspdVehs[8]] = true;
	lspdVehs[9] = AddStaticVehicleEx(528, 1585.6462, -1671.5748, 5.9393, 92.7203, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-kola
	isLspdDutyVeh[lspdVehs[9]] = true;
	lspdVehs[10] = AddStaticVehicleEx(523, 1542.2328, -1613.0499, 12.9546, 268.1767, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-motor1
	isLspdDutyVeh[lspdVehs[10]] = true;
	lspdVehs[11] = AddStaticVehicleEx(523, 1542.5605, -1611.5183, 12.9545, 265.1640, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-motor2
	isLspdDutyVeh[lspdVehs[11]] = true;
	lspdVehs[12] = AddStaticVehicleEx(523, 1542.3011, -1614.3456, 12.9522, 270.9788, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-motor3
	isLspdDutyVeh[lspdVehs[12]] = true;
	lspdVehs[13] = AddStaticVehicleEx(430, 2135.5732, -125.9760, -0.2632, 138.3780, 0, 1, RESPAWN_VEHS_SECONDS);	// police boat
	isLspdDutyVeh[lspdVehs[13]] = true;
	lspdVehs[14] = AddStaticVehicleEx(430, 2139.5027, -130.1309, -0.2883, 143.6408, 0, 1, RESPAWN_VEHS_SECONDS);	// police boat
	isLspdDutyVeh[lspdVehs[14]] = true;
	lspdVehs[15] = AddStaticVehicleEx(522, 1524.4365, -1670.1814, 12.9457, 321.2372, 0, 0, RESPAWN_VEHS_SECONDS);	// motor police
	lspdVehs[16] = AddStaticVehicleEx(522, 1523.8256, -1668.8770, 12.9633, 308.8820, 0, 0, RESPAWN_VEHS_SECONDS);	// motor police
	lspdVehs[17] = AddStaticVehicleEx(522, 1523.8544, -1667.4537, 12.9533, 313.0348, 0, 0, RESPAWN_VEHS_SECONDS);	// motor police

	for (new i; i < 18; i++)
	{
		isLspdVeh[lspdVehs[i]] = true;
	}
	
	//RCPD - open
	rcpdVehs[0] = AddStaticVehicleEx(599,621.8514,-606.1102,17.3405,273.8040,0,1, RESPAWN_VEHS_SECONDS); // rc police
	rcpdVehs[1] = AddStaticVehicleEx(599,622.2932,-610.6746,17.3142,273.2512,0,1, RESPAWN_VEHS_SECONDS); // rc police
	rcpdVehs[2] = AddStaticVehicleEx(586,631.8404,-567.1715,15.8559,291.6195,0,1, RESPAWN_VEHS_SECONDS); // rc police
	rcpdVehs[3] = AddStaticVehicleEx(586,631.8149,-568.5344,15.8561,285.6436,0,1, RESPAWN_VEHS_SECONDS); // rc police
	rcpdVehs[4] = AddStaticVehicleEx(596,637.0610,-578.5439,15.9850,0.3577,0,1, RESPAWN_VEHS_SECONDS); // rc police
	rcpdVehs[5] = AddStaticVehicleEx(596,611.7150,-590.7054,16.9513,90.1828,0,1, RESPAWN_VEHS_SECONDS); // rc police
	rcpdVehs[6] = AddStaticVehicleEx(596,611.8957,-587.8396,16.9471,88.6614,0,1, RESPAWN_VEHS_SECONDS); // rc police
	
	for (new i; i < 7; i++)
	{
		isRcpdVeh[rcpdVehs[i]] = true;
	}
	//RCPD - close

	//LVPD - open
	lvpdVehs[0] = AddStaticVehicleEx(598, 2251.6960, 2461.1604, 10.5647, 0.7289, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar1
	isLvpdVeh[lvpdVehs[0]] = true;
	lvpdVehs[1] = AddStaticVehicleEx(598, 2281.7688, 2477.1084, 10.5665, 359.6116, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar2
	isLvpdVeh[lvpdVehs[1]] = true;
	lvpdVehs[2] = AddStaticVehicleEx(599, 2278.2905, 2443.0581, 11.0037, 359.6354, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar3
	isLvpdVeh[lvpdVehs[2]] = true;
	lvpdVehs[3] = AddStaticVehicleEx(599, 2269.5115, 2442.8984, 11.0052, 0.0001, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar4
	isLvpdVeh[lvpdVehs[3]] = true;
	lvpdVehs[4] = AddStaticVehicleEx(427, 2313.4092, 2490.0430, 3.4570, 89.8919, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar5
	isLvpdVeh[lvpdVehs[4]] = true;
	lvpdVehs[5] = AddStaticVehicleEx(427, 2300.4929, 2456.4758, 3.4689, 270.9489, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar6
	isLvpdVeh[lvpdVehs[5]] = true;
	lvpdVehs[6] = AddStaticVehicleEx(601, 2315.9565, 2470.5745, 3.0322, 89.3433, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar7
	isLvpdVeh[lvpdVehs[6]] = true;
	lvpdVehs[7] = AddStaticVehicleEx(598, 2241.8032, 2437.7478, 3.0233, 270.0572, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar8
	isLvpdVeh[lvpdVehs[7]] = true;
	lvpdVehs[8] = AddStaticVehicleEx(523, 2277.7908, 2476.9065, 10.3955, 3.4096, 0, 1, RESPAWN_VEHS_SECONDS);	// bike1
	isLvpdVeh[lvpdVehs[8]] = true;
	lvpdVehs[9] = AddStaticVehicleEx(523, 2251.6497, 2441.2209, 10.3816, 181.8576, 0, 1, RESPAWN_VEHS_SECONDS);	// bike2
	isLvpdVeh[lvpdVehs[9]] = true;
	lvpdVehs[10] = AddStaticVehicleEx(497, 2312.0928, 2452.2563, 10.9972, 179.6904, 0, 1, RESPAWN_VEHS_SECONDS);	// hili
	isLvpdVeh[lvpdVehs[10]] = true;
	lvpdVehs[11] = AddStaticVehicleEx(411, 2273.7292, 2418.5339, 10.4708, 270.7391, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[12] = AddStaticVehicleEx(411, 2279.8196, 2418.2539, 10.4822, 271.2716, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[13] = AddStaticVehicleEx(522, 2297.9795, 2423.6655, 10.3938, 152.9445, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[14] = AddStaticVehicleEx(522, 2299.0229, 2423.6201, 10.3944, 156.3204, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[15] = AddStaticVehicleEx(522, 2300.0513, 2423.7378, 10.3822, 161.7260, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil

	for (new i; i < 16; i++)
	{
		isLvpdVeh[lvpdVehs[i]] = true;
	}

	//LVPD - close

	KACCVehs[0] = AddStaticVehicle(433,2506.0310,2739.8374,11.2495,270.9817,0,0); // kacc
	KACCVehs[1] = AddStaticVehicle(433,2506.5784,2748.6868,11.2570,268.6532,0,0); // kacc
	KACCVehs[2] = AddStaticVehicle(490,2524.6252,2770.0105,10.9482,179.1695,61,61); // kacc
	KACCVehs[3] = AddStaticVehicle(490,2541.6067,2790.3115,10.9469,0.5809,61,61); // kacc
	KACCVehs[4] = AddStaticVehicle(498,2533.0703,2770.4973,10.8917,356.8450,61,61); // kacc
	KACCVehs[5] = AddStaticVehicle(560,2554.1265,2790.7566,10.5249,358.7028,61,61); // kacc
	KACCVehs[6] = AddStaticVehicle(560,2558.0757,2790.7825,10.5255,0.0000,61,61); // kacc
	KACCVehs[7] = AddStaticVehicle(578,2561.6926,2771.7998,11.4462,1.0725,61,61); // kacc
	KACCVehs[8] = AddStaticVehicle(578,2553.8821,2770.9343,11.4457,359.8164,61,61); // kacc
	KACCVehs[9] = AddStaticVehicle(518,2520.9302,2747.9941,10.4913,0.6626,61,61); // kacc
	KACCVehs[10] = AddStaticVehicle(518,2533.0276,2728.3838,10.4913,1.0649,61,61); // kacc
	KACCVehs[11] = AddStaticVehicle(455,2528.0276,2729.1797,11.2534,358.1896,61,61); // kacc
	KACCVehs[12] = AddStaticVehicle(455,2506.8003,2715.3826,11.2570,270.2650,61,61); // kacc
	KACCVehs[13] = AddStaticVehicle(470,2540.4497,2718.7908,10.8118,0.4633,61,61); // kacc
	KACCVehs[14] = AddStaticVehicle(470,2532.0525,2718.7009,10.8090,0.0000,61,61); // kacc
	KACCVehs[15] = AddStaticVehicle(470,2523.7053,2718.8301,10.8084,359.9999,61,61); // kacc

	for (new i = 1; i < 16; i++)
	{
		isKACCVeh[KACCVehs[i]] = true;
	}

	//San Andreas Army Vehs - open
	armyVehs[1] = AddStaticVehicleEx(470, 174.6902, 1823.6055, 17.6359, 179.3837, 0, 0, RESPAWN_VEHS_SECONDS);	// df1
	armyVehs[2] = AddStaticVehicleEx(470, 184.7799, 1823.7397, 17.6334, 182.9867, 0, 0, RESPAWN_VEHS_SECONDS);	// df2
	armyVehs[3] = AddStaticVehicleEx(470, 193.6554, 1823.9792, 17.6331, 179.1090, 0, 0, RESPAWN_VEHS_SECONDS);	// df3
	armyVehs[4] = AddStaticVehicleEx(470, 202.2596, 1823.7877, 17.6307, 182.0231, 0, 0, RESPAWN_VEHS_SECONDS);	// df4
	armyVehs[5] = AddStaticVehicleEx(470, 217.1758, 1823.3910, 17.6391, 180.2234, 0, 0, RESPAWN_VEHS_SECONDS);	// df5
	armyVehs[6] = AddStaticVehicleEx(470, 225.8352, 1823.6820, 17.6350, 176.7340, 0, 0, RESPAWN_VEHS_SECONDS);	// df6
	armyVehs[7] = AddStaticVehicleEx(470, 234.9217, 1823.3407, 17.6447, 175.0246, 0, 0, RESPAWN_VEHS_SECONDS);	// df7
	armyVehs[8] = AddStaticVehicleEx(470, 243.6241, 1823.6116, 17.6327, 178.1475, 0, 0, RESPAWN_VEHS_SECONDS);	// df8
	armyVehs[9] = AddStaticVehicleEx(548, 332.0512, 1970.0282, 19.2044, 107.2690, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	armyVehs[10] = AddStaticVehicleEx(548, 341.7886, 1952.6494, 19.1965, 121.6352, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	armyVehs[11] = AddStaticVehicleEx(548, 360.6813, 1978.6136, 19.2036, 105.4584, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	armyVehs[12] = AddStaticVehicleEx(548, 363.7833, 1960.3016, 19.3252, 135.2507, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	armyVehs[13] = AddStaticVehicleEx(470, 220.4568, 1920.5354, 17.6340, 359.9070, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola
	armyVehs[14] = AddStaticVehicleEx(470, 211.7383, 1919.9647, 17.6315, 359.4653, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola
	armyVehs[15] = AddStaticVehicleEx(470, 193.3184, 1919.8345, 17.6346, 358.2539, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola
	armyVehs[16] = AddStaticVehicleEx(470, 202.4863, 1920.1973, 17.6314, 0.4122, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola

	armyVehs[17] = AddStaticVehicleEx(425, 371.5724, 1911.5908, 18.2128, 102.5378, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[17]] = true;	// heli1 SF
	armyVehs[18] = AddStaticVehicleEx(425, 372.6227, 1894.8573, 18.2465, 104.2150, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[18]] = true;	// heli2 SF
	armyVehs[19] = AddStaticVehicleEx(425, 348.9114, 1906.9314, 18.2159, 110.9549, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[19]] = true;	// heli3 SF
	armyVehs[20] = AddStaticVehicleEx(425, 352.7063, 1886.8627, 18.2301, 109.0154, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[20]] = true;	// heli4 SF
	armyVehs[21] = AddStaticVehicleEx(432, 275.6758, 1949.8693, 17.6481, 87.6926, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[21]] = true;	// tank1
	armyVehs[22] = AddStaticVehicleEx(432, 275.7441, 1958.3391, 17.6481, 88.2671, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[22]] = true;	// tank2
	armyVehs[23] = AddStaticVehicleEx(432, 272.9016, 1994.4033, 17.6480, 88.5286, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[23]] = true;	// tank3
	armyVehs[24] = AddStaticVehicleEx(432, 273.1917, 1986.5502, 17.6480, 86.6627, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[24]] = true;	// tank4
	armyVehs[25] = AddStaticVehicleEx(432, 272.6226, 2027.1511, 17.6481, 91.4752, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[25]] = true;	// tank5
	armyVehs[26] = AddStaticVehicleEx(432, 272.8747, 2018.5863, 17.6480, 85.8870, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[26]] = true;	// tank6
	armyVehs[27] = AddStaticVehicleEx(520, 317.4840, 2038.0183, 18.5716, 185.2749, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[27]] = true;	// samolet 1
	armyVehs[28] = AddStaticVehicleEx(520, 304.3071, 2040.2072, 18.5722, 183.2220, 0, 0, RESPAWN_VEHS_SECONDS);
	isArmySpecialVeh[armyVehs[28]] = true;	// samolet 2
	//San Andreas Army Vehs - close

	for (new i = 1; i < 29; i++)
	{
		isArmyVeh[armyVehs[i]] = true;
	}

	//Taxi vehs
	taxiVehs[0] = AddStaticVehicleEx(438, 1778.5715, -1904.5757, 13.3909, 88.6945, 6, 1, RESPAWN_VEHS_SECONDS);	// taxi 1
	taxiVehs[1] = AddStaticVehicleEx(438, 1778.2467, -1926.3647, 13.3909, 90.0150, 6, 1, RESPAWN_VEHS_SECONDS);	// taxi 2
	taxiVehs[2] = AddStaticVehicleEx(438, 1778.2336, -1930.5292, 13.3907, 89.5323, 6, 1, RESPAWN_VEHS_SECONDS);	// taxi 3

	for (new i; i < 3; i++)
	{
		isTaxiVeh[taxiVehs[i]] = true;
	}

	//Pizza vehs
	pizzaRcVehs[0] = AddStaticVehicleEx(448, 1354.4657, 238.2722, 19.1671, 65.7184, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh1
	pizzaRcVehs[1] = AddStaticVehicleEx(448, 1355.2198, 240.0866, 19.1668, 64.9130, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh2
	pizzaRcVehs[2] = AddStaticVehicleEx(448, 1355.9218, 241.6502, 19.1675, 66.0910, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh3
	pizzaRcVehs[3] = AddStaticVehicleEx(448, 1362.2090, 257.1578, 19.1659, 66.2668, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh4
	pizzaRcVehs[4] = AddStaticVehicleEx(448, 1362.9819, 258.7182, 19.1661, 65.0909, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh5
	pizzaRcVehs[5] = AddStaticVehicleEx(448, 1363.7780, 260.4910, 19.1675, 67.7035, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh6

	for (new i; i < 6; i++)
	{
		isPizzaVeh[pizzaRcVehs[i]] = true;
	}

	//Coalmine vehs
	coalmineVehs[0] = AddStaticVehicleEx(406, 858.2269, 879.6721, 14.7627, 201.0449, 1, 1, RESPAWN_VEHS_SECONDS);	//
	coalmineVehs[1] = AddStaticVehicleEx(406, 850.8806, 876.3572, 14.9247, 202.1210, 1, 1, RESPAWN_VEHS_SECONDS);	//
	coalmineVehs[2] = AddStaticVehicleEx(406, 843.9622, 873.7372, 14.7720, 202.0721, 1, 1, RESPAWN_VEHS_SECONDS);	//
	coalmineVehs[3] = AddStaticVehicleEx(406, 837.6867, 870.4841, 14.7916, 201.2635, 1, 1, RESPAWN_VEHS_SECONDS);	//
	for (new i; i < 4; i++)
	{
		isCoalmineVeh[coalmineVehs[i]] = true;
	}

	//Deliver vehs
	deliverVehs[0] = AddStaticVehicleEx(609, 51.5395, -290.2064, 1.7787, 358.7311, 86, 86, RESPAWN_VEHS_SECONDS);	// deliver 1
	deliverVehs[1] = AddStaticVehicleEx(609, 40.3445, -289.7541, 2.0665, 1.9102, 86, 86, RESPAWN_VEHS_SECONDS);	// deliver 2
	for (new i; i < 2; i++)
	{
		isDeliverVeh[deliverVehs[i]] = true;
	}

	//Sweep vehs
	sweepVehs[0] = AddStaticVehicleEx(574, 217.9324, -1.6491, 2.2951, 270.5554, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar
	sweepVehs[1] = AddStaticVehicleEx(574, 217.8936, 0.4934, 2.2960, 271.0149, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar
	sweepVehs[2] = AddStaticVehicleEx(574, 217.5836, 6.5614, 2.2960, 269.7299, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar
	sweepVehs[3] = AddStaticVehicleEx(574, 217.6197, 9.5346, 2.2960, 269.5610, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar

	for (new i; i < 4; i++)
	{
		isSweepVeh[sweepVehs[i]] = true;
	}

	mechanicVehs[0] = AddStaticVehicle(525,1847.6825,-1766.1328,13.4345,359.6136,3,5); // 1
    mechanicVehs[1] = AddStaticVehicle(525,1857.7076,-1766.2072,13.4413,359.8357,1,3); // 2

	for (new i; i < 2; i++)
	{
		isMechanicVeh[mechanicVehs[i]] = true;
	}

	busVehs[0] = AddStaticVehicleEx(431, -535.7722, 2577.4409, 53.5108, 89.0092, 1, 4, RESPAWN_VEHS_SECONDS);	// bus 1
	busVehs[1] = AddStaticVehicleEx(431, -535.6921, 2565.8389, 53.5200, 88.7775, 1, 23, RESPAWN_VEHS_SECONDS);	// bus 2
	busVehs[2] = AddStaticVehicleEx(431, -535.6921, 2549.1191, 53.5124, 90.3969, 1, 43, RESPAWN_VEHS_SECONDS);	// bus 3
	busVehs[3] = AddStaticVehicleEx(431, -513.6310, 2562.9104, 53.5181, 270.6521, 1, 102, RESPAWN_VEHS_SECONDS);	// bus 4
	busVehs[4] = AddStaticVehicleEx(431, -512.0355, 2618.7168, 53.5101, 268.3646, 1, 102, RESPAWN_VEHS_SECONDS);	// bus 5

	for (new i; i < 5; i++)
	{
		isBusVeh[busVehs[i]] = true;
	}

	fuelremarke[0] = AddStaticVehicleEx(584, 271.4840, 1341.2374, 11.7400, 0.5160, 0, 0, RESPAWN_VEHS_SECONDS);	// remarke1
	fuelremarke[1] = AddStaticVehicleEx(584, 263.8116, 1340.9697, 11.7545, 0.3961, 0, 0, RESPAWN_VEHS_SECONDS);	// remarke2
	fuelremarke[2] = AddStaticVehicleEx(584, 280.3829, 1341.1115, 11.7410, 1.0650, 0, 0, RESPAWN_VEHS_SECONDS);	// remarke3
	fueltruck[0] = AddStaticVehicleEx(403, 284.3264, 1360.4240, 11.1927, 88.2289, 0, 0, RESPAWN_VEHS_SECONDS);	// veh1
	fueltruck[1] = AddStaticVehicleEx(403, 284.4374, 1371.9625, 11.1927, 90.2667, 8, 8, RESPAWN_VEHS_SECONDS);	// veh2
	fueltruck[2] = AddStaticVehicleEx(403, 284.4071, 1365.9193, 11.1926, 89.6312, 9, 9, RESPAWN_VEHS_SECONDS);	// veh3

	for (new i; i < 3; i++)
	{
		isFuelComapnyVeh[fueltruck[i]] = true;
		isFuelComapnyVeh[fuelremarke[i]] = true;
	}

	boatFish[0] = AddStaticVehicleEx(453, 2107.6313, -108.0593, -0.3556, 121.4741, 1, 1, RESPAWN_VEHS_SECONDS);	// lodka
	boatFish[1] = AddStaticVehicleEx(453, 2101.4890, -98.5692, -0.3568, 123.8792, 1, 1, RESPAWN_VEHS_SECONDS);	// lodka2

	new Text3D: boatText[2];
	for (new i; i < 2; i++)
	{
		boatText[i] = Create3DTextLabel("Можете да ловувате риба в тази лодка", COLOR_WHITE, 0.0, 0.0, 0.0, 15.0, 0, 1);
		Attach3DTextLabelToVehicle(boatText[i], boatFish[i], 0.0, 0.0, 0.0);
	}

	//civil vehs - open
	//lv airport planes - open
	AddStaticVehicleEx(519,1590.4708,1469.6437,11.7522,64.5919,0,1, RESPAWN_VEHS_SECONDS); // lv
	AddStaticVehicleEx(519,1588.4054,1425.0663,11.7571,67.8425,0,1, RESPAWN_VEHS_SECONDS); // lv
	//lv airport planes - close
	//spawn
	//first mission airport - open
	AddStaticVehicleEx(560,1687.2550,1432.4279,10.4735,277.0021,3,3, RESPAWN_VEHS_SECONDS); // civil lv
	AddStaticVehicleEx(560,1687.9304,1435.6210,10.4736,271.7766,5,5, RESPAWN_VEHS_SECONDS); // civil lv
	AddStaticVehicleEx(421,1686.4133,1463.4722,10.6512,265.9869,79,79, RESPAWN_VEHS_SECONDS); // civil lv
	AddStaticVehicleEx(421,1731.8027,1458.7621,10.6241,89.3594,79,79, RESPAWN_VEHS_SECONDS); // civil lv
	//first mission airport - close
	//telnet spawns - open
	AddStaticVehicleEx(418, 2199.6470, 1294.1780, 10.9136, 267.8630, 7, 7, RESPAWN_VEHS_SECONDS);	// civil
	AddStaticVehicleEx(429, 2191.9563, 1266.2900, 10.4230, 358.1132, 6, 6, RESPAWN_VEHS_SECONDS);	// civil
	//telnet spawns - close
	//spawn ls 1 - open
	AddStaticVehicleEx(560, 1135.2384, -1699.2339, 13.4911, 357.1815, 0, 0, RESPAWN_VEHS_SECONDS);	// sultan civil
	AddStaticVehicleEx(533, 1136.7393, -1687.6133, 13.5422, 270.0301, 23, 23, RESPAWN_VEHS_SECONDS);	// civil
	//spawn ls 1 - close
	//spawn ls 2 - open
	AddStaticVehicleEx(560, 1778.4838, -1921.5607, 13.0929, 91.6168, 26, 26, RESPAWN_VEHS_SECONDS);	// civil
	AddStaticVehicleEx(562, 1778.6759, -1912.5369, 13.0471, 272.4023, 28, 28, RESPAWN_VEHS_SECONDS);	// civil
	AddStaticVehicleEx(401, 324.4154, -1808.9545, 4.2677, 359.1248, 3, 3, RESPAWN_VEHS_SECONDS);	// veh
	AddStaticVehicleEx(401, 334.4237, -1789.6183, 4.6691, 359.8644, 5, 5, RESPAWN_VEHS_SECONDS);	// veh
	AddStaticVehicleEx(401, 327.8274, -1789.7367, 4.6092, 359.3019, 122, 122, RESPAWN_VEHS_SECONDS);	// veh
	AddStaticVehicleEx(436, 321.1252, -1789.5436, 4.4874, 358.5345, 122, 122, RESPAWN_VEHS_SECONDS);	// veh
	//spawn ls 2 - close
	//news - open
	AddStaticVehicleEx(436, 1666.1871, -1717.5608, 15.3786, 2.8615, 122, 122, RESPAWN_VEHS_SECONDS);	// news
	AddStaticVehicleEx(436, 1661.7482, -1717.6685, 15.3766, 359.2407, 2, 2, RESPAWN_VEHS_SECONDS);	// news
	AddStaticVehicleEx(436, 1667.8354, -1693.5791, 15.3767, 0.8925, 1, 1, RESPAWN_VEHS_SECONDS);	// news
	//news - close
	//near dmv - open
	AddStaticVehicleEx(436, 1062.7429, -1769.6036, 13.1314, 90.7284, 122, 122, RESPAWN_VEHS_SECONDS);	// new kola
	AddStaticVehicleEx(436, 1062.7717, -1766.6177, 13.1484, 89.9315, 12, 12, RESPAWN_VEHS_SECONDS);	// new kola
	AddStaticVehicleEx(401, 1078.5596, -1754.8850, 13.1732, 269.6415, 1, 1, RESPAWN_VEHS_SECONDS);	// new kola
	AddStaticVehicleEx(401, 1062.3951, -1746.0513, 13.2361, 269.7840, 2, 2, RESPAWN_VEHS_SECONDS);	// new kola
	//near dmv - close
	//taxi - open
	AddStaticVehicleEx(538, 1767.7855, -1953.7959, 14.8756, 269.9391, 1, 1, RESPAWN_VEHS_SECONDS);	// train
	//taxi - close
	//hall ls - open
	AddStaticVehicleEx(401, 1471.7997, -1721.1718, 13.1911, 357.8400, 3, 3, RESPAWN_VEHS_SECONDS);	// rent1-NEW
	AddStaticVehicleEx(410, 1468.1445, -1720.8793, 13.0668, 359.6268, 85, 85, RESPAWN_VEHS_SECONDS);	// rent2
	AddStaticVehicleEx(421, 1464.1719, -1720.7644, 13.2942, 1.2310, 2, 2, RESPAWN_VEHS_SECONDS);	// rent3
	AddStaticVehicleEx(426, 1459.9519, -1720.5712, 13.1549, 359.0347, 26, 26, RESPAWN_VEHS_SECONDS);	// rent4
	AddStaticVehicleEx(436, 1441.2557, -1713.4465, 13.1630, 270.5883, 26, 26, RESPAWN_VEHS_SECONDS);	// rent5
	//hall ls - close
	//pizza - open
	AddStaticVehicleEx(401, 1381.5486, 268.2083, 19.3463, 335.2867, 27, 27, RESPAWN_VEHS_SECONDS);	// pizza1
	AddStaticVehicleEx(401, 1386.2289, 266.1105, 19.3465, 335.6227, 27, 27, RESPAWN_VEHS_SECONDS);	// pizza2
	//pizza - close
	//civil vehs - close

	ToggleAllVehiclesEngineOFF();
	RespawnAllVehs();
    AddAllNPCs();
	return 1;
}

//UP WARNINGS

stock VehicleWithPlayer(vehicleid)
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (GetPlayerVehicleID(i) == vehicleid)
			{
				return true;
			}
		}
	}

	return false;
}

stock IsPlayerDriver(playerid)
{
	if(GetPlayerVehicleSeat(playerid) == 0)
		return true;
	return false;
}

stock IsDriverInVehicle(vehicleid)
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == 0)
			{
				return true;
			}
		}
	}

	return false;
}

stock RespawnAllVehs()
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		if (!IsDriverInVehicle(i))
		{
			SetVehicleToRespawn(i);
		}
	}
}

stock DefineFuelStations()
{
	fuelStationText[0] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 1004.0327, -937.5370, 42.3281, 40, 0, 0);
	fuelStationText[1] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 1942.3719, -1772.8666, 13.6406, 40, 0, 0);
	fuelStationText[2] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1606.7223, -2713.3562, 48.5335, 40, 0, 0);
	fuelStationText[3] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -2026.7813, 156.5509, 29.0391, 40, 0, 0);
	fuelStationText[4] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -2243.8149, -2559.8899, 31.9219, 40, 0, 0);
	fuelStationText[5] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1676.2601, 413.5443, 7.1797, 40, 0, 0);
	fuelStationText[6] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2201.8296, 2475.1350, 10.8203, 40, 0, 0);
	fuelStationText[7] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 615.3391, 1690.0454, 6.9922, 40, 0, 0);
	fuelStationText[8] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1328.2731, 2677.5278, 50.0625, 40, 0, 0);
	fuelStationText[9] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 70.3842, 1219.0177, 18.8116, 40, 0, 0);
	fuelStationText[10] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2113.3835, 919.5655, 10.8203, 40, 0, 0);
	fuelStationText[11] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2641.0115, 1106.6252, 10.8203, 40, 0, 0);
	fuelStationText[12] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2146.7964, 2747.8115, 10.8203, 40, 0, 0);
	fuelStationText[13] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1471.1836, 1863.7598, 32.6328, 40, 0, 0);
	fuelStationText[14] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 655.7673, -565.0798, 16.3359, 40, 0, 0);
	fuelStationText[15] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 1381.8230, 459.1453, 20.3452, 40, 0, 0);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_1);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_2);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_3);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_4);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_5);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_6);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_7);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_8);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_9);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_10);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_11);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_12);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_13);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_14);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_15);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_16);
    for(new i=0; i<MAX_FUEL_STATIONS; i++)
    {
        FuelStationInfo[i][fsFuel] = 5000;
    }
}

stock DefinePlayerScreenTexts(playerid)
{
	//New Texts:
	SpeedStatus[playerid] = TextDrawCreate(515.666809, 394.488769, "150 Km/H");
	TextDrawLetterSize(SpeedStatus[playerid], 0.184666, 1.396741);
	TextDrawAlignment(SpeedStatus[playerid], 1);
	TextDrawColor(SpeedStatus[playerid], -2139062017);
	TextDrawSetShadow(SpeedStatus[playerid], 0);
	TextDrawSetOutline(SpeedStatus[playerid], 1);
	TextDrawBackgroundColor(SpeedStatus[playerid], 51);
	TextDrawFont(SpeedStatus[playerid], 1);
	TextDrawSetProportional(SpeedStatus[playerid], 1);

	FuelStatus[playerid] = TextDrawCreate(550.999816, 395.318542, "100 L");
	TextDrawLetterSize(FuelStatus[playerid], 0.221999, 1.181037);
	TextDrawAlignment(FuelStatus[playerid], 1);
	TextDrawColor(FuelStatus[playerid], -1061109505);
	TextDrawSetShadow(FuelStatus[playerid], 0);
	TextDrawSetOutline(FuelStatus[playerid], 1);
	TextDrawBackgroundColor(FuelStatus[playerid], 51);
	TextDrawFont(FuelStatus[playerid], 1);
	TextDrawSetProportional(FuelStatus[playerid], 1);

	VehicleNameSpeedo[playerid] = TextDrawCreate(579.666503, 394.488891, "Sultan");
	TextDrawLetterSize(VehicleNameSpeedo[playerid], 0.198333, 1.384296);
	TextDrawAlignment(VehicleNameSpeedo[playerid], 1);
	TextDrawColor(VehicleNameSpeedo[playerid], -1);
	TextDrawSetShadow(VehicleNameSpeedo[playerid], 0);
	TextDrawSetOutline(VehicleNameSpeedo[playerid], 1);
	TextDrawBackgroundColor(VehicleNameSpeedo[playerid], 51);
	TextDrawFont(VehicleNameSpeedo[playerid], 3);
	TextDrawSetProportional(VehicleNameSpeedo[playerid], 1);
	//New Texts Close

	GiveCashText[playerid] = TextDrawCreate(502.000000, 156.500000, "~g~~h~+ $230");
	TextDrawBackgroundColor(GiveCashText[playerid], 250);
	TextDrawFont(GiveCashText[playerid], 2);
	TextDrawLetterSize(GiveCashText[playerid], 0.320831, 1.749998);
	TextDrawTextSize(GiveCashText[playerid], 400.000000, 17.000000);
	TextDrawColor(GiveCashText[playerid], -1);
	TextDrawSetOutline(GiveCashText[playerid], 1);
	TextDrawSetProportional(GiveCashText[playerid], 1);

	levelText[playerid] = TextDrawCreate(483.000000, 0.000000, "Level: 2");
	TextDrawFont(levelText[playerid], 1);
	//TextDrawLetterSize(levelText[playerid], 0.270832, 1.649997);
	TextDrawLetterSize(levelText[playerid], 0.245, 1.549998); //0.187499, 1.549998
	TextDrawSetOutline(levelText[playerid], 0);
	TextDrawSetShadow(levelText[playerid], 1);
	TextDrawAlignment(levelText[playerid], 1);
	TextDrawColor(levelText[playerid], -656877825);
	TextDrawBackgroundColor(levelText[playerid], 255);
	TextDrawSetProportional(levelText[playerid], 1);

	/*
	Textdraw0 = TextDrawCreate(506.000152, 12.444430, "Level: 100");
	TextDrawLetterSize(Textdraw0, 0.317666, 1.500443);
	TextDrawAlignment(Textdraw0, 1);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetShadow(Textdraw0, 0);
	TextDrawSetOutline(Textdraw0, 1);
	TextDrawBackgroundColor(Textdraw0, 51);
	TextDrawFont(Textdraw0, 1);
	TextDrawSetProportional(Textdraw0, 1);
	*/

	expText[playerid] = TextDrawCreate(483.000000, 11.000000, "Exp: 1/6");
	TextDrawFont(expText[playerid], 1);
	//TextDrawLetterSize(expText[playerid], 0.270832, 1.499997);
	TextDrawLetterSize(expText[playerid], 0.245, 1.549998);
	TextDrawSetOutline(expText[playerid], 0);
	TextDrawSetShadow(expText[playerid], 1);
	TextDrawAlignment(expText[playerid], 1);
	TextDrawColor(expText[playerid], 1097458175);
	TextDrawBackgroundColor(expText[playerid], 255);
	TextDrawBoxColor(expText[playerid], 50);
	TextDrawSetProportional(expText[playerid], 1);

	AreaImage[playerid] = TextDrawCreate(8.000000, 434.000000, "HUD:radar_centre");
	TextDrawFont(AreaImage[playerid], 4);
	TextDrawLetterSize(AreaImage[playerid], 0.600000, 2.000000);
	TextDrawTextSize(AreaImage[playerid], 11.000000, 9.000000);
	TextDrawSetOutline(AreaImage[playerid], 1);
	TextDrawSetShadow(AreaImage[playerid], 0);
	TextDrawAlignment(AreaImage[playerid], 1);
	TextDrawColor(AreaImage[playerid], -1);
	TextDrawBackgroundColor(AreaImage[playerid], 255);
	TextDrawBoxColor(AreaImage[playerid], 50);
	TextDrawUseBox(AreaImage[playerid], 1);
	TextDrawSetProportional(AreaImage[playerid], 1);
	TextDrawSetSelectable(AreaImage[playerid], 0);

	Date[playerid] = TextDrawCreate(50.000000, 429.000000, "11/1/2023"); //21.000000, 434.000000
	TextDrawFont(Date[playerid], 3);
	TextDrawLetterSize(Date[playerid], 0.329165, 1.449998);
	TextDrawTextSize(Date[playerid], 400.000000, 17.000000);
	TextDrawSetOutline(Date[playerid], 1);
	TextDrawSetShadow(Date[playerid], 1);
	TextDrawAlignment(Date[playerid], 2);
	TextDrawColor(Date[playerid], -1);
	TextDrawBackgroundColor(Date[playerid], 255);
	TextDrawBoxColor(Date[playerid], 50);
	TextDrawUseBox(Date[playerid], 0);
	TextDrawSetProportional(Date[playerid], 1);
	TextDrawSetSelectable(Date[playerid], 0);

	Clock[playerid] = TextDrawCreate(588.000000, 25.000000, "19:23");
	TextDrawFont(Clock[playerid], 3);
	TextDrawLetterSize(Clock[playerid], 0.329165, 1.449998);
	TextDrawTextSize(Clock[playerid], 400.000000, 17.000000);
	TextDrawSetOutline(Clock[playerid], 1);
	TextDrawSetShadow(Clock[playerid], 1);
	TextDrawAlignment(Clock[playerid], 2);
	TextDrawColor(Clock[playerid], -1);
	TextDrawBackgroundColor(Clock[playerid], 255);
	TextDrawBoxColor(Clock[playerid], 50);
	TextDrawUseBox(Clock[playerid], 0);
	TextDrawSetProportional(Clock[playerid], 1);
	TextDrawSetSelectable(Clock[playerid], 0);

	FareStatus[playerid] = TextDrawCreate(540.5190, 350.0, "Fare: ~y~~h~$0");
	TextDrawBackgroundColor(FareStatus[playerid], 250);
	TextDrawFont(FareStatus[playerid], 1);
	TextDrawLetterSize(FareStatus[playerid], 0.3299, 1.5999);
	TextDrawColor(FareStatus[playerid], -1);
	TextDrawSetOutline(FareStatus[playerid], 1);
	TextDrawSetProportional(FareStatus[playerid], 1);

    TankFuel[playerid] = TextDrawCreate(540.5190, 350.0, "~y~Tank: 0 L");
    TextDrawBackgroundColor(TankFuel[playerid], 250);
    TextDrawFont(TankFuel[playerid], 1);
    TextDrawLetterSize(TankFuel[playerid], 0.3299, 1.5999);
    TextDrawColor(TankFuel[playerid], -1);
    TextDrawSetOutline(TankFuel[playerid], 1);
    TextDrawSetProportional(TankFuel[playerid], 1);
	
	CashInfo[playerid] = TextDrawCreate(604.000000, 131.000000, "$50");
	TextDrawFont(CashInfo[playerid], 3);
	TextDrawLetterSize(CashInfo[playerid], 0.320831, 1.749998);
	TextDrawTextSize(CashInfo[playerid], 400.000000, 17.000000);
	TextDrawSetOutline(CashInfo[playerid], 1);
	TextDrawSetShadow(CashInfo[playerid], 0);
	TextDrawAlignment(CashInfo[playerid], 3);
	TextDrawColor(CashInfo[playerid], 852308735);
	TextDrawBackgroundColor(CashInfo[playerid], 255);
	TextDrawBoxColor(CashInfo[playerid], 50);
	TextDrawUseBox(CashInfo[playerid], 0);
	TextDrawSetProportional(CashInfo[playerid], 1);
	TextDrawSetSelectable(CashInfo[playerid], 0);

	MessageInfo[playerid] = TextDrawCreate(324.333160, 139.377838, " ");
	TextDrawLetterSize(MessageInfo[playerid], 0.468665, 2.562372);
	TextDrawAlignment(MessageInfo[playerid], 2);
	TextDrawColor(MessageInfo[playerid], -1);
	TextDrawSetShadow(MessageInfo[playerid], 0);
	TextDrawSetOutline(MessageInfo[playerid], -1);
	TextDrawBackgroundColor(MessageInfo[playerid], 255);
	TextDrawFont(MessageInfo[playerid], 2);
	TextDrawSetProportional(MessageInfo[playerid], 1);

	CommandInfo[playerid] = TextDrawCreate(316.666503, 379.970397, " ");
	TextDrawLetterSize(CommandInfo[playerid], 0.318666, 1.380148);
	TextDrawAlignment(CommandInfo[playerid], 2);
	TextDrawColor(CommandInfo[playerid], -1);
	TextDrawSetShadow(CommandInfo[playerid], 0);
	TextDrawSetOutline(CommandInfo[playerid], -1);
	TextDrawBackgroundColor(CommandInfo[playerid], 255);
	TextDrawFont(CommandInfo[playerid], 2);
	TextDrawSetProportional(CommandInfo[playerid], 1);

	LevelStats_BACKGROUND[playerid] = TextDrawCreate(442.666656, 18.507406, "usebox");
	TextDrawLetterSize(LevelStats_BACKGROUND[playerid], 0.000000, 1.158230);
	TextDrawTextSize(LevelStats_BACKGROUND[playerid], 169.333328, 0.000000);
	TextDrawAlignment(LevelStats_BACKGROUND[playerid], 1);
	TextDrawColor(LevelStats_BACKGROUND[playerid], 0);
	TextDrawUseBox(LevelStats_BACKGROUND[playerid], true);
	TextDrawBoxColor(LevelStats_BACKGROUND[playerid], 102);
	TextDrawSetShadow(LevelStats_BACKGROUND[playerid], 0);
	TextDrawSetOutline(LevelStats_BACKGROUND[playerid], 0);
	TextDrawFont(LevelStats_BACKGROUND[playerid], 0);

	LevelStats_Info[playerid] = TextDrawCreate(277.666656, 29.451906, "You earned EXP");
	TextDrawLetterSize(LevelStats_Info[playerid], 0.202333, 0.923852);
	TextDrawAlignment(LevelStats_Info[playerid], 1);
	TextDrawColor(LevelStats_Info[playerid], 65535);
	TextDrawSetShadow(LevelStats_Info[playerid], 1);
	TextDrawSetOutline(LevelStats_Info[playerid], 0);
	TextDrawBackgroundColor(LevelStats_Info[playerid], 51);
	TextDrawFont(LevelStats_Info[playerid], 2);
	TextDrawSetProportional(LevelStats_Info[playerid], 1);

	LevelStats_EXP[playerid] = ProgressBarCreate(185.333053, 20.640739, 245.5, 8.0);
	ProgressBarColor(LevelStats_EXP[playerid], 0x00A8F6FF);
	ProgressBarBackgroundColor(LevelStats_EXP[playerid], 0xEBEBEB33);

	LevelStats_CurrentLevel[playerid] = TextDrawCreate(160.666671, 18.251857, "1");
	TextDrawLetterSize(LevelStats_CurrentLevel[playerid], 0.381333, 1.064889);
	TextDrawAlignment(LevelStats_CurrentLevel[playerid], 1);
	TextDrawColor(LevelStats_CurrentLevel[playerid], -1061109505);
	TextDrawSetShadow(LevelStats_CurrentLevel[playerid], 0);
	TextDrawSetOutline(LevelStats_CurrentLevel[playerid], 1);
	TextDrawBackgroundColor(LevelStats_CurrentLevel[playerid], 51);
	TextDrawFont(LevelStats_CurrentLevel[playerid], 3);
	TextDrawSetProportional(LevelStats_CurrentLevel[playerid], 1);

	LevelStats_NextLevel[playerid] = TextDrawCreate(445.666687, 14.933341, "2");
	TextDrawLetterSize(LevelStats_NextLevel[playerid], 0.449999, 1.600000);
	TextDrawAlignment(LevelStats_NextLevel[playerid], 1);
	TextDrawColor(LevelStats_NextLevel[playerid], 65535);
	TextDrawSetShadow(LevelStats_NextLevel[playerid], 0);
	TextDrawSetOutline(LevelStats_NextLevel[playerid], 1);
	TextDrawBackgroundColor(LevelStats_NextLevel[playerid], 51);
	TextDrawFont(LevelStats_NextLevel[playerid], 3);
	TextDrawSetProportional(LevelStats_NextLevel[playerid], 1);

	/*
	ServerLogo[playerid]=TextDrawCreate(499.000000, 7.400000,"Bulgarian Intense Server");
	TextDrawBackgroundColor(ServerLogo[playerid], 250);
	TextDrawFont(ServerLogo[playerid], 2);
	TextDrawLetterSize(ServerLogo[playerid], 0.5, 2);
	TextDrawColor(ServerLogo[playerid], -1);
	TextDrawSetOutline(ServerLogo[playerid], 1);
	TextDrawSetProportional(ServerLogo[playerid], 1);
	*/

	ServerLogo[playerid] = TextDrawCreate(632.000000, 8.000000, "Life of San Andreas");
	TextDrawFont(ServerLogo[playerid], 3);
	TextDrawLetterSize(ServerLogo[playerid], 0.241666, 1.299998);
	TextDrawTextSize(ServerLogo[playerid], 400.000000, 17.000000);
	TextDrawSetOutline(ServerLogo[playerid], 1);
	TextDrawSetShadow(ServerLogo[playerid], 0);
	TextDrawAlignment(ServerLogo[playerid], 3);
	TextDrawColor(ServerLogo[playerid], -1);
	TextDrawBackgroundColor(ServerLogo[playerid], 255);
	TextDrawBoxColor(ServerLogo[playerid], 50);
	TextDrawUseBox(ServerLogo[playerid], 0);
	TextDrawSetProportional(ServerLogo[playerid], 1);
	TextDrawSetSelectable(ServerLogo[playerid], 0);

}

stock DefineScreenTexts()
{
	RESTARTText = TextDrawCreate(400.000000, 328.000000, " ");
	TextDrawBackgroundColor(RESTARTText, 250);
	TextDrawFont(RESTARTText, 1);
	TextDrawLetterSize(RESTARTText, 0.2700, 1.5500);
	TextDrawColor(RESTARTText, -1);
	TextDrawSetOutline(RESTARTText, 1);
	TextDrawSetProportional(RESTARTText, 1);

	/*
	Clock=TextDrawCreate(528.000000,25.500000,"~w~   15:16:24");
	TextDrawBackgroundColor(Clock, 250);
	TextDrawFont(Clock, 1);
	TextDrawLetterSize(Clock, 0.3, 1.8000);
	TextDrawColor(Clock, -1);
	TextDrawSetOutline(Clock, 1);
	TextDrawSetProportional(Clock, 1);
	*/

	//Vehicle Speedo:
	//VehicleSpeedo

	VehicleSpeedo[0] = TextDrawCreate(622.333129, 398.477722, "usebox");
	TextDrawLetterSize(VehicleSpeedo[0], 0.000000, -0.777570);
	TextDrawTextSize(VehicleSpeedo[0], 513.666687, 0.000000);
	TextDrawAlignment(VehicleSpeedo[0], 1);
	TextDrawColor(VehicleSpeedo[0], 0);
	TextDrawUseBox(VehicleSpeedo[0], true);
	TextDrawBoxColor(VehicleSpeedo[0], 102);
	TextDrawSetShadow(VehicleSpeedo[0], 0);
	TextDrawSetOutline(VehicleSpeedo[0], 0);
	TextDrawFont(VehicleSpeedo[0], 0);

	VehicleSpeedo[1] = TextDrawCreate(551.666564, 377.066619, "Fuel:");
	TextDrawLetterSize(VehicleSpeedo[1], 0.237999, 1.172740);
	TextDrawAlignment(VehicleSpeedo[1], 1);
	TextDrawColor(VehicleSpeedo[1], -1378294017);
	TextDrawSetShadow(VehicleSpeedo[1], 0);
	TextDrawSetOutline(VehicleSpeedo[1], 1);
	TextDrawBackgroundColor(VehicleSpeedo[1], 51);
	TextDrawFont(VehicleSpeedo[1], 3);
	TextDrawSetProportional(VehicleSpeedo[1], 1);

	VehicleSpeedo[2] = TextDrawCreate(515.666625, 375.822082, "Speed:");
	TextDrawLetterSize(VehicleSpeedo[2], 0.275666, 1.355259);
	TextDrawAlignment(VehicleSpeedo[2], 1);
	TextDrawColor(VehicleSpeedo[2], -1378294017);
	TextDrawSetShadow(VehicleSpeedo[2], 0);
	TextDrawSetOutline(VehicleSpeedo[2], 1);
	TextDrawBackgroundColor(VehicleSpeedo[2], 51);
	TextDrawFont(VehicleSpeedo[2], 3);
	TextDrawSetProportional(VehicleSpeedo[2], 1);

	VehicleSpeedo[3] = TextDrawCreate(576.666503, 375.407348, "Vehicle:");
	TextDrawLetterSize(VehicleSpeedo[3], 0.227333, 1.359407);
	TextDrawAlignment(VehicleSpeedo[3], 1);
	TextDrawColor(VehicleSpeedo[3], -1378294017);
	TextDrawSetShadow(VehicleSpeedo[3], 0);
	TextDrawSetOutline(VehicleSpeedo[3], 1);
	TextDrawBackgroundColor(VehicleSpeedo[3], 51);
	TextDrawFont(VehicleSpeedo[3], 3);
	TextDrawSetProportional(VehicleSpeedo[3], 1);

	//Vehicle Speedo Close

	SiteText = TextDrawCreate(24.000000, 425.500000, "~w~OFFICIAL SITE: SOON");
	TextDrawBackgroundColor(SiteText, 250);
	TextDrawFont(SiteText, 2);
	TextDrawLetterSize(SiteText, 0.2100, 1.3000);
	TextDrawColor(SiteText, -1);
	TextDrawSetOutline(SiteText, 1);
	TextDrawSetProportional(SiteText, 1);

	PaintBallTimerText = TextDrawCreate(540.5190, 350.0, "");
	TextDrawBackgroundColor(PaintBallTimerText, 250);
	TextDrawFont(PaintBallTimerText, 1);
	TextDrawLetterSize(PaintBallTimerText, 0.3299, 1.5999);
	TextDrawColor(PaintBallTimerText, -1);
	TextDrawSetOutline(PaintBallTimerText, 1);
	TextDrawSetProportional(PaintBallTimerText, 1);

	Box[0] = TextDrawCreate(0.000000, 0.000000, "~n~");
	TextDrawUseBox(Box[0], 1);
	TextDrawBoxColor(Box[0], 0x000000FF);
	TextDrawLetterSize(Box[0], 5.0, 12.0);

	Box[1] = TextDrawCreate(0.000000, 380.000000, "~n~");
	TextDrawUseBox(Box[1], 1);
	TextDrawBoxColor(Box[1], 0x000000FF);
	TextDrawLetterSize(Box[1], 5.0, 12.0);

	introBlackLines[0] = TextDrawCreate(295.000000, -74.000000, "_");
	TextDrawFont(introBlackLines[0], 1);
	TextDrawLetterSize(introBlackLines[0], 0.620833, 10.300003);
	TextDrawTextSize(introBlackLines[0], 358.000000, 728.000000);
	TextDrawSetOutline(introBlackLines[0], 1);
	TextDrawSetShadow(introBlackLines[0], 0);
	TextDrawAlignment(introBlackLines[0], 2);
	TextDrawColor(introBlackLines[0], -1);
	TextDrawBackgroundColor(introBlackLines[0], 255);
	TextDrawBoxColor(introBlackLines[0], 135);
	TextDrawUseBox(introBlackLines[0], 1);
	TextDrawSetProportional(introBlackLines[0], 1);
	TextDrawSetSelectable(introBlackLines[0], 0);

	introBlackLines[1] = TextDrawCreate(295.000000, 429.000000, "_");
	TextDrawFont(introBlackLines[1], 1);
	TextDrawLetterSize(introBlackLines[1], 0.620833, 10.300003);
	TextDrawTextSize(introBlackLines[1], 358.000000, 728.000000);
	TextDrawSetOutline(introBlackLines[1], 1);
	TextDrawSetShadow(introBlackLines[1], 0);
	TextDrawAlignment(introBlackLines[1], 2);
	TextDrawColor(introBlackLines[1], -1);
	TextDrawBackgroundColor(introBlackLines[1], 255);
	TextDrawBoxColor(introBlackLines[1], 135);
	TextDrawUseBox(introBlackLines[1], 1);
	TextDrawSetProportional(introBlackLines[1], 1);
	TextDrawSetSelectable(introBlackLines[1], 0);

	WelcomeText[0] = TextDrawCreate(432.000000, 44.000000, "welcome to");
	TextDrawFont(WelcomeText[0], 2);
	TextDrawLetterSize(WelcomeText[0], 0.858331, 2.899997);
	TextDrawTextSize(WelcomeText[0], 400.000000, 17.000000);
	TextDrawSetOutline(WelcomeText[0], 0);
	TextDrawSetShadow(WelcomeText[0], 1);
	TextDrawAlignment(WelcomeText[0], 3);
	TextDrawColor(WelcomeText[0], -1);
	TextDrawBackgroundColor(WelcomeText[0], 255);
	TextDrawBoxColor(WelcomeText[0], 50);
	TextDrawUseBox(WelcomeText[0], 0);
	TextDrawSetProportional(WelcomeText[0], 1);
	TextDrawSetSelectable(WelcomeText[0], 0);

	WelcomeText[1] = TextDrawCreate(464.000000, 70.000000, "~b~Life ~w~Of ~r~San Andreas");
	TextDrawFont(WelcomeText[1], 3);
	TextDrawLetterSize(WelcomeText[1], 0.858331, 2.899997);
	TextDrawTextSize(WelcomeText[1], 400.000000, 17.000000);
	TextDrawSetOutline(WelcomeText[1], 0);
	TextDrawSetShadow(WelcomeText[1], 1);
	TextDrawAlignment(WelcomeText[1], 3);
	TextDrawColor(WelcomeText[1], -1);
	TextDrawBackgroundColor(WelcomeText[1], 255);
	TextDrawBoxColor(WelcomeText[1], 50);
	TextDrawUseBox(WelcomeText[1], 0);
	TextDrawSetProportional(WelcomeText[1], 1);
	TextDrawSetSelectable(WelcomeText[1], 0);

}


stock AddSnowIfWinter()
{
	new year, mounth, day;
	getdate(year, mounth, day);
	if (mounth == 11 && day >= 20 || mounth == 12)
	{
		christmasTime = true;
		new tmpobjid;
		tmpobjid = CreateDynamicObject(19055, 2295.628906, 2406.900634, 10.381874, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19056, 2298.535888, 2404.999511, 10.421875, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(892, 2313.027587, 2403.989990, 9.820312, 0.000000, 0.000000, 129.900009, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19076, 2296.888427, 2405.863525, 9.651870, 0.000000, 0.000000, -63.499996, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 2304.506591, 2398.237548, 0.430310, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(892, 2320.357666, 2404.263427, 9.820312, 0.000000, 0.000000, 76.199989, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 2304.506591, 2384.310302, 0.860310, 0.000000, 0.000000, -15.000012, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1232, 2340.499023, 2402.847900, 9.820312, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1232, 2334.608398, 2402.847900, 9.820312, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1232, 2329.276367, 2402.847900, 9.820312, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 2269.495605, 2452.301513, 0.721157, 1.600000, -0.200000, -15.000012, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 2160.964111, 1993.778686, 3.356205, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 2127.967041, 1978.877563, 0.636206, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19076, 2160.858154, 1973.163818, 9.720395, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19062, 2184.958251, 1970.441772, 13.441144, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19057, 2194.462890, 1994.119628, 11.865710, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 1781.271850, 831.469787, 1.421491, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19061, 2195.162597, 2010.694458, 15.024512, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3472, 2178.461914, 2014.649536, 9.795160, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19061, 2199.072998, 2010.694458, 15.024512, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19061, 2202.382812, 2010.694458, 15.024512, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3472, 2189.661621, 2014.649536, 9.795160, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19062, 2189.448486, 1970.441772, 13.441144, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(19062, 2181.318603, 1970.441772, 13.441144, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1568, 2194.761474, 1996.652954, 9.274330, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1568, 2194.761474, 1998.372680, 9.274330, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1568, 2194.761474, 1984.232055, 9.274330, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(1568, 2194.761474, 1982.491821, 9.274330, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3918, 1788.220581, 831.469787, 1.421491, 0.499998, 1.399999, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(6965, 1796.578247, 842.164916, 13.307824, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3472, 1776.607299, 825.578674, 8.868623, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3472, 1817.530395, 825.578674, 8.868623, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3472, 1776.607299, 860.259704, 8.868623, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00); 
		tmpobjid = CreateDynamicObject(3472, 1817.530395, 860.259704, 8.868623, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00); 
	}
}

stock AddAllObjects()
{
	new tmpobjid;
	//MAFIA HOUSE INTERIOR DOWNLOADED - open
	tmpobjid = CreateDynamicObjectEx(19377, 883.938720, 1913.583984, -90.078689, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 883.938537, 1923.212768, -90.078697, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14411, 876.425048, 1918.392944, -93.183601, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 10806, "airfence_sfse", "ws_oldpainted", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 872.116088, 1929.994384, -85.084701, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.527038, 1895.874511, -90.350799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 915, "airconext", "CJ_plating", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 877.767272, 1920.379516, -88.508590, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 878.195800, 1920.386596, -88.508590, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 877.770019, 1915.878051, -88.508590, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 878.196960, 1915.875854, -88.508590, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.606872, 1910.585327, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "cof_wood1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.607666, 1925.694213, -89.893028, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "cof_wood1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.508605, 1908.991210, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "cof_wood1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.511474, 1927.801757, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "cof_wood1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 888.230224, 1913.897583, -94.476509, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 888.233825, 1923.527221, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "cof_wood1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 861.943786, 1923.103027, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "AH_flroortiledirt1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 861.943725, 1913.468383, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "AH_flroortiledirt1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.358337, 1910.565795, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 878.197326, 1917.876464, -85.511001, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 878.196472, 1922.856567, -85.521003, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 877.771911, 1917.867187, -85.521003, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 877.772766, 1922.848632, -85.521003, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.356384, 1925.694335, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 870.232055, 1908.741455, -85.278297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 876.650390, 1908.740844, -86.473014, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 863.812927, 1908.742187, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.488952, 1927.632324, -79.788597, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 870.198730, 1927.833007, -85.280296, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 863.783325, 1927.831787, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 872.444458, 1923.093627, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "AH_flroortiledirt1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 861.616882, 1929.995727, -85.084701, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 876.619567, 1927.832885, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 856.767211, 1918.123168, -85.280097, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 854.157592, 1927.830932, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.765441, 1924.546264, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.769470, 1911.703247, -95.261192, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 854.185241, 1908.744750, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 854.817382, 1920.367431, -85.084663, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 854.816833, 1910.804199, -85.082702, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 861.969909, 1906.630981, -85.084701, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 872.467346, 1906.629150, -85.084701, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 862.857116, 1927.654174, -79.788597, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.479553, 1908.849365, -79.788597, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 862.852050, 1908.848144, -79.788597, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 853.219421, 1908.848266, -79.788597, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 853.225524, 1927.655395, -79.788597, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.848571, 1922.810180, -79.788597, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.849548, 1913.177978, -79.788597, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.322998, 1922.735229, -79.788597, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 883.880371, 1927.698120, -85.084701, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18980, 877.492553, 1916.270141, -84.732452, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.323608, 1913.102050, -79.788597, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14735, "newcrak", "carp21S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 875.580627, 1911.348754, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 872.085327, 1911.348510, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 868.586608, 1911.348876, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 865.088439, 1911.348754, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 861.591979, 1911.349121, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 859.967407, 1913.126586, -84.361503, 90.000000, 0.006300, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 859.966796, 1916.624511, -84.361503, 90.000000, 0.006300, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 859.966003, 1920.121337, -84.361503, 90.000000, 0.006300, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 859.965515, 1923.546264, -84.361503, 90.000000, 0.006300, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 861.773315, 1925.289916, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 865.273620, 1925.291259, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 868.767578, 1925.292236, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 872.259216, 1925.293212, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 875.754150, 1925.293212, -84.361503, 90.000000, 0.006300, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19378, 872.078247, 1913.761718, -79.585372, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19378, 872.077209, 1923.396118, -79.585372, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19378, 861.581176, 1923.391967, -79.585372, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19378, 861.579895, 1913.760131, -79.585372, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 856.354370, 1920.227783, -89.420646, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 856.355712, 1916.022338, -89.420646, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 856.354370, 1918.179687, -91.299797, 90.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 872.331115, 1908.326904, -89.420646, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 868.133300, 1908.329223, -89.420646, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 868.101562, 1928.243774, -89.420646, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 870.461914, 1928.244506, -86.532600, 90.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 872.301879, 1928.245361, -89.420646, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 856.354370, 1918.179687, -86.530601, 90.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 870.461914, 1928.244506, -91.299797, 90.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 870.134826, 1908.334472, -91.299797, 90.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 850.782287, 1918.157470, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "woodfloor1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 855.941345, 1924.546020, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 855.942993, 1911.703247, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 855.941284, 1918.124633, -83.804100, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 851.084472, 1922.981567, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 843.128784, 1922.984985, -90.622993, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 851.047973, 1913.256591, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 841.418273, 1913.256591, -80.306388, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 836.585815, 1918.095214, -93.805557, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.471008, 1939.123413, -94.395202, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 883.808349, 1908.670043, -85.084701, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 883.004333, 1918.103759, -84.963699, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.404907, 1913.426269, -79.926200, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.387084, 1922.825439, -79.926200, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14411, 870.112976, 1905.357788, -94.016853, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 10806, "airfence_sfse", "ws_oldpainted", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.250915, 1932.624877, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4550, "skyscr1_lan2", "sl_librarycolmn2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 868.082092, 1932.573486, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4550, "skyscr1_lan2", "sl_librarycolmn2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 872.658020, 1936.959472, -91.814651, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 867.674072, 1936.960571, -91.814651, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 869.474182, 1932.507568, -86.808578, -34.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.056579, 1928.656982, -81.311630, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4550, "skyscr1_lan2", "sl_librarycolmn2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.466430, 1947.658447, -85.019203, 70.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.377075, 1954.475952, -86.135757, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 876.976440, 1937.372924, -92.572990, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14533, "pleas_dome", "club_zeb_SFW2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 863.356262, 1937.371948, -92.592948, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14533, "pleas_dome", "club_zeb_SFW2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 875.794189, 1941.295043, -92.572959, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14533, "pleas_dome", "club_zeb_SFW2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 865.140930, 1941.294799, -92.582977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14533, "pleas_dome", "club_zeb_SFW2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 870.578674, 1936.957885, -89.080497, 0.000000, 90.000000, -180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 875.692016, 1950.232421, -94.360702, 0.000000, 90.000000, 50.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 876.890930, 1952.115966, -94.362701, 0.000000, 90.000000, 70.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 877.444885, 1954.501953, -94.360702, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 877.172729, 1956.861206, -94.362701, 0.000000, 90.000000, 110.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 875.778808, 1959.354492, -94.360702, 0.000000, 90.000000, 130.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 873.850952, 1960.975708, -94.362701, 0.000000, 90.000000, 150.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 866.746276, 1960.786010, -94.360702, 0.000000, 90.000000, 210.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 864.959838, 1959.166503, -94.362701, 0.000000, 90.000000, 230.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 863.778625, 1956.889404, -94.360702, 0.000000, 90.000000, 250.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 863.478881, 1954.286499, -94.362701, 0.000000, 90.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 864.225524, 1951.725830, -94.360702, 0.000000, 90.000000, 290.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 865.705566, 1949.746948, -94.362701, 0.000000, 90.000000, 310.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 867.637817, 1948.438354, -94.360702, 0.000000, 90.000000, 330.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 869.885009, 1947.877197, -94.362701, 0.000000, 90.000000, 350.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 871.969482, 1948.042968, -94.360702, 0.000000, 90.000000, 370.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19370, 874.029785, 1948.953735, -94.362701, 0.000000, 90.000000, 390.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "scratchedmetal", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 865.139892, 1944.064819, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4550, "skyscr1_lan2", "sl_librarycolmn2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 862.222717, 1952.645385, -89.992996, 0.000000, 0.000000, 37.554321, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 862.370544, 1956.755371, -89.992996, 0.000000, 0.000000, 358.902587, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 864.130310, 1960.204467, -89.992996, 0.000000, 0.000000, 332.902679, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 866.477478, 1962.040161, -89.992996, 0.000000, 0.000000, 314.474731, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 872.341125, 1954.408691, -96.067947, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 862.011108, 1959.064086, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.867919, 1959.069213, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.714050, 1952.622070, -89.992996, 0.000000, 0.000000, -37.554298, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 875.804382, 1944.042846, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4550, "skyscr1_lan2", "sl_librarycolmn2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.724182, 1957.400390, -89.992996, 0.000000, 0.000000, -358.902587, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.123840, 1959.497070, -89.992996, 0.000000, 0.000000, -332.902709, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6866, "vgncnstrct1", "Circus_gls_05", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.458923, 1959.187011, -91.285873, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19381, 870.350830, 1959.102905, -82.429916, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1414, "break_street1", "CJ_TV_SCREEN", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.470520, 1944.951660, -94.397201, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 880.874633, 1954.467773, -86.135757, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 859.885314, 1954.476806, -86.135757, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.382202, 1944.840820, -86.135757, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 880.867797, 1944.832763, -86.135757, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "ws_trainstationwin1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.467773, 1941.275756, -89.487998, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 870.134826, 1908.328613, -86.530601, 90.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18809, 870.432922, 1954.866088, -119.140869, 0.000000, 0.000000, 10.338688, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14411, 870.234436, 1931.825317, -94.016868, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 10806, "airfence_sfse", "ws_oldpainted", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 868.106018, 1903.885253, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.248291, 1903.961059, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 872.444396, 1913.465820, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "AH_flroortiledirt1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 868.105224, 1894.255615, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 879.694702, 1888.511352, -92.276298, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "sl_metalwalk", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 876.976562, 1899.232910, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.989807, 1891.868164, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 882.621887, 1891.868041, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 879.166809, 1899.234619, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 885.025451, 1894.908447, -89.992996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1649, 836.624633, 1920.291625, -86.935699, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15046, "svcunthoose", "csGarageTrolley01psd", 0xFA000000);
	tmpobjid = CreateDynamicObjectEx(19377, 831.377014, 1918.122314, -88.642196, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "woodfloor1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 850.662536, 1918.098876, -85.184646, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 840.160095, 1918.099121, -85.184646, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 840.281127, 1918.160522, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "woodfloor1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1649, 836.628540, 1920.291748, -86.935699, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15046, "svcunthoose", "csGarageTrolley01psd", 0xB4000000);
	tmpobjid = CreateDynamicObjectEx(1649, 836.624206, 1915.916137, -86.935699, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15046, "svcunthoose", "csGarageTrolley01psd", 0xFA000000);
	tmpobjid = CreateDynamicObjectEx(14411, 835.439208, 1924.827148, -91.784126, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "AH_cheapredcarpet", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 9507, "boxybld2_sfw", "boxybox_sf3z", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18980, 836.318176, 1922.762817, -90.807792, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18835, "mickytextures", "wood051", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18980, 836.319030, 1913.590698, -90.807792, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1649, 836.628723, 1915.854614, -86.935699, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15046, "svcunthoose", "csGarageTrolley01psd", 0xB4000000);
	tmpobjid = CreateDynamicObjectEx(18980, 836.317749, 1910.377929, -84.857200, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3676, "lawnxref", "lasthoose6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 839.483276, 1927.794677, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "woodfloor1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1499, 838.317810, 1922.977539, -90.805702, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "sa_wood08_128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 838.842041, 1927.780395, -87.122962, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 834.068847, 1925.260131, -90.622978, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 841.549255, 1922.988647, -83.051498, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 831.681762, 1927.585327, -90.622993, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 826.952392, 1922.855957, -90.632972, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 831.216064, 1922.857788, -93.802803, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9507, "boxybld2_sfw", "hospital3_sfw", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 831.196716, 1913.293334, -90.662971, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 826.335876, 1918.029418, -90.642974, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 829.659240, 1918.100097, -85.184646, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 834.330078, 1927.732788, -85.184646, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 843.126831, 1922.982910, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 841.551391, 1922.984863, -80.303298, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1569, 888.144409, 1919.679931, -89.990798, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 8391, "ballys01", "vgncorpdoor1_512", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18075, 846.980895, 1918.067871, -85.259300, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19595, "lsappartments1", "ceilingtiles3-128x128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2370, 882.979370, 1913.127563, -90.194206, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2370, 883.468017, 1922.822021, -90.194206, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(631, 879.211853, 1927.179687, -89.090171, 0.000000, 0.000000, 56.893260, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(631, 879.104736, 1909.546264, -89.090171, 0.000000, 0.000000, 56.893260, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(19443, 876.708679, 1919.769409, -90.888496, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19458, 883.493713, 1918.130493, -90.076599, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 887.696655, 1917.461547, -90.062301, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(638, 879.117919, 1914.015136, -89.385971, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(638, 879.135009, 1922.234619, -89.385971, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19172, 888.147155, 1923.530883, -87.271766, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14489, "carlspics", "AH_picture3", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2262, 887.664245, 1921.426391, -86.801803, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2266, 887.630432, 1911.380493, -88.248008, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture4", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(631, 887.647399, 1921.109863, -89.090171, 0.000000, 0.000000, 56.893260, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "kbplanter_plants1", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(631, 887.751342, 1915.322265, -89.090171, 0.000000, 0.000000, 56.893260, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "kbplanter_plants1", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(19089, 864.200073, 1918.067504, -76.544853, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19089, 870.590270, 1918.035278, -76.544853, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19929, 866.466918, 1940.129028, -93.959800, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "ab_wood01", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19929, 866.466857, 1937.269531, -94.765823, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 4835, "airoads_las", "aarprt8LAS", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19929, 866.464904, 1937.269165, -93.959800, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "ab_wood01", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19929, 866.468383, 1940.130737, -94.765800, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 4835, "airoads_las", "aarprt8LAS", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14793, 870.623107, 1953.542358, -86.314201, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14634, "blindinglite", "ws_volumetriclight", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18809, 870.432922, 1954.866088, -119.150901, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1762, 826.999328, 1917.626342, -88.554702, 0.000000, 0.000000, 90.916130, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1730, "cj_furniture", "CJ-COUCHL2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(631, 836.023437, 1921.642089, -87.661300, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(631, 836.057067, 1914.610229, -87.661300, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(19376, 827.340515, 1909.616577, -90.662933, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_gs_wall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 822.496765, 1914.342285, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9507, "boxybld2_sfw", "hospital3_sfw", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(631, 827.840942, 1913.820922, -87.661300, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1597, "centralresac1", "fuzzyplant256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(638, 855.366577, 1914.898559, -90.196998, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "aarprt8LAS", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(638, 855.430725, 1921.339599, -90.196998, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "aarprt8LAS", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 851.926025, 1916.222534, -90.804702, 0.000000, 0.000000, 177.552810, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 851.094543, 1920.005249, -90.804702, 0.000000, 0.000000, 2.201900, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 849.742858, 1916.184692, -90.804702, 0.000000, 0.000000, 177.302627, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 847.604125, 1916.287475, -90.804702, 0.000000, 0.000000, 181.268264, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 845.403259, 1916.239990, -90.804702, 0.000000, 0.000000, 178.953765, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 843.163879, 1916.270874, -90.804702, 0.000000, 0.000000, 182.697372, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 841.023376, 1916.303344, -90.804702, 0.000000, 0.000000, 182.201919, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 838.378417, 1917.702270, -90.804702, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 848.762817, 1920.002197, -90.804702, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 846.728515, 1920.065551, -90.804702, 0.000000, 0.000000, 2.323920, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 844.535827, 1920.031005, -90.804702, 0.000000, 0.000000, 358.038513, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 842.260742, 1920.030395, -90.804702, 0.000000, 0.000000, 2.081089, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1704, 840.102783, 1920.002563, -90.804702, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_wood02", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(9093, 846.699096, 1913.332641, -87.774543, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING30", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(9093, 846.643676, 1922.902343, -87.774497, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14489, "carlspics", "AH_landscap1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14793, 863.237243, 1918.238403, -79.884498, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14634, "blindinglite", "ws_volumetriclight", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14793, 831.018310, 1917.947143, -85.359497, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14634, "blindinglite", "ws_volumetriclight", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 883.731201, 1894.907714, -94.984649, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13724, "docg01_lahills", "marbletile8b", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 874.486206, 1888.520141, -97.425827, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "sl_metalwalk", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 884.858825, 1888.510986, -97.425827, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "sl_metalwalk", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 879.740844, 1891.870727, -97.072570, 90.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "BLOCK2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 870.746337, 1907.915039, -85.278297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 867.540466, 1907.915161, -85.278297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(925, 878.017272, 1898.195312, -93.869766, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3095, "a51jdrx", "sam_camo", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 873.231750, 1894.910156, -94.984649, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13724, "docg01_lahills", "marbletile8b", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 870.176757, 1904.611083, -87.636306, 34.500000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 915, "airconext", "CJ_plating", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 881.024902, 1895.873535, -90.350799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 915, "airconext", "CJ_plating", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.895874, 1903.963989, -94.007499, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 889.755187, 1899.636718, -94.007499, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 885.070312, 1900.910034, -94.007553, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 895.079467, 1904.090209, -95.076286, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14584, "ab_abbatoir01", "ab_tiles", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 873.233642, 1904.543945, -94.984649, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13724, "docg01_lahills", "marbletile8b", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 885.581604, 1899.236450, -91.095397, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 889.799133, 1905.640625, -94.007499, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 893.492309, 1904.311523, -94.007499, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_stonefloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 895.822570, 1905.199096, -93.297500, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17504, "eastlstr_lae2", "compfence4_LAe", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19406, 891.642761, 1908.858764, -96.503112, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 12850, "cunte_block1", "ws_redbrickold", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 889.589294, 1909.226562, -95.857498, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 915, "airconext", "cj_sheet2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(18762, 893.685180, 1909.242309, -95.857498, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 915, "airconext", "cj_sheet2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 891.758911, 1909.690673, -95.526397, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 891.758850, 1909.690673, -97.168403, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 891.756713, 1911.294067, -95.526397, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 891.759338, 1911.294433, -97.168403, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 892.680297, 1910.694458, -96.358352, 90.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 890.651672, 1910.674438, -96.358352, 90.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19428, 891.487182, 1912.108276, -96.358398, 90.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3355, "cxref_savhus", "des_brick1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 836.594421, 1917.479003, -95.235076, 0.000000, 0.000000, 179.999954, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 831.196716, 1913.303344, -80.212989, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 835.366760, 1925.253540, -80.212989, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 826.966979, 1922.853149, -80.212989, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 826.352844, 1919.150634, -80.212989, 0.000000, 0.000000, 0.000007, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 831.722656, 1927.580566, -80.212989, 0.000000, 0.000000, 0.000007, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 888.480102, 1904.086181, -92.663566, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14584, "ab_abbatoir01", "ab_tiles", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 885.578125, 1904.088378, -92.076698, 0.000000, 55.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14584, "ab_abbatoir01", "ab_tiles", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 890.248107, 1904.130004, -98.110687, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13724, "docg01_lahills", "marbletile8b", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(638, 876.807617, 1925.221435, -90.100852, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6282, "beafron2_law2", "boardwalk2_la", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(631, 876.638427, 1927.138549, -89.898628, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(638, 874.770080, 1927.231933, -90.100799, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6282, "beafron2_law2", "boardwalk2_la", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(631, 876.790832, 1909.391235, -89.898628, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObjectEx(638, 876.775390, 1911.393554, -90.100852, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6282, "beafron2_law2", "boardwalk2_la", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(638, 874.755859, 1909.302490, -90.100799, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6282, "beafron2_law2", "boardwalk2_la", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 887.688232, 1918.942138, -90.060302, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19443, 876.710021, 1916.568359, -90.890502, 0.000000, 90.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "walp29S", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1761, 857.404113, 1910.803466, -90.807800, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1730, "cj_furniture", "CJ-COUCHL2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(1761, 857.426513, 1923.807006, -90.807800, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1730, "cj_furniture", "CJ-COUCHL2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 888.233947, 1913.894775, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "cof_wood1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 888.231933, 1923.527221, -94.476501, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.508850, 1908.993164, -94.476501, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.608703, 1910.560791, -94.476501, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.609619, 1925.693603, -80.262283, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.511047, 1927.799804, -94.476501, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.609619, 1925.693603, -94.476501, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.512817, 1927.800292, -80.262298, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 888.231872, 1923.527221, -80.262298, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 888.230224, 1913.897583, -80.262298, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 883.508911, 1908.993164, -80.262298, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 878.608703, 1910.560791, -80.262298, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3998, "civic04_lan", "twintconc_LAn", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.768432, 1911.704467, -89.993026, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18056, "mp_diner1", "mp_CJ_CARDBOARD128", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.767333, 1924.545898, -95.261199, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 863.783813, 1927.829833, -95.261199, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 854.158081, 1927.828979, -95.261199, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 876.621032, 1927.830444, -95.261199, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.354431, 1925.693969, -95.261199, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.356323, 1910.566162, -95.261199, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 876.649536, 1908.742675, -95.261199, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 841.418273, 1913.254638, -89.992996, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 851.047180, 1913.258422, -80.306396, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 855.941101, 1911.703857, -80.306396, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 855.939270, 1924.546020, -80.306396, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19360, 855.943298, 1918.124755, -85.280097, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 851.083618, 1922.979736, -80.306396, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 843.127807, 1922.981201, -80.306396, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 841.549316, 1922.986694, -83.051498, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5040, "shopliquor_las", "lasjmliq1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 841.418945, 1913.256469, -95.235076, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 851.047180, 1913.258422, -95.235099, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 855.941101, 1911.703857, -95.235099, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 855.939270, 1924.546020, -95.235099, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 851.083618, 1922.979736, -95.235099, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 843.127807, 1922.981201, -95.235099, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_roomwall", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 861.831420, 1954.409545, -96.067947, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 860.979125, 1959.187011, -99.645812, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14793, 892.099914, 1967.751342, -89.775711, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14634, "blindinglite", "ws_volumetriclight", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 879.988464, 1959.187011, -99.645812, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 869.239440, 1944.689208, -96.067947, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 879.639343, 1944.687377, -96.067947, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19377, 869.475830, 1933.523071, -85.104705, 0.000000, 90.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 838.822814, 1927.800781, -80.212989, 0.000000, 0.000000, 0.000007, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 827.343444, 1909.620483, -80.212989, 0.000000, 0.000000, 0.000007, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 822.606262, 1914.352905, -80.212989, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 840.817077, 1923.003417, -80.212989, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19329, 890.385375, 1902.603027, -97.241989, -89.999984, 97.599945, 1.700000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14612, "ab_abattoir_box", "ab_bloodfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19406, 891.642761, 1909.008911, -96.503112, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 12850, "cunte_block1", "ws_redbrickold", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19329, 892.524658, 1906.039306, -98.011024, 89.699996, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14612, "ab_abattoir_box", "ab_bloodfloor", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 863.809814, 1908.742675, -95.261199, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 854.259582, 1908.752685, -95.261199, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 13007, "sw_bankint", "bank_wall1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(14793, 874.147583, 1918.238403, -79.884498, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14634, "blindinglite", "ws_volumetriclight", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(9093, 877.221862, 1918.211303, -82.184547, 0.000000, 0.000000, 0.000014, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5719, "sunrise10_lawn", "eld_box_law", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 872.523498, 1927.621582, -74.892982, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 862.943664, 1927.621582, -74.892982, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 853.364074, 1927.621582, -74.892982, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.864379, 1922.797485, -74.892982, 0.000000, 0.000000, 179.899993, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 856.857666, 1913.218017, -74.892982, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 861.583496, 1908.852172, -74.892982, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 871.113342, 1908.852172, -74.892982, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 880.723144, 1908.852172, -74.892982, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.304443, 1922.761718, -74.892982, 0.000000, 0.000000, 179.899993, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19376, 877.287963, 1913.182250, -74.892982, 0.000000, 0.000000, 179.899993, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19172, 856.857604, 1913.134277, -88.195861, 0.000000, 0.000000, 89.999946, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING11", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19172, 856.857604, 1923.024780, -88.195861, 0.000000, 0.000000, 89.999946, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING28", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2266, 858.822753, 1927.228515, -89.415863, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture2", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2266, 859.652893, 1927.228515, -88.645866, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "GB_nastybar19", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2266, 859.842895, 1909.341918, -89.135856, 0.000000, 0.000000, 179.199981, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_landscap1", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2266, 858.852661, 1909.355224, -88.265869, 0.000000, 0.000000, 179.199981, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture3", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(2266, 831.892944, 1913.887329, -86.866279, 0.000000, 0.000000, -179.999969, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture3", 0x00000000);
	tmpobjid = CreateDynamicObjectEx(19329, 831.903076, 1913.405273, -86.756271, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture3", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} KOVA", 130, "Ariel", 40, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObjectEx(19329, 831.913085, 1913.405273, -86.676292, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 14489, "carlspics", "AH_picture3", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} created by", 130, "Ariel", 20, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObjectEx(19329, 858.853454, 1908.880859, -88.140342, 0.000000, 0.000000, -0.699999, 150.00, 150.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} KOVA", 130, "Ariel", 40, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObjectEx(19329, 858.853454, 1908.880859, -88.050338, 0.000000, 0.000000, -0.699999, 150.00, 150.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} created by", 130, "Ariel", 20, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObjectEx(19777, 883.061462, 1913.095458, -89.231330, 0.000000, 0.000000, -45.600013, 150.00, 150.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "{ffffff} by KOVA", 140, "Ariel", 80, 1, 0x00000000, 0x00000000, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObjectEx(4206, 872.586181, 1958.017211, -94.904640, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19370, 871.646789, 1961.746704, -94.360702, 0.000000, 90.000000, 170.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19370, 868.946838, 1961.702758, -94.362701, 0.000000, 90.000000, 190.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19604, 870.414672, 1959.056396, -89.923736, -90.000000, 90.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19377, 859.972839, 1944.843383, -86.135757, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 866.572753, 1947.374755, -96.020698, 0.000000, 0.000000, 60.077301, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 869.515747, 1946.382934, -96.020698, 0.000000, 0.000000, 82.636909, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 872.490905, 1946.565795, -96.020698, 0.000000, 0.000000, 283.673767, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 875.163146, 1947.851562, -96.020698, 0.000000, 0.000000, 306.488311, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 869.473999, 1945.946166, -96.020698, 0.000000, 0.000000, 82.636909, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 872.593322, 1946.120605, -96.020698, 0.000000, 0.000000, 283.673767, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 875.411254, 1947.439453, -96.020698, 0.000000, 0.000000, 306.488311, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 866.527770, 1946.942749, -96.020698, 0.000000, 0.000000, 60.077301, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 872.560058, 1946.272827, -96.020698, 0.000000, 0.000000, 283.673767, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 875.334350, 1947.569580, -96.020698, 0.000000, 0.000000, 306.488311, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 875.251342, 1947.706298, -96.020698, 0.000000, 0.000000, 306.488311, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 872.522521, 1946.429077, -96.020698, 0.000000, 0.000000, 283.673767, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 869.482299, 1946.116577, -96.020698, 0.000000, 0.000000, 82.636909, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 866.609130, 1947.091796, -96.020698, 0.000000, 0.000000, 60.077301, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 869.518432, 1946.272827, -96.020698, 0.000000, 0.000000, 82.636909, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19373, 866.582458, 1947.260620, -96.020698, 0.000000, 0.000000, 60.077301, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19377, 860.685302, 1902.469970, -90.891799, 0.000000, 90.000000, -0.009100, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 888.148193, 1916.680664, -89.990798, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2290, 884.343750, 1911.428466, -89.992599, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 885.833801, 1923.784057, -89.992599, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18075, 883.574768, 1929.447265, -85.172996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18075, 883.512268, 1906.758300, -85.172996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14455, 880.262512, 1909.340332, -88.360603, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14455, 885.985839, 1909.347167, -88.360603, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 885.842468, 1922.800659, -89.992599, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 881.684570, 1922.687133, -89.994598, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 881.670532, 1923.641845, -89.992599, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14455, 884.552490, 1927.466674, -88.360603, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14455, 890.294494, 1927.467895, -88.360603, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2290, 882.775634, 1925.450317, -89.992599, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 881.307983, 1913.844970, -89.992599, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 881.320617, 1912.920288, -89.994598, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 885.283630, 1913.859619, -89.992599, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2292, 885.299011, 1912.955322, -89.992599, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2245, 883.300537, 1913.454589, -89.109397, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2245, 883.802124, 1923.168823, -89.109397, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14562, 866.280761, 1960.322998, -93.090980, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14562, 874.633544, 1960.336791, -93.091003, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19172, 888.138122, 1913.359619, -87.271766, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2262, 887.634643, 1925.631347, -88.429199, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2266, 887.639526, 1915.321777, -86.678596, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 864.216552, 1918.064697, -83.992500, 90.000000, 90.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 864.220336, 1918.037353, -83.992500, 90.000000, 90.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 864.195007, 1918.038330, -83.992500, 90.000000, 90.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 864.278869, 1918.090209, -83.992500, 90.000000, 90.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.585205, 1918.006103, -83.992500, 90.000000, 90.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.610534, 1918.005126, -83.992500, 90.000000, 90.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.606750, 1918.032470, -83.992500, 90.000000, 90.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.681701, 1918.052124, -83.992500, 90.000000, 90.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19089, 870.590270, 1918.035278, -76.544853, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.585205, 1918.006103, -83.992500, 90.000000, 90.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.610534, 1918.005126, -83.992500, 90.000000, 90.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.606750, 1918.032470, -83.992500, 90.000000, 90.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 870.681701, 1918.052124, -83.992500, 90.000000, 90.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 864.188171, 1916.944335, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 863.178771, 1918.077148, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 864.193359, 1919.114135, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2073, 864.192016, 1918.058593, -84.167068, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 870.585571, 1919.081054, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 869.589843, 1918.036621, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 870.583557, 1916.924804, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 871.671447, 1918.040283, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2073, 870.579528, 1918.023803, -84.167068, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1744, 865.096313, 1938.063842, -92.839202, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1744, 865.075927, 1940.000610, -92.233177, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1744, 865.095825, 1939.998535, -92.839202, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1744, 865.096313, 1938.063842, 1940.000610, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1744, 865.076293, 1938.062866, -92.233200, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2350, 867.445983, 1940.890258, -93.940101, 0.000000, 0.000000, 348.269592, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2350, 867.344726, 1938.163085, -93.940101, 0.000000, 0.000000, 20.175800, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2350, 867.354614, 1939.471679, -93.940101, 0.000000, 0.000000, 31248.269531, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2290, 875.189941, 1943.084350, -94.307403, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2290, 875.203002, 1940.136962, -94.307403, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2311, 873.579162, 1941.390014, -94.307998, 0.000000, 0.000000, 89.089958, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2311, 873.591186, 1938.331054, -94.307998, 0.000000, 0.000000, 90.504013, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 873.450927, 1942.950927, -93.804191, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19820, 873.637939, 1942.114624, -93.804313, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1509, 873.783447, 1939.338256, -93.602653, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1509, 873.829284, 1938.276123, -93.602653, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1509, 866.527954, 1939.724731, -92.836662, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.414184, 1937.978271, -91.894989, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.411010, 1938.184692, -91.894798, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.364013, 1940.200073, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19821, 865.478942, 1939.397094, -91.896911, 0.000000, 0.000000, 54.283119, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.335510, 1940.380615, -92.500411, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.425720, 1940.068969, -91.693557, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.342224, 1940.860107, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 873.780639, 1941.702758, -93.803359, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.444030, 1940.694335, -92.298561, 0.000000, 0.000000, 350.906280, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.507812, 1940.817382, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.494995, 1940.936767, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.365051, 1941.023681, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.378601, 1941.084838, -91.890937, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.274780, 1941.114624, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.361450, 1941.244506, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.509887, 1941.286132, -92.500411, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.516052, 1940.365722, -91.894386, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.325012, 1939.942626, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.514892, 1940.068847, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.464721, 1939.932250, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.435974, 1939.814086, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.322143, 1939.637695, -92.500411, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.481750, 1939.476684, -92.500411, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.340393, 1939.198730, -92.499992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.520446, 1939.078247, -92.499992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.321838, 1938.916625, -92.499992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.502197, 1938.878051, -92.499992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.323669, 1938.716430, -92.499992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.475341, 1938.699951, -92.499801, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.329040, 1939.405883, -92.499801, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.553466, 1939.257568, -92.499801, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.304260, 1938.492065, -92.499801, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.450744, 1938.465087, -91.696029, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.538635, 1938.288940, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.483093, 1937.745849, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.341308, 1937.779663, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.414184, 1937.978271, -92.499992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.411010, 1938.184692, -92.499801, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1517, 865.450744, 1938.465087, -92.299018, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.516052, 1940.365722, -92.500411, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.497863, 1941.098022, -92.499977, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.473388, 1940.954467, -91.890937, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.340820, 1940.879394, -91.890937, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 865.510742, 1940.797607, -91.890937, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19822, 865.398071, 1941.258300, -91.894386, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.417053, 1940.570800, -92.298561, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19821, 865.335388, 1939.594848, -91.896911, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19821, 865.471557, 1939.817626, -91.896911, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19821, 865.396972, 1940.656616, -91.896911, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19821, 865.343139, 1939.135375, -91.896911, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.327575, 1940.230346, -91.693557, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.455261, 1939.248779, -91.693557, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.331726, 1938.970092, -91.693557, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1512, 865.389465, 1938.789672, -91.693557, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.503784, 1938.291015, -91.894798, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.317199, 1938.378417, -91.894798, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19823, 865.300476, 1938.617675, -91.894798, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.335205, 1937.672607, -91.894989, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19824, 865.503723, 1937.844360, -91.894989, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 873.627990, 1939.919799, -93.803359, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18075, 870.271850, 1941.620483, -89.583297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.082397, 1911.112792, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 865.210754, 1911.132446, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 863.438110, 1911.122192, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 861.804504, 1911.093505, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 860.131225, 1911.108276, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 868.920654, 1911.179809, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.681091, 1911.185058, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 872.400878, 1911.153808, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 874.262695, 1911.135131, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 876.224731, 1911.115600, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.669860, 1912.366455, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.709167, 1914.345458, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.760437, 1916.148071, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.764953, 1918.049072, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.788513, 1919.628906, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.822998, 1921.608276, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 859.875793, 1923.641723, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 876.095031, 1925.469726, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.954711, 1925.463256, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 871.834716, 1925.422851, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 869.735534, 1925.413818, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.251281, 1925.391723, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.757690, 1925.344970, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 862.369140, 1925.385009, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 860.291809, 1925.354003, -85.196800, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.197692, 1917.277099, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.196472, 1917.717529, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.207885, 1918.397705, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.211242, 1918.837890, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 863.895874, 1918.047973, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 863.439575, 1918.059570, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.490539, 1918.057739, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 864.884643, 1918.048706, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 869.895935, 1918.013061, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.337951, 1918.010498, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.599304, 1917.771850, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.578308, 1918.323852, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.920837, 1918.018676, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 871.395202, 1918.014282, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.580627, 1917.269531, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 870.591064, 1918.776489, -83.969802, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 869.963745, 1949.749145, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 871.846313, 1949.899169, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.418762, 1950.617553, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 874.587707, 1951.754394, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 875.360900, 1953.190673, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 875.591186, 1955.079711, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 875.317871, 1956.541137, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 874.456298, 1958.068969, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 868.323608, 1950.169555, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 866.703552, 1951.230590, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 865.645874, 1952.860107, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 865.264709, 1954.867309, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 865.633300, 1956.858276, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 866.563415, 1958.300781, -94.111701, 180.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2184, 829.638610, 1918.608276, -88.556800, 0.000000, 0.000000, 112.564208, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2184, 828.909118, 1915.765380, -88.556800, 0.000000, 0.000000, 69.625183, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1754, 833.321350, 1914.055175, -88.555900, 0.000000, 0.000000, 195.992752, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1754, 830.485412, 1914.051879, -88.555900, 0.000000, 0.000000, 160.614334, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2082, 831.412414, 1913.363891, -88.554512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2059, 829.294067, 1919.254760, -87.750503, 0.000000, 0.000000, 270.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19786, 829.536132, 1922.875488, -86.534263, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2344, 831.731872, 1914.104370, -88.053001, 0.000000, 0.000000, 113.967498, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1742, 826.331054, 1921.764282, -88.554702, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1742, 826.329162, 1920.325805, -88.554702, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2332, 826.851379, 1914.134887, -86.338180, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2332, 826.851379, 1914.134887, -88.153213, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2332, 826.851379, 1914.134887, -87.244178, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 856.900390, 1923.151733, -84.999702, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 856.927001, 1911.741455, -84.999702, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 856.947448, 1917.587890, -84.999702, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 862.054565, 1927.543701, -84.999702, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 873.323791, 1927.565673, -84.999702, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 873.040161, 1908.891235, -84.999702, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1569, 861.894836, 1908.914184, -84.999702, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19920, 828.989624, 1917.689331, -87.769599, 0.000000, 0.000000, 343.484710, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19172, 826.422546, 1918.032226, -86.599166, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2266, 826.941711, 1916.003417, -86.712722, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2357, 850.236694, 1918.149047, -90.403869, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2357, 845.977844, 1918.148071, -90.403869, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2357, 841.722534, 1918.146972, -90.403869, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18075, 883.529541, 1920.151000, -85.069992, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2076, 865.320251, 1918.069213, -84.651512, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19303, 884.061645, 1893.293457, -93.585418, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(3014, 884.331604, 1892.423461, -94.797981, 0.000000, 0.000000, 2.952558, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19303, 882.314147, 1893.293579, -93.585403, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2680, 883.182800, 1893.407714, -93.742500, -30.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19303, 880.565979, 1893.295043, -93.585403, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19303, 878.819213, 1893.294555, -93.585403, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19303, 877.070190, 1893.292236, -93.585403, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19303, 875.322998, 1893.292480, -93.585403, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2680, 879.703735, 1893.385375, -93.742500, -30.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2680, 876.207092, 1893.410278, -93.742500, -30.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 883.302795, 1892.266113, -94.796600, 0.000000, 0.000000, 20.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2359, 884.282226, 1894.400390, -94.692001, 0.000000, 0.000000, 18.146400, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2359, 878.830322, 1892.695190, -91.984397, 0.000000, 0.000000, 128.146392, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 883.019531, 1892.280639, -94.796577, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 882.759155, 1892.359741, -94.796577, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 883.304199, 1892.802734, -94.796600, 0.000000, 0.000000, 10.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 883.651977, 1892.288330, -94.796577, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 882.451721, 1892.697387, -94.796600, 0.000000, 0.000000, 2310.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(3014, 880.913452, 1892.442993, -94.797981, 0.000000, 0.000000, 351.004821, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(3014, 883.751342, 1892.932617, -94.797981, 0.000000, 0.000000, 351.004821, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 880.174133, 1892.238281, -94.795196, 0.000000, 0.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 880.006713, 1892.752319, -94.795196, 0.000000, 0.000000, 192.167190, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 879.336730, 1892.331054, -94.795196, 0.000000, 0.000000, 172.585006, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 879.135559, 1892.918212, -94.795196, 0.000000, 0.000000, 172.585006, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 878.827270, 1892.325195, -94.796600, 0.000000, 0.000000, 2310.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2040, 878.573608, 1892.913330, -94.796600, 0.000000, 0.000000, 2312120.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2985, 876.092041, 1892.684204, -94.896400, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 875.075256, 1892.310668, -94.795196, 0.000000, 0.000000, 172.585006, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 875.273376, 1892.843627, -94.795196, 0.000000, 0.000000, 179.699157, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(358, 883.480651, 1891.990844, -93.747673, 0.000000, 0.000000, 6.609360, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(358, 883.480651, 1891.990844, -93.041656, 0.000000, 0.000000, 6.609360, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(358, 883.480651, 1891.990844, -93.344673, 0.000000, 0.000000, 6.609360, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(358, 882.344970, 1891.933471, -92.940658, 0.000000, 0.000000, 6.609360, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(358, 882.344970, 1891.933471, -93.242652, 0.000000, 0.000000, 6.609360, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(357, 882.392028, 1891.950683, -93.654411, 0.000000, 0.000000, 7.258399, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(357, 881.354187, 1891.978637, -94.056396, 0.000000, 5.000000, 7.258399, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(357, 881.354187, 1891.978637, -93.554412, 0.000000, 5.000000, 7.258399, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(356, 879.975097, 1891.964599, -93.963943, 0.000000, 0.000000, 4.166958, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(356, 880.489562, 1891.943115, -93.051856, 0.000000, 0.000000, 4.166958, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(356, 880.489562, 1891.943115, -92.748847, 0.000000, 0.000000, 4.166958, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(356, 879.856811, 1891.935791, -93.561950, 0.000000, 0.000000, 4.166958, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(355, 878.230346, 1891.962890, -93.771057, 0.000000, 0.000000, 4.286859, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(355, 879.005249, 1891.971435, -92.961013, 0.000000, 0.000000, 4.286859, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(355, 878.964904, 1892.002563, -93.263999, 0.000000, 0.000000, 184.286895, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(355, 877.823364, 1892.004516, -93.364997, 0.000000, 0.000000, 184.799072, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(372, 877.851501, 1891.960449, -94.249458, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(372, 881.882995, 1891.951416, -94.569976, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(372, 881.244689, 1891.966064, -93.134376, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(353, 877.461975, 1892.021728, -93.835113, 0.000000, 0.000000, 187.143539, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(353, 877.461975, 1892.021728, -94.236099, 0.000000, 0.000000, 187.143539, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(941, 884.311401, 1895.735961, -94.491661, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(923, 873.681884, 1898.495849, -94.090263, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(923, 873.347045, 1892.479736, -94.191261, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1271, 875.117858, 1898.388793, -94.600730, 0.000000, 0.000000, 19.877969, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1271, 876.172546, 1898.425659, -94.600700, 0.000000, 0.000000, 129.878005, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1271, 875.284545, 1897.367553, -94.600730, 0.000000, 0.000000, 351.940856, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1271, 871.975708, 1892.894653, -94.600730, 0.000000, 0.000000, 351.940856, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(11729, 883.568298, 1898.799560, -94.896469, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(11729, 882.891235, 1898.800659, -94.896469, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(14411, 886.773620, 1901.068115, -98.090896, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(3092, 891.685852, 1910.355468, -96.893997, 90.000000, 90.000000, 224.699783, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1805, 892.696166, 1903.925415, -97.830596, 0.000000, 88.000000, 331.300292, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(941, 890.355712, 1902.336669, -97.719886, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2907, 890.174133, 1901.981933, -97.147300, 0.000000, 0.000000, 335.996002, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2905, 890.656921, 1902.023681, -97.245437, 0.000000, 0.000000, 9.406450, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2908, 890.059631, 1902.704956, -97.189498, 0.000000, 0.000000, 261.832977, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2906, 890.539306, 1903.256225, -97.205596, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19583, 890.817504, 1903.322875, -97.237899, 0.000000, 0.000000, 344.007141, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(341, 889.879699, 1900.975585, -97.803497, 0.000000, 30.000000, 26.372840, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19924, 890.147216, 1902.610473, -95.013778, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19590, 890.304504, 1902.777587, -97.221298, 0.000000, 90.000000, 192.838867, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(3092, 892.484680, 1904.737182, -97.928298, 180.000000, 90.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2907, 891.932922, 1909.912231, -97.004302, 0.000000, 0.000000, 335.996002, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2905, 891.069824, 1909.505981, -97.027397, 0.000000, 0.000000, 17.048099, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2906, 892.284729, 1909.474243, -97.042701, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1463, 891.546691, 1911.464477, -97.211593, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1463, 892.306762, 1910.453979, -97.175605, 0.000000, 0.000000, 69.300003, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18694, 891.512023, 1911.340942, -101.443695, 91.499977, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19632, 901.447875, 1909.789062, -97.263168, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1463, 891.123535, 1909.961547, -97.275611, 0.000000, 0.000000, 147.700042, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1463, 892.927917, 1907.830688, -97.715599, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2805, 892.948608, 1906.119995, -96.915496, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2805, 892.322814, 1906.123046, -96.915496, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1370, 893.029907, 1900.156127, -97.519996, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2060, 890.221496, 1908.139038, -97.775199, 0.000000, 0.000000, 101.132202, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2060, 890.221496, 1908.139038, -97.934196, 0.000000, 0.000000, 84.351898, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1897, 893.273620, 1906.115478, -96.136802, 270.000000, 90.000000, 180.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2671, 891.352294, 1906.766479, -98.010803, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(3675, 891.619445, 1912.182739, -88.904693, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2359, 884.024169, 1892.755126, -91.984397, 0.000000, 0.000000, 18.146400, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2358, 884.573852, 1897.593383, -94.795196, 0.000000, 0.000000, 282.838928, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1544, 890.758117, 1903.568237, -97.256896, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1893, 872.465332, 1895.286010, -90.444297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1893, 877.485168, 1895.181396, -90.444297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1893, 881.643371, 1894.997192, -90.444297, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(1893, 892.099121, 1901.948852, -94.867103, 0.000000, 0.000000, 90.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2082, 856.929748, 1909.006469, -90.804656, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2082, 856.964721, 1926.548461, -90.804656, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2251, 857.326354, 1909.542480, -89.461402, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2251, 857.359375, 1927.052856, -89.461402, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 865.653503, 1954.438110, -95.980865, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 865.653503, 1954.438110, -95.980865, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 867.390075, 1951.026611, -95.980865, 0.000000, 0.000000, 43.199996, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 867.390075, 1951.026611, -95.980865, 0.000000, 0.000000, 43.199996, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 872.795471, 1950.744140, -95.980865, 0.000000, 0.000000, 135.999954, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 872.795471, 1950.744140, -95.980865, 0.000000, 0.000000, 135.999954, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 875.194763, 1953.604736, -95.980865, 0.000000, 0.000000, 164.699981, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 875.194763, 1953.604736, -95.980865, 0.000000, 0.000000, 164.699981, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.359130, 1959.069580, -93.105117, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.359130, 1959.055175, -92.025215, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.359130, 1959.039916, -90.925300, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.359130, 1959.023803, -89.705383, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 867.359130, 1959.003784, -88.285552, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.550231, 1959.073974, -88.284637, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.603576, 1959.066040, -93.135231, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.545715, 1959.077148, -92.064971, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.547546, 1959.083007, -90.974723, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2707, 873.548400, 1959.075073, -89.654670, 90.800003, 174.900009, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 866.509094, 1957.755859, -95.970878, 0.000000, 0.000000, -22.899990, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 866.509094, 1957.755859, -95.970878, 0.000000, 0.000000, -22.899990, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 874.660339, 1957.331665, -95.970848, 0.000000, 0.000000, -159.999954, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18676, 874.660339, 1957.331665, -95.970848, 0.000000, 0.000000, -159.999954, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2232, 875.842041, 1947.651611, -90.719268, 0.000000, 0.000000, -88.500030, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2232, 865.115722, 1947.378417, -90.719268, 0.000000, 0.000000, 90.599922, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19152, 879.953491, 1962.379882, -91.200660, 0.000000, 0.000000, -32.099994, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19150, 870.650390, 1957.571533, -85.254829, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19152, 860.222473, 1961.486694, -90.560722, 0.000000, 0.000000, 35.800003, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19149, 870.016418, 1954.829956, -79.951271, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19152, 861.515380, 1952.832885, -92.418624, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19152, 879.675598, 1955.763061, -92.418624, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19294, 870.386474, 1960.429565, -70.595695, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19148, 871.652893, 1968.259643, -76.624084, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19156, 878.267883, 1961.580078, -88.756233, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19156, 863.397888, 1961.580078, -88.756233, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19152, 871.045471, 1957.105834, -81.776359, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19152, 867.612609, 1952.628417, -101.203414, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(18748, 891.606689, 1909.242675, -98.484703, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(337, 889.995605, 1907.334106, -97.238685, 177.999877, -8.399998, 170.199996, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2261, 857.349182, 1910.436035, -89.185867, 0.000000, 0.000000, 90.000022, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2261, 857.349182, 1925.565795, -89.185867, 0.000000, 0.000000, 90.000022, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19295, 869.754150, 1917.670776, -70.165901, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19295, 834.356933, 1922.335449, -95.926383, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19295, 849.796936, 1918.435424, -72.306396, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19295, 846.757446, 1918.497070, -109.406349, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(19295, 897.164184, 1917.670776, -91.675865, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2074, 891.567016, 1907.003173, -95.386337, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2074, 891.567016, 1907.003173, -95.386337, 0.000000, 0.000000, 0.000000, 150.00, 150.00); 
	tmpobjid = CreateDynamicObjectEx(2855, 882.979309, 1913.056518, -89.385307, 0.000000, 0.000000, -45.999996, 150.00, 150.00);
	//MAFIA HOUSE INTERIOR DOWNLOADED - close
	//RCPD Cells
	rcpdCell1 = CreateObject(19302, 266.282501, 80.981002, 1001.280395, 0.000000, 0.000000, -91.799995);
	rcpdCell2 = CreateObject(19302, 266.431854, 85.738708, 1001.280395, 0.000000, 0.000000, -91.799995);
	Create3DTextLabel("{FF0000}Cell 2\n{FFFFFF}ENTER", 0x08FF08FF, 266.2491,84.4284,1001.7091, 6, 1);
	Create3DTextLabel("{FF0000}Cell 1\n{FFFFFF}ENTER", 0x08FF08FF, 266.2492,88.6102,1001.7091, 6, 1);
	//armours - open
	lvpdArmour = CreateDynamicPickup(1242, 1, 1586.7275, -1682.0957, 2982.2800, 1, 6);
	lspdArmour = CreateDynamicPickup(1242, 1, 1359.1387, 1570.7665, 1467.6976, 1, 6);
	rcpdArmour = CreateDynamicPickup(1242, 1, 253.2745,76.8031,1003.6406, 1, 6);
	KACCArmour = CreateDynamicPickup(1242, 1, 2594.1243,2787.1602,10.8203, 0, 0);
	ArmyArmour = CreateDynamicPickup(1242, 1, 209.0646, 1812.5510, 21.8672, 0, 0);
	fbiArmour[0] = CreateDynamicPickup(1242, 1, 1570.0292, -1688.6154, 62.1910, 1, 5);
	fbiArmour[1] = CreateDynamicPickup(1242, 1, 1570.0292, -1688.6154, 62.1910, 1, 6);
	//armours - close
	//gun machines - open
	Create3DTextLabel("{AA8CFF}FBI's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1570.0121, -1691.7775, 62.1910, 12, 1, 5);	//fbi gunmachine
	Create3DTextLabel("{AA8CFF}FBI's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1570.0121, -1691.7775, 62.1910, 12, 1, 6);	//fbi gunmachine
	Create3DTextLabel("{0040FF}LSPD's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1348.3685, 1570.4054, 1467.6976, 12, 1, 6);	//lspd gunmachine
	Create3DTextLabel("{0040FF}RCPD's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 256.9827,66.0424,1003.6406, 12, 1, 6);	//rcpd gunmachine
	Create3DTextLabel("{0040FF}LVPD's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1590.1691, -1682.0958, 2982.2700, 12, 1, 6);	//lvpd gunmachine
	Create3DTextLabel("{C49A02}Military Aviation's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 880.5675, -2255.6067, 12.8527, 12, 0, 0);	//Military Aviation gunmachine
	Create3DTextLabel("{C49A02}San Andreas Army's Guns\n{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 213.2412, 1806.7898, 17.6406, 12, 0, 0);	//San Andreas Army gunmachine
	CreateDynamicObject(18885, 213.2412, 1806.7898, 17.6406, 0, 0, 0, 0);	// San Andreas Army
	//gun machines - close
	//lspd gates - open
	lspdGateDoor = CreateDynamicObject(6400, 1581.93713, -1637.98376, 13.92183, 0.00000, 0.00000, -87.09998);
	lspdGate = CreateDynamicObject(10558, 1588.66833, -1638.39941, 14.45710, 0.00000, 0.00000, -90.60007);
	Create3DTextLabel("{0040FF}Само за Los Santos Police Department\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 1588.2328, -1635.5154, 13.3828, 12, 0, 0);	//lspd
	lspdPort = CreateDynamicObject(968, 1544.74634, -1630.74500, 13.01674, 1.00000, -89.50008, -89.20010);
	Create3DTextLabel("{0040FF}Само за Los Santos Police Department\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 1542.8047, -1627.7461, 13.3828, 12, 0, 0);	//lspd
	//lspd gates - close
	//lvpd gates - open
	lvpdPort1 = CreateDynamicObject(968, 2238.143798, 2450.422607, 10.642805, 0.000000, -90.699943, -90.500106); 
	Create3DTextLabel("{0040FF}Само за Las Venturas Police Department\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 2236.8057, 2453.7966, 10.6956, 12, 0, 0);	//lvpd
	
	lvpdPort2 = CreateDynamicObject(19880, 2335.135498, 2443.826660, 9.541273, 0.000000, 0.000000, 63.700000); 
	Create3DTextLabel("{0040FF}Само за Las Venturas Police Department\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 2338.5601,2443.2805,6.3782, 12, 0, 0);	//lvpd
	//lvpd gates - close
	//San Andreas Army - open
	CreateObject(19313, 344.711486, 1797.858520, 18.126768, 0.000000, 0.000000, 34.900020);
	CreateObject(19313, 96.767890, 1914.917602, 20.396505, 0.000000, 0.000000, -89.899971);
	CreateObject(19312, 191.151473, 1870.016113, 21.471294, 0.000000, 0.000000, 0.000000);
	//San Andreas Army - close
	//Drug Factory Interior - open

	//Drug Factory Interior - close
	//FUEL COMPANY - location - open
	CreateObject(11546, 285.549499, 1386.814086, 9.519872, 0.000000, 0.000000, -88.500015);
	CreateObject(9193, 286.184661, 1398.065063, 14.108742, 0.000000, 0.000000, 0.000000);
	CreateObject(9193, 286.184661, 1423.356567, 14.108742, 0.000000, 0.000000, 0.000000);
	CreateObject(16083, 264.158660, 1459.661010, 14.346237, 0.000000, 0.000000, 79.399955);
	//FUEL COMPANY - location - close

	//grove 2
	CreateDynamicObject(1446, 2498.60352, -1688.16382, 13.23430, 0.00000, 0.00000, 189.97000);
	CreateDynamicObject(1446, 2492.01855, -1687.95483, 13.23430, 0.00000, 0.00000, 180.44501);
	CreateDynamicObject(1446, 2487.46313, -1688.00232, 13.23430, 0.00000, 0.00000, 180.44501);
	CreateDynamicObject(1281, 2462.60522, -1680.65076, 13.26070, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 2459.45776, -1672.93018, 13.26070, 0.00000, 0.00000, 55.00000);
	CreateDynamicObject(1281, 2457.20166, -1678.81824, 13.26070, 0.00000, 0.00000, 113.00000);
	CreateDynamicObject(1775, 2465.97461, -1684.51794, 13.59460, 0.00000, 0.00000, 178.00000);
	CreateDynamicObject(1776, 2464.59058, -1684.52441, 13.55690, 0.00000, 0.00000, 178.00000);
	CreateDynamicObject(1302, 2463.15527, -1684.53479, 12.47900, 0.00000, 0.00000, 178.00000);
	CreateDynamicObject(1340, 2455.21289, -1673.88379, 13.59570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1341, 2454.39453, -1671.55237, 13.46650, 0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19167, 2459.83740, -1672.55762, 13.28000, 0.00000, 0.00000, 0.00000);
	//grove 2

	//cripz
	CreateObject(3095, 333.30530, -1208.72827, 74.75200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 340.37061, -1203.14844, 74.89200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 326.26358, -1214.31177, 74.61200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 331.81860, -1221.28308, 74.61200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 338.86539, -1215.69873, 74.75200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 345.90820, -1210.13110, 74.89200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 351.47195, -1217.15051, 74.89200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 344.41721, -1222.73438, 74.75200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 337.38303, -1228.30908, 74.61200, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 319.22321, -1219.88525, 74.50300, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 324.72101, -1226.84021, 74.49000, 0.00000, -0.92000, 38.36000);
	CreateObject(3095, 330.32889, -1233.87610, 74.47200, 0.00000, -0.92000, 38.36000);
	CreateObject(19866, 342.66858, -1198.77771, 75.40250, 0.00000, 0.00000, 38.00000);
	CreateObject(19866, 345.71487, -1202.67529, 75.40250, 0.00000, 0.00000, 38.00000);
	CreateObject(19866, 348.78024, -1206.59790, 75.40250, 0.00000, 0.00000, 38.00000);
	CreateObject(19866, 351.80658, -1210.46277, 75.40250, 0.00000, 0.00000, 38.00000);
	CreateObject(19866, 354.86295, -1214.38098, 75.40250, 0.00000, 0.00000, 38.00000);
	CreateObject(19866, 356.14871, -1216.00757, 75.38250, 0.00000, 0.00000, 38.00000);
	CreateObject(19866, 351.81500, -1222.48975, 75.36250, 0.44000, 0.00000, -51.24000);
	CreateObject(19866, 347.93579, -1225.61719, 75.30250, 0.94000, 0.00000, -51.06000);
	CreateObject(19866, 355.69131, -1219.39490, 75.38250, -0.02000, 0.00000, -51.68000);
	CreateObject(19866, 344.08469, -1228.74353, 75.22250, 0.96000, 0.00000, -51.06000);
	CreateObject(19866, 340.21161, -1231.87244, 75.12250, 1.42000, 0.00000, -51.06000);
	CreateObject(19866, 336.32349, -1235.01733, 75.00250, 1.20000, 0.00000, -51.06000);
	CreateObject(19866, 332.45239, -1238.17261, 74.89250, 1.20000, 0.00000, -51.06000);
	CreateObject(19866, 331.64145, -1238.82043, 74.86250, 1.20000, 0.00000, -51.06000);
	CreateObject(19866, 328.24133, -1238.43713, 74.86250, 1.00000, 0.00000, 38.46000);
	CreateObject(19866, 325.16428, -1234.55237, 74.90250, 0.00000, 0.00000, 38.46000);
	CreateObject(19866, 322.07050, -1230.65295, 74.90250, 0.00000, 0.00000, 38.46000);
	CreateObject(19866, 318.96988, -1226.77319, 74.90250, 0.00000, 0.00000, 38.46000);
	CreateObject(19866, 315.86377, -1222.86621, 74.90250, 0.00000, 0.00000, 38.46000);
	CreateObject(19866, 314.17480, -1220.74158, 74.90250, 0.00000, 0.00000, 38.46000);
	CreateObject(19866, 314.71570, -1217.34058, 74.94250, 0.88000, 0.00000, -53.00000);
	CreateObject(19866, 318.65970, -1214.37170, 75.00250, 0.74000, 0.00000, -53.00000);
	CreateObject(19866, 322.63400, -1211.38306, 75.06250, 0.82000, 0.00000, -53.00000);
	CreateObject(3095, 319.19171, -1219.63428, 74.48300, 0.00000, -0.92000, 38.36000);
	CreateObject(19866, 326.59201, -1208.36963, 75.13500, 0.82000, 0.00000, -52.58000);
	CreateObject(19866, 330.52246, -1205.31323, 75.21500, 0.86000, 0.00000, -51.62000);
	CreateObject(19866, 339.27686, -1198.38013, 75.35500, 0.86000, 0.00000, -51.62000);
	CreateObject(966, 337.83450, -1200.01636, 75.35740, 0.00000, 0.00000, 37.44000);
	CreateObject(8407, 340.34579, -1199.40454, 76.84730, 0.00000, 0.00000, 38.48000);
	CreateObject(1482, 344.21863, -1202.92847, 77.15720, 0.00000, 0.00000, -142.00000);
	CreateObject(1482, 348.34329, -1208.17688, 77.15720, 0.00000, 0.00000, -141.80000);
	CreateObject(1482, 352.49255, -1213.42944, 77.15720, 0.00000, 0.00000, -141.80000);
	CreateObject(1482, 354.22189, -1218.85913, 77.05720, 0.00000, 0.00000, -231.34900);
	CreateObject(1482, 354.53720, -1215.98816, 77.15520, 0.00000, 0.00000, -141.80000);
	CreateObject(1482, 349.03400, -1223.05396, 77.05720, 0.00000, 0.00000, -231.34900);
	CreateObject(1482, 343.81119, -1227.24243, 77.05720, 0.00000, 0.00000, -230.92700);
	CreateObject(1482, 338.62149, -1231.45728, 77.04720, 0.00000, 0.00000, -230.92700);
	CreateObject(1482, 333.45239, -1235.68298, 77.03720, 0.00000, 0.00000, -230.92700);
	CreateObject(1482, 328.75711, -1236.91760, 77.02720, 0.00000, 0.00000, 38.31000);
	CreateObject(1482, 324.61758, -1231.70496, 77.02720, 0.00000, 0.00000, 38.48000);
	CreateObject(1482, 320.43872, -1226.46985, 77.02720, 0.00000, 0.00000, 38.48000);
	CreateObject(1482, 316.26382, -1221.23621, 77.02720, 0.00000, 0.00000, 38.48000);
	CreateObject(19122, 332.20096, -1203.59973, 75.88240, 0.00000, 0.00000, 0.00000);
	CreateObject(19122, 337.22427, -1199.68848, 75.88240, 0.00000, 0.00000, 0.00000);
	CreateObject(1341, 329.07230, -1204.18530, 76.29900, 0.00000, 0.00000, 98.00000);
	CreateObject(1340, 326.24402, -1205.88281, 76.38960, 0.00000, 0.00000, 115.00000);
	CreateObject(1290, 329.05869, -1206.54504, 79.59240, 0.06000, 0.00000, -52.88000);
	CreateObject(1290, 319.66229, -1213.76733, 79.39240, 0.00000, 0.00000, -52.88000);
	CreateObject(1297, 356.72153, -1217.71582, 78.62860, 0.00000, 0.00000, -8.00000);
	CreateObject(1297, 329.79642, -1239.35913, 78.29860, 0.00000, 0.00000, -98.00000);
	CreateObject(1597, 334.02054, -1217.78528, 77.79540, -0.68000, 0.00000, 129.60001);
	CreateObject(19122, 331.75293, -1203.00769, 75.88240, 0.00000, 0.00000, 0.00000);
	CreateObject(19122, 331.26236, -1202.37781, 75.88240, 0.00000, 0.00000, 0.00000);
	CreateObject(19122, 336.81393, -1199.16235, 75.88240, 0.00000, 0.00000, 0.00000);
	CreateObject(19122, 336.29953, -1198.47546, 75.88240, 0.00000, 0.00000, 0.00000);
	CreateObject(700, 347.36966, -1195.42139, 72.64030, 356.85840, 0.00000, -2.00710);
	CreateObject(700, 311.08365, -1222.28674, 74.08030, 356.85840, 0.00000, -2.00710);
	//CreateDynamicObject(968, 337.33939, -1200.37244, 0.08190,   0.00000, 0.00000, 127.06000);
	//CreateDynamicObject(968, 337.66650, -1200.02100, 0.08190,   -90.00000, 0.00000, 127.00000);
	//cripz
	//grove

	//groveb1=CreateDynamicObject(968, 2451.77979, -1648.77783, 13.54980,    0.00000, -92.00000, 0.00000);
	CreateDynamicObject(1468, 2461.79297, -1641.07568, 13.81250, 356.85840, 0.00000, 1.57080);
	CreateDynamicObject(1468, 2461.79932, -1635.89941, 13.81250, 356.85840, 0.00000, 1.57080);
	CreateDynamicObject(19381, 2430.44482, -1644.25208, 12.47700, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19381, 2440.83130, -1644.20117, 12.47620, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19381, 2451.32300, -1644.19324, 12.49550, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19381, 2451.36133, -1634.68567, 12.49650, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19381, 2440.91235, -1634.69397, 12.49620, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19381, 2430.44678, -1634.69531, 12.49620, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19866, 2425.28760, -1632.37390, 12.59763, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2425.28247, -1637.28931, 12.59763, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2425.27246, -1646.56519, 12.59760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2425.28003, -1641.75879, 12.59763, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2427.68408, -1649.07935, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2432.68408, -1649.07935, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2437.68408, -1649.07935, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2442.68408, -1649.07935, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2454.12402, -1649.05640, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2456.52222, -1646.63843, 12.59760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2456.52222, -1641.63843, 12.59760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2456.52222, -1636.63843, 12.59760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2456.52222, -1632.35840, 12.59760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 2454.12134, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2449.12134, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2444.12134, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2439.12134, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2434.12134, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2429.12134, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 2427.70142, -1629.95813, 12.59760, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(966, 2451.92480, -1648.70081, 12.55674, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8407, 2453.84912, -1648.05908, 13.87740, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2428.61816, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2430.99829, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2433.41821, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2435.69824, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2438.17822, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2440.87817, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2443.53809, -1647.39099, 10.82250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2428.56958, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2431.34961, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2434.00952, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2436.72949, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2439.46948, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2442.32959, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2445.22949, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2448.12939, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2451.08960, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2453.98950, -1631.63892, 10.84250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 2426.93579, -1633.15845, 10.84250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 2426.97583, -1635.69824, 10.84250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 2426.97583, -1637.95825, 10.84250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 2426.97583, -1640.37830, 10.84250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 2426.97583, -1642.85828, 10.84250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 2426.97583, -1645.85828, 10.84250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19123, 2443.50366, -1645.78491, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2440.85669, -1645.76685, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2438.13770, -1645.73657, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2435.67822, -1645.78638, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2433.36865, -1645.80554, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2430.99097, -1645.80225, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2428.61060, -1645.86597, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2428.48877, -1642.86169, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2428.54077, -1640.39465, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2428.52051, -1637.99365, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2428.54517, -1635.71069, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2428.56055, -1633.16907, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2431.34937, -1633.19519, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2434.00000, -1633.16846, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2436.71045, -1633.21252, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2439.45679, -1633.21179, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2442.29663, -1633.19922, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2445.19995, -1633.23206, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2448.12476, -1633.24817, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2451.07837, -1633.19775, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 2453.97949, -1633.25195, 13.02010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 2426.36450, -1648.21362, 16.42970, 357.00000, 0.00000, -145.00000);
	CreateDynamicObject(1226, 2426.36914, -1630.78772, 16.42970, 357.00000, 0.00000, 145.00000);
	CreateDynamicObject(1226, 2455.45435, -1630.98413, 16.42970, 357.00000, 0.00000, 45.00000);
	CreateDynamicObject(1226, 2455.55420, -1648.06543, 16.42970, 357.00000, 0.00000, -45.00000);
	CreateDynamicObject(627, 2427.15771, -1647.48950, 14.36040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(627, 2427.21558, -1631.72461, 14.36040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(627, 2455.28931, -1631.59558, 14.36040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(627, 2455.83154, -1648.34680, 14.36040, 0.00000, 0.00000, 0.00000);
	//grove
	//Unseen Criminals LS - OPEN
	CreateDynamicObject(3095, 1276.26904, -1998.28638, 57.65160, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1249.11206, -1998.17908, 58.50360, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1262.68994, -1998.23096, 58.07360, 0.00000, 0.00000, 0.00000);
	
	CreateDynamicObject(19383, 1246.21716, -2002.58130, 60.73510, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19399, 1252.00830, -2002.58130, 60.73510, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19426, 1248.59692, -2002.58130, 60.73510, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19426, 1250.13892, -2002.57935, 60.73510, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 1253.52747, -2000.96338, 60.73510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 1253.52551, -1997.93140, 60.73510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 1253.52747, -1995.29138, 60.73510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 1251.88977, -1993.77307, 60.73510, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 1248.72485, -1993.77710, 60.73510, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 1246.23486, -1993.77307, 60.73510, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19353, 1244.71716, -1995.38062, 60.73510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 1244.72119, -1998.56055, 60.73510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19353, 1244.71716, -2000.93054, 60.73510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1504, 1245.43628, -2002.70337, 58.96280, 0.00000, 0.00000, 65.00000);
	CreateDynamicObject(1649, 1251.20374, -2002.55908, 60.31350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10942, 1240.34973, -2039.74548, 705615.00000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 1262.72571, -1998.52832, 62.02130, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19355, 1258.29004, -2001.12244, 60.35530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1258.29663, -1997.93103, 60.35530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1258.29663, -1995.34094, 60.35530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1259.95789, -1993.83264, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1263.14795, -1993.83264, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1263.14795, -1993.83264, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1267.09375, -1995.48743, 60.35530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1267.09375, -1998.60742, 60.35530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1267.09375, -2001.11743, 60.35530, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19385, 1259.95715, -2002.63318, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19401, 1263.15479, -2002.62329, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19428, 1265.44580, -2002.62732, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19428, 1266.27576, -2002.62524, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1271.87573, -2001.16418, 59.87550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1271.87573, -1997.96814, 59.87550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1271.87573, -1995.38806, 59.87550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19401, 1265.55957, -1993.84473, 60.35530, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1273.51514, -1993.87769, 59.87550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1276.70508, -1993.87769, 59.87550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1279.15515, -1993.87769, 59.87550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1280.67249, -1995.49585, 59.87550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1280.67249, -1998.55579, 59.87550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1280.67249, -2001.16577, 59.87550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19388, 1273.49292, -2002.67981, 59.87550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19404, 1279.09180, -2002.68396, 59.87550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1276.24048, -2002.68335, 59.87550, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1249.01587, -1998.47290, 62.40400, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 1276.30737, -1998.33386, 61.54400, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1504, 1259.11572, -2002.74866, 58.57780, 0.00000, 0.00000, 65.00000);
	CreateDynamicObject(1504, 1272.69055, -2002.80090, 58.14780, 0.00000, 0.00000, 65.00000);
	CreateDynamicObject(1649, 1263.39514, -2002.66895, 60.00850, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1264.78723, -1993.82239, 60.00850, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1278.33069, -2002.63940, 59.66350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2434, 1250.05005, -1995.25281, 59.03540, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2435, 1250.04980, -1994.32458, 59.03360, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2435, 1251.16528, -1995.41968, 59.03360, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2435, 1252.08533, -1995.41968, 59.03360, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2435, 1252.99524, -1995.41968, 59.03360, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, 1244.81445, -1995.17456, 59.01580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 1245.75867, -1993.86072, 59.01580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1817, 1250.75098, -2001.18616, 59.05670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2256, 1253.40906, -1998.75586, 61.12590, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19998, 1251.66772, -2000.95386, 59.65020, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19897, 1250.93750, -2000.91931, 59.57030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 1251.88232, -2001.92322, 59.05700, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1724, 1252.93176, -2000.17847, 59.05710, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1724, 1247.06213, -1994.80225, 59.05710, 0.00000, 0.00000, 25.00000);
	CreateDynamicObject(1724, 1245.30334, -1997.06104, 59.05710, 0.00000, 0.00000, 69.00000);
	CreateDynamicObject(2239, 1252.81592, -2001.75049, 59.05770, 0.00000, 0.00000, -120.00000);
	CreateDynamicObject(19124, 1245.07288, -1994.21582, 59.61590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2450, 1260.84924, -1996.13306, 58.60670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2446, 1259.86121, -1996.13147, 58.61680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2446, 1258.86816, -1996.12915, 58.61680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2446, 1260.60962, -1994.43408, 58.61680, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2446, 1260.60791, -1995.42212, 58.61680, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 1266.97400, -2001.23840, 58.59580, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2161, 1266.01025, -2002.54102, 58.59580, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1724, 1264.80603, -2001.59717, 58.57710, 0.00000, 0.00000, 209.00000);
	CreateDynamicObject(1724, 1266.50269, -1999.50110, 58.58710, 0.00000, 0.00000, 246.00000);
	CreateDynamicObject(1817, 1264.21228, -1996.07092, 58.61670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 1263.45386, -1994.44385, 58.57700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1724, 1266.46753, -1994.95117, 58.57710, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2239, 1266.26111, -1994.53101, 58.58770, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(2435, 1278.09741, -1994.41443, 58.16510, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2435, 1279.23376, -1995.49304, 58.16510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2435, 1280.14380, -1995.49304, 58.16510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2434, 1278.10010, -1995.32141, 58.16520, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1723, 1279.13379, -2002.10803, 58.19430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1724, 1280.05969, -2000.57605, 58.19440, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1817, 1277.74316, -2001.50488, 58.18670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2239, 1280.08545, -2002.19275, 58.15770, 0.00000, 0.00000, -149.00000);
	CreateDynamicObject(1775, 1272.42090, -1996.68494, 59.27240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1209, 1272.26343, -1995.17688, 58.16150, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2035, 1274.16504, -1993.97351, 60.21630, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2036, 1275.35181, -1993.96912, 60.71870, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2044, 1276.05225, -1993.98682, 60.19600, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1266.70813, -2002.25134, 58.98590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 1241.89526, -2002.60486, 59.50290, 0.00000, -2.00000, 0.00000);
	CreateDynamicObject(1408, 1236.69531, -2002.60486, 59.32290, 0.00000, -2.00000, 0.00000);
	CreateDynamicObject(1408, 1255.78516, -2002.57166, 59.26290, 0.00000, 2.00000, 0.51000);
	CreateDynamicObject(1408, 1269.47168, -2002.64758, 58.81290, 0.00000, 2.00000, 0.00000);
	CreateDynamicObject(1408, 1281.41736, -2002.69324, 58.42290, 0.00000, 2.00000, 0.00000);
	CreateDynamicObject(1408, 1284.13721, -2005.48987, 58.35290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2010.68994, 58.35290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2015.89990, 58.40290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2021.10986, 58.42290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2026.31995, 58.42290, 0.00000, -0.58000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2031.52991, 58.45290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2036.72986, 58.49290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13721, -2041.94995, 58.51290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 1284.13916, -2043.95996, 58.52290, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1340, 1241.55457, -2005.66565, 60.11570, 0.00000, 0.00000, -47.00000);
	CreateDynamicObject(1342, 1239.89380, -2007.80334, 59.93560, 0.00000, 0.00000, -18.00000);
	CreateDynamicObject(1257, 1286.46460, -2047.98145, 59.02160, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(1281, 1240.60754, -2011.90735, 59.72740, 0.00000, -0.69000, 56.00000);
	CreateDynamicObject(1281, 1240.55994, -2016.19910, 59.72740, 0.00000, -0.69000, 56.00000);
	CreateDynamicObject(1286, 1242.76868, -2008.16492, 59.54950, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1288, 1242.76477, -2008.65015, 59.55180, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1285, 1242.76599, -2009.12598, 59.55130, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(736, 1240.56360, -2000.15979, 69.59790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1255.69275, -2000.24072, 68.65790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1269.39648, -2000.32996, 68.35790, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(886, 1287.01953, -2010.86084, 57.29040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(886, 1289.77625, -2035.48120, 57.14040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 1293.21155, -2021.34485, 55.41470, 356.85840, 0.00000, -1.80260);
	CreateDynamicObject(3472, 1237.85925, -2002.96265, 58.90380, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1283.17749, -2003.79980, 57.86380, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1283.59180, -2046.56226, 57.78380, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1243.93140, -2003.09497, 63.03630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1254.03052, -2003.14307, 63.02630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1248.99756, -2003.18237, 63.02630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1262.53699, -2003.09998, 62.57630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1257.74463, -2003.11902, 62.60630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1267.70996, -2003.10095, 62.65630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1276.31116, -2002.90576, 62.13630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1271.26978, -2002.92432, 62.13630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1281.32153, -2002.97559, 62.13630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1235, 1283.84814, -2049.34351, 58.50110, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2222, 1240.82593, -2015.74902, 59.81590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2222, 1240.89832, -2011.32910, 59.81590, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1236.03210, -2042.54944, 59.19330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1236.01941, -2031.47900, 59.19330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 1308.93335, -2074.56934, 55.78906, 356.85840, 0.00000, -0.78349);
	CreateDynamicObject(762, 1273.07581, -2074.56494, 58.04090, 3.14160, 0.00000, 2.03680);
	CreateDynamicObject(661, 1290.01074, -2077.32397, 55.62880, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(9833, 1153.95435, -2020.11218, 70.76300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1153.97766, -2054.32422, 70.71300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1195.24512, -2019.73511, 70.47300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1196.71875, -2051.91406, 70.61300, 0.00000, 0.00000, 0.00000);
	CreateActor(91, 1251.0594, -1994.6299, 60.0590, 181.0540);	// guide
	CreateActor(93, 1259.9349, -1995.5428, 59.6290, 177.5839);	// guide
	CreateActor(17, 1279.0742, -1994.7058, 59.2070, 164.4340);	// guide

	CreateDynamicObject(3279, 1183.862060, -2009.009277, 68.095352, 0.000000, 0.000000, -88.300079);
	CreateDynamicObject(3279, 1182.549072, -2065.147460, 68.095352, 0.000000, 0.000000, 89.399948);
	CreateObject(8040, 1349.863281, -2007.726562, 55.741912, -0.899999, -0.800000, -82.600036);

	//Gates Shop
	CreateDynamicObject(19913, 1333.72021, -2024.36035, 61.34685, 0.00000, 0.00000, -83.00000);
	CreateDynamicObject(19913, 1330.06641, -1996.17542, 61.34685, 0.00000, 0.00000, -83.00000);
	CreateDynamicObject(19870, 1336.75598, -2049.12305, 58.93230, 0.00000, 0.00000, 6.00000);
	CreateDynamicObject(19870, 1340.91943, -2048.74390, 58.93230, 0.00000, 0.00000, 6.00000);
	unseenCriminalsGate1 = CreateDynamicObject(2990, 1350.60486, -2048.07642, 59.41744, 0.00000, 0.00000, 4.00000);
	unseenCriminalsGate2 = CreateDynamicObject(2990, 1360.36194, -2046.93872, 59.11782, 0.00000, 0.00000, 9.00000);
	
	Create3DTextLabel("{FF3737}Само за Unseen Criminals\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 1355.8478, -2048.7498, 56.6921, 15, 0, 0);	//Unseen Criminals
	//Unseen Criminals LS - CLOSE

	//Unseen Criminals LV - Open
	CreateObject(3279, 994.386901, 1074.001831, 9.666344, 0.000000, 0.000000, 0.000000); 
	CreateObject(3279, 982.197753, 1074.001831, 9.666344, 0.000000, 0.000000, 0.000000); 
	CreateObject(3279, 994.386901, 1121.291992, 9.666344, 0.000000, 0.000015, 0.000000); 
	CreateObject(3279, 982.197753, 1121.291992, 9.666344, 0.000000, 0.000015, 0.000000); 
	CreateObject(3279, 994.386901, 1153.882568, 9.666344, 0.000000, 0.000022, 0.000000); 
	CreateObject(3279, 982.197753, 1153.882568, 9.666344, 0.000000, 0.000022, 0.000000); 
	
	//TEST
	tmpobjid = CreateDynamicObject(987, 1039.534912, 1159.802734, 9.598573, -0.000014, -0.000000, -90.599952, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(987, 1017.765258, 1160.011840, 9.598573, -0.000007, 0.000000, -90.599975, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(987, 1039.534912, 1171.664794, 9.598573, -0.000022, -0.000000, -90.599929, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(987, 1017.765258, 1171.873901, 9.598573, -0.000014, 0.000000, -90.599952, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(987, 1039.534912, 1183.383911, 9.598573, -0.000029, -0.000000, -90.599906, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(987, 1017.765258, 1183.593017, 9.598573, -0.000022, 0.000000, -90.599929, -1, -1, -1, 300.00, 300.00); 
	
	//OBJECT ID: 8210 !!
	CreateDynamicObject(8210, 1155.51306, 1010.24957, 12.61266,   0.00000, 0.00000, 55.00000);
	CreateDynamicObject(8210, 1172.36340, 1060.62146, 12.61270,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(8210, 1174.30090, 1115.33032, 12.61270,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(8210, 1175.28809, 1147.48816, 12.61270,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(8210, 1149.02783, 1178.41882, 12.61270,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(8210, 1093.70251, 1181.34106, 12.61270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8210, 1066.21045, 1181.40100, 12.61270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8210, 989.52509, 1181.07434, 12.61270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8210, 961.08478, 1153.26929, 12.61270,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(8210, 959.81830, 1097.99146, 12.61270,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(8210, 975.85376, 1048.11096, 12.61270,   0.00000, 0.00000, 127.00000);
	
	CreateDynamicObject(6965, 1089.03027, 1073.26208, 13.45200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3505, 1067.76196, 1076.95703, 8.92371,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3505, 1084.08484, 1094.23914, 8.92371,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3505, 1107.75000, 1068.08423, 8.92371,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3505, 1086.72949, 1055.53503, 8.92371,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1050.86194, 1106.77808, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1069.74243, 1085.64136, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1061.36511, 1060.95996, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1065.59644, 1048.97327, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1080.40845, 1057.52393, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1099.53003, 1050.55811, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1106.43884, 1074.14697, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1116.68982, 1089.31335, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1110.27637, 1056.07678, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1089.58179, 1091.60632, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1107.01489, 1097.72839, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1068.44861, 1111.11255, 8.93290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1098.98254, 1095.21436, 11.76000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1110.02966, 1082.79907, 11.76000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1073.66125, 1054.28918, 11.76000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1067.18469, 1071.12366, 11.76000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1346, 1059.88623, 1001.80798, 11.33830,   0.00000, 0.00000, 161.00000);
	CreateDynamicObject(1346, 1062.08679, 1001.25604, 11.33830,   0.00000, 0.00000, 161.00000);
	CreateDynamicObject(1346, 1064.89111, 1000.56207, 11.33830,   0.00000, 0.00000, 161.00000);
	CreateDynamicObject(1342, 1018.74017, 1039.78516, 11.00020,   0.00000, 0.00000, 28.00000);
	CreateDynamicObject(1340, 1030.29138, 1029.14185, 11.03862,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject(1341, 1022.86206, 1034.05920, 10.87902,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8168, 1039.90332, 1157.00183, 11.36280,   0.00000, 0.00000, -78.00000);
	unseenCriminalsGate1_LV = CreateDynamicObject(2990, 1033.731079, 1174.793701, 13.425606, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00); 
	unseenCriminalsGate2_LV = CreateDynamicObject(2990, 1023.610839, 1174.793701, 13.425606, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00); 
	
	CreateDynamicObject(4641, 1016.49908, 1152.81299, 11.30772,   0.00000, 0.00000, 268.00000);
	Create3DTextLabel("{FF3737}Само за Unseen Criminals\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 1027.3562,1177.6782,10.6719, 15, 0, 0);	//Unseen Criminals
	//Unseen Criminals LV - Close

	//GROVE GATE - OPEN
	Create3DTextLabel("{33AA33}Само за Grove Street Families\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 2448.5400, -1650.9452, 13.4048, 15, 0, 0);	//grove
	groveGate = CreateDynamicObject(968, 2451.77979, -1648.77783, 13.54980, 0.00000, -92.00000, 0.00000);
	//GROVE GATE - CLOSE

	//BLACK MARKET - OPEN
	tmpobjid = CreateDynamicObject(983, 1849.644042, -1863.164428, 13.282809, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(983, 1851.486328, -1876.267578, 13.114594, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(983, 1858.380126, -1835.087646, 13.201409, 0.000000, -0.299999, 79.799995, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2121, 1865.617797, -1873.175659, 13.043338, 0.000000, 0.000000, -53.800010, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1369, 1866.301635, -1876.945312, 13.086498, 0.000000, 0.000000, -131.500061, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(849, 1864.797119, -1874.829101, 12.764517, 0.000000, 0.000000, -56.199996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18689, 1864.890136, -1874.976806, 10.084227, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3005, 1863.654296, -1878.223022, 12.510950, 0.000000, 0.000000, -83.599998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1412, 1856.779785, -1863.807373, 13.819031, 0.000000, 0.000000, -90.799957, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1412, 1856.853271, -1858.547973, 13.819031, 0.000000, 0.000000, -90.799957, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1459, 1859.409057, -1862.753051, 13.145540, 0.000000, 0.000000, 0.900000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2840, 1862.938720, -1874.229858, 12.555544, 0.000000, -5.200003, -53.999996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1372, 1864.339477, -1871.687011, 12.636197, 0.000000, 0.000000, -18.500003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(355, 1867.647583, -1876.305664, 14.273150, 0.000000, -0.299999, -82.199981, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1238, 1862.445068, -1871.704223, 12.824115, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.138671, -1866.266235, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.909423, -1866.266235, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.909423, -1867.036621, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.159057, -1867.036621, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//BLACK MARKET - CLOSE
	//army - open
	armyPort1 = CreateDynamicObject(19313, 135.142593, 1941.479492, 21.597537, 0.000000, 0.000000, 0.000000);
	armyPort2 = CreateDynamicObject(19313, 285.723236, 1820.534057, 19.915033, 0.000000, 0.000000, 89.800071);
	Create3DTextLabel("{C49A02}Само за San Andreas Army\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 136.5198, 1941.1293, 19.3139, 16, 0, 0);	//San Andreas Army
	Create3DTextLabel("{C49A02}Само за San Andreas Army\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 285.2253, 1820.8843, 17.6406, 16, 0, 0);	//San Andreas Army

	kaccPort = CreateDynamicObject(985, 2497.108642, 2777.073730, 11.421746, 0.000000, 0.000000, 90.000007); 
	kaccPort2 = CreateDynamicObject(986, 2496.962646, 2769.198974, 11.428610, 0.000000, 0.000000, 90.000007); 
	Create3DTextLabel("{C49A02}Само за Military Aviation\n{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 2495.6892, 2773.1677, 10.8188, 16, 0, 0);	//Military Aviation
	//army - close

	//taxi bar - open
	tmpobjid = CreateDynamicObject(1649, 1725.230102, -1887.681274, 14.199495, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1720.840698, -1887.681274, 14.199495, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.230102, -1887.681274, 17.429513, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1720.840698, -1887.681274, 17.429513, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1887.681274, 14.199495, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1887.681274, 14.199495, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1887.681274, 17.429513, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1887.681274, 17.429513, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1873.051147, 14.199495, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1873.051147, 14.199495, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1873.051147, 17.429513, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1873.051147, 17.429513, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.459472, -1873.051147, 14.199495, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.070068, -1873.051147, 14.199495, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.459472, -1873.051147, 17.429513, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.070068, -1873.051147, 17.429513, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1705.199829, -1872.981323, 14.199495, 0.000000, 0.000007, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.589111, -1873.011840, 14.199495, 0.000000, 0.000007, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1705.199829, -1872.981323, 17.429513, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.589111, -1873.011840, 17.429513, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.120971, -1873.092285, 14.199495, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.510253, -1873.122924, 14.199495, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.120971, -1873.092285, 17.429513, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.510253, -1873.122924, 17.429513, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.018920, -1887.722167, 14.199495, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.408203, -1887.752807, 14.199495, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.018920, -1887.722167, 17.429513, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.408203, -1887.752807, 17.429513, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.868408, -1887.609497, 14.199495, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.257690, -1887.640136, 14.199495, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.868408, -1887.609497, 17.429513, 0.000000, 0.000038, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.257690, -1887.640136, 17.429513, 0.000000, 0.000038, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2606, 1711.045898, -1873.788452, 19.606479, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2606, 1718.966186, -1873.788452, 19.606479, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3921, 1728.917846, -1883.114624, 13.092984, 0.000000, 0.000000, -0.700000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1703.455932, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1710.866455, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1719.186889, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1727.336791, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11689, 1727.514526, -1874.945556, 12.575836, 0.000000, 0.000000, -1.199999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11689, 1724.479248, -1877.052490, 12.575836, 0.000000, 0.000000, 88.299919, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19474, 1726.814819, -1877.742553, 12.688375, 0.000000, 0.000000, 89.899955, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2534, 1722.987548, -1887.103393, 12.532108, 0.000000, 0.000000, 179.599868, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2534, 1724.017944, -1887.111572, 12.532108, 0.000000, 0.000000, 179.599868, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2108, 1718.631591, -1879.808715, 19.313335, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2108, 1711.870727, -1879.808715, 19.313335, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2256, 1727.567504, -1873.577392, 15.367986, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2256, 1702.085937, -1873.577392, 15.367986, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1889.448974, 13.108884, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1889.448974, 13.108884, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1891.890625, 13.108884, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1891.890625, 13.108884, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1894.331665, 13.108884, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1894.331665, 13.108884, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1872.790161, 13.108884, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1872.790161, 13.108884, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1870.248779, 13.108884, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1870.248779, 13.108884, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1867.807373, 13.108884, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1867.807373, 13.108884, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2231, 1702.036010, -1886.173217, 12.570036, 0.000000, 0.000000, 166.100006, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2231, 1701.922485, -1873.650024, 12.570036, 0.000000, 0.000000, 31.199991, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1281, 1711.090209, -1882.262695, 13.371792, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1281, 1711.090209, -1878.892822, 13.371792, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 1707.576782, -1882.463500, 13.005648, 0.000000, 0.000000, -29.900003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 1708.657714, -1876.613037, 13.005648, 0.000000, 0.000000, -29.900003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 1706.668701, -1880.071899, 13.005648, 0.000000, 0.000000, -29.900003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1719.260253, -1866.399047, 13.108884, 0.000000, 0.000038, -82.300003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1710.653320, -1866.928100, 13.108884, 0.000000, 0.000038, -82.300003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3437, 1733.572631, -1888.032714, 13.962777, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1704, 1725.569946, -1898.843750, 12.544325, 0.000000, 0.000000, -90.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1704, 1725.548950, -1900.023803, 12.544325, 0.000000, 0.000000, -90.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1704, 1725.527954, -1901.223754, 12.544325, 0.000000, 0.000000, -90.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3525, 1711.031372, -1888.131713, 18.622402, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3525, 1719.242309, -1888.131713, 18.622402, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1709.012573, -1867.008544, 13.700131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1707.000732, -1867.008544, 13.700131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1721.591064, -1867.008544, 13.700131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1727.726318, -1860.542358, 13.263640, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1727.726318, -1849.102294, 13.263640, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1732.277832, -1860.542358, 13.263640, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1732.277832, -1849.102294, 13.263640, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1736.348876, -1860.542358, 13.263640, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1736.348876, -1849.102294, 13.263640, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1729.669311, -1860.475708, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1734.189941, -1860.475708, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1734.189941, -1849.224609, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1729.939453, -1849.224609, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//taxi bar - close

	//beach objects - open
	CreateDynamicObject(8496, 189.73097, -1816.81531, 10.37910, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3437, 214.47182, -1829.52393, 8.69660, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(970, 301.53659, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 297.35199, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 293.15979, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 288.90570, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 301.53659, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 297.35199, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 293.15979, -1812.02698, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 288.96680, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2898, 312.56314, -2062.68262, -0.14103, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18103, -1837.31531, 4.32796, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8535, 305.73779, -1867.83264, 8.19960, 0.00000, 0.00000, -90.48000);
	CreateDynamicObject(3461, 309.18100, -1839.35547, 4.14240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1841.56360, 4.03911, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1843.82361, 4.02655, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1846.27869, 4.00143, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1848.56042, 3.92101, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1850.86230, 3.82315, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1853.28552, 3.78760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3528, 210.71457, -1826.62732, 10.93387, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3528, 210.71460, -1807.25269, 10.93390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13667, 210.78065, -1816.37463, 27.12060, 0.00000, 0.00000, 7.32000);
	CreateDynamicObject(6299, 359.52838, -1853.22217, 4.37910, 0.00000, 0.00000, -180.20010);
	CreateDynamicObject(1570, 340.70798, -1849.62317, 3.73078, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1570, 334.04330, -1847.87695, 3.73080, 0.00000, 0.00000, -29.34000);
	CreateDynamicObject(1570, 327.40411, -1831.30188, 4.07080, 0.00000, 0.00000, -129.82001);
	CreateDynamicObject(1570, 325.52570, -1836.50000, 3.93080, 0.00000, 0.00000, -88.78000);
	CreateDynamicObject(1342, 356.81400, -1829.54224, 3.94870, 0.00000, 0.00000, -179.88000);
	CreateDynamicObject(1341, 356.77939, -1827.14966, 4.01910, 0.00000, 0.00000, 180.83990);
	CreateDynamicObject(1340, 356.81400, -1832.56067, 3.81490, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1342, 356.81400, -1835.99146, 3.94870, 0.00000, 0.00000, -179.88000);
	CreateDynamicObject(7588, 343.75931, -1877.82532, 2.31040, -0.78000, -0.96000, -266.64001);
	CreateDynamicObject(7916, 359.18253, -1874.00891, 2.26880, 0.00000, 0.00000, -164.51991);
	CreateDynamicObject(3515, 356.16718, -1887.37439, 2.51407, -34.50001, -20.34000, -3.12000);
	CreateDynamicObject(3461, 309.18100, -1855.64966, 3.56510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1837.31531, 4.32800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 303.22012, -1841.55420, 2.97820, 0.00000, -5.00000, 180.66000);
	CreateDynamicObject(1280, 303.16061, -1851.31409, 2.71830, 0.00000, -5.00000, 180.66000);
	CreateDynamicObject(3461, 303.45181, -1839.35547, 4.14240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1843.82361, 4.02650, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1846.27869, 4.00140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1848.56042, 3.92100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1853.28552, 3.80760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1855.64966, 3.56510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 338.73029, -1825.34363, 3.56375, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 340.33340, -1843.19910, 3.00690, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 339.77481, -1834.77405, 3.28490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 349.14841, -1826.14429, 3.42610, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 347.24033, -1831.84192, 3.36490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 346.30746, -1839.26733, 3.15613, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(642, 340.33899, -1843.34607, 3.86783, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(642, 346.15109, -1839.43860, 4.03200, -0.84000, -10.26000, 20.92000);
	CreateDynamicObject(642, 338.70541, -1825.39441, 4.41200, 0.12000, 0.14000, 0.00000);
	CreateDynamicObject(642, 347.21420, -1831.89880, 4.22470, 0.12000, 0.14000, 0.00000);
	CreateDynamicObject(642, 354.95328, -1823.36865, 3.57409, -28.98001, -61.98003, -106.92001);
	CreateDynamicObject(3437, 214.46581, -1836.66809, 8.23700, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1843.34998, 7.19700, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1849.56091, 5.91930, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46620, -1804.19995, 8.69660, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1796.89905, 8.25690, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1789.32239, 7.19700, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1782.30359, 5.91930, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(1214, 308.78479, -1771.74890, 3.55990, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1536, 211.32809, -1815.77515, 3.47130, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1536, 211.36810, -1818.75525, 3.47130, 0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19372, 211.30415, -1817.43420, 5.12900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19372, 212.95589, -1819.04883, 5.12900, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19372, 212.95590, -1815.45544, 5.12900, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19372, 213.54829, -1820.35815, 5.12900, 0.00000, 0.00000, -41.82000);
	CreateDynamicObject(19372, 211.04633, -1822.04504, 5.00930, 0.00000, 0.00000, -71.28000);
	CreateDynamicObject(19372, 213.50703, -1814.25964, 5.12900, 0.00000, 0.00000, 41.82000);
	CreateDynamicObject(19372, 210.97701, -1812.57922, 5.12900, 0.00000, 0.00000, 71.28000);
	CreateDynamicObject(19380, 209.43329, -1820.63171, 6.87560, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19380, 209.43330, -1813.09570, 6.85990, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(8621, 196.28647, -1790.94385, 16.87415, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(9833, 217.20027, -1825.08521, 3.44840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 217.20030, -1808.99365, 3.44840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 289.07910, -1881.39856, 2.66780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 298.13181, -1881.39856, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 307.73929, -1881.39856, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 317.37909, -1881.39856, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 322.11441, -1881.39832, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19382, 263.53751, -1896.22327, 1.94040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 327.05481, -1876.69080, -2.60990, 0.00000, 0.00000, -2.64000);
	CreateDynamicObject(19381, 327.01480, -1867.40295, -2.60990, 0.00000, 0.00000, -2.64000);
	CreateDynamicObject(19381, 284.36469, -1876.65601, -2.70990, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 284.46469, -1870.14661, -2.70990, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8645, 345.33649, -1817.28186, 4.14576, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8649, 323.00851, -1817.22803, 4.12580, 0.00000, 0.00000, -90.24000);
	CreateDynamicObject(8649, 323.32849, -1786.33606, 4.38580, 0.00000, 0.00000, -90.24000);
	CreateDynamicObject(8649, 308.52921, -1801.95813, 4.18580, 0.00000, 0.00000, -180.58009);
	CreateDynamicObject(1214, 308.78479, -1781.48389, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1779.09766, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1776.92834, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1774.63831, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1784.10376, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 347.12131, -1818.82263, 3.96890, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(982, 321.42709, -1818.82263, 3.96890, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19123, 337.29941, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 327.76059, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 308.64401, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 318.19080, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 347.12271, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 356.72079, -1818.78918, 5.08810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 322.34399, -1849.76953, 2.82040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(642, 322.32950, -1849.80786, 3.70540, 0.12000, 0.14000, 0.00000);
	CreateDynamicObject(1598, 333.46353, -1840.93518, 2.87716, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1598, 336.98999, -1839.13269, 2.98665, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1598, 333.26819, -1834.92456, 3.01319, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1642, 341.15451, -1830.37415, 2.96150, 3.00000, 0.00000, 0.00000);
	CreateDynamicObject(1641, 337.42010, -1828.68372, 3.00777, 3.40000, 0.00000, 0.00000);
	CreateDynamicObject(1640, 330.65009, -1836.72473, 2.74120, 1.00000, 0.00000, 28.92000);
	CreateDynamicObject(643, 317.19153, -1844.11487, 3.28490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1643, 319.91089, -1839.30212, 2.67410, 2.00000, 0.00000, -10.00000);
	CreateDynamicObject(2410, 310.97791, -1897.61841, 0.46260, 5.00000, 10.00000, -68.04000);
	CreateDynamicObject(2410, 306.45480, -1897.09009, 0.46260, 5.00000, 5.00000, -91.98004);
	CreateDynamicObject(2406, 303.65552, -1897.48376, 0.54183, -80.00000, 20.00000, -12.60000);
	CreateDynamicObject(2405, 300.36490, -1894.98352, 0.57780, -80.00000, 2.00000, 0.00000);
	CreateDynamicObject(2404, 291.14429, -1886.32751, 1.05970, -100.00000, 0.00000, -83.28000);
	CreateDynamicObject(1609, 348.88992, -1871.55347, 2.41548, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 339.72479, -1834.86401, 3.69490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2219, 338.65411, -1825.80566, 4.02950, -26.70000, 22.74000, 24.54000);
	CreateDynamicObject(2217, 322.51660, -1849.90161, 3.27730, -26.70000, 22.74000, 0.00000);
	CreateDynamicObject(1670, 339.72479, -1834.86401, 3.69490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 317.23569, -1843.90344, 3.69490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2672, 348.19714, -1837.81274, 3.01150, 1.00000, 0.00000, -4.86000);
	CreateDynamicObject(2222, 349.12411, -1826.14233, 3.90390, 0.00000, 0.00000, -29.28000);
	CreateDynamicObject(3509, 295.70117, -1794.32605, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 295.92081, -1777.80383, 3.31708, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6284, 307.26563, -1760.54688, 7.62500, 356.85840, 0.00000, 3.14159);
	CreateDynamicObject(3509, 295.90680, -1785.07263, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 286.19818, -1788.59900, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 340.41891, -1799.08044, 6.31950, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(1232, 328.41299, -1799.08044, 6.31950, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(1232, 317.72211, -1799.08044, 6.31950, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(1232, 300.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 288.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(927, 382.54111, -1879.28015, 3.28120, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(929, 384.66086, -1879.73267, 2.77860, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1420, 383.35901, -1892.51208, 4.61670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1420, 384.98651, -1892.52686, 4.61670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1353, 388.58011, -1879.83374, 2.45890, 2.00000, 0.00000, 0.00000);
	CreateDynamicObject(3273, 374.64621, -1892.13062, 0.64617, 0.00000, 0.00000, 267.54001);
	CreateDynamicObject(3865, 366.39063, -1890.87305, 2.37190, 0.00000, 0.00000, 93.11999);
	CreateDynamicObject(2971, 366.86267, -1890.61377, 1.07099, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1440, 368.97366, -1890.69019, 1.58261, 0.00000, 0.00000, -18.84000);
	CreateDynamicObject(1327, 373.62009, -1886.99194, 1.71060, 5.00000, -25.00000, -46.86000);
	CreateDynamicObject(1219, 364.85019, -1889.48413, 3.63850, -50.00000, 0.00000, 3.24000);
	CreateDynamicObject(1265, 367.39935, -1891.40601, 2.43060, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1265, 366.84760, -1890.56897, 3.24770, 0.00000, 6.00000, -108.83999);
	CreateDynamicObject(849, 369.63730, -1890.86975, 1.25270, 0.00000, 0.00000, -0.66000);
	CreateDynamicObject(1442, 385.90857, -1890.08765, 1.24876, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14578, 374.04617, -1879.58875, 1.97491, 0.00000, 180.00000, 80.40002);
	CreateDynamicObject(3675, 380.28729, -1879.29248, 1.77526, -89.58000, -23.10000, 71.75998);
	CreateDynamicObject(989, 398.08951, -1890.55640, 2.40575, 0.00000, 0.00000, 18.96000);
	CreateDynamicObject(989, 397.89157, -1885.09180, 2.40575, 0.00000, 0.00000, 18.96000);
	CreateDynamicObject(983, 398.04221, -1889.74011, 4.90000, 0.00000, 0.00000, 1.92000);
	CreateDynamicObject(983, 397.95270, -1886.56372, 4.90000, 0.00000, 0.00000, 1.92000);
	CreateDynamicObject(3509, 286.13809, -1780.57776, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18785, 253.32610, -1842.17529, 1.70560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 496.23599, -1874.50000, 7.92800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 493.99301, -1895.55505, 7.76400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 451.97400, -1895.56201, 8.09000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 449.70300, -1873.62805, 7.46800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 493.10199, -1892.23596, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 492.87399, -1853.49500, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 453.49701, -1853.74597, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 453.52301, -1892.18005, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 253.30615, -1862.02771, 1.71519, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 233.30811, -1862.02771, 1.71520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 233.30811, -1881.96448, 1.71520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 253.30620, -1881.98450, 1.71520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18785, 233.32809, -1842.17761, 1.70560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 262.95410, -1886.89771, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8650, 263.07410, -1867.28943, 3.08910, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18766, 262.95410, -1876.90857, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 262.95410, -1866.90918, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 262.95410, -1856.99402, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1886.91772, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1877.14856, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1867.20923, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1857.25391, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 228.33980, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 238.25140, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 248.11880, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 258.10880, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 263.07410, -1867.28943, 0.87850, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8650, 263.06909, -1876.62524, 3.08910, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8650, 263.06909, -1876.62524, 0.87850, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8650, 263.06909, -1876.62524, -1.04578, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55029, -1867.50415, 3.10910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55930, -1876.66699, 3.10910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55034, -1867.44409, 0.90464, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55930, -1876.66699, 0.90464, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18981, 250.93640, -1879.36133, 9.70170, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(18981, 235.71899, -1879.36133, 9.69570, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(18981, 235.67920, -1864.77893, 9.70420, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(18981, 250.89661, -1864.78186, 9.69570, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(11495, 225.04640, -1863.25122, 4.18600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11495, 225.05190, -1877.93066, 4.18300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11495, 236.93410, -1889.82019, 4.18600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11495, 249.75920, -1889.80676, 4.17600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11495, 261.59760, -1863.25122, 4.18600, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11495, 261.59760, -1877.93066, 4.17600, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3509, 295.88586, -1834.92065, 2.70828, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 295.80789, -1844.03784, 2.42979, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 295.83643, -1852.40637, 2.18546, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 286.11105, -1840.83838, 2.35844, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 286.16626, -1850.95764, 2.22906, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19380, 209.43329, -1820.63171, 6.87560, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19372, 211.30620, -1817.12146, 5.12900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 264.18185, -1838.47388, 5.15729, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 276.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 264.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 252.77660, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 240.77660, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 228.77660, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 300.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 288.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 276.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 264.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 252.77660, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 240.77660, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 228.77660, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 284.75470, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 280.53049, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 276.34879, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 272.12601, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 267.94379, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 263.76682, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 259.57220, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 255.34930, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 251.22501, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 248.53720, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 238.73740, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 234.50200, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 230.35890, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 226.19679, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 222.01199, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 284.75470, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 280.53049, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 276.34879, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 267.94379, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 272.12601, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 263.76682, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 255.34930, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 251.22501, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 242.87891, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 247.06509, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 234.50200, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 238.73740, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 230.35890, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 226.19679, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 222.01199, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 255.45120, -1852.43848, 5.98520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 241.34650, -1852.43848, 5.98520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(980, 230.15150, -1852.49597, 6.88980, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19459, 255.84840, -1854.05371, 2.47670, 180.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 246.23790, -1854.05371, 2.47670, 180.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 236.60899, -1854.05371, 2.47670, 180.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 256.74661, -1839.92847, 4.71070, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 229.80344, -1840.45264, 4.71070, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18784, 241.94640, -1861.96814, 3.90660, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18784, 241.94170, -1881.96423, 3.90660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 234.69400, -1789.05835, 4.21000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 227.74049, -1789.05835, 4.20000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19367, 231.45280, -1793.96655, 2.53060, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45284, -1794.14355, 2.39178, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45280, -1794.32361, 2.21827, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45280, -1794.48364, 2.05830, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45280, -1794.66357, 1.89830, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 234.67171, -1793.81543, 2.53060, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19453, 239.87900, -1789.04504, 2.53390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 222.56100, -1789.04504, 2.53390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 235.11650, -1793.77380, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 227.29210, -1793.77380, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 235.11650, -1784.30896, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 227.29210, -1784.30896, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1840, 228.08040, -1786.19348, 4.29060, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(1840, 228.14853, -1785.85364, 4.29060, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(1840, 228.39330, -1786.05505, 4.29060, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(2229, 228.36884, -1786.82166, 4.21210, 0.00000, 0.00000, 22.56000);
	CreateDynamicObject(1840, 228.20940, -1785.99744, 4.75610, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(2232, 226.15576, -1790.42310, 4.86913, 0.00000, 0.00000, 40.26000);
	CreateDynamicObject(14537, 275.92606, -1842.42102, 4.66019, 0.00000, 0.00000, -0.78000);
	CreateDynamicObject(2232, 226.15581, -1790.42310, 6.11220, 0.00000, 0.00000, 40.26000);
	CreateDynamicObject(2232, 236.73270, -1790.42310, 4.86910, 0.00000, 0.00000, -40.26000);
	CreateDynamicObject(2232, 236.73270, -1790.42310, 6.11220, 0.00000, 0.00000, -40.26000);
	CreateDynamicObject(2207, 230.59067, -1786.95007, 4.22411, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2225, 237.00594, -1786.12073, 4.26109, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2225, 237.72549, -1786.12073, 4.26110, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2227, 236.50020, -1785.78479, 4.30665, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2229, 234.75211, -1786.82166, 4.21210, 0.00000, 0.00000, -22.56000);
	CreateDynamicObject(14820, 231.61339, -1786.66589, 5.04040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1958, 233.49541, -1786.46643, 4.27630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19317, 236.41940, -1790.03748, 5.05560, -10.38000, 0.00000, -126.72000);
	CreateDynamicObject(8875, 220.29945, -1782.91138, 9.07323, 0.00000, 0.00000, 134.39995);
	CreateDynamicObject(8876, 223.01924, -1787.20227, 9.95855, 0.00000, 0.00000, 122.82001);
	CreateDynamicObject(19144, 231.90335, -1852.26648, 9.73724, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19144, 256.64362, -1852.33179, 9.73724, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18654, 225.21181, -1791.44324, 4.24200, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18654, 231.37704, -1784.84778, 4.24205, 0.00000, 0.00000, -88.67997);
	CreateDynamicObject(18654, 237.81779, -1791.44324, 4.24200, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(716, 227.74268, -1780.12830, 3.26345, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(716, 234.49940, -1780.06128, 3.26345, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 259.18188, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 254.18190, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 249.18190, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 236.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 231.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 226.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 221.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6965, 263.04132, -1792.15186, 7.14980, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 265.88315, -1796.48950, 2.74815, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 265.88309, -1787.74170, 2.74810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 258.79620, -1787.74170, 2.74810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 258.79620, -1796.48950, 2.74810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10281, 255.93811, -1851.67627, 6.91590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(10281, 245.77382, -1851.62671, 6.91590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19126, 271.63144, -1799.68457, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 273.78967, -1794.80444, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 273.89645, -1789.66028, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 272.06870, -1786.00964, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 267.93390, -1782.55200, 2.94710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 263.00885, -1780.82556, 2.85017, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 258.77411, -1782.11230, 2.85017, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 254.55800, -1785.27368, 2.90469, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 251.44493, -1789.64978, 2.90469, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 251.68643, -1794.69653, 2.94470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 254.02100, -1798.99097, 3.04667, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 257.71216, -1802.70337, 3.08066, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 262.83411, -1803.91663, 3.08066, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 267.80777, -1802.88281, 3.08066, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 303.89713, -1809.38110, 3.99123, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1805.24377, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1801.04028, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1796.91614, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1792.83533, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1788.57556, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1784.28442, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(711, 284.04111, -1805.49182, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 283.98123, -1800.63220, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 283.87314, -1796.49377, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 296.09232, -1804.13110, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 290.47433, -1800.36914, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 296.14407, -1797.17334, 8.99408, 0.00000, 0.00000, 99.77999);
	CreateDynamicObject(1836, 271.09836, -1812.28918, 3.40290, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1515, 273.15359, -1812.51855, 3.40550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1515, 274.23431, -1812.51855, 3.40550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.62912, -1827.58130, 1.74309, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.62910, -1837.17603, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.62910, -1846.63770, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.61909, -1851.76782, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 204.88499, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 195.42281, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 185.83850, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 176.32970, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 174.84489, -1856.50452, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 169.92595, -1851.83398, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 169.92590, -1842.33984, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 169.92590, -1832.73071, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 169.92590, -1824.04639, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 215.30499, -1827.98486, -1.87480, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 220.02870, -1823.25610, -1.87480, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 234.43280, -1821.51868, 1.65440, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, 272.42581, -1821.51868, 1.65440, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8661, 284.19638, -1821.60840, -6.66753, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(8661, 244.23430, -1821.60840, -6.66750, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(8661, 204.34331, -1821.60840, -6.66750, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 235.53780, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 246.01810, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 256.35999, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 266.81781, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 214.90750, -1823.26074, 3.44690, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 214.90750, -1810.46045, 3.44690, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 214.86749, -1816.01514, 3.44490, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 277.25320, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 284.82349, -1816.79663, 3.32350, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 225.13570, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 292.80042, -1816.79614, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 298.76089, -1816.79626, 3.33450, 180.00000, 90.00000, 0.00000);
	//beach objects - close
	//offices - open
	CreateDynamicObject(1808, 1799.89453, -1300.56104, 12.50250, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2776, 1799.60291, -1301.92932, 13.05190, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2776, 1799.51648, -1302.86560, 13.05190, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2776, 1799.51440, -1303.70911, 13.05190, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2239, 1799.27783, -1306.07642, 12.65731, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2007, 1793.22180, -1307.73157, 12.66265, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2007, 1791.24463, -1304.68250, 12.52938, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(2184, 1793.56946, -1305.46301, 12.57330, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(2184, 1793.20972, -1302.55933, 12.57330, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2261, 1782.26184, -1301.85242, 14.76086, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2239, 1779.48987, -1307.22827, 12.65731, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 1782.75586, -1305.10742, 12.63500, 0.00000, 0.00000, -89.00000);
	CreateDynamicObject(2239, 1782.40320, -1302.64600, 12.48265, 0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2010, 1782.41431, -1303.70422, 12.54705, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 1775.29712, -1306.65381, 12.65311, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2261, 1775.39612, -1303.14185, 14.76090, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1808, 1775.44824, -1300.25476, 12.52180, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(1723, 1776.91711, -1303.32581, 12.52293, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1723, 1780.07910, -1304.27405, 12.52290, 0.00000, 0.00000, 185.00000);
	CreateDynamicObject(1704, 1781.22827, -1301.39197, 12.29960, 0.00000, 0.00000, -86.00000);
	CreateDynamicObject(1827, 1778.78088, -1302.31799, 12.39325, 0.00000, 0.00000, 0.00000);
	//offices - close
	//ls fuel station - open
	tmpobjid = CreateDynamicObject(970, 1947.052124, -1764.966064, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1947.086791, -1768.987060, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1947.122680, -1773.107788, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1947.159057, -1777.257812, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.551147, -1780.103759, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.587158, -1784.183105, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.482177, -1772.152099, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.445800, -1768.022094, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1767.297485, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1770.718017, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1774.158813, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1777.609130, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1767.297485, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1770.718017, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1774.158813, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1777.609130, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	//ls fuel station - close
	//ls fences - open
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1832.582519, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1829.192626, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1835.982788, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1839.392822, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1818.951416, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1815.561523, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1822.351684, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1825.761718, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1805.340454, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1801.950561, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1808.740722, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1812.150756, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1791.689086, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1788.299194, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1795.089355, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1798.499389, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1778.084594, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1774.694702, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1781.484863, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1784.894897, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1764.451416, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1761.061523, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1767.851684, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1771.261718, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1750.820312, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1747.430419, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1754.220581, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1757.630615, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1737.209350, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1733.819458, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1723.557983, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1720.168090, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1726.958251, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1730.368286, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1709.953491, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1706.563598, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1713.353759, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1716.763793, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1743.989868, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1740.600463, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1703.114501, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1692.899902, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1689.510009, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1696.300170, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1699.710205, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1832.582519, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1829.192626, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1835.982788, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1839.392822, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1818.951416, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1815.561523, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1822.351684, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1825.761718, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1805.340454, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1801.950561, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1808.740722, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1812.150756, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1791.689086, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1788.299194, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1795.089355, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1798.499389, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1778.084594, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1774.694702, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1781.484863, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1784.894897, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1764.451416, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1761.061523, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1767.851684, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1771.261718, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1750.820312, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1747.430419, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1754.220581, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1757.630615, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1737.209350, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1733.819458, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1723.557983, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1720.168090, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1726.958251, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1730.368286, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1709.953491, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1706.563598, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1703.114501, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1692.899902, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1689.510009, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1696.300170, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1699.710205, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1743.979614, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1740.559448, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1716.738037, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1713.377319, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1707.502685, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1720.403076, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1741.432861, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1758.384277, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1768.824707, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//ls fences - close
	//news exterior - open
	tmpobjid = CreateDynamicObject(970, 1652.495727, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1665.496826, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1672.244995, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1644.723632, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(712, 1658.642211, -1689.523315, 27.968414, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(712, 1658.642211, -1673.192871, 27.968414, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1652.495727, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1665.485229, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1672.726684, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1644.727050, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9833, 1658.875976, -1681.010498, 22.887819, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3515, 1672.738281, -1666.606445, 19.704469, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3515, 1641.968627, -1668.567626, 19.704469, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1643.229248, -1686.597656, 20.964023, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1643.229248, -1676.606201, 20.964023, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1673.482299, -1686.597656, 20.964023, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1673.482299, -1676.606201, 20.964023, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3934, 1669.770385, -1701.142700, 19.476881, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//news exterior - close
	//civil spawn - open
	tmpobjid = CreateDynamicObject(1290, 1164.509277, -1730.140502, 16.028436, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1164.509277, -1722.359008, 16.028436, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1147.979003, -1730.140502, 16.028436, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1147.979003, -1722.359008, 16.028436, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1129.187988, -1730.140502, 16.028436, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1129.187988, -1722.359008, 16.028436, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1113.678100, -1730.140502, 16.028436, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1113.678100, -1722.359008, 16.028436, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1095.738159, -1730.140502, 16.028436, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1095.738159, -1722.359008, 16.028436, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1080.497314, -1730.140502, 16.028436, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1080.497314, -1722.359008, 16.028436, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1066.776733, -1730.140502, 16.028436, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1066.776733, -1722.359008, 16.028436, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1049.175048, -1730.140502, 16.028436, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1049.175048, -1722.359008, 16.028436, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1727.056762, 15.159070, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1731.326660, 15.159070, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1736.007446, 15.159070, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1740.277343, 15.159070, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1744.297241, 15.159070, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1748.567138, 15.159070, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1751.118164, 15.159070, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1755.388061, 15.159070, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1758.639160, 15.159070, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1762.909057, 15.159070, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1723.491943, 13.173267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1726.911987, 13.173267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1730.321899, 13.173267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1733.765380, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1737.185424, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1740.595336, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1744.035522, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1747.455566, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1750.865478, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1752.594116, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1756.014160, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1759.424072, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1762.867553, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1766.287597, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1769.697509, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1773.137695, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1776.557739, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1779.967651, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1723.491943, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1726.911987, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1730.321899, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1733.765380, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1737.185424, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1740.595336, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1744.035522, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1747.455566, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1750.865478, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1752.594116, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1756.014160, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1759.424072, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1762.867553, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1766.287597, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1769.697509, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1773.137695, 13.173267, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1776.557739, 13.173267, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1779.967651, 13.173267, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1154.510253, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1137.720092, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1120.989746, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1106.539062, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1160.418090, -1726.246215, 14.119071, 0.000000, 0.000000, -86.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1161.916015, -1726.167846, 14.119071, 0.000000, 0.000000, -86.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1147.057739, -1726.246215, 14.119071, -0.000007, 0.000000, -86.999961, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1148.555664, -1726.167846, 14.119071, -0.000007, 0.000000, -86.999961, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1132.956420, -1726.246215, 14.119071, -0.000015, 0.000000, -86.999938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1134.454345, -1726.167846, 14.119071, -0.000015, 0.000000, -86.999938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1117.036010, -1726.246215, 14.119071, -0.000022, 0.000001, -86.999916, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1118.533935, -1726.167846, 14.119071, -0.000022, 0.000001, -86.999916, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1146.281616, -1758.850585, 12.980204, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1146.281616, -1755.520141, 12.980204, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1144.563842, -1753.828735, 12.980204, 0.000000, 0.000000, 90.599967, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1161.812500, -1758.850585, 12.980204, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1161.812500, -1755.520141, 12.980204, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1163.525024, -1753.810424, 12.980204, 0.000000, 0.000000, 90.599967, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18761, 1154.088500, -1763.574462, 16.925083, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1334, 1144.591552, -1755.017578, 13.262896, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1346, 1165.033691, -1752.652465, 13.787750, 0.000000, 0.000000, -90.499992, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1363, 1139.792846, -1750.194824, 13.380208, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1139.890136, -1752.827026, 13.205301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1135.829711, -1752.827026, 13.205301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1131.719116, -1752.827026, 13.205301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1139.890136, -1755.987182, 13.205301, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1135.829711, -1755.987182, 13.205301, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1131.719116, -1755.987182, 13.205301, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	//civil spawn - close
	//Los santos hall - open
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 21.64585, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 18.40866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 15.13166, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 21.69713, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 18.41969, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 15.13130, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 21.64072, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 18.36888, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 15.06503, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 21.62359, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 18.37724, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 15.14004, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 21.64070, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 18.36890, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 15.06500, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 21.62360, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 18.37720, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 15.14000, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 21.69710, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 18.41970, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 15.13130, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 21.64590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 18.40870, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 15.13170, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1231, 1506.82666, -1754.33484, 13.58516, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1506.74377, -1751.80908, 13.58516, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1506.72571, -1749.13574, 13.58516, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1456.21606, -1754.32483, 13.49043, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1456.41504, -1751.89331, 13.49043, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1456.54004, -1749.53137, 13.49043, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1331, 1534.15234, -1755.28198, 13.39049, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1334, 1531.59192, -1755.17493, 13.41624, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1494.37354, -1771.28687, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1494.38110, -1768.58203, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1468.00122, -1771.26587, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1467.97815, -1768.52942, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1494.17896, -1766.41260, 17.39805, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1494.02148, -1764.30640, 17.39805, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1468.08386, -1766.83472, 17.39805, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1468.03967, -1764.55225, 17.39805, 0.00000, 0.00000, 0.00000);
	//Los santos hall - close
	//lottery budka - open
	CreateDynamicObject(3881, 1537.09070, -1710.97290, 14.11059, 0.00000, 0.00000, 0.00000);
	//lottery budka - close
	//taxi - open
	tmpobjid = CreateDynamicObject(970, 1785.404052, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1789.555175, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(7520, 1797.777343, -1916.826049, 12.593605, 0.000000, 0.000000, -89.800117, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1781.245239, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1797.883300, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1802.034423, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1793.724487, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1806.124023, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1777.094604, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.389038, -1886.661987, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.426147, -1890.821533, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.462280, -1894.961669, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.498657, -1899.092407, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.534301, -1903.192993, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.570678, -1907.353515, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.606811, -1911.483886, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.642700, -1915.614624, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.678344, -1919.743774, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4642, 1810.616455, -1895.313232, 13.968057, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4642, 1810.616455, -1895.313232, 13.968057, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4642, 1810.616455, -1885.252197, 13.968057, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9697, 1777.474243, -1932.682495, 12.400878, 0.000000, 0.000000, 89.499992, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(14467, 1753.778320, -1885.524047, 15.032141, 0.000000, 0.000000, 56.799991, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1805.723022, -1945.709472, 12.637668, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1798.652832, -1945.709472, 12.637668, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1792.042602, -1945.709472, 12.637668, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1914.316284, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1907.486083, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1924.916381, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1900.186035, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1892.735595, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1444, 1775.192993, -1938.791259, 13.363592, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1444, 1769.913452, -1938.791259, 13.363592, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1765.518676, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1769.009399, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1762.729492, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1760.039062, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//taxi - close
	//police ls - open
	CreateDynamicObject(5822, 1545.51917, -1638.21411, 21.53090, 0.00000, 0.00000, 5.00000);
	CreateDynamicObject(970, 1539.49414, -1653.46118, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1649.33618, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1645.22620, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1641.11621, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1638.19116, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1541.53406, -1636.13623, 13.45850, 0.00000, 0.00000, 1.00000);
	CreateDynamicObject(970, 1539.49414, -1657.58618, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1661.71118, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1665.85120, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1697.87915, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49243, -1693.74207, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1689.61218, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1685.46021, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1681.30823, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1669.96118, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1541.56213, -1671.98230, 13.05350, 0.00000, 0.00000, 1.00000);
	CreateDynamicObject(970, 1541.56213, -1679.19934, 13.05350, 0.00000, 0.00000, 1.00000);
	CreateDynamicObject(646, 1546.38794, -1672.36792, 15.26000, 360.00000, 0.00000, 3.00000);
	CreateDynamicObject(646, 1546.38708, -1678.63367, 15.26000, 360.00000, 0.00000, 3.00000);
	CreateDynamicObject(970, 1539.49414, -1701.99524, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1706.11121, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1710.22717, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1713.46118, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1541.55212, -1715.51917, 13.45250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1544.99597, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1542.59607, -1639.76245, 27.28470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.59607, -1644.76038, 27.28470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.59607, -1648.30945, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1545.13708, -1650.70337, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1550.13513, -1650.70337, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1551.22705, -1650.70337, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.61658, -1653.14917, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1658.14722, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1663.14514, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1668.14307, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1670.32715, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1556.02515, -1672.73450, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.61658, -1680.84814, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1556.04797, -1678.44971, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.61658, -1685.84607, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1690.84412, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1695.84204, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1698.08899, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1551.17505, -1700.49341, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1545.00098, -1700.49341, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1547.37402, -1700.49341, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1542.60425, -1702.93689, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.60425, -1707.93494, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.60425, -1711.98792, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1545.06848, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1550.06653, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1555.06445, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1560.06250, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1565.06055, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1570.05847, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1575.05652, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.31201, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1558.31006, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1563.30798, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1568.30603, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1573.30396, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1574.98401, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1642.41284, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1652.68176, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1662.95081, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1673.21985, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1683.50977, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1693.79980, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1704.06885, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1709.21375, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1573.23254, -1641.55920, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1573.00403, -1648.18005, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1572.92285, -1654.72229, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1566.01233, -1655.59998, 28.16140, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1281, 1558.97595, -1647.87231, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1565.80432, -1640.48767, 28.16140, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1281, 1559.01025, -1640.73145, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1559.00134, -1655.37329, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 1549.68713, -1707.94373, 27.39350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 1568.32617, -1708.28162, 27.39350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 1564.01624, -1693.65405, 27.39350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1565.31213, -1648.34399, 30.27860, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1571, 1560.37769, -1665.41504, 28.61190, 0.00000, 0.00000, 164.00000);
	CreateDynamicObject(1342, 1568.29065, -1665.51685, 28.37360, 0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1341, 1544.26294, -1648.26831, 28.36770, 0.00000, 0.00000, 18.00000);
	CreateDynamicObject(1340, 1544.78650, -1642.63086, 28.47270, 0.00000, 0.00000, -18.00000);
	CreateDynamicObject(1359, 1563.47131, -1651.79480, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1569.33154, -1651.29248, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1568.71057, -1644.54810, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1563.13672, -1644.81055, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 1544.08020, -1637.91687, 31.14240, 0.00000, 0.00000, 156.00000);
	CreateDynamicObject(1226, 1543.97839, -1649.71106, 31.14240, 0.00000, 0.00000, 207.00000);
	CreateDynamicObject(1226, 1576.44263, -1638.24597, 31.14240, 0.00000, 0.00000, 33.00000);
	CreateDynamicObject(3666, 1559.15454, -1707.77917, 27.84800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 1573.23706, -1699.46655, 27.84800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 1556.78442, -1686.50610, 27.84800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1638.16650, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1640.13147, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1642.08154, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1644.04651, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1646.04150, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1648.00647, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1649.80652, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1701.38745, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1703.30151, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1705.21545, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1707.12952, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1709.04346, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1710.95752, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1712.93750, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1713.46545, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.43652, -1622.39258, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.50122, -1621.12671, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.55273, -1619.91296, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.61340, -1618.68115, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.11853, -1633.61548, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.11926, -1635.17773, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1532.14929, -1608.20044, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1527.00183, -1608.22375, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1532.20715, -1639.31909, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1527.04614, -1639.32886, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1532.24060, -1709.89343, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1527.05933, -1709.91211, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 1607.13318, -1603.29688, 15.64540, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1297, 1607.18555, -1637.23901, 15.64540, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1297, 1607.04456, -1619.82019, 15.64540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 1587.63354, -1603.51135, 15.64540, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 1568.13599, -1603.57947, 15.64540, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 1540.69580, -1603.12146, 15.64540, 0.00000, 0.00000, 145.00000);
	CreateDynamicObject(1297, 1540.48853, -1616.95447, 15.64540, 0.00000, 0.00000, 220.00000);
	CreateDynamicObject(3095, 1544.30798, -1607.05200, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1553.28723, -1607.04907, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1562.27332, -1607.04871, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1571.26392, -1607.05444, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1580.25854, -1607.06335, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1589.23962, -1607.05469, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1597.74634, -1607.05249, 11.90750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1603.41589, -1607.05774, 12.00750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1544.21252, -1613.11646, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1553.20361, -1613.24719, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1562.18811, -1613.46985, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1571.16614, -1616.00256, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1580.16174, -1616.05286, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1589.14771, -1616.04175, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1597.54810, -1616.02319, 11.90750, 0.02000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1603.40894, -1616.02405, 12.00750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1580.04443, -1625.03357, 11.84700, -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1571.06201, -1625.04980, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1562.08850, -1625.06885, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1553.10974, -1625.08801, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1544.11194, -1625.11804, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1603.49731, -1625.01465, 12.00750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1596.22839, -1625.00854, 11.90750, -0.22000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1588.43408, -1625.01025, 11.84300, -0.10000, -0.02000, 0.00000);
	CreateDynamicObject(3095, 1603.75537, -1628.39050, 11.92750, -2.06000, -0.88000, 0.00000);
	CreateDynamicObject(3095, 1594.84656, -1632.59949, 11.96750, -1.38000, -0.88000, 0.00000);
	CreateDynamicObject(3095, 1585.90491, -1632.52588, 11.94750, -1.24000, -0.74000, 0.00000);
	CreateDynamicObject(3095, 1576.99072, -1633.91528, 11.84700, -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1568.01196, -1634.03784, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1559.01807, -1634.05688, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1550.05237, -1634.08154, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1544.12158, -1634.10583, 11.84600, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1547.59216, -1620.32434, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1551.63184, -1620.31921, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1555.87231, -1620.29480, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1559.57288, -1620.30847, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1563.33240, -1620.30518, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1566.89246, -1620.32019, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1570.86121, -1620.29077, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1574.75537, -1620.29419, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1579.45056, -1620.30713, 13.08260, 0.00000, 0.00000, 0.00000);
	//police ls - close

	//Los Santos Parking - open
	CreateDynamicObject(984, 1755.21008, -1769.55798, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1768.01221, -1769.78455, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1780.73364, -1769.93823, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1793.46521, -1770.15137, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1756.57861, -1750.96399, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1769.28821, -1751.13635, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1782.04602, -1751.33826, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1794.81628, -1751.51794, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(7952, 1769.18274, -1742.37573, 12.94810, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(7952, 1810.06140, -1783.04761, 12.94810, 0.00000, 0.00000, 179.00000);
	CreateDynamicObject(9697, 1757.16565, -1774.04517, 12.55220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9697, 1755.40601, -1755.39185, 12.55220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1798.63696, -1821.82959, 14.94660, 0.00000, 0.00000, -4.00000);
	CreateDynamicObject(3660, 1761.00439, -1814.58704, 14.94660, 0.00000, 0.00000, -14.00000);
	CreateDynamicObject(3660, 1780.04785, -1819.09558, 14.94660, 0.00000, 0.00000, -13.00000);
	CreateDynamicObject(1360, 1809.80432, -1803.66577, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1809.67249, -1807.57117, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.02515, -1785.92041, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.08240, -1783.12109, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.39075, -1765.54456, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.50525, -1758.97827, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1811.39111, -1762.62952, 17.85910, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(1290, 1789.59448, -1741.64771, 17.85910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1767.66809, -1741.86377, 17.85910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1746.07922, -1741.88171, 17.85910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1729.12952, -1800.33899, 12.21917, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1714.96899, -1798.97241, 11.98985, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1768.10059, -1741.28308, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1762.86072, -1741.16455, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1757.69177, -1740.97034, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1752.53357, -1740.85376, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1747.41272, -1740.95093, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1742.24670, -1740.89294, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1737.06763, -1740.83142, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1731.99780, -1740.86829, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1773.34497, -1741.11609, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1778.55615, -1741.05859, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1783.76086, -1741.05042, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1788.92102, -1740.97266, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1794.05823, -1740.92090, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1799.33313, -1741.00427, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1804.48669, -1741.04602, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(645, 1784.98621, -1816.44104, 12.51861, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(648, 1802.98816, -1818.51331, 10.39544, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(874, 1795.57776, -1817.35083, 11.64551, 0.00000, 0.00000, 77.00000);
	CreateDynamicObject(874, 1801.15356, -1817.72070, 11.64551, 0.00000, 0.00000, 77.00000);
	//Los Santos Parking - close
	//park - location - open
	CreateObject(19377, 1508.88171, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1498.39063, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1477.42065, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1466.91663, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1456.43347, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1445.95544, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1712.85889, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1703.23535, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1693.60095, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1683.97412, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1674.35059, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1664.73352, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1655.10181, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1645.48047, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1635.84766, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1626.22754, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1616.60291, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1606.99622, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1712.85889, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1693.60095, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1683.97412, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1664.73352, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1674.35059, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1655.10181, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1645.48047, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1635.84766, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1626.22754, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1616.60291, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1606.99622, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1450.20459, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1460.69678, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1471.19165, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1481.69031, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1492.15833, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1502.65112, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1513.13928, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1705.62183, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateDynamicObject(19435, 1445.25586, -1714.62781, 12.79647, 125.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1445.25354, -1712.17981, 12.79650, 125.00000, 90.00000, 90.00000);
	CreateObject(19377, 1442.70789, -1695.99976, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1686.37952, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1676.77954, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1663.64417, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateDynamicObject(19435, 1445.49414, -1670.23193, 12.48390, 0.00000, 90.00000, 90.00000);
	CreateObject(19377, 1442.70789, -1654.02490, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1644.40491, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1634.79102, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1625.16675, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1450.20459, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1460.69678, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1471.19165, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1481.67542, -1611.59753, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1492.15833, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1502.65112, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1513.13928, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1442.70459, -1622.78247, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1451.32556, -1614.31140, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1450.18103, -1621.22144, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1445.66162, -1618.02832, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1446.53674, -1617.24072, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1445.63049, -1716.21338, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1450.18921, -1712.87146, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1446.49194, -1716.91992, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1451.26477, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1460.89832, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1470.52515, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1486.55957, -1719.88550, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.99036, 12.50390, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1493.23572, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1502.85828, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1508.86646, -1712.85840, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1512.43005, -1716.89014, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1516.28821, -1711.40063, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1507.55798, -1719.87415, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateDynamicObject(19435, 1513.34705, -1716.17163, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1516.30261, -1701.77917, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateDynamicObject(19435, 1513.51538, -1670.20288, 12.48390, 0.00000, 90.00000, 90.00000);
	CreateObject(19377, 1516.30261, -1692.14404, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.30261, -1682.52527, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29675, -1676.74878, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.27844, -1663.63354, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1654.03357, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1644.41357, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1634.79565, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1625.18298, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1473.47461, -1719.88330, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateDynamicObject(19381, 1473.04053, -1712.11926, 13.41755, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1462.55237, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1452.08582, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1451.66394, -1712.11926, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.93079, -1711.47070, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.98718, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.47144, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1507.26343, -1712.11926, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09546, -1711.30200, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09875, -1701.68457, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09875, -1692.05420, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09875, -1682.42297, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.12183, -1676.75818, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.10095, -1663.64636, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.10364, -1654.02112, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09937, -1644.38782, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.10706, -1634.76282, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.92920, -1701.84314, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.92920, -1692.22351, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.92297, -1682.69031, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.91870, -1676.76917, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1663.65015, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1654.02820, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1644.40588, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1634.78589, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.75037, 12.68390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.47046, 12.86390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.21045, 13.04390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1715.93042, 13.22390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1715.65039, 13.38390, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1481.78479, -1713.00293, 8.24413, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1478.24023, -1713.00293, 8.24410, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1715.33044, 13.44390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19358, 1480.00769, -1717.70520, 10.84030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1717.46521, 11.02030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1717.18518, 11.20030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1716.94519, 11.38030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1716.64514, 11.56030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1716.36511, 11.72030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, 1480.03186, -1709.78882, 13.43666, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1473.46960, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1463.86182, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1486.58496, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1496.20728, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1480.03186, -1700.16296, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1479.96765, -1680.88245, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1480.03186, -1690.52783, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1479.97461, -1671.26294, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(8397, 1479.88538, -1661.09277, 23.88650, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1479.96765, -1661.62939, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1449.48999, -1668.40332, 8.22830, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1449.48999, -1672.03345, 8.22830, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1445.75415, -1670.23193, 12.66390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.03418, -1670.23193, 12.84390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.31421, -1670.23193, 13.02390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.55420, -1670.23193, 13.20390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.81421, -1670.23193, 13.38390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19358, 1444.77515, -1670.21667, 10.81570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.03516, -1670.21667, 10.99570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.31519, -1670.21667, 11.17570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.59521, -1670.21667, 11.35570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.81519, -1670.21667, 11.53570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1446.09521, -1670.21667, 11.71570, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1509.53394, -1668.39819, 8.25052, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1509.53394, -1672.00989, 8.25050, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1513.27539, -1670.20288, 12.66390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1513.03882, -1670.21399, 12.84390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1512.79883, -1670.21399, 13.02390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1512.53882, -1670.21399, 13.20390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1512.25879, -1670.21399, 13.38390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19358, 1514.24109, -1670.20422, 10.81570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1514.00110, -1670.20422, 10.99570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1513.76111, -1670.20422, 11.17570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1513.52112, -1670.20422, 11.35570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1513.26111, -1670.20422, 11.53570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1512.98108, -1670.20422, 11.69570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 1508.18774, -1670.20422, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1498.55103, -1670.20422, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1488.91553, -1670.20422, 13.45670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1450.98840, -1670.21338, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1460.60718, -1670.21338, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1470.23792, -1670.21338, 13.44670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1457.77417, -1702.60022, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77417, -1692.98364, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77417, -1683.37952, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77417, -1673.77722, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1702.61389, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1692.99854, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1683.36108, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1673.73962, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1700.01123, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.02112, -1700.01123, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.73230, -1700.01123, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.23328, -1700.00952, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1690.42725, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.00110, -1690.42749, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.73230, -1690.42725, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.21338, -1690.42725, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1671.21753, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.00110, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.73230, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.21338, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.00317, -1671.23743, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.71228, -1671.21655, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.21338, -1671.21753, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1453.07312, -1671.20288, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1479.85034, -1656.88635, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1651.96069, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1642.37512, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1632.77686, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.83008, -1661.65405, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.30896, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1502.04663, -1671.19641, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.30896, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.30896, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.28906, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1485.93738, -1610.95264, 9.15570, 0.00000, 35.00000, 315.00000);
	CreateObject(19377, 1473.85901, -1610.95569, 9.15570, 0.00000, 35.00000, -495.00000);
	CreateObject(19377, 1479.88306, -1613.50000, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1496.16296, -1606.71228, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1463.59680, -1606.73035, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1507.75635, -1614.31140, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1508.85754, -1621.00366, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1512.56323, -1617.23132, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1516.30750, -1622.70276, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateDynamicObject(19435, 1513.34790, -1617.94604, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1503.09802, -1613.70752, 8.23787, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1456.03601, -1613.68384, 8.23787, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1498.24280, -1606.70361, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1460.92017, -1606.73328, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateDynamicObject(19435, 1491.34705, -1609.66785, 11.73660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1491.42505, -1609.67993, 11.73660, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19435, 1468.38025, -1609.72314, 11.73660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1468.38501, -1609.70459, 11.73660, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19381, 1508.10706, -1625.15247, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.11743, -1622.67212, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1507.37683, -1622.07764, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.28906, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1623.14148, 13.38760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1625.15161, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1622.77393, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1451.72864, -1622.06812, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.19556, -1614.48413, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.05457, -1614.47620, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1468.07507, -1616.74243, 13.41760, 0.00000, 90.00000, 45.00000);
	CreateDynamicObject(19381, 1478.19897, -1621.26697, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1488.70142, -1621.26697, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1491.12866, -1616.71912, 13.41760, 0.00000, 90.00000, 45.00000);
	CreateDynamicObject(19381, 1496.65503, -1614.47888, 13.43787, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.93884, -1614.46509, 13.41790, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1664.11804, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1499.30444, -1655.67566, 13.43670, 0.00000, 90.00000, 25.00000);
	CreateDynamicObject(19454, 1497.45557, -1647.32593, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77551, -1664.13794, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1459.58887, -1655.68628, 13.43670, 0.00000, 90.00000, -25.00000);
	CreateDynamicObject(19454, 1461.44836, -1647.24805, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1494.48315, -1640.28735, 13.43670, 0.00000, 90.00000, 45.00000);
	CreateDynamicObject(19454, 1464.32813, -1640.21899, 13.43670, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 1471.30029, -1637.33179, 13.44670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1480.92505, -1637.33179, 13.44670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1487.49194, -1637.33179, 13.42670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(870, 1486.74707, -1673.56812, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1486.75085, -1675.81470, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(870, 1486.70288, -1678.14941, 13.66356, 0.00000, 0.00000, 49.07999);
	CreateDynamicObject(870, 1486.72949, -1680.13525, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.41223, -1673.73572, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.34985, -1676.05920, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(870, 1473.21790, -1678.40027, 13.66356, 0.00000, 0.00000, 49.07999);
	CreateDynamicObject(870, 1473.21387, -1679.95349, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(803, 1485.06433, -1647.30273, 14.33030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.02258, -1682.12622, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.14038, -1684.15051, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(870, 1486.65662, -1682.35181, 13.66356, 0.00000, 0.00000, 49.07999);
	CreateDynamicObject(870, 1486.77979, -1684.31775, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(1359, 1475.84900, -1679.46387, 14.16905, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1484.00500, -1679.26343, 14.16910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1223, 1478.02808, -1711.80286, 13.44473, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1223, 1469.28589, -1703.49097, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1490.23804, -1703.66504, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1508.06519, -1668.09155, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1450.97778, -1667.96216, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1462.53735, -1639.07422, 13.44470, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1223, 1495.81714, -1638.89160, 13.44470, 0.00000, 0.00000, 235.00000);
	CreateDynamicObject(1280, 1462.81079, -1648.31836, 13.87610, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1496.19299, -1647.73718, 13.87610, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1359, 1462.67126, -1646.28284, 14.16905, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1496.04932, -1645.64380, 14.16905, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 1445.17603, -1717.72961, 16.42190, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1226, 1514.09729, -1717.49438, 16.42190, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(8674, 1472.41833, -1716.90796, 14.77496, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1487.42102, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1462.11401, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1451.82690, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1497.76807, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1507.13928, -1716.89343, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1513.35120, -1710.94629, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1700.61987, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1690.27539, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.28015, -1679.95764, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1660.69629, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1650.39819, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1640.07642, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1629.77539, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1711.00439, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1700.70264, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1690.42029, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1680.11804, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1661.09680, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1650.79626, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1640.49658, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1630.13672, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1479.83838, -1616.51538, 12.58726, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1487.93469, -1613.21936, 12.58730, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19375, 1471.72485, -1613.12793, 12.58730, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(16101, 1484.60083, -1616.44043, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(16101, 1475.13391, -1616.42139, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(16101, 1491.32849, -1609.77209, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(16101, 1468.38757, -1609.73926, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(717, 1454.41028, -1724.50159, 12.64662, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1488.63708, -1724.45447, 12.64660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1510.41858, -1726.09192, 12.64660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1444.22437, -1724.39514, 12.64660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1507.37256, -1683.78992, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(808, 1506.47192, -1695.36072, 14.86119, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1467.14807, -1711.56897, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(647, 1450.51086, -1691.39258, 14.65979, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(808, 1450.58972, -1679.66064, 14.94301, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(808, 1464.70337, -1679.59241, 14.94301, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(803, 1491.99072, -1628.83252, 14.33030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1475.34644, -1626.60693, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(808, 1483.36938, -1627.71924, 14.80097, 0.00000, 0.00000, -132.30000);
	CreateDynamicObject(808, 1463.88586, -1619.72961, 14.80097, 0.00000, 0.00000, -259.56003);
	CreateDynamicObject(1445, 1523.05615, -1718.02747, 12.99100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1342, 1517.18445, -1706.82813, 13.41548, 0.00000, 0.00000, -22.56001);
	CreateDynamicObject(1340, 1516.44543, -1710.76160, 13.40245, 0.00000, 0.00000, -1.62000);
	CreateDynamicObject(1341, 1516.69788, -1713.60925, 13.20514, 0.00000, 0.00000, 7.38000);
	CreateDynamicObject(1281, 1520.77197, -1710.58533, 13.16697, 0.00000, 0.00000, 70.74000);
	CreateObject(19377, 1519.38037, -1703.23792, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(717, 1522.46021, -1687.07397, 12.48909, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1522.28198, -1644.33130, 12.48909, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1522.84570, -1680.78235, 13.52780, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1285, 1514.67847, -1666.44910, 12.94730, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1286, 1514.67847, -1665.97815, 12.94730, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1289, 1514.67847, -1665.48560, 12.94730, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1258, 1522.84900, -1663.76233, 12.92386, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1499.39880, -1724.91907, 13.52780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1288, 1455.15051, -1718.09497, 12.86884, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1286, 1455.61316, -1718.09497, 12.86880, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1285, 1456.06897, -1718.09497, 12.86880, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3861, 1442.50464, -1628.31079, 13.40645, 0.00000, 0.00000, -75.29993);
	CreateDynamicObject(3862, 1442.73206, -1633.44592, 13.40650, 0.00000, 0.00000, -91.56003);
	CreateDynamicObject(3863, 1442.04663, -1638.94373, 13.40650, 0.00000, 0.00000, -97.98000);
	CreateDynamicObject(3862, 1442.20044, -1643.76355, 13.40650, 0.00000, 0.00000, -88.80002);
	CreateDynamicObject(1258, 1436.09424, -1653.96704, 12.93698, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1493.12427, -1610.86584, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1495.26624, -1610.91602, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1497.59375, -1611.07996, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1499.54102, -1610.90955, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.64050, -1610.77234, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.58765, -1612.73511, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.52930, -1614.82288, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.42297, -1616.79053, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1502.15027, -1618.57703, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1504.13062, -1618.76343, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1506.29321, -1618.77344, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1508.63452, -1618.75525, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1510.83606, -1618.76318, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1466.58447, -1610.88232, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1464.48303, -1610.77966, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1462.72314, -1610.79358, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1458.40186, -1610.76868, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1460.54224, -1610.75098, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.34033, -1610.82092, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.48572, -1612.62537, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.34705, -1614.54260, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.57727, -1616.58240, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1454.89368, -1618.45728, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.18054, -1618.33704, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1452.81348, -1618.51599, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1450.78857, -1618.47070, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1448.64343, -1618.43225, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(3462, 1479.67908, -1609.86084, 13.84636, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3515, 1497.88525, -1614.69727, 12.67966, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1461.12244, -1614.91492, 12.67966, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1497.23047, -1608.41650, 12.81052, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1280, 1462.13184, -1608.54211, 12.81052, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1359, 1494.89636, -1608.17090, 13.13175, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1464.19116, -1608.33765, 13.13175, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1512.45764, -1608.19226, 12.48909, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1447.13293, -1608.19226, 12.48910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1495.62939, -1598.58789, 12.48910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1460.77112, -1598.58789, 12.48910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1479.69531, -1615.19067, 12.81052, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1361, 1489.13794, -1605.29932, 13.19079, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1485.80688, -1601.79956, 13.19079, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1479.69421, -1601.79956, 13.19080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1474.36401, -1601.79956, 13.19080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1470.50537, -1605.29932, 13.19080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1496.22546, -1711.98975, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(19450, 1507.55786, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1497.92810, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1478.72632, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1488.34668, -1715.96777, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1469.09741, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1459.48438, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1451.39819, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1446.58630, -1711.36450, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1701.75024, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1692.12854, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1682.50598, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1672.92273, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1663.28760, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1653.67578, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1644.07239, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1624.91846, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58972, -1634.50305, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.60632, -1622.93115, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1512.39441, -1711.31299, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19435, 1511.75098, -1716.15601, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19450, 1512.39441, -1701.69250, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1692.13269, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1682.53162, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1672.94080, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1663.69824, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1654.10229, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1644.46838, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1634.88770, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1625.28271, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.41907, -1622.90210, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1507.72498, -1618.20215, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1451.38257, -1618.21594, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1457.67932, -1613.97278, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1501.45007, -1613.87769, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1460.87463, -1610.67480, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1463.51831, -1610.67883, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1498.20447, -1610.59827, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1496.20923, -1610.60999, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19445, 1477.25854, -1717.68872, 10.68335, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1473.62073, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1470.05212, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1466.16370, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1462.28748, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1458.17480, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1472.54517, -1717.77502, 10.70330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1462.92468, -1717.78345, 10.70330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1444.74011, -1710.22729, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1444.74011, -1700.59949, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1444.74011, -1690.97375, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1444.74670, -1681.88721, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1443.91309, -1714.94946, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1711.03003, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1707.08728, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1702.96423, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.76367, -1698.76575, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1694.52478, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1690.24316, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1686.03369, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1681.64929, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1677.16418, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1439.67529, -1717.75500, 12.29580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1436.85059, -1722.66699, 12.31460, 0.00000, 90.00000, -45.59996);
	CreateDynamicObject(19362, 1439.02258, -1724.89551, 12.30460, 0.00000, 90.00000, -45.60000);
	CreateObject(19377, 1444.31958, -1722.48987, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.31799, -1717.69470, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1514.66406, -1722.46851, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1522.19397, -1722.62964, 12.31460, 0.00000, 90.00000, 45.17999);
	CreateDynamicObject(19362, 1519.94702, -1724.89258, 12.29460, 0.00000, 90.00000, 45.18000);
	CreateObject(19377, 1516.19617, -1601.99988, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1520.82825, -1599.46289, 12.31460, 0.00000, 90.00000, 32.39949);
	CreateDynamicObject(19362, 1522.27283, -1601.77734, 12.29460, 0.00000, 90.00000, 32.33995);
	CreateDynamicObject(19362, 1522.77515, -1601.44897, 12.27460, 0.00000, 90.00000, 32.33990);
	CreateDynamicObject(19362, 1521.52698, -1598.46338, 12.27460, 0.00000, 90.00000, 32.33990);
	CreateObject(19377, 1444.20691, -1602.04956, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1436.83508, -1601.98303, 12.29460, 0.00000, 90.00000, 47.22002);
	CreateDynamicObject(19362, 1438.99658, -1599.60559, 12.31460, 0.00000, 90.00000, 48.12000);
	CreateDynamicObject(19362, 1436.00574, -1601.11731, 12.27460, 0.00000, 90.00000, 47.22000);
	CreateDynamicObject(19362, 1438.10999, -1598.29688, 12.27460, 0.00000, 90.00000, 47.22000);
	CreateDynamicObject(673, 1466.30945, -1661.40344, 13.48555, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(706, 1460.56128, -1628.76392, 13.49221, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1477.05322, -1714.39734, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1483.38660, -1715.02063, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1511.51440, -1673.98560, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1511.35828, -1666.92261, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1446.68799, -1666.99902, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1446.81531, -1673.93933, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1476.00500, -1682.76477, 14.23470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1364, 1476.11670, -1675.87720, 14.23470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1364, 1483.93262, -1675.61829, 14.23470, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1364, 1483.97510, -1682.71936, 14.23470, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(870, 1476.60205, -1686.87195, 13.66360, 0.00000, 0.00000, -59.00000);
	CreateDynamicObject(870, 1474.57666, -1686.72107, 13.66360, 0.00000, 0.00000, -76.00000);
	CreateDynamicObject(870, 1472.91052, -1686.48730, 13.66360, 0.00000, 0.00000, 30.00000);
	CreateDynamicObject(870, 1486.62341, -1686.70288, 13.66360, 0.00000, 0.00000, 30.00000);
	CreateDynamicObject(870, 1484.88757, -1686.77258, 13.66360, 0.00000, 0.00000, -62.00000);
	CreateDynamicObject(870, 1483.22205, -1686.91479, 13.66360, 0.00000, 0.00000, -69.00000);
	CreateDynamicObject(1361, 1484.04590, -1672.76990, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1476.03809, -1672.94580, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1498.65808, -1667.82422, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1498.67346, -1672.63464, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1498.73596, -1703.04700, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1482.52466, -1703.18542, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1477.55872, -1703.08801, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1460.14197, -1703.26514, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1460.10608, -1672.65295, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1460.16394, -1667.85388, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1465.37341, -1703.35620, 14.23470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1493.77466, -1703.46729, 14.23470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(672, 1506.89294, -1712.11035, 13.49253, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1496.69727, -1668.28540, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1493.29309, -1668.29028, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1493.20459, -1672.13428, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1496.85107, -1672.15833, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1495.53943, -1668.28418, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1495.67041, -1672.19885, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1492.13623, -1668.30249, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1492.00342, -1672.14294, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1494.51550, -1668.27783, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1490.96765, -1668.28784, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1490.93372, -1672.15759, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1494.40942, -1672.17822, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18749, 1479.88733, -1667.54004, 18.70710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1468.67578, -1694.08594, 16.40220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1489.92078, -1694.52002, 16.40220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.88977, -1718.16101, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1522.48486, -1694.68420, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.67981, -1660.81091, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.23071, -1631.88818, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.78491, -1609.14734, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1487.89990, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(3472, 1477.20020, -1722.39941, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1436.96179, -1665.84668, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1437.25574, -1624.01123, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1452.45398, -1600.73499, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1509.07251, -1601.12561, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11722, 1520.84631, -1710.26404, 13.30850, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11723, 1520.88464, -1710.45129, 13.30900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1546.55652, -1664.17639, 12.13970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1546.45898, -1686.77051, 12.13970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(813, 1546.70020, -1658.13257, 14.70680, 0.00000, 0.00000, 116.00000);
	CreateDynamicObject(813, 1546.11194, -1692.10413, 14.70680, 0.00000, 0.00000, 136.00000);
	CreateDynamicObject(18014, 1553.15515, -1672.40918, 16.09030, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(18014, 1553.18140, -1678.74683, 16.09030, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(767, 1506.23889, -1649.78210, 13.43520, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(768, 1455.51160, -1711.47302, 13.43950, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(640, 1546.77832, -1667.41528, 13.20100, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, 1546.69580, -1683.78174, 13.20100, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19122, 1543.88562, -1666.77991, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1543.83728, -1655.78760, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.46570, -1655.75208, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.45471, -1666.77844, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1543.76538, -1684.39160, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.62695, -1684.40137, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.65564, -1695.55066, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1543.79858, -1695.55310, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1504.98389, -1666.34668, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1504.95703, -1674.08093, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1483.86926, -1709.52429, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1476.18738, -1709.53760, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1453.95337, -1674.11230, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1453.93970, -1666.35120, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1461.56885, -1668.35437, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1461.68286, -1672.09998, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1462.69336, -1668.37219, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1462.78943, -1672.09277, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1464.00049, -1668.35938, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1464.04749, -1672.13489, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1465.31042, -1668.35132, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1465.27197, -1672.11536, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1466.53162, -1668.36572, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1466.44238, -1672.10962, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1467.73621, -1668.33899, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1467.64844, -1672.08936, 14.04460, 0.00000, 0.00000, 0.00000);
	//park - location - close
	//bank ls interior - open
	tmpobjid = CreateDynamicObject(19377, 1384.440551, -34.227512, 1005.872436, 0.000000, 90.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1387.198852, -21.505449, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18225, "cuntrockcs_t", "cliffmid4", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1387.198852, -24.835477, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1387.198852, -28.165496, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1387.198852, -31.495508, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1382.759033, -31.495508, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1382.759033, -28.165498, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1382.759033, -24.835474, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1382.759033, -21.505439, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1378.319213, -31.495508, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1373.877441, -31.495508, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1378.317749, -28.165498, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1373.876098, -28.165498, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1378.318359, -24.835474, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1373.876708, -24.835474, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1378.319580, -21.505439, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1373.878295, -21.505439, 999.872924, 270.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18225, "cuntrockcs_t", "cliffmid4", 0xAAFFFFFF);
	tmpobjid = CreateDynamicObject(19377, 1389.302490, -28.397520, 1005.163146, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1389.302490, -18.767522, 1005.163146, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1384.462280, -20.077535, 1005.163146, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1374.841674, -20.077535, 1005.163146, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1384.462280, -33.107543, 1005.163146, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1374.831298, -33.107543, 1005.163146, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1372.030517, -30.447538, 1005.163146, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1372.030517, -18.247501, 1005.163146, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1372.020507, -25.417507, 1008.693664, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1375.534179, -26.573587, 1006.703308, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3980, "cityhall_lan", "LAcityhwal1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1374.831298, -34.227512, 1005.872436, 0.000000, 90.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1387.413330, -20.547332, 1000.682922, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1374.831298, -18.827487, 1005.872436, 0.000000, 90.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(2270, 1380.460693, -20.660913, 1001.912963, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18835, "mickytextures", "marb002", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1384.461181, -18.827487, 1005.872436, 0.000000, 90.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1386.023925, -26.573587, 1006.703308, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3980, "cityhall_lan", "LAcityhwal1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1374.831298, -29.057519, 1011.043457, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1384.460571, -29.057519, 1011.043457, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1384.460571, -23.997501, 1011.043457, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1374.840332, -23.997501, 1011.043457, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.712524, -32.953826, 1001.272949, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.712524, -32.953826, 1004.743225, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(2184, 1375.625976, -28.353559, 999.872924, 0.000000, 0.000000, 111.400001, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3922, "bistro", "Marble2", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2184, 1374.832763, -31.183103, 999.872924, 0.000000, 0.000000, 68.400123, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3922, "bistro", "Marble2", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19538, 1434.162109, -51.381210, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0x00FFFFFF);
	tmpobjid = CreateDynamicObject(19443, 1390.841552, -25.131233, 1000.652099, 90.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.962280, -20.233667, 1004.742553, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1366.883911, -26.541532, 999.791687, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14702, "masmall3int2", "HS3_wall6", 0x00000000);
	tmpobjid = CreateDynamicObject(1569, 1389.175903, -28.194805, 999.872924, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5986, "chateau_lawn", "doorkb_1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(1569, 1389.165893, -25.204803, 999.872924, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 5986, "chateau_lawn", "doorkb_1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1376.078369, -23.149948, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.962280, -32.953826, 1001.272949, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(2290, 1381.790893, -32.346427, 999.842895, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ-COUCHL2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1730, "cj_furniture", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.962280, -32.953826, 1004.773071, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.712524, -20.223873, 1004.743225, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.712524, -20.223873, 1001.253356, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.962280, -20.233667, 1001.272949, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15041, "bigsfsave", "windo_blinds", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1357.581054, -25.757453, 999.962524, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1386.482299, -34.443832, 1001.653015, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(2290, 1379.800415, -20.916454, 999.842895, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ-COUCHL2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1730, "cj_furniture", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1386.482299, -34.443832, 1005.123107, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1383.440795, -34.443832, 1005.103088, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1383.440795, -34.443832, 1001.612915, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.972167, -34.573833, 1005.703369, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.972167, -34.573833, 999.952453, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1390.835327, -26.643810, 1002.462341, 0.000000, 90.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1390.835327, -26.753812, 1002.462341, 0.000000, 90.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1378.250732, -34.443832, 1001.612915, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1378.250122, -18.743850, 1001.612915, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1378.250732, -34.443832, 1005.113403, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1375.170166, -34.443832, 1001.612670, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1375.170166, -34.443832, 1005.112487, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.691528, -34.583847, 1005.702819, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1378.250122, -18.743850, 1005.103027, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.691528, -34.583847, 999.952453, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1375.179687, -18.743850, 1005.103027, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1394.452270, -28.397520, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1375.178955, -18.743850, 1001.612915, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1384.022216, -37.817478, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1373.541748, -37.817478, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.699829, -18.643867, 999.992553, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1366.921630, -30.437463, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1366.921630, -18.257467, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1377.411254, -15.367465, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1376.699829, -18.643854, 1005.702392, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1387.911376, -15.367465, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1394.441162, -18.797468, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1383.431152, -18.743850, 1001.612915, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1378.479125, -23.149948, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1380.749023, -23.149948, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1383.039306, -23.149948, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1385.319580, -23.149948, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1387.628540, -23.149948, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1387.628540, -29.849958, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1385.268310, -29.849958, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1382.858032, -29.849958, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1380.487670, -29.849958, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1378.087768, -29.849958, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1376.106445, -29.849958, 999.912536, 0.000000, 90.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1376.106445, -29.849958, 999.912536, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1376.106445, -27.449970, 999.912536, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1376.106445, -25.599964, 999.912536, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14651, "ab_trukstpd", "Bow_bar_flooring", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1383.431152, -18.743850, 1005.112792, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1386.501098, -18.743850, 1005.112792, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1386.501098, -18.743850, 1001.602600, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.980468, -18.623851, 999.952087, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1384.980468, -18.623851, 1005.702453, 0.000000, 90.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(644, 1388.186889, -21.366914, 1000.262878, 0.000000, 0.000000, 42.199989, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 3603, "bevmans01_la", "hottop5d_law", 0x00000000);
	tmpobjid = CreateDynamicObject(644, 1388.107910, -32.223091, 1000.262878, 0.000000, 0.000000, 42.199989, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 3603, "bevmans01_la", "hottop5d_law", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1367.141845, -25.747459, 1005.213745, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1367.141845, -22.957437, 1005.213378, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1356.389404, -26.541532, 999.791687, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(2256, 1380.752685, -32.999336, 1003.032836, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14420, "dr_gsbits", "mp_apt1_pic2", 0x00000000);
	tmpobjid = CreateDynamicObject(2262, 1379.267456, -20.702116, 1001.763244, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 2811, "gb_ornaments01", "GB_photo01", 0x00000000);
	tmpobjid = CreateDynamicObject(19443, 1390.841552, -28.271238, 1001.582946, 90.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(2264, 1381.574462, -20.670015, 1002.333129, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 2266, "picture_frame", "CJ_PAINTING28", 0x00000000);
	tmpobjid = CreateDynamicObject(2264, 1382.484985, -20.670015, 1001.812988, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 2254, "picture_frame_clip", "CJ_PAINTING15", 0x00000000);
	tmpobjid = CreateDynamicObject(2273, 1379.054077, -32.508701, 1002.063110, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 2266, "picture_frame", "CJ_PAINTING34", 0x00000000);
	tmpobjid = CreateDynamicObject(2273, 1382.464355, -32.508701, 1002.063110, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_canvas15", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2254, "picture_frame_clip", "CJ_PAINTING24", 0x00000000);
	tmpobjid = CreateDynamicObject(19443, 1390.841552, -25.131233, 1001.582946, 90.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19443, 1390.841552, -28.271238, 1000.652282, 90.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1361.739135, -18.217447, 999.962524, 0.000000, 180.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1356.389404, -16.921527, 999.791687, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1366.481201, -22.947437, 1005.213256, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(2356, 1373.321655, -29.486640, 999.872924, 0.000000, 0.000000, -56.999977, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_leather_strips", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1366.783813, -26.541532, 1004.432312, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14702, "masmall3int2", "HS3_wall6", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1356.304931, -26.541532, 1004.432312, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14702, "masmall3int2", "HS3_wall6", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1357.678710, -26.457462, 999.962524, 0.000000, 180.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1386.912841, -20.547332, 1000.682922, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1386.992919, -32.657295, 1000.682922, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2266, 1374.620971, -29.498609, 1000.763061, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19894, "laptopsamp1", "laptopscreen2", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1373.563354, -32.597297, 1000.682922, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1374.083862, -32.597297, 1000.682922, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2266, 1375.601928, -29.518610, 1000.763061, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19874, 1375.087890, -29.512548, 1000.723510, 180.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(2356, 1373.174682, -21.864820, 999.872924, 0.000000, 0.000000, -86.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_leather_strips", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	tmpobjid = CreateDynamicObject(2266, 1374.362182, -30.371349, 1000.763061, 0.000000, 0.000000, -125.699951, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 16640, "a51", "a51_monitors", 0x00000000);
	tmpobjid = CreateDynamicObject(2266, 1375.138549, -30.953622, 1000.763061, 0.000000, 0.000000, 54.300048, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19874, 1374.756958, -30.647089, 1000.707824, -178.700012, 90.000000, -36.199981, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1817, 1380.317138, -22.959974, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14389, "madpoolbit", "AH_flroortile4", 0x00000000);
	tmpobjid = CreateDynamicObject(1817, 1380.317138, -31.399976, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14389, "madpoolbit", "AH_flroortile4", 0x00000000);
	tmpobjid = CreateDynamicObject(2266, 1374.948364, -21.557851, 1000.763061, 0.000000, 0.000000, 95.700004, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(2266, 1373.961181, -21.636278, 1000.763061, 0.000000, 0.000000, 275.700012, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14544, "ab_woozieb", "ap_screens1", 0x00000000);
	tmpobjid = CreateDynamicObject(19874, 1375.087890, -29.512548, 1000.643432, 180.000000, 180.000000, 87.799911, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19874, 1374.764770, -30.646400, 1000.643432, 180.000000, 180.000000, 51.199901, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(631, 1372.543945, -20.710489, 1000.783447, 0.000000, 0.000000, -44.699996, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4003, "cityhall_tr_lan", "foliage256", 0xFFFFFF33);
	tmpobjid = CreateDynamicObject(1897, 1372.015380, -25.696207, 1000.983886, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1372.015380, -25.696207, 1003.194458, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1372.015380, -23.016189, 1000.983703, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19874, 1374.519165, -21.563724, 1000.653442, 180.000000, 180.000000, 98.699928, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1372.015380, -23.016189, 1003.183959, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1371.995361, -24.156192, 1003.494262, 270.000000, 270.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19874, 1374.507446, -21.572540, 1000.723510, 180.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1371.995361, -26.326213, 1003.494262, 270.000000, 270.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1372.115478, -24.196207, 999.773681, 90.000000, 270.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1372.115478, -26.416213, 999.773681, 90.000000, 270.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1371.985351, -26.416213, 999.773681, 90.000000, 270.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1897, 1371.985351, -24.206209, 999.773681, 90.000000, 270.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2356, 1373.125732, -28.018836, 999.872924, 0.000000, 0.000000, -88.799972, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_leather_strips", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	tmpobjid = CreateDynamicObject(2264, 1372.643798, -30.170032, 1002.593078, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2811, "gb_ornaments01", "GB_photo02", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2811, "gb_ornaments01", "GB_photo02", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1352.940795, -21.727439, 999.962524, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1362.980957, -30.437463, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1352.538818, -26.427425, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1366.899169, -18.257415, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1357.465820, -16.941532, 1004.432312, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14702, "masmall3int2", "HS3_wall6", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1351.518188, -18.217447, 999.962524, 0.000000, 180.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1358.952026, -13.357445, 999.962524, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1349.311035, -13.357445, 999.962524, 0.000000, 180.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	tmpobjid = CreateDynamicObject(19843, 1359.815673, -24.384485, 1004.323059, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ventb64", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1346.398193, -16.827428, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1356.890869, -8.667419, 999.962524, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14674, "civic02cj", "ab_hosWallUpr", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1371.891967, -24.343269, 1001.653381, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 8409, "gnhotel1", "gnhoteldoor05_128", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19843, 1365.669799, -24.384485, 1004.323059, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ventb64", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -17.797256, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -16.267208, 1002.342895, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1361.364868, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1360.854248, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1360.353881, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1359.853515, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1359.343139, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1358.832763, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1358.332275, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1346.984985, -16.941532, 1004.432312, 0.000000, 90.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14702, "masmall3int2", "HS3_wall6", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1357.792480, -22.331245, 1002.317687, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1357.792480, -22.331245, 1004.738037, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1361.634521, -22.331245, 1004.738037, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1361.634521, -22.331245, 1002.342468, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1357.825439, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1357.314941, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1356.814453, -13.897294, 1000.682922, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1356.814453, -13.897294, 1002.343566, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1357.315063, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1357.815551, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1358.326049, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1358.826538, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1359.337158, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1359.847412, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1360.357910, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1360.858398, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1361.368896, -13.897294, 1002.353149, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -21.327301, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -20.817298, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -20.307287, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -19.797273, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -19.297262, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -21.327301, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -18.797254, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -18.297243, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -20.807292, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -17.797235, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -17.287227, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -20.307300, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -16.777217, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -19.817291, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -16.267208, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -19.297283, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -15.757205, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -18.787279, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -15.257202, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -18.297267, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -14.747198, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -14.237195, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -13.717189, 1000.682922, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -17.297250, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -16.777248, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -15.757205, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -15.257202, 1002.342895, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -14.747198, 1002.342773, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -14.237195, 1002.343078, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2610, 1352.024169, -13.717189, 1002.333007, 0.000000, 0.000000, 450.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "Alumox64", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampblack", 0xFFFFFF33);
	SetDynamicObjectMaterial(tmpobjid, 2, 14581, "ab_mafiasuitea", "barbersmir1", 0x00000000);
	tmpobjid = CreateDynamicObject(2264, 1372.643798, -27.130033, 1002.483764, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19787, "samplcdtvs1", "samplcdtv1screen", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19173, "samppictures", "samppicture3", 0x00000000);
	tmpobjid = CreateDynamicObject(2258, 1372.155761, -28.475849, 1002.312866, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_canvas06", 0x00000000);
	tmpobjid = CreateDynamicObject(2274, 1372.627563, -21.810142, 1002.057556, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2754, "otb_machine", "lift4", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14593, "papaerchaseoffice", "sign_noCamera", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(14793, 1380.443115, -23.033390, 1006.483459, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(14793, 1379.912597, -23.033390, 1006.483459, 0.000000, 0.000000, 90.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18075, 1380.804687, -33.796527, 1005.713989, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18075, 1380.804687, -19.516540, 1005.713989, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2811, 1382.804809, -20.585840, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2811, 1382.804809, -32.545852, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1384.962402, -21.226245, 1001.613586, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1384.962402, -21.226245, 1004.053466, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1384.962402, -21.226245, 1004.053466, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1376.723510, -21.226245, 1004.034240, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2811, 1378.824707, -20.585840, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2811, 1378.814697, -32.545852, 999.872924, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1376.723510, -21.226245, 1004.034240, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1384.962402, -31.896265, 1004.043945, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1384.962402, -31.896265, 1004.043945, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1384.962402, -31.896265, 1001.603637, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1376.702514, -31.896265, 1004.013854, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18084, 1376.702514, -31.896265, 1004.013854, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2167, 1372.731689, -32.939338, 999.872924, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2164, 1373.765136, -20.290769, 999.872924, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2174, 1374.612426, -21.193359, 999.872924, 0.000000, 0.000000, -90.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2855, 1374.363525, -20.518230, 1001.292602, 0.000000, 0.000000, -1.499999, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19942, 1374.886840, -20.450483, 1001.402709, 0.000000, 0.000000, -46.799999, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2342, 1373.929199, -20.305795, 1001.422851, 0.000000, 0.000000, 90.599975, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(1210, 1374.713989, -21.274929, 1000.013061, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19792, 1374.445190, -21.986116, 1000.673095, 0.000000, 0.000000, -11.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2922, 1372.145751, -22.716487, 1001.582702, 0.000000, 0.000000, -90.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19807, 1374.712646, -29.968292, 1000.722900, 0.000000, 0.000000, -104.300003, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1000.167480, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1000.327636, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1000.497802, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1000.657958, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1000.838134, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1001.018310, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1001.208496, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1001.398681, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1001.618835, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1001.618835, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1001.819030, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1002.019226, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1002.189392, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1002.379577, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1002.549743, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1002.719848, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1002.899963, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1003.080139, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1003.270324, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1003.480529, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1003.650695, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1003.830871, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1004.031066, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 1004.251281, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(18643, 1362.105346, -22.327289, 999.960876, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1355.782836, -13.954963, 1000.318054, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1354.912475, -13.954963, 1000.318054, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1354.051879, -13.954963, 1000.318054, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1354.051879, -13.954963, 1001.248596, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1355.773315, -13.954963, 1001.248596, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1354.922607, -13.954963, 1001.248596, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2886, 1362.083374, -23.031396, 1001.362731, 0.000000, 0.000000, 360.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1361.192138, -16.254962, 1000.318054, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1361.192138, -17.114965, 1000.318054, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1361.192138, -17.994970, 1000.318054, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1361.192138, -18.864982, 1000.318054, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1361.192138, -16.254980, 1001.248657, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(2332, 1361.192138, -17.134990, 1001.248657, 0.000000, 0.000000, 270.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19808, 1374.707763, -29.470556, 1000.663024, 0.000000, 0.000000, -98.499984, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19808, 1374.324951, -30.468904, 1000.663024, 0.000000, 0.000000, -132.400009, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19623, 1357.483032, -21.696607, 1003.937988, 0.000000, 0.000000, 180.000000, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19623, 1361.713012, -21.556610, 1003.937988, 0.000000, 0.000000, -97.100028, 1, -1, -1, 200.00, 200.00); 
	tmpobjid = CreateDynamicObject(19623, 1352.112182, -13.379225, 1004.044372, 0.000000, 0.000000, 0.000000, 1, -1, -1, 200.00, 200.00); 
	//bank ls interior - close
	//bike shop interior - open
	tmpobjid = CreateDynamicObject(19447, 692.773437, -515.063415, -4.949180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 711.694030, -515.333618, -4.949180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.969909, -520.018615, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.119567, -510.529663, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.520446, -510.379180, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.371032, -519.858215, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.497741, -511.784790, -6.679432, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.056762, -511.934783, -6.679432, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.371032, -519.858215, -1.559180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.119567, -510.529663, -1.549180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.520446, -510.379180, -1.549178, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 692.773437, -515.063415, -1.559180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.969909, -520.018615, -1.569182, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 711.694030, -515.333618, -1.569180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.002685, -515.403747, -6.721834, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.948852, -518.852722, -6.763989, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.340454, -518.702026, -6.763989, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.394104, -515.272766, -6.722081, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.340332, -518.758666, -2.124330, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.394165, -515.319458, -2.082298, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.449462, -511.849456, -2.039906, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.018005, -511.999389, -2.039906, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.964050, -515.458557, -2.082180, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.909790, -518.918029, -2.124455, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19359, 711.689331, -514.613830, -3.987645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 6282, "beafron2_law2", "heat_03", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(2395, 702.363159, -519.783569, -5.039431, 0.000000, 0.000000, 178.299865, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 702.211791, -519.280578, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 700.322448, -519.227905, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1556, 701.809265, -510.538787, -6.646059, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1556, 700.309082, -510.538787, -6.646059, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1722, 706.248840, -514.657775, -6.616866, 0.000000, 0.000000, 93.900009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3034, 692.883239, -515.039855, -3.438714, 0.000000, 0.000000, 89.899978, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2184, 704.206481, -514.210205, -6.660360, 0.000000, 0.000000, -70.299972, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2531, 697.485778, -511.085662, -6.691649, 0.000000, 0.000000, -2.099998, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2531, 695.946899, -511.029266, -6.691649, 0.000000, 0.000000, -2.099998, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2012, 693.481445, -517.863891, -6.683752, 0.000000, 0.000000, 90.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1661, 698.582275, -514.533386, -2.425457, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1518, 700.581359, -510.475799, -2.751517, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1518, 703.291198, -510.475799, -2.751517, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2229, 711.671325, -510.736999, -6.638994, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1514, 704.735961, -515.102355, -5.674490, 0.000000, 0.000000, -45.599998, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2493, 698.876403, -519.705139, -4.580351, 0.000000, 0.000000, -178.899978, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2012, 693.442993, -514.714172, -6.683752, 0.000000, 0.000000, 90.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1884, 695.675659, -519.668457, -6.806284, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19173, 701.064392, -519.831359, -5.520337, 0.000000, 0.000000, -1.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 702.225769, -518.780578, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 700.338439, -518.667663, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 700.356323, -518.047363, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 702.243957, -518.120788, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1886, 711.055358, -510.853118, -2.034826, 0.000000, 0.000000, -49.099987, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1886, 711.463867, -519.587768, -2.034826, 0.000000, 0.000000, -111.499977, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2855, 704.928771, -515.997131, -5.913246, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2480, 710.075378, -513.577148, -6.077589, 0.000000, 0.000000, -95.499969, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2480, 709.941345, -514.970764, -6.077589, 0.000000, 0.000000, -95.499969, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2267, 708.793029, -510.663299, -3.822557, 0.000000, 0.000000, -0.799999, -1, 1, -1, 300.00, 300.00);
	//bike shop interior - close
	//house in the ocean - open
	tmpobjid = CreateDynamicObject(19448, 1426.593872, -291.480712, 3.208006, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1423.212646, -292.199493, 3.057084, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1419.840820, -292.916076, 2.906597, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1416.479492, -293.630523, 2.756546, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1413.109130, -294.346832, 2.606053, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1409.747558, -295.061370, 2.456003, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1406.396362, -295.773742, 2.306386, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1403.044555, -296.486236, 2.156774, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1399.663696, -297.204956, 2.005849, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1396.303222, -297.919403, 1.855797, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1392.922973, -298.637878, 1.704874, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1424.619018, -282.178100, 3.208006, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1422.634033, -272.836425, 3.208006, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1421.247436, -282.894805, 3.057520, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1417.876586, -283.611297, 2.907033, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1414.514648, -284.325866, 2.756983, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1411.182495, -285.034179, 2.608241, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1407.772094, -285.759155, 2.456009, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1404.390502, -286.477844, 2.305087, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1401.068359, -287.184082, 2.156780, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1397.765991, -287.886047, 2.009346, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1394.366455, -288.608703, 1.857550, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1390.946044, -289.335693, 1.704881, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1419.253784, -273.554992, 3.057080, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1415.863037, -274.275695, 2.905720, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1412.501464, -274.990173, 2.755669, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1409.120849, -275.708740, 2.604745, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1405.816528, -276.411041, 2.457313, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1402.415283, -277.133972, 2.305518, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1399.034912, -277.852569, 2.154595, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1395.625488, -278.577239, 2.002360, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1392.235351, -279.297851, 1.851000, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1388.952026, -279.995788, 1.704438, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18368, 1407.666015, -271.928558, -1.879041, -2.399999, 0.000000, 90.899894, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3598, 1410.038696, -283.678771, 4.634941, 0.000000, 0.000000, 14.800004, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(17950, 1394.035644, -288.770446, 4.331573, 0.000000, 0.000000, -163.899948, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1389.290893, -283.244018, 1.916652, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1389.290893, -274.044158, 1.916652, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(17068, 1383.182128, -280.976928, 0.345578, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//house in the ocean - close
	//taxi - interior - open
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 653.625915, 29.676860, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 653.625915, 33.126865, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 656.806152, 29.676860, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 656.806152, 33.126865, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 659.945800, 29.676860, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 659.945800, 33.126865, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 661.477111, 29.676860, 0.000015, 0.000022, 89.699974, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 661.477111, 33.126865, 0.000015, 0.000022, 89.699974, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 663.115356, 29.676860, 0.000000, 0.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 663.115356, 33.126865, 0.000000, 0.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 666.275939, 29.676860, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 666.275939, 33.126865, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 669.416015, 29.676860, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 669.416015, 33.126865, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 672.566345, 29.676860, 0.000000, 0.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 672.566345, 33.126865, 0.000000, 0.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 674.157958, 29.676860, 0.000022, 0.000022, 89.699951, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 674.157958, 33.126865, 0.000022, 0.000022, 89.699951, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.317749, 674.157958, 29.676860, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.317749, 674.157958, 33.126865, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.447021, 674.157958, 29.676860, 0.000030, 0.000022, 89.699928, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.447021, 674.157958, 33.126865, 0.000030, 0.000022, 89.699928, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.508300, 674.157958, 29.676860, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.508300, 674.157958, 33.126865, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.678710, 674.157958, 29.676860, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.678710, 674.157958, 33.126865, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 672.527038, 29.676860, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 672.527038, 33.126865, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 669.376770, 29.676860, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 669.376770, 33.126865, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 666.236206, 29.676860, 0.000000, 0.000083, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 666.236206, 33.126865, 0.000000, 0.000083, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 663.086059, 29.676860, 0.000000, 0.000091, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 663.086059, 33.126865, 0.000000, 0.000091, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.641113, 661.537963, 29.676860, 0.000068, 0.000022, 89.699813, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.641113, 661.537963, 33.126865, 0.000068, 0.000022, 89.699813, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 659.925476, 29.676860, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 659.925476, 33.126865, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 656.774597, 29.676860, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 656.774597, 33.126865, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 653.623840, 29.676860, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 653.623840, 33.126865, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.304443, 652.466064, 29.676860, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.304443, 652.466064, 33.126865, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.435424, 652.456054, 29.676860, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.435424, 652.456054, 33.126865, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.617309, 652.456054, 29.676860, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.617309, 652.456054, 33.126865, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 655.409301, 28.139579, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 655.409301, 28.052810, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 655.409301, 28.221542, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 655.409301, 27.966434, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 655.409301, 28.306056, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 661.250000, 28.139579, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 661.250000, 28.052810, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 661.250000, 28.221542, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 661.250000, 27.966434, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 661.250000, 28.306056, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 667.001403, 28.139579, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 667.001403, 28.052810, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 667.001403, 28.221542, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 667.001403, 27.966434, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 667.001403, 28.306056, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 672.773559, 28.139579, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 672.773559, 28.052810, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 672.773559, 28.221542, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 672.773559, 27.966434, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 672.773559, 28.306056, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 655.409301, 33.809604, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 655.409301, 33.722835, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 655.409301, 33.891567, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 655.409301, 33.636459, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 655.409301, 33.976081, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 661.250000, 33.809604, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 661.250000, 33.722835, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 661.250000, 33.891567, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 661.250000, 33.636459, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 661.250000, 33.976081, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 667.001403, 33.809604, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 667.001403, 33.722835, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 667.001403, 33.891567, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 667.001403, 33.636459, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 667.001403, 33.976081, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 672.773559, 33.809604, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 672.773559, 33.722835, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 672.773559, 33.891567, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 672.773559, 33.636459, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 672.773559, 33.976081, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(1505, 1837.769042, 652.520141, 28.137165, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "vgncorpdoor1_512", 0x00000000);
	tmpobjid = CreateDynamicObject(1505, 1839.248901, 652.520141, 28.137165, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "vgncorpdoor1_512", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.810058, 654.086242, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.810058, 657.256164, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.810058, 659.956420, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 659.956420, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 656.806396, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 653.636169, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.447143, 652.477539, 27.176864, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.136230, 652.477539, 27.176864, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.136230, 652.477539, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.256347, 652.477539, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.416625, 652.477539, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 653.636169, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 656.775939, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 659.935913, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.839355, 659.935913, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.839355, 656.765930, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.839355, 653.676269, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.083984, 665.705688, 31.026876, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "ws_airportwin1", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 663.125854, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 666.185729, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 669.345825, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 672.486083, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 663.135742, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 666.236267, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 669.376464, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 672.546813, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 663.125854, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 666.185729, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 669.345825, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 672.486083, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 663.135742, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 666.236267, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 669.376464, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 672.546813, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.603515, 661.564880, 34.786846, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.603515, 661.564880, 27.266826, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.283813, 661.651000, 27.266826, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.283813, 661.651000, 34.786823, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.455444, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.605102, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.784790, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.953979, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1846.074707, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1846.074707, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.944458, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.804687, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.654663, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.465698, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.211181, 654.333679, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19358, 1839.109375, 657.762207, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19358, 1839.008422, 661.160888, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19358, 1838.908081, 664.529052, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19815, 1838.646606, 674.071594, 31.837339, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Taxi Services   ", 30, "Ariel", 10, 1, 0xFFFFFFFF, 0x007A4C3C, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(945, 1841.938354, 662.761535, 40.798152, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(945, 1841.938354, 662.761535, 40.798152, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(945, 1836.977294, 662.761535, 40.798152, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1840.822875, 654.841674, 28.790645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1837.582885, 654.841674, 28.790645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2766, 1834.872192, 660.745483, 30.909553, 0.000000, 0.000000, 90.599990, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11706, 1836.801757, 654.306030, 28.180242, 0.000000, 0.000000, 158.299942, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1363, 1835.943725, 664.061401, 29.034250, 0.000000, 0.000000, -59.699993, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2184, 1837.705444, 667.687255, 28.261720, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2185, 1840.494873, 668.587707, 28.260465, 0.000000, 0.000000, 95.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1500, 1837.925659, 674.020263, 28.085727, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1723, 1832.503540, 662.431884, 28.101026, 0.000000, 0.000000, 92.099960, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2942, 1832.781005, 666.766235, 28.788764, 0.000000, 0.000000, 93.000007, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2494, 1846.451171, 673.933471, 30.331533, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2494, 1845.661376, 673.933471, 30.331533, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19169, 1842.084472, 674.030944, 31.039834, 88.899986, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19169, 1835.033935, 674.030944, 31.039834, 88.899986, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2185, 1844.505493, 663.260437, 28.260465, 0.000000, 0.000000, 95.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1840.822875, 661.132080, 28.790645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	//taxi- interior - close
	//fish store interior - open
	tmpobjid = CreateDynamicObject(19450, 1786.782470, 1654.471435, -13.915359, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1786.732421, 1664.020996, -13.916053, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.273437, 1664.020996, -13.964355, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.794433, 1664.020996, -14.012969, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.353515, 1664.020996, -14.060989, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.352539, 1654.471435, -13.963264, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.873168, 1654.471435, -14.011894, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.373535, 1654.471435, -14.060783, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1786.738281, 1654.471435, -9.455532, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.298461, 1654.471435, -9.503551, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.848022, 1654.471435, -9.551799, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.377563, 1654.471435, -9.600261, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.377563, 1664.051879, -9.600261, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.858398, 1664.051879, -9.551677, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.338500, 1664.051879, -9.503047, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1786.808959, 1664.051879, -9.454647, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(1507, 1781.810302, 1649.851928, -13.725271, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0x00000000);
	tmpobjid = CreateDynamicObject(1507, 1780.319702, 1649.851928, -13.725271, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.109130, 1654.632080, -8.601422, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.109130, 1664.232543, -8.601422, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1774.458129, 1664.232543, -10.428544, 0.000000, 90.099975, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1774.458129, 1654.672973, -10.428544, 0.000000, 90.099975, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1787.934448, 1664.252075, -8.601422, 0.000000, 0.000015, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1787.884155, 1654.651733, -8.601422, 0.000000, 0.000015, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1789.535034, 1654.643188, -10.428544, 0.000000, 90.099967, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1789.585083, 1664.202514, -10.428544, 0.000000, 90.099967, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1664.021240, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1654.632080, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1664.021240, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1654.471435, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.280029, 1649.767456, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1789.879150, 1649.600463, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.427856, 1668.678222, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1790.025634, 1668.508911, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1664.021240, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1654.632080, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1664.021240, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1654.471435, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.280029, 1649.767456, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1789.879150, 1649.600463, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.427856, 1668.678222, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1790.025634, 1668.508911, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19172, 1775.628295, 1655.948242, -11.572992, 0.000000, 0.000000, 90.200004, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2632, 1782.161621, 1650.798950, -13.926577, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1235, 1779.174804, 1650.697875, -13.424149, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2169, 1782.849487, 1666.046875, -13.923686, 0.000000, 0.000000, 179.600097, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1657.791748, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1653.222534, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1661.502807, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1665.262817, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.281494, 1665.262817, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.262451, 1661.502807, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.332031, 1657.791748, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.261230, 1653.222534, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2253, 1775.952392, 1668.279785, -13.763433, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3034, 1782.409057, 1668.535766, -11.859015, 0.000000, 0.000000, -0.899999, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.953247, 1668.623168, -13.571652, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.953247, 1668.252929, -13.571652, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.953247, 1667.872558, -13.571652, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.592895, 1668.623168, -13.571652, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.592895, 1668.252929, -13.571652, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.592895, 1667.872558, -13.571652, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3034, 1788.360229, 1661.953735, -11.859015, 0.000000, 0.000000, -90.000022, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(950, 1775.952758, 1656.214721, -13.516444, 0.000000, 0.000000, -93.199958, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2433, 1785.283691, 1659.527954, -13.956490, 0.000000, 0.000000, -91.500038, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2433, 1785.233276, 1657.618652, -13.956490, 0.000000, 0.000000, -91.500038, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2433, 1785.333251, 1661.437622, -13.956490, 0.000000, 0.000000, -91.500038, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2403, 1781.362792, 1658.471557, -13.802104, 0.000000, 0.000000, 138.399948, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2495, 1779.842407, 1668.540283, -12.607547, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2495, 1779.842407, 1668.540283, -12.277548, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1514, 1781.787597, 1665.841918, -12.918517, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	//fish store interior - close
	//mechanic - open
    tmpobjid = CreateObject(19377, 1836.856201, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1889.183349, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1767.134887, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1776.754394, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1786.383300, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1796.002075, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1805.611083, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1897.422119, -1812.212280, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1887.245971, -1809.749755, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1877.119140, -1807.300048, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1866.982421, -1804.847167, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1888.134887, -1776.754394, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.856201, -1776.724731, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.856201, -1786.295410, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.856201, -1795.924682, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1776.743652, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1786.353149, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1795.923461, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1776.745117, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1786.365600, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1795.924316, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1776.724121, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1786.323974, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1795.903808, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1776.763916, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1786.374389, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1795.914062, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1888.134887, -1786.373046, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1888.134887, -1795.982421, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1856.825317, -1802.390502, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1846.717773, -1799.945068, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.640014, -1797.505859, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19905, 1885.883789, -1792.574340, 12.395788, 0.000000, 0.000000, 179.500183, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "dam_terazzo", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19905, 1849.764526, -1792.259155, 12.395788, 0.000000, 0.000000, 179.500183, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "dam_terazzo", 0x00000000);
    tmpobjid = CreateObject(19377, 1876.443969, -1797.249145, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1889.255126, -1800.347778, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1886.242187, -1799.618896, 12.439852, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.783325, -1779.769165, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.783325, -1770.219848, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.803344, -1767.119750, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1831.791259, -1779.148681, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19435, 1831.604980, -1763.099609, 12.565792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19435, 1831.604980, -1764.689697, 12.565792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19435, 1831.604980, -1766.289550, 12.565792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1836.340332, -1762.262817, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1845.919799, -1762.313842, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1855.518432, -1762.364868, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1865.117431, -1762.356079, 12.575792, 0.000007, 0.000000, 90.199981, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1874.759887, -1762.375976, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1899.023193, -1762.362304, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1832.241455, -1778.548095, 10.825787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1832.241455, -1767.367309, 10.815789, 0.899999, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1836.948974, -1762.652221, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1846.578979, -1762.703369, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1856.128295, -1762.753051, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1865.688842, -1762.803100, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1875.259033, -1762.853271, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1898.439453, -1762.974731, 10.835787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.161376, -1767.868041, 10.835787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.161376, -1777.497802, 10.835787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.161376, -1779.738891, 10.835787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1878.696044, -1764.560668, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1878.696044, -1767.770263, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1874.735595, -1764.530639, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1870.934936, -1764.520629, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1867.174438, -1764.510620, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1863.484375, -1764.490600, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1859.944213, -1764.470581, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1856.353515, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1852.632080, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1849.322143, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1846.161621, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1842.911621, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1839.571166, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1836.280639, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1874.735595, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1870.935180, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1867.174804, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1863.484252, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1859.943481, -1767.660034, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1856.353027, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1852.632690, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1849.312377, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1846.161376, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1842.910888, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1839.570190, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1836.280639, -1767.620117, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(3287, 1888.705078, -1802.316040, 17.275774, 0.000000, 0.000000, 90.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 18631, "nomodelfile", "hazardtile6", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(3287, 1868.545288, -1802.316040, 17.275774, 0.000000, 0.000000, 90.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 19467, "speed_bumps", "vehicle_barrier01", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 18631, "nomodelfile", "hazardtile6", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(8324, 1867.560302, -1784.697387, 19.735792, 0.000000, 0.000000, 180.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex1", 0xFFCCFFFF);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.756103, -1784.269409, 21.818897, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff0000} Mechanic", 80, "Calibri", 70, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.675781, -1784.288452, 21.878898, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Mechanic", 80, "Calibri", 70, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.675781, -1784.288452, 20.188880, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Central", 80, "Calibri", 55, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.726074, -1784.269042, 20.148880, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff0000} Central", 80, "Calibri", 55, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.534057, -1784.319580, 18.908870, 0.000000, 0.000000, 269.400024, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} ", 80, "Quartz MS", 25, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1871.081176, -1800.299072, 13.543722, 42.500007, 0.000000, 269.400024, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{111111} ", 80, "Calibri", 15, 1, 0x00000000, 0x00000000, 1);
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    tmpobjid = CreateDynamicObjectEx(19425, 1831.665771, -1772.439697, 12.565792, 0.000000, 0.000000, 91.299972, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1831.586547, -1768.921264, 12.565792, 0.000000, 0.000000, 91.299972, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1892.549316, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1889.268920, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1886.039550, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1882.809570, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1879.569702, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1901.837402, -1799.611083, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1893.777465, -1799.512695, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1884.627685, -1799.401000, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1875.427978, -1799.288696, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1865.417846, -1799.166503, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1857.858154, -1799.074218, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1848.948242, -1798.965454, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1839.528442, -1798.850463, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1899.798461, -1791.493164, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1890.259887, -1791.326782, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1881.001586, -1791.165039, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1872.302490, -1791.013671, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1863.283691, -1790.856079, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1853.934570, -1790.693603, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1845.375732, -1790.544677, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1835.937255, -1790.380004, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1832.655883, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1842.206665, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1850.886352, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1859.997192, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1868.777465, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1877.947509, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1887.057983, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1896.438720, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1895.282714, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1886.001953, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1876.991333, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1868.670898, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1858.660278, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1848.839721, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1840.209106, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1832.649047, -1791.658203, 12.605783, 0.000000, 0.000000, 24.899997, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1890.774780, -1799.957275, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1903.204956, -1797.594238, 14.335787, 0.000000, 0.000000, -90.800064, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1881.703979, -1799.878173, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1872.423217, -1799.796997, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1854.892456, -1799.644287, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1845.832397, -1799.565551, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1836.531982, -1799.484497, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1785.562744, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1786.613159, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1787.663085, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1788.693115, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1789.713867, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1785.353759, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1786.374023, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1787.394531, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1788.434936, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(3632, 1867.112792, -1783.881835, 13.035784, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(3632, 1867.872802, -1783.881835, 13.035784, 0.000000, 0.000000, 24.399999, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(3632, 1867.546020, -1783.282958, 13.035784, 0.000000, 0.000000, 24.399999, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1900.995239, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1894.654541, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1884.604492, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1874.794433, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1864.673706, -1799.218872, 14.685788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1858.694091, -1799.218872, 14.685788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1848.132934, -1799.218872, 14.685788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1839.212280, -1798.968627, 14.685788, 0.000000, 0.000000, -21.300001, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1839.866333, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1848.516967, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1857.927734, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1865.898071, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1875.470581, -1799.480224, 15.257658, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1884.450317, -1799.480224, 15.257658, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1893.880615, -1799.480224, 15.257658, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1901.741088, -1799.480224, 15.257658, 0.000000, 0.000000, 13.600000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19996, 1900.707397, -1813.611450, 12.565791, 0.000000, 0.000000, -24.299999, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1442, 1900.214355, -1816.077026, 13.166872, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19632, 1900.248413, -1816.083374, 13.305792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19996, 1902.019775, -1814.203979, 12.565791, 0.000000, 0.000000, -44.100006, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19996, 1898.869018, -1813.218017, 12.565791, 0.000000, 0.000000, -4.599998, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1894.781982, -1784.380859, 13.785792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1885.921752, -1784.279296, 13.785792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1876.889526, -1784.253784, 13.785792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1858.879272, -1784.053833, 13.835792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1849.888427, -1783.969482, 13.835792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1840.577392, -1783.895629, 13.835792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
	//mechanic - close
	//fishing - open
	tmpobjid = CreateDynamicObject(11497, 2152.457519, -103.895492, 1.340256, -2.299999, -0.499999, 115.799964, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2132.660156, -99.856140, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2130.431396, -101.744705, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2128.195068, -103.639747, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2125.951660, -105.541275, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2142.276123, -111.197036, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2140.435546, -113.513610, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2138.589355, -115.830070, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2136.741943, -118.154373, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2134.906250, -120.463035, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2133.055175, -122.795249, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	//fishing - close
	//bus interior - open
	CreateObject(2631, 2022.0, 2236.7, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2240.6, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2244.5, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2248.4, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(16501, 2022.1, 2238.3, 2102.8, 0.0, 90.0, 0.0);
	CreateObject(16501, 2022.1, 2245.3, 2102.8, 0.0, 90.0, 0.0);
	CreateObject(16000, 2024.2, 2240.1, 2101.2, 0.0, 0.0, 90.0);
	CreateObject(16000, 2019.8, 2240.6, 2101.2, 0.0, 0.0, -90.0);
	CreateObject(16000, 2022.2, 2248.7, 2101.2, 0.0, 0.0, 180.0);
	CreateObject(16501, 2021.8, 2246.5, 2107.3, 0.0, 270.0, 90.0);
	CreateObject(16501, 2022.0, 2240.8, 2107.3, 0.0, 270.0, 0.0);
	CreateObject(16501, 2022.0, 2233.7, 2107.3, 0.0, 270.0, 0.0);
	CreateObject(18098, 2024.3, 2239.6, 2104.8, 0.0, 0.0, 90.0);
	CreateObject(18098, 2024.3, 2239.7, 2104.7, 0.0, 0.0, 450.0);
	CreateObject(18098, 2020.1, 2239.6, 2104.8, 0.0, 0.0, 90.0);
	CreateObject(18098, 2020.0, 2239.6, 2104.7, 0.0, 0.0, 90.0);
	CreateObject(2180, 2023.6, 2236.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2238.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2240.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2242.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2244.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2246.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2248.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2020.3, 2235.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2237.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2239.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2241.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2243.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2245.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2674, 2023.4, 2238.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(2674, 2020.4, 2242.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(2674, 2023.4, 2246.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(14405, 2022.0, 2242.1, 2103.5, 0.0, 0.0, 540.0);
	CreateObject(14405, 2022.0, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2242.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2242.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2253.6, 2104.0, -6.0, 0.0, 180.0);
	CreateObject(14405, 2021.1, 2253.6, 2104.0, -6.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2253.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(2674, 2020.4, 2235.7, 2102.9, 0.0, 0.0, 52.0);
	CreateObject(2673, 2020.4, 2246.7, 2102.9, 0.0, 0.0, 270.0);
	CreateObject(2700, 2023.5, 2235.1, 2105.5, 180.0, -4.0, 90.0);
	CreateObject(2700, 2020.4, 2235.1, 2105.5, 180.0, 0.0, 90.0);
	CreateObject(2700, 2023.5, 2242.1, 2105.5, 180.0, -4.0, 90.0);
	CreateObject(2700, 2020.4, 2242.1, 2105.5, 180.0, 0.0, 90.0);
	CreateObject(1799, 2023.1, 2234.2, 2105.7, 270.0, 0.0, 360.0);
	CreateObject(1799, 2019.8, 2234.2, 2105.7, 270.0, 0.0, 0.0);
	CreateObject(1538, 2022.7, 2234.7, 2102.8, 0.0, 0.0, 180.0);
	CreateObject(1799, 2022.1, 2234.2, 2106.1, 720.0, 90.0, 450.0);
	CreateObject(1799, 2021.8, 2234.2, 2105.1, 0.0, 270.0, 270.0);
	CreateObject(1799, 2022.1, 2234.2, 2107.3, 0.0, 90.0, 90.0);
	CreateObject(1799, 2021.6, 2234.2, 2106.3, 0.0, 270.0, 270.0);
	CreateObject(1799, 2022.3, 2234.2, 2104.3, 90.0, 0.0, 180.0);
	//bus interior - close


	//police interior LSPD new - open


	tmpobjid = CreateDynamicObject(1569, 1362.607299, 1567.245849, 1467.787719, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10763, "airport1_sfse", "ws_airportdoors1", 0x00000000);
	tmpobjid = CreateDynamicObject(12814, 1376.387329, 1592.100830, 1467.779907, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9953, "ottos_sfw", "carshowroomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19383, 1363.376342, 1567.227783, 1469.519409, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1361.690185, 1568.824951, 1467.567504, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.568359, 1567.440795, 1469.319213, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.568359, 1569.432739, 1469.319213, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.568359, 1570.423706, 1468.328247, 90.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1361.437988, 1568.824951, 1467.567504, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1365.057983, 1568.859375, 1469.519409, 0.000000, 0.000000, 180.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(630, 1364.518432, 1569.886962, 1468.776245, 0.000000, 0.000000, -102.300025, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1368.270751, 1575.242919, 1469.519409, 0.000000, 0.000000, 360.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(14409, 1359.601440, 1572.423583, 1464.601928, 0.000007, 0.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9953, "ottos_sfw", "carshowroomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(14409, 1358.702514, 1574.225952, 1464.600952, 0.000006, -0.000003, 134.999969, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9953, "ottos_sfw", "carshowroomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(14409, 1357.277709, 1574.435913, 1464.599975, 0.000003, -0.000006, 179.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9953, "ottos_sfw", "carshowroomfloor", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(12814, 1379.947998, 1591.270019, 1467.778930, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9953, "ottos_sfw", "carshowroomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(12814, 1359.776855, 1590.530395, 1466.689819, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9953, "ottos_sfw", "carshowroomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1358.990478, 1570.319458, 1466.556518, 0.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1360.374633, 1570.197631, 1468.308227, 0.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1358.382690, 1570.197631, 1468.308227, 0.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1357.391723, 1570.197631, 1467.317260, 89.999992, 166.631469, -76.631500, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1358.990478, 1570.066284, 1466.556518, 0.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1359.781250, 1570.318481, 1466.556518, 0.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1359.811035, 1570.066284, 1466.556518, 0.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1360.030639, 1583.782470, 1469.519409, 0.000000, 0.000000, 270.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1365.010986, 1570.472167, 1469.028930, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1365.061035, 1572.222412, 1469.028930, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1364.986328, 1569.496215, 1468.840454, 0.000014, 0.000000, 89.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1364.967041, 1569.456665, 1468.852416, 0.000000, 90.000015, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1364.986328, 1567.585815, 1468.840454, 0.000014, 0.000000, 89.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1364.967041, 1567.468139, 1468.852416, 0.000000, 90.000015, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1365.078002, 1567.339233, 1468.840454, 0.000022, -0.000007, 179.999862, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1365.105590, 1567.319946, 1468.852416, 0.000007, 90.000022, 89.999946, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1361.666870, 1567.339233, 1468.840454, 0.000022, -0.000014, 179.999816, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.614379, 1567.319946, 1468.852416, 0.000014, 90.000022, 89.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.355468, 1570.197631, 1470.319824, 90.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.775878, 1570.197631, 1470.319824, 90.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.568359, 1570.423706, 1470.320190, 90.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.568359, 1569.973266, 1470.320190, 90.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.775878, 1570.197631, 1468.318481, 90.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.355468, 1570.197631, 1468.327880, 90.000022, 0.000007, 89.999900, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1360.969604, 1567.227783, 1469.519409, 0.000007, 0.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1360.969604, 1567.227783, 1466.019531, 0.000007, 0.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(2606, 1351.083129, 1570.705078, 1467.701538, 0.000000, 0.000000, 270.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(2185, 1350.940063, 1569.853759, 1466.687133, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1359.664184, 1566.678955, 1469.520507, 0.000069, -0.000037, 134.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1359.664184, 1566.678955, 1466.019531, 0.000069, -0.000037, 134.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1358.271850, 1566.081542, 1469.520507, 0.000069, -0.000037, 89.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1358.271850, 1566.081542, 1466.020629, 0.000069, -0.000037, 89.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1356.031860, 1566.073486, 1465.793823, 0.000037, -0.000014, 89.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.048950, 1565.932739, 1469.639404, -0.000009, 0.000044, -89.999946, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19445, 1357.518188, 1564.438720, 1468.393066, 89.999954, 0.000037, -179.999526, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19328, 1356.776123, 1565.766113, 1468.596313, -0.000044, 0.000019, -179.999526, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15034, "genhotelsave", "AH_windows", 0xFF808080);
	tmpobjid = CreateDynamicObject(19328, 1355.295898, 1565.766113, 1468.596313, -0.000044, 0.000019, -179.999526, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15034, "genhotelsave", "AH_windows", 0xFF808080);
	tmpobjid = CreateDynamicObject(19426, 1356.038330, 1565.029296, 1468.393066, -0.000044, 0.000038, -179.999526, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1353.087524, 1564.438720, 1468.393066, 89.999954, 0.000037, -179.999526, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.048950, 1565.932739, 1467.539062, -0.000014, 0.000044, -89.999931, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19940, 1357.049194, 1565.932739, 1467.539062, -0.000014, 0.000044, -89.999931, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19940, 1357.049194, 1565.932739, 1469.639404, -0.000009, 0.000044, -89.999946, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19445, 1356.031860, 1566.073486, 1471.403930, 0.000037, -0.000014, 89.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1353.560791, 1565.932739, 1469.639404, -0.000009, 0.000051, -89.999946, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19328, 1353.807739, 1565.766113, 1468.596313, -0.000051, 0.000019, -179.999511, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 15034, "genhotelsave", "AH_windows", 0xFF808080);
	tmpobjid = CreateDynamicObject(19426, 1354.550170, 1565.029296, 1468.393066, -0.000051, 0.000038, -179.999511, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1353.560791, 1565.932739, 1467.539062, -0.000014, 0.000051, -89.999931, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19426, 1358.271850, 1566.081542, 1469.520507, 0.000069, -0.000037, 89.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1351.390380, 1566.081542, 1469.520507, 0.000083, -0.000037, 89.999862, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1351.390380, 1566.081542, 1466.020629, 0.000083, -0.000037, 89.999862, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1361.136352, 1567.339233, 1468.840454, 0.000022, -0.000014, 179.999816, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1361.153930, 1567.320922, 1468.852416, 0.000014, 90.000022, 89.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1359.463256, 1566.605590, 1468.852416, 0.000014, 90.000022, 134.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1359.488525, 1566.668212, 1468.840454, 0.000022, -0.000014, 224.999816, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(12814, 1354.917236, 1590.410156, 1471.239257, 0.000000, 180.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1365.010986, 1577.694824, 1469.028930, 0.000022, 0.000000, 89.999931, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1365.061035, 1579.445068, 1469.028930, 0.000022, 0.000000, 89.999931, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1365.010986, 1574.083129, 1469.028930, 0.000014, 0.000000, 89.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1365.061035, 1574.942504, 1469.028930, 0.000014, 0.000000, 89.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1369.798461, 1577.188720, 1469.613891, 0.000000, 0.000014, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1369.798461, 1573.577026, 1469.613891, 0.000000, 0.000007, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1369.798461, 1580.819091, 1469.613891, 0.000000, 0.000014, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1364.785400, 1580.500366, 1469.028930, 0.000029, -0.000014, 179.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1363.035156, 1580.550415, 1469.028930, 0.000029, -0.000014, 179.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1364.900756, 1582.092163, 1469.519409, 0.000000, 0.000000, 180.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1365.050170, 1575.272949, 1472.019897, 0.000000, 0.000000, 360.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1365.050170, 1581.693359, 1472.019897, 0.000000, 0.000000, 360.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1368.270751, 1581.652587, 1469.519409, 0.000000, 0.000000, 360.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1361.667114, 1585.318725, 1469.613891, 0.000000, 0.000014, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1361.155883, 1580.500366, 1469.028930, 0.000029, -0.000022, 179.999740, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(19303, 1360.295532, 1580.550415, 1469.028930, 0.000029, -0.000022, 179.999740, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "copcell_bars", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1358.037597, 1585.318725, 1469.613891, 0.000007, 0.000014, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1363.079467, 1580.553588, 1472.019897, 0.000000, 0.000000, 450.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1347.609741, 1579.140014, 1469.519409, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1354.910522, 1577.459960, 1467.567504, 0.000000, 0.000000, 179.999847, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.032348, 1578.844116, 1469.319213, 0.000000, 0.000000, 179.999847, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.032348, 1576.852172, 1469.319213, 0.000000, 0.000000, 179.999847, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.032348, 1575.861206, 1468.328247, 89.999992, 224.950515, -44.950569, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1355.162719, 1577.459960, 1467.567504, 0.000000, 0.000000, 179.999847, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.245239, 1576.087280, 1470.319824, 89.999992, 314.980133, -44.980293, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1354.824829, 1576.087280, 1470.319824, 89.999992, 314.980133, -44.980293, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.032348, 1575.861206, 1470.320190, 89.999992, 224.950515, -44.950569, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.032348, 1576.311645, 1470.320190, 89.999992, 224.950515, -44.950569, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1354.824829, 1576.087280, 1468.318481, 89.999992, 314.980133, -44.980293, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.245239, 1576.087280, 1468.327880, 89.999992, 314.980133, -44.980293, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1347.599609, 1579.140014, 1466.019409, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1347.916748, 1574.256225, 1469.519409, 0.000007, -0.000014, 179.999862, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1347.916748, 1574.256225, 1466.019409, 0.000007, -0.000014, 179.999862, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1348.367187, 1569.153808, 1469.519409, -0.000003, -0.000033, -135.000137, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1348.367187, 1569.153808, 1466.019409, -0.000003, -0.000033, -135.000137, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1357.560913, 1580.660888, 1469.519409, 0.000000, 0.000000, 180.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(2643, 1349.772705, 1567.893066, 1469.797241, 0.000000, -0.000111, 134.999420, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1827, 1349.456787, 1567.599853, 1469.817260, -89.999992, 102.266296, 57.266086, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.826904, 1567.962890, 1470.399902, 0.000033, 90.000000, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.989868, 1567.800170, 1470.329833, 0.000033, 90.000000, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.656982, 1568.132812, 1470.329833, 0.000033, 90.000000, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.515625, 1568.274414, 1470.249755, 0.000033, 90.000000, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1350.124145, 1567.665649, 1470.249755, 0.000033, 90.000000, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2714, 1349.832763, 1567.966796, 1469.812133, 0.000000, -0.000033, 134.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "LSPD", 130, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(2714, 1349.832763, 1567.966796, 1470.252563, 0.000000, -0.000033, 134.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "_____", 130, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(2714, 1349.832763, 1567.966796, 1469.752319, 0.000000, -0.000033, 134.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "_____", 130, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19347, 1349.826904, 1567.962890, 1469.248901, 0.000055, -89.999969, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.989868, 1567.800170, 1469.318969, 0.000055, -89.999969, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.656982, 1568.132812, 1469.318969, 0.000055, -89.999969, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1349.515625, 1568.274414, 1469.399047, 0.000055, -89.999969, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19347, 1350.124145, 1567.665649, 1469.399047, 0.000055, -89.999969, 44.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1354.916381, 1574.091308, 1466.556518, 0.000029, -0.000014, 179.999710, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.038208, 1575.275268, 1468.307250, 0.000029, -0.000014, 179.999710, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.038208, 1573.483520, 1468.308227, 0.000029, -0.000014, 179.999710, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.038208, 1572.492553, 1467.317260, 89.999992, 253.753128, -73.753150, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1355.169555, 1574.091308, 1466.556518, 0.000029, -0.000014, 179.999710, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1354.917358, 1574.882080, 1466.556518, 0.000029, -0.000014, 179.999710, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1355.169555, 1574.911865, 1466.556518, 0.000029, -0.000014, 179.999710, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1358.603881, 1566.173217, 1468.852416, 0.000034, 90.000015, 89.999862, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1358.566040, 1566.199584, 1468.840454, 0.000015, -0.000034, 179.999694, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1351.994995, 1566.173217, 1468.852416, 0.000041, 90.000015, 89.999839, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1352.057250, 1566.199584, 1468.840454, 0.000015, -0.000041, 179.999649, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1351.304809, 1566.338623, 1468.625366, -89.999931, 90.000015, 44.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1351.329833, 1566.350708, 1468.710327, 0.000014, 89.999931, 134.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1350.442138, 1567.201293, 1467.844604, -179.999938, 90.000015, 44.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1349.034545, 1568.608886, 1467.844604, -179.999938, 90.000015, 44.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1347.620483, 1570.022949, 1467.844604, -179.999938, 90.000015, 44.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1350.834594, 1566.845947, 1467.829589, 0.000014, -0.000068, 134.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1349.498291, 1568.182250, 1467.829589, 0.000014, -0.000068, 134.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.155029, 1569.525634, 1467.829589, 0.000014, -0.000068, 134.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.000610, 1570.642700, 1467.844604, -179.999938, 90.000015, -0.000213, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.000610, 1572.633178, 1467.844604, -179.999938, 90.000015, -0.000213, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.000610, 1574.632812, 1467.844604, -179.999938, 90.000015, -0.000213, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1354.824829, 1576.087280, 1466.318847, 89.999992, 314.980133, -44.980293, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1355.032348, 1575.861206, 1466.328247, 89.999992, 224.950515, -44.950569, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(19383, 1351.312133, 1578.206542, 1468.417724, 0.000000, -0.000007, 179.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1351.312133, 1575.797607, 1468.417724, 0.000000, -0.000007, 179.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19383, 1351.313110, 1573.396484, 1468.417724, 0.000000, -0.000007, 179.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1346.583984, 1571.876220, 1468.417724, -0.000007, 0.000000, -89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1346.583984, 1571.876220, 1471.910522, -0.000007, 0.000000, -89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1351.312988, 1576.615844, 1471.907836, 0.000000, 0.000007, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.000610, 1576.633178, 1467.844604, -179.999938, 90.000015, -0.000213, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.000610, 1578.613769, 1467.844604, -179.999938, 90.000015, -0.000213, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1349.000122, 1579.054199, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1351.000976, 1579.054199, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1352.190429, 1579.054199, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2395, 1348.106567, 1575.779785, 1467.262817, 0.000000, 0.000007, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1348.038696, 1575.841918, 1469.350097, 0.000007, 0.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x50444444);
	tmpobjid = CreateDynamicObject(18880, 1351.124267, 1575.840087, 1466.637573, 0.000007, 0.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(18880, 1348.132934, 1575.840087, 1466.637573, 0.000000, -0.000007, 179.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1346.552124, 1575.837402, 1466.047973, -0.000014, 0.000000, -89.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19445, 1346.552124, 1575.837402, 1471.707885, -0.000014, 0.000000, -89.999954, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.034912, 1570.566528, 1467.829589, 0.000014, -0.000068, 89.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.034912, 1572.465820, 1467.829589, 0.000014, -0.000068, 89.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.034912, 1574.375488, 1467.829589, 0.000014, -0.000068, 89.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.034912, 1576.285522, 1467.829589, 0.000014, -0.000068, 89.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.034912, 1578.195800, 1467.829589, 0.000014, -0.000068, 89.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.955688, 1579.026489, 1467.829589, 0.000014, -0.000068, -0.000380, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1350.865600, 1579.026489, 1467.829589, 0.000014, -0.000068, -0.000380, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1352.220458, 1579.026489, 1467.829589, 0.000014, -0.000068, -0.000380, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2185, 1349.370239, 1576.423339, 1466.687133, 0.000000, 0.000007, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1355.672241, 1578.590332, 1467.804443, -0.000022, 0.000044, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1356.182617, 1578.590332, 1467.804443, -0.000022, 0.000044, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1356.692993, 1578.590332, 1467.804443, -0.000022, 0.000044, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1357.203247, 1578.590332, 1467.804443, -0.000022, 0.000044, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2372, 1357.069702, 1579.113403, 1467.564086, 0.000044, 0.000022, 89.999801, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1361.021118, 1568.115478, 1467.518920, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.788085, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.688110, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.588134, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.488159, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.388183, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.288208, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.188232, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1468.088256, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.988281, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.888305, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.788330, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.688354, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.588378, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.488403, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1360.947753, 1568.654052, 1467.388427, 0.000007, 90.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0x00000000);
	tmpobjid = CreateDynamicObject(2714, 1360.894531, 1567.994995, 1467.748657, 0.000000, 0.000000, 270.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "San Andreas\nPolice Department", 130, "Ariel", 60, 1, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(2265, 1349.397460, 1575.905029, 1467.808593, -0.000000, 89.999946, -15.000254, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19787, "samplcdtvs1", "samplcdtv1", 0x00000000);
	tmpobjid = CreateDynamicObject(19829, 1349.869873, 1576.279418, 1467.578369, -0.000007, 0.000049, 164.999908, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19829, 1349.872558, 1576.289062, 1467.498291, -89.999992, 195.255981, 0.255883, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-90-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2265, 1350.349609, 1576.675781, 1467.808593, 0.000000, 90.000053, 164.999877, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_mike01", 0xFF000099);
	tmpobjid = CreateDynamicObject(2612, 1348.932373, 1571.729736, 1468.905639, -0.000029, -0.000014, 0.000060, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2766, 1356.413818, 1579.029418, 1469.490112, -0.000028, 0.000029, 0.000365, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1736, "cj_ammo", "CJ_Black_metal", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0x00000000);
	tmpobjid = CreateDynamicObject(19874, 1349.629028, 1576.653442, 1467.496337, -0.000007, 0.000000, 104.399963, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(1491, 1351.327026, 1572.615112, 1466.637573, 0.000000, 0.000000, 450.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10763, "airport1_sfse", "ws_airportdoors1", 0x00000000);
	tmpobjid = CreateDynamicObject(11711, 1351.392211, 1574.526245, 1468.674804, -0.000020, 0.000014, 90.000038, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2714, 1351.460449, 1574.513671, 1468.677734, -0.000020, 0.000014, 90.000038, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "Interrogation\nRoom", 130, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(2608, 1348.982666, 1569.178710, 1467.401123, 0.000000, 0.000000, 495.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(11711, 1352.803588, 1579.065917, 1468.674804, -0.000014, 0.000029, 0.000045, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2714, 1352.791015, 1578.997680, 1468.677734, -0.000014, 0.000029, 0.000045, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "Basement", 130, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19994, 1354.454833, 1574.907104, 1466.713867, -0.000037, 0.000059, -89.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(630, 1351.928588, 1566.807739, 1467.715698, 0.000000, 0.000000, 42.399993, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1354.454833, 1574.396728, 1466.713867, -0.000037, 0.000059, -89.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2766, 1361.644653, 1580.280273, 1469.490112, -0.000028, 0.000029, 0.000365, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1736, "cj_ammo", "CJ_Black_metal", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10377, "cityhall_sfs", "ws_copart1", 0x00000000);
	tmpobjid = CreateDynamicObject(1491, 1351.327026, 1577.425659, 1466.637573, 0.000000, 0.000000, 450.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10763, "airport1_sfse", "ws_airportdoors1", 0x00000000);
	tmpobjid = CreateDynamicObject(630, 1358.179809, 1579.800659, 1468.776245, 0.000000, 0.000000, 42.399993, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(630, 1358.120483, 1566.641967, 1467.715698, 0.000000, 0.000000, 44.500003, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(2608, 1358.322265, 1569.739013, 1467.401123, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	tmpobjid = CreateDynamicObject(2611, 1350.482299, 1571.729736, 1468.905639, -0.000029, -0.000014, 0.000060, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2766, 1364.765014, 1577.218383, 1469.490112, -0.000028, 0.000029, -89.999633, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1736, "cj_ammo", "CJ_Black_metal", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10377, "cityhall_sfs", "ws_copart2", 0x00000000);
	tmpobjid = CreateDynamicObject(2766, 1364.765014, 1573.598266, 1469.490112, -0.000028, 0.000029, -89.999633, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicwall01", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10377, "cityhall_sfs", "ws_copart3", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1350.461791, 1571.805419, 1467.829589, 0.000014, -0.000068, 179.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.572021, 1571.805419, 1467.829589, 0.000014, -0.000068, 179.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1350.400878, 1571.793701, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.451049, 1571.793701, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19383, 1353.922973, 1579.141357, 1468.417724, 0.000000, -0.000007, 269.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(1569, 1353.188110, 1579.126708, 1466.637573, 0.000000, 0.000000, 720.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10763, "airport1_sfse", "ws_airportdoors1", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1356.852905, 1579.140014, 1469.519409, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1356.332763, 1579.140991, 1469.519409, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1353.991333, 1579.139038, 1471.909545, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 896, "underwater", "greyrockbig", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1354.454833, 1573.886352, 1466.713867, -0.000037, 0.000059, -89.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1354.454833, 1573.376098, 1466.713867, -0.000037, 0.000059, -89.999923, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2372, 1354.977905, 1573.509643, 1466.473510, 0.000059, 0.000037, -0.000250, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1349.524536, 1570.935180, 1466.713867, -0.000037, 0.000059, -269.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1349.354370, 1577.526977, 1466.713867, -0.000037, 0.000059, 26.600061, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2747, 1348.902465, 1573.834472, 1467.053588, 0.000007, 0.000044, -0.000091, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3440, "airportpillar", "metalic_64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3629, "arprtxxref_las", "metaldoor_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19804, 1349.157836, 1573.542968, 1467.463623, 0.000044, -0.000007, 89.999702, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1560, "7_11_door", "CJ_CHROME2", 0x00000000);
	tmpobjid = CreateDynamicObject(2747, 1348.902465, 1573.854492, 1467.763671, -0.000007, 179.999984, -179.999725, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3440, "airportpillar", "metalic_64", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3629, "arprtxxref_las", "metaldoor_128", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateDynamicObject(19804, 1348.717407, 1573.542968, 1467.463623, 0.000044, -0.000007, 89.999702, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1560, "7_11_door", "CJ_CHROME2", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1348.934204, 1572.605102, 1466.713867, -0.000037, 0.000059, -179.999938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1348.934204, 1575.145141, 1466.713867, -0.000037, 0.000059, 0.000060, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19994, 1350.754638, 1575.357299, 1466.713867, -0.000037, 0.000059, -35.299938, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1350.294921, 1571.985351, 1467.829589, 0.000014, -0.000068, 179.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2659, 1348.394897, 1571.985351, 1467.829589, 0.000014, -0.000068, 179.999618, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1350.251342, 1571.962524, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, 1348.251708, 1571.962524, 1467.844604, -179.999938, 90.000015, 89.999786, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "mpCJ_Black_metal", 0x00000000);
	tmpobjid = CreateDynamicObject(2247, 1351.050415, 1571.339965, 1468.398803, 0.000000, 0.000000, 55.299991, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 3902, "libertyhi3", "glass2_64", 0x00000000);
	tmpobjid = CreateDynamicObject(2249, 1348.304687, 1576.404418, 1468.729125, 0.000000, 0.000000, -67.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 3902, "libertyhi3", "glass2_64", 0x00000000);
	tmpobjid = CreateDynamicObject(2250, 1349.510009, 1568.656494, 1468.248657, 0.000000, 0.000000, 163.000030, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 3902, "libertyhi3", "glass2_64", 0x00000000);
	tmpobjid = CreateDynamicObject(2766, 1348.051757, 1570.680541, 1468.919555, -0.000028, 0.000029, 90.000366, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1736, "cj_ammo", "CJ_Black_metal", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "policeshield", 0x00000000);
	tmpobjid = CreateDynamicObject(950, 1364.745483, 1567.838989, 1468.313354, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 3946, "bistro_plants", "starflower4", 0x00000000);
	tmpobjid = CreateDynamicObject(950, 1364.745483, 1568.898925, 1468.313354, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 3946, "bistro_plants", "starflower4", 0x00000000);
	tmpobjid = CreateDynamicObject(948, 1362.197753, 1567.700683, 1467.759887, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1369.798461, 1569.966186, 1469.613891, 0.000000, 0.000007, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(948, 1351.773803, 1572.190673, 1466.688842, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(948, 1351.773803, 1576.883422, 1466.688842, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "grassgrn256", 0x00000000);
	tmpobjid = CreateDynamicObject(14793, 1358.074340, 1572.903320, 1471.143798, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateDynamicObject(971, 1347.778686, 1576.168823, 1471.207397, 90.000000, 90.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18657, "lightbeams", "white-512x512", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateDynamicObject(971, 1368.469238, 1574.787475, 1471.207397, 90.000000, 90.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18657, "lightbeams", "white-512x512", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateDynamicObject(971, 1368.469238, 1583.598754, 1471.207397, 90.000000, 90.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18657, "lightbeams", "white-512x512", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateDynamicObject(971, 1362.617919, 1583.989135, 1471.207397, 90.000000, 90.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18657, "lightbeams", "white-512x512", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 19962, "samproadsigns", "materialtext1", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1771, 1367.465820, 1571.781250, 1468.106689, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1771, 1367.465820, 1575.392456, 1468.106689, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1771, 1367.465820, 1579.012939, 1468.106689, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1771, 1363.505371, 1582.963623, 1468.106689, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1771, 1359.863525, 1582.963623, 1468.106689, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3388, 1348.512695, 1578.547607, 1466.657104, 0.000000, 0.000000, 360.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19623, 1358.312744, 1567.955322, 1468.368041, 0.000007, 0.000000, 89.999977, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19611, 1358.288330, 1567.957641, 1466.697631, 0.000000, 0.000007, 0.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3384, 1352.133666, 1575.875732, 1468.098510, 0.000000, 0.000000, 180.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19808, 1350.234252, 1576.628417, 1467.511352, -0.000000, 0.000007, 169.999893, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2007, 1348.586669, 1571.248535, 1466.658813, 0.000014, 0.000014, 89.999923, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(334, 1348.300170, 1571.428100, 1468.039184, 89.999992, 213.845687, -65.845733, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(18636, 1348.337890, 1570.892578, 1468.089355, -0.000018, 0.000009, -14.399977, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19161, 1348.365478, 1571.072387, 1468.039306, 8.299983, -89.999984, 11.800006, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19942, 1348.409790, 1571.406005, 1468.078857, -89.999992, -7.309576, 117.290443, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19807, 1351.041381, 1569.964843, 1467.989257, 0.000003, 0.000014, -116.600067, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2994, 1362.190917, 1569.317993, 1468.281494, 0.000000, 0.000000, -2.200002, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2007, 1348.586669, 1577.508789, 1466.658813, 0.000022, 0.000014, 89.999900, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(334, 1348.300170, 1577.688354, 1468.039184, 89.999992, 225.408676, -77.408699, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(18636, 1348.337890, 1577.152832, 1468.089355, -0.000019, 0.000018, -14.399977, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19161, 1348.365478, 1577.332641, 1468.039306, 8.299984, -89.999977, 11.800004, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19942, 1348.409790, 1577.666259, 1468.078857, -89.999992, -20.221557, 104.378440, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2007, 1348.586669, 1576.498901, 1466.658813, 0.000022, 0.000014, 89.999900, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2007, 1359.816650, 1569.458862, 1466.658813, 0.000014, 0.000014, -0.000075, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2994, 1358.155151, 1570.793457, 1467.190551, 0.000000, 0.000000, 91.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2816, 1350.747070, 1576.350830, 1467.526733, 0.000000, 0.000000, 43.000000, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2894, 1348.993530, 1574.018798, 1467.463623, -0.000009, -0.000043, -173.499649, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(11749, 1349.123413, 1573.620849, 1467.473510, 0.000040, 0.000015, 59.599941, 1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(11706, 1355.513427, 1572.940429, 1466.701416, 0.000000, 0.000000, 90.000000, 1, -1, -1, 300.00, 300.00); 
	//police interior LSPD new - close


	//police interior (OLD LSPD, LVPD, FBI) - open

	tmpobjid = CreateDynamicObject(19436, 1552.009, -1678.249, 2113.827, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1561.460, -1683.070, 2113.817, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1554.125, -1669.069, 2113.857, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19458, 1556.727, -1682.304, 2113.826, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.605, -1667.534, 2116.597, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1571.471, -1671.280, 2113.867, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19436, 1567.131, -1683.231, 2113.867, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18981, 1564.407, -1678.029, 2111.535, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19597, "lsbeachside", "carpet19-128x128", -1);
	tmpobjid = CreateDynamicObject(19458, 1552.047, -1676.372, 2116.398, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.009, -1671.358, 2113.837, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1671.000, 2112.035, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1556.736, -1682.264, 2111.244, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", -1);
	tmpobjid = CreateDynamicObject(19869, 1556.007, -1689.787, 2113.914, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14415, "carter_block_2", "mp_carter_cage", 0);
	tmpobjid = CreateDynamicObject(19940, 1557.868, -1670.796, 2112.966, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19808, 1567.766, -1668.476, 2112.865, 0.000, 0.000, 179.300, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19940, 1560.619, -1671.637, 2112.947, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1553.407, -1682.965, 2111.244, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1553.385, -1670.039, 2113.857, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1553.405, -1670.039, 2111.247, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1671.060, 2114.677, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1561.724, -1671.615, 2112.025, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.043, 2114.477, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1672.190, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.835, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1721, 1560.017, -1667.138, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19981, 1560.024, -1671.605, 2117.225, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1677.431, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1557.875, -1670.364, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19869, 1556.007, -1689.787, 2110.722, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14415, "carter_block_2", "mp_carter_cage", 0);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1676.181, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1673.421, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1557.868, -1670.796, 2114.827, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19366, 1570.268, -1672.154, 2117.119, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1576.216, -1670.564, 2113.746, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.490, -1667.118, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(2161, 1563.513, -1665.509, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1563.513, -1665.509, 2113.366, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19174, 1556.190, -1682.216, 2114.184, 0.000, 0.000, 1260.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(19940, 1558.659, -1671.637, 2114.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19981, 1560.794, -1671.605, 2117.225, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.715, -1661.844, 2113.857, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19372, 1555.846, -1669.099, 2111.247, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1555.856, -1669.049, 2113.857, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1568.774, -1672.194, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.765, -1670.625, 2112.015, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.092, -1672.194, 2114.857, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1554.396, -1669.109, 2111.247, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1557.533, -1669.234, 2111.365, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1553.406, -1669.959, 2117.108, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1553.397, -1682.974, 2113.826, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.765, -1670.625, 2115.755, 180.000, 0.000, 1260.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19372, 1555.056, -1669.099, 2117.108, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1558.744, -1671.716, 2111.134, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1561.585, -1671.716, 2111.134, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1561.895, -1671.716, 2111.144, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1561.895, -1671.455, 2111.144, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19372, 1555.846, -1669.099, 2117.108, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.785, -1670.615, 2116.345, 180.000, 0.000, 1260.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 19480, "signsurf", "sign", 0);
	tmpobjid = CreateDynamicObject(19929, 1559.174, -1671.455, 2111.144, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1558.073, -1669.604, 2111.144, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1558.073, -1666.775, 2111.144, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1557.752, -1670.608, 2111.144, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19362, 1570.268, -1672.265, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.131, -1683.331, 2113.787, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.315, -1672.277, 2113.867, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1557.486, -1668.448, 2117.108, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1678.271, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19174, 1555.420, -1669.166, 2114.214, 0.000, 0.000, 1440.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17511, "stadium_lae2", "ticketsnprice_lae2", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.141, -1683.211, 2111.254, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19869, 1554.191, -1669.753, 2109.843, 360.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1572.466, -1685.854, 2113.876, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19940, 1560.659, -1671.637, 2114.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1561.669, -1671.637, 2114.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1554.252, -1669.731, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19436, 1552.670, -1671.589, 2113.837, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19940, 1561.669, -1671.637, 2112.947, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.649, -1671.637, 2112.947, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19358, 1570.263, -1672.291, 2111.284, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.615, -1667.344, 2110.485, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1562.339, -1670.186, 2115.487, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1555.412, -1669.731, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19940, 1562.750, -1670.857, 2114.827, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.033, -1672.194, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1561.795, -1671.635, 2116.338, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19362, 1571.759, -1672.255, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19458, 1570.385, -1665.693, 2113.746, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19358, 1571.765, -1672.302, 2111.284, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19940, 1562.750, -1670.857, 2112.937, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19610, 1567.792, -1668.474, 2113.035, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19458, 1556.727, -1682.284, 2117.108, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1556.632, -1669.731, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(1811, 1556.851, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1566.414, -1688.214, 2113.786, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(1811, 1555.501, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1554.190, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1554.851, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19309, 1560.423, -1671.479, 2112.855, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1811, 1556.171, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.092, -1672.194, 2115.298, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.890, -1677.015, 2114.967, 720.000, -450.000, -270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1566.335, -1672.147, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.485, -1684.187, 2113.777, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1575.285, -1665.654, 2113.746, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19477, 1559.438, -1682.201, 2114.096, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "d", 90, "Webdings", 170, 0, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(18981, 1564.179, -1671.797, 2115.968, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19610, 1560.438, -1671.473, 2113.035, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19458, 1553.406, -1682.965, 2117.108, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(1811, 1556.851, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2263, 1560.427, -1670.938, 2113.161, -10.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1811, 1556.170, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2263, 1560.387, -1671.923, 2112.988, 10.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1560.387, -1671.923, 2112.988, 10.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1811, 1555.510, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19477, 1559.437, -1682.181, 2114.096, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "d", 90, "Webdings", 160, 0, -1785344, 0, 1);
	tmpobjid = CreateDynamicObject(19436, 1569.849, -1673.131, 2113.867, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(1811, 1554.860, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19477, 1559.447, -1682.171, 2114.096, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "d", 90, "Webdings", 150, 0, -16777088, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1559.447, -1682.142, 2114.396, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "LOS SANTOS", 120, "Ariel", 25, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1559.457, -1682.162, 2114.166, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "POLICE", 120, "Ariel", 25, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1559.447, -1682.162, 2113.936, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "DEPARTMENT", 120, "Ariel", 25, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(1811, 1554.189, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(18762, 1557.914, -1669.541, 2114.155, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3741, "cehillhse14", "swimpoolbtm1_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, -1, "none", "none", -6724096);
	tmpobjid = CreateDynamicObject(19372, 1557.486, -1668.448, 2110.427, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1566.081, -1683.241, 2113.867, 0.000, 360.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1557.526, -1668.458, 2111.217, 0.000, 180.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1558.864, -1671.615, 2112.025, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1565.653, -1669.854, 2112.976, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18981, 1577.455, -1678.029, 2980.780, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10756, "airportroads_sfse", "Heliconcrete", -1);
	tmpobjid = CreateDynamicObject(18981, 1577.455, -1678.029, 2985.233, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19372, 1565.598, -1670.747, 2113.865, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1573.482, -1675.059, 2983.000, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1675.089, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2240, 1566.572, -1682.644, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19929, 1557.875, -1670.364, 2115.748, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1562.762, -1669.554, 2112.796, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1558.884, -1671.615, 2115.758, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1675.219, 2983.872, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1675.340, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1561.686, -1689.598, 2113.787, 0.000, 0.000, 179.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19372, 1558.478, -1667.448, 2113.855, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.057, -1683.335, 2113.787, 0.000, 0.000, 449.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.901, -1673.835, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.344, -1672.128, 2110.384, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1565.588, -1667.848, 2111.246, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19458, 1563.169, -1665.396, 2110.486, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1560.209, -1670.966, 2112.807, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1561.746, -1671.615, 2115.758, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1552.086, -1676.482, 2117.108, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1562.199, -1670.966, 2112.807, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.839, -1670.966, 2112.817, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19174, 1560.041, -1665.485, 2114.234, 0.000, 0.000, 1440.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(18880, 1562.153, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1561.460, -1683.231, 2113.817, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.528, -1670.056, 2112.807, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.298, -1670.226, 2112.677, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1559.318, -1671.186, 2112.677, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19172, 1572.175, -1670.678, 2983.460, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(19940, 1561.318, -1671.186, 2112.677, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19445, 1571.091, -1670.588, 2983.000, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19366, 1570.270, -1672.134, 2110.378, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18880, 1565.374, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1566.060, -1683.201, 2111.254, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.650, -1678.239, 2111.244, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.019, -1678.239, 2111.244, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.691, -1671.640, 2111.254, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.020, -1671.360, 2111.254, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", -1);
	tmpobjid = CreateDynamicObject(19929, 1557.876, -1669.135, 2114.317, 270.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19883, 1560.804, -1671.600, 2114.805, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19883, 1560.023, -1671.600, 2114.805, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2268, 1568.295, -1689.689, 2113.767, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1684.062, 2115.417, 180.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19358, 1558.484, -1667.451, 2110.493, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19929, 1560.795, -1671.635, 2116.338, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1574.246, -1683.225, 2111.285, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.902, -1675.566, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.586, -1661.853, 2110.486, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.830, -1676.281, 2113.877, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19174, 1559.380, -1697.626, 2114.074, 0.000, 0.000, 1530.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(18880, 1569.910, -1676.996, 2115.087, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18756, 1568.068, -1679.088, 2113.907, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", -1);
	tmpobjid = CreateDynamicObject(18756, 1571.876, -1679.018, 2113.907, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", -1);
	tmpobjid = CreateDynamicObject(19358, 1565.583, -1668.260, 2110.493, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19929, 1558.864, -1671.625, 2116.328, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19372, 1565.718, -1670.747, 2113.865, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.921, -1681.137, 2115.087, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1557.875, -1670.624, 2116.329, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1575.266, -1665.874, 2117.137, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.884, -1670.526, 2111.134, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19477, 1556.133, -1689.413, 2114.456, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "G", 130, "GTAWEAPON3", 199, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1556.143, -1689.443, 2114.516, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "5", 130, "GTAWEAPON3", 140, 0, -1, 0, 1);
	tmpobjid = CreateDynamicObject(19458, 1565.705, -1667.514, 2116.597, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1576.197, -1670.554, 2117.139, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2240, 1564.913, -1666.113, 2112.505, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19354, 1569.841, -1677.133, 2116.707, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19436, 1571.461, -1671.280, 2117.126, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.653, -1669.854, 2114.738, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.663, -1669.033, 2111.906, 360.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.595, -1661.844, 2113.857, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.663, -1666.763, 2111.906, 360.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1559.835, -1665.379, 2113.865, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1563.035, -1665.369, 2113.865, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1563.965, -1665.380, 2113.865, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1666.912, 2113.086, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1667.912, 2113.086, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(3858, 1565.655, -1664.689, 2113.445, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1552.206, -1674.883, 2113.826, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(18981, 1577.455, -1678.029, 2980.770, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.952, 2113.836, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.973, 2113.947, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.962, 2114.057, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.032, 2114.157, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.002, 2114.257, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.932, 2114.367, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1683.201, 2111.234, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.911, -1677.015, 2111.935, 1440.000, -450.000, -270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1682.991, 2111.244, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2165, 1559.434, -1665.966, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1559.007, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1558.346, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1557.706, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.024, -1674.772, 2114.667, 360.000, 180.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1682.991, 2117.107, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1683.211, 2117.107, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1576.686, -1683.213, 2117.108, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(1721, 1572.839, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1557.056, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1670.550, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1560.705, -1688.297, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19366, 1570.308, -1672.294, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19436, 1569.829, -1676.260, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19354, 1569.841, -1680.333, 2116.707, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19458, 1569.827, -1677.114, 2117.114, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.830, -1673.141, 2111.286, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1567.057, -1683.213, 2117.108, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19826, 1569.735, -1681.309, 2113.775, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -983041);
	tmpobjid = CreateDynamicObject(19610, 1569.813, -1681.307, 2113.765, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(3089, 1569.869, -1673.959, 2113.356, 0.000, 0.000, 629.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19477, 1560.418, -1671.646, 2114.557, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "POLICE DEPARTMENT", 120, "Ariel", 23, 1, -983041, 0, 1);
	tmpobjid = CreateDynamicObject(19458, 1558.486, -1664.262, 2117.118, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19362, 1570.268, -1672.155, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1681.101, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1680.442, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1679.791, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1679.131, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1679.131, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1679.772, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1680.412, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1681.042, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1681.042, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1680.422, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1679.792, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1679.152, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1571.461, -1671.280, 2110.373, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1679.131, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1679.782, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1680.452, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1681.103, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1681.042, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1680.422, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1679.792, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1679.162, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1679.122, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1679.782, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1680.403, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1681.053, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1678.431, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1678.421, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.501, -1678.441, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19437, 1566.304, -1672.278, 2110.494, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.334, -1672.298, 2110.494, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1678.442, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.023, 2113.126, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1678.431, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1558.246, -1666.402, 2117.018, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1678.432, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1678.851, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19869, 1560.703, -1678.203, 2109.863, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19869, 1560.703, -1678.784, 2109.843, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19358, 1565.593, -1670.741, 2110.493, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.933, 2114.607, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19869, 1558.401, -1678.784, 2109.843, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.903, 2113.086, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1552.650, -1678.249, 2113.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(11744, 1560.753, -1678.262, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19869, 1557.461, -1678.784, 2109.843, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(18880, 1565.374, -1683.293, 2114.824, 540.000, 270.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1567.106, -1672.294, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.753, -1678.841, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1679.422, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1679.992, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(18880, 1569.913, -1672.681, 2115.366, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.690, -1671.599, 2117.108, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.901, -1672.088, 2114.825, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.374, -1683.293, 2115.404, 540.000, 270.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1571.769, -1672.294, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1680.642, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19325, 1569.803, -1677.044, 2116.926, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2162, 1559.126, -1671.717, 2112.035, 0.000, 0.000, -171.799, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1565.695, -1690.455, 2113.787, 0.000, 0.000, 269.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1562.565, -1690.450, 2113.787, 0.000, 0.000, 269.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1681.212, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(18880, 1564.993, -1690.503, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19981, 1567.749, -1668.573, 2110.203, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", -1);
	tmpobjid = CreateDynamicObject(19869, 1558.403, -1678.203, 2109.863, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1681.232, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19869, 1557.463, -1678.203, 2109.863, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1563.036, -1665.381, 2117.118, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1680.652, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(1763, 1574.550, -1667.904, 2112.035, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 13003, "ce_racestart", "CJ_TARTAN", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1680.001, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19436, 1552.650, -1678.239, 2117.109, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1563.252, -1690.503, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1679.431, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1678.851, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.705, -1667.514, 2111.117, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1575.275, -1665.683, 2116.766, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(11744, 1557.502, -1678.261, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.735, -1667.401, 2110.386, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1679.421, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1680.002, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1680.632, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1681.232, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19994, 1566.939, -1669.008, 2112.045, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19458, 1570.575, -1665.712, 2110.386, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.892, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.585, -1667.401, 2117.128, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.735, -1667.401, 2117.128, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.445, -1683.347, 2113.777, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.775, -1684.957, 2113.777, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.825, -1685.197, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.705, -1685.197, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18981, 1598.253, -1657.998, 2985.183, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.815, -1688.307, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1687.603, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1570.575, -1665.712, 2116.766, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1570.575, -1665.722, 2117.129, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.714, -1670.526, 2111.124, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1575.266, -1665.874, 2110.392, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1567.106, -1672.144, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1576.205, -1670.562, 2116.766, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1576.197, -1670.554, 2110.396, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(630, 1554.432, -1681.428, 2113.186, 0.000, 0.000, -22.800, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.892, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2611, 1575.154, -1667.612, 2113.813, 0.000, -0.100, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -983041);
	SetDynamicObjectMaterial(tmpobjid, 3, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.892, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.775, -1684.957, 2113.777, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.054, -1684.077, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19174, 1566.300, -1686.526, 2113.784, 0.000, 0.000, 1350.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(19476, 1560.906, -1687.854, 2113.735, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19437, 1560.064, -1683.046, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19477, 1560.908, -1687.862, 2113.735, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "W\nE\nA\nP\nO\nN", 130, "Ariel", 28, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19458, 1555.426, -1683.805, 2113.786, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.054, -1689.588, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.947, -1688.877, 2113.787, 0.000, 0.000, 89.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.773, 2111.925, 90.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(3089, 1556.010, -1684.333, 2113.356, 0.000, 0.000, 989.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19174, 1572.370, -1686.986, 2114.074, 0.000, 0.000, 1350.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(19174, 1553.619, -1688.576, 2113.203, 360.000, 90.000, 1890.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "freighter5", 0);
	tmpobjid = CreateDynamicObject(19437, 1556.034, -1689.557, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1556.024, -1683.504, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.731, 2114.857, 180.000, 90.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2164, 1572.534, -1665.802, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2165, 1568.393, -1668.176, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 7, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.972, 2114.845, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1559.893, -1671.264, 2117.019, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19366, 1560.774, -1671.264, 2117.019, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(2161, 1571.205, -1665.789, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1569.875, -1665.789, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.972, 2115.426, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18075, 1560.403, -1677.590, 2115.515, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10778, "airportcpark_sfse", "ws_fluorescent2", -1);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1674.801, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1674.801, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1563.266, -1663.393, 2110.486, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1685.931, 2111.925, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.873, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1684.210, 2111.925, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(2166, 1567.671, -1668.194, 2112.045, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1674.971, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19437, 1556.034, -1686.625, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1687.322, 2111.925, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(19825, 1571.348, -1665.818, 2114.237, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	tmpobjid = CreateDynamicObject(2268, 1567.124, -1666.270, 2113.436, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1674.971, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.599, -1674.981, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2268, 1568.175, -1666.270, 2113.646, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19458, 1574.266, -1683.245, 2113.876, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.564, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(630, 1566.507, -1682.626, 2113.186, 0.000, 0.000, -132.600, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(2855, 1569.708, -1666.002, 2113.346, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 15040, "cuntcuts", "GB_novels06", 0);
	tmpobjid = CreateDynamicObject(18075, 1557.317, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1558.387, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19458, 1563.374, -1663.404, 2113.737, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11100, "bendytunnel_sfse", "Bow_sub_walltiles", -1);
	tmpobjid = CreateDynamicObject(949, 1574.653, -1666.437, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2268, 1574.706, -1669.180, 2113.566, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18081, "cj_barb", "barberspic1", 0);
	tmpobjid = CreateDynamicObject(2267, 1570.088, -1672.028, 2114.146, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4003, "cityhall_tr_lan", "mc_flags1", 0);
	tmpobjid = CreateDynamicObject(18075, 1569.578, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1570.638, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1570.828, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.934, -1683.283, 2114.836, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.903, -1683.283, 2115.427, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2855, 1570.881, -1671.583, 2113.062, 15.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 15040, "cuntcuts", "GB_novels06", 0);
	tmpobjid = CreateDynamicObject(2161, 1562.193, -1665.509, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(949, 1565.791, -1699.610, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2608, 1562.366, -1665.679, 2112.985, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1563.213, -1690.503, 2114.835, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1563.213, -1690.503, 2115.395, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18981, 1561.996, -1702.479, 2111.506, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19458, 1558.537, -1690.546, 2113.786, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2263, 1567.804, -1667.946, 2113.064, -10.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19458, 1559.288, -1695.376, 2113.786, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1569.697, -1690.566, 2113.786, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(2165, 1567.753, -1686.855, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19458, 1566.428, -1688.104, 2113.786, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(2166, 1568.641, -1686.834, 2112.045, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.131, -1683.351, 2113.787, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.316, -1690.266, 2113.786, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.438, -1688.104, 2116.818, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1563.307, -1663.400, 2117.018, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.318, -1690.254, 2116.818, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1572.458, -1688.233, 2113.786, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1574.268, -1683.361, 2113.788, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1572.437, -1688.104, 2110.434, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1574.267, -1683.374, 2110.434, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.337, -1683.374, 2117.124, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1572.397, -1688.204, 2117.124, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.477, -1688.204, 2117.124, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.307, -1690.224, 2117.124, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2263, 1567.764, -1668.919, 2112.883, 10.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19458, 1571.307, -1690.244, 2110.434, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.447, -1688.234, 2110.434, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19476, 1567.750, -1668.604, 2112.895, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "POLICE OFFICER", 120, "Ariel", 35, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(2161, 1569.555, -1690.150, 2112.015, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1569.555, -1690.150, 2113.346, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1568.235, -1690.150, 2112.014, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(949, 1566.982, -1683.888, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2855, 1568.287, -1689.903, 2113.366, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 15040, "cuntcuts", "GB_novels06", 0);
	tmpobjid = CreateDynamicObject(2268, 1567.674, -1689.689, 2113.907, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1671.927, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2267, 1570.957, -1683.470, 2114.146, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4003, "cityhall_tr_lan", "mc_flags1", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.141, -1683.361, 2110.435, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1567.587, -1674.221, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19436, 1567.141, -1683.361, 2116.807, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2263, 1567.794, -1667.946, 2113.064, -10.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18981, 1564.179, -1695.669, 2115.958, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.329, -1695.376, 2113.786, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1563.059, -1700.197, 2113.786, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.317, -1695.424, 2110.423, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1561.857, -1700.134, 2110.423, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.318, -1695.422, 2116.798, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1561.627, -1700.161, 2116.798, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.955, -1692.966, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1558.547, -1690.570, 2116.798, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1559.317, -1695.493, 2110.423, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1558.546, -1690.563, 2110.423, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1562.749, -1690.583, 2117.096, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1559.327, -1695.413, 2117.096, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.278, -1695.413, 2117.096, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1561.558, -1700.125, 2117.096, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1569.690, -1690.583, 2110.434, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.965, -1691.396, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.165, -1693.686, 2113.777, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.175, -1693.716, 2110.416, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.965, -1693.006, 2110.416, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.985, -1691.426, 2110.416, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.985, -1691.426, 2117.097, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.985, -1692.996, 2117.097, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.085, -1693.706, 2117.097, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2165, 1564.255, -1697.489, 2112.035, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2166, 1564.229, -1696.694, 2112.045, 0.000, 0.000, 1440.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(949, 1565.791, -1691.119, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2161, 1566.236, -1692.187, 2111.975, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1566.236, -1692.187, 2113.326, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1566.236, -1693.507, 2111.985, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1673.668, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2268, 1564.495, -1699.601, 2113.526, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18081, "cj_barb", "barberspic1", 0);
	tmpobjid = CreateDynamicObject(19372, 1558.465, -1664.609, 2113.857, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(2611, 1566.194, -1697.091, 2113.949, 0.000, -0.100, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -983041);
	SetDynamicObjectMaterial(tmpobjid, 3, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(1763, 1561.579, -1692.814, 2112.035, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 13003, "ce_racestart", "CJ_TARTAN", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2166, 1560.758, -1697.474, 2112.045, 0.000, 0.000, 1710.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2165, 1559.893, -1697.489, 2112.035, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1674.889, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2161, 1564.364, -1700.009, 2111.985, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2268, 1563.845, -1699.601, 2113.687, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18081, "cj_barb", "barberspic1", 0);
	tmpobjid = CreateDynamicObject(19366, 1558.618, -1665.334, 2110.458, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1563.427, -1696.938, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1560.487, -1696.658, 2112.035, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2608, 1571.356, -1665.929, 2112.975, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1670.748, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2268, 1561.485, -1699.591, 2113.436, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2268, 1560.844, -1699.591, 2113.606, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.024, -1677.094, 2114.667, 360.000, 180.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.024, -1672.514, 2114.667, 360.000, 180.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.013, -1673.461, 2114.317, 450.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1555.206, -1690.216, 2113.786, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1553.537, -1688.605, 2113.786, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1687.303, 2113.165, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1687.303, 2114.004, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(2267, 1561.088, -1692.119, 2114.146, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4003, "cityhall_tr_lan", "mc_flags1", 0);
	tmpobjid = CreateDynamicObject(19437, 1565.675, -1690.576, 2116.790, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.510, -1677.392, 2981.730, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1567.750, -1670.580, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(2610, 1570.390, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2610, 1569.909, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2610, 1569.419, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2610, 1568.928, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1570.988, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1571.608, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1671.846, 2981.270, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(3089, 1567.384, -1671.963, 2982.581, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-60-percent", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1673.566, 2981.270, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1670.573, 2984.052, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1567.490, -1678.278, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1563.856, -1675.054, 2983.000, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1670.404, 2984.662, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(1721, 1572.229, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2240, 1554.291, -1681.454, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19174, 1553.619, -1686.946, 2112.342, 360.000, 90.000, 1890.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "freighter5", 0);
	tmpobjid = CreateDynamicObject(19174, 1553.629, -1688.137, 2113.203, 360.000, 90.000, 1890.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "freighter5", 0);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1649.383, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1674.362, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1699.364, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1724.323, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1749.319, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.374, -1674.649, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(630, 1564.993, -1666.137, 2113.186, 0.000, 0.000, -28.300, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(2240, 1569.092, -1676.263, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(630, 1569.017, -1676.292, 2113.186, 0.000, 0.000, -132.600, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(19174, 1558.069, -1690.136, 2114.274, 0.000, 0.000, 1620.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18062, "ab_sfammuitems01", "ammu_gunboard3", 0);
	tmpobjid = CreateDynamicObject(19437, 1568.378, -1675.042, 2983.030, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19174, 1558.049, -1683.885, 2114.274, 0.000, 0.000, 1800.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18062, "ab_sfammuitems01", "ammu_gunboard4", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1673.776, 2982.571, 0.000, -90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.631, 0.000, -90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19436, 1569.809, -1681.831, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.819, -1676.310, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.779, -1682.381, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.800, -1682.382, 2113.877, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.820, -1681.842, 2113.877, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.071, 0.000, -90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1671.807, 2982.561, 0.000, -90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.731, 2114.857, 180.000, 90.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19445, 1575.841, -1678.595, 2980.759, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1575.841, -1666.994, 2980.729, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.071, 0.000, -90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.631, 0.000, -90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.916, -1668.418, 2987.052, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.916, -1668.418, 2987.052, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.928, -1681.095, 2981.116, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.923, -1664.480, 2981.158, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1674.762, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.801, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.801, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1670.880, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1671.791, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1675.643, 2984.491, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1675.123, 2984.201, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1671.862, 2982.699, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.762, 2982.699, 90.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.762, 2983.931, 90.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1671.812, 2983.931, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1672.052, 2984.041, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.543, 2984.061, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1575.941, -1666.994, 2980.698, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1575.941, -1678.586, 2980.708, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1675.219, 2984.633, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.130, -1675.340, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.131, -1675.089, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19361, 1574.005, -1670.581, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1576.683, -1670.552, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19458, 1569.797, -1678.474, 2117.114, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19445, 1577.289, -1679.920, 2982.980, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1670.309, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1670.419, 2983.872, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1583.260, -1679.939, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1573.490, -1675.360, 2982.990, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1582.130, -1670.550, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.129, -1670.309, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.713, -1675.072, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1670.419, 2984.643, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.804, -1670.552, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.804, -1670.291, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1576.683, -1670.281, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.843, -1675.363, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19445, 1577.289, -1665.759, 2983.000, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.809, -1679.939, 2982.980, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.592, -1677.412, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.602, -1677.442, 2981.790, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19445, 1583.260, -1665.419, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.582, -1677.472, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.582, -1677.452, 2983.312, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.612, -1677.432, 2983.322, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.483, -1670.429, 2983.872, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1585.374, -1670.948, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1585.613, -1670.948, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.592, -1677.412, 2983.312, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18880, 1585.624, -1674.649, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.651, -1679.569, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.360, -1679.569, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.632, -1677.432, 2983.291, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.360, -1666.187, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.641, -1666.187, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.503, -1670.429, 2984.623, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.632, -1677.432, 2981.730, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19858, 1576.540, -1677.382, 2981.750, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1576.530, -1677.442, 2981.740, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1576.520, -1677.412, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(18981, 1598.455, -1675.920, 2980.770, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10756, "airportroads_sfse", "Heliconcrete", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.809, -1665.859, 2982.980, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19087, 1582.622, -1678.622, 2983.306, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.622, -1676.272, 2983.306, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.700, -1669.102, 2981.783, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.651, -1676.273, 2981.805, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.875, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1589.013, -1670.517, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.962, -1670.509, 2984.052, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.962, -1670.509, 2984.623, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1590.743, -1670.517, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1595.652, -1670.437, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.972, -1666.527, 2982.990, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.191, -1663.417, 2982.990, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19325, 1567.423, -1670.798, 2986.083, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.681, -1665.656, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1670.478, 2979.740, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.952, -1666.527, 2979.730, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1595.602, -1670.419, 2979.730, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.570, -1663.438, 2979.730, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.709, -1665.638, 2979.730, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1670.548, 2985.714, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.710, -1665.607, 2986.053, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.590, -1663.426, 2986.053, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19983, 1585.844, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1593.971, -1665.607, 2986.053, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1595.651, -1670.428, 2986.053, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19939, 1594.066, -1666.069, 2983.311, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.066, -1666.069, 2982.761, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.066, -1666.069, 2982.210, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2983.191, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2983.191, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2983.111, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2983.111, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.951, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2983.031, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.951, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.871, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19430, 1593.943, -1666.063, 2982.040, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "barbersmir1", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.651, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.871, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.651, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2983.031, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.490, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.410, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.330, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.090, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.490, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.990, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.330, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.588, 2982.410, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.900, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.810, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.720, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(18880, 1590.513, -1675.098, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.090, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.900, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.990, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.810, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.720, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1670.538, 2980.564, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.693, -1670.517, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.346, -1670.544, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.866, -1670.544, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.875, -1670.544, 2983.941, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.284, -1670.544, 2983.941, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.346, -1670.544, 2983.861, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.927, -1670.544, 2983.861, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.927, -1670.544, 2983.781, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.436, -1670.544, 2983.781, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.436, -1670.544, 2983.701, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.886, -1670.544, 2983.701, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.886, -1670.544, 2983.621, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.336, -1670.544, 2983.621, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.336, -1670.544, 2983.541, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.887, -1670.544, 2983.541, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.887, -1670.544, 2983.461, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.456, -1670.544, 2983.461, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.456, -1670.544, 2983.381, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.917, -1670.544, 2983.381, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.917, -1670.544, 2983.291, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.277, -1670.544, 2983.291, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.277, -1670.544, 2983.200, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.897, -1670.544, 2983.200, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.897, -1670.544, 2983.110, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.427, -1670.544, 2983.110, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.704, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.084, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.044, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.914, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.883, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.743, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.834, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1591.328, -1670.484, 2984.180, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1591.328, -1670.484, 2984.480, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1590.607, -1670.494, 2984.120, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1589.156, -1670.494, 2984.120, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18981, 1597.535, -1673.509, 2985.243, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(2855, 1586.005, -1666.669, 2982.640, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19172, 1585.786, -1666.219, 2983.450, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(2608, 1586.003, -1665.552, 2982.240, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2608, 1586.003, -1666.303, 2982.240, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(1763, 1588.445, -1669.929, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 13003, "ce_racestart", "CJ_TARTAN", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19172, 1592.356, -1670.329, 2982.990, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1675.068, 2980.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1588.782, -1675.098, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1590.899, -1674.381, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1675.068, 2985.732, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.851, -1675.098, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19373, 1592.180, -1675.048, 2983.011, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19983, 1591.328, -1670.484, 2984.180, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.832, -1675.099, 2984.052, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.832, -1675.099, 2984.613, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.686, -1675.066, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.606, -1675.066, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.606, -1675.066, 2983.961, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.676, -1675.066, 2983.961, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.006, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.647, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.607, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.037, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1587.787, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.776, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.806, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1587.817, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.686, -1675.066, 2983.881, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.881, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.801, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.721, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.641, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.551, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.460, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.370, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.280, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.190, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.100, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.010, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1595.469, -1675.140, 2982.990, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19983, 1590.887, -1675.066, 2984.191, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1590.887, -1675.066, 2984.471, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1590.386, -1675.066, 2984.181, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.925, -1675.066, 2984.181, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19437, 1590.899, -1671.411, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(2265, 1593.398, -1667.917, 2982.820, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(19172, 1588.565, -1663.538, 2982.990, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(2265, 1593.398, -1668.498, 2982.820, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1593.398, -1669.078, 2982.820, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(2265, 1591.899, -1664.008, 2982.820, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1592.459, -1664.017, 2982.820, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.658, -1679.841, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19444, 1593.836, -1675.991, 2983.021, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2395, 1593.939, -1679.489, 2984.361, 0.000, 90.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19444, 1593.836, -1680.271, 2983.021, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18880, 1593.853, -1681.068, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1593.853, -1682.808, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1593.873, -1680.968, 2984.631, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1593.883, -1680.968, 2984.061, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1598.760, -1682.968, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.208, -1683.018, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.760, -1679.747, 2982.990, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.670, -1680.007, 2979.719, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.670, -1680.007, 2986.029, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1588.921, -1682.997, 2986.029, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1588.921, -1682.997, 2979.716, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.743, -1679.966, 2979.716, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.743, -1682.966, 2979.716, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.743, -1675.146, 2979.716, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.863, -1676.187, 2979.716, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.860, -1676.217, 2986.029, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.721, -1679.858, 2986.029, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.781, -1682.929, 2986.029, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1595.461, -1675.158, 2986.029, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.821, -1676.157, 2986.029, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.821, -1676.127, 2979.728, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19373, 1592.230, -1675.148, 2979.730, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1676.805, 2981.329, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1676.805, 2983.711, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1679.445, 2983.291, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1679.445, 2981.169, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.768, -1679.475, 2981.489, 360.000, 450.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.768, -1679.475, 2984.261, 360.000, 450.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2855, 1590.516, -1663.840, 2982.660, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19172, 1585.744, -1679.948, 2982.990, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(2198, 1588.159, -1679.524, 2981.280, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2198, 1589.159, -1680.544, 2981.280, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2265, 1586.237, -1676.717, 2983.000, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1586.237, -1676.127, 2983.220, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2855, 1593.117, -1675.528, 2982.930, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(2855, 1591.626, -1675.528, 2982.930, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(2265, 1591.348, -1675.726, 2983.000, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1591.918, -1675.726, 2983.000, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1592.489, -1675.726, 2983.000, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7009, "vgndwntwn1", "newpolice_sa", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.602, -1667.952, 2981.790, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.582, -1667.922, 2981.780, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.572, -1667.982, 2981.770, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.572, -1667.982, 2981.770, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.592, -1667.952, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.700, -1667.952, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.730, -1667.992, 2981.770, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.710, -1667.902, 2981.780, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.650, -1667.952, 2981.790, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19087, 1582.651, -1678.623, 2981.805, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.700, -1666.812, 2981.783, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1577.926, -1676.273, 2981.777, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1577.926, -1678.563, 2981.777, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1578.018, -1669.113, 2981.784, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1578.018, -1666.792, 2981.784, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1669.115, 2982.422, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1666.793, 2982.422, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1676.276, 2982.332, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1678.565, 2982.332, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.159, -1678.625, 2982.312, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.159, -1676.274, 2982.312, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1676.274, 2983.863, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1678.625, 2983.863, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1669.102, 2982.261, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1666.811, 2982.261, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.738, -1666.811, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.738, -1669.102, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1676.274, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1678.615, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1678.615, 2983.352, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1676.275, 2983.352, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.896, -1676.275, 2981.801, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.896, -1678.565, 2981.801, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.976, -1669.114, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.976, -1666.792, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19172, 1571.355, -1674.960, 2983.460, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(2008, 1596.877, -1678.071, 2981.281, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 6, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1593.848, -1675.891, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19983, 1593.859, -1682.666, 2984.091, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.859, -1681.206, 2984.091, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.869, -1681.066, 2984.191, 450.000, 360.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.869, -1681.066, 2984.482, 450.000, 360.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1674.516, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1671.095, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1672.045, 2984.011, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1670.934, 2984.011, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1670.934, 2984.481, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1672.015, 2984.481, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1590.889, -1672.911, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19994, 1586.924, -1680.221, 2981.290, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(14793, 1571.577, -1680.197, 2984.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(14793, 1576.270, -1680.197, 2984.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(14793, 1597.370, -1680.197, 2984.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1675.123, 2984.491, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1675.123, 2984.001, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1670.392, 2984.011, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1670.392, 2984.501, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1582.006, -1670.395, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1578.556, -1670.395, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1578.556, -1675.125, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1582.007, -1675.125, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1721, 1572.117, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1572.718, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1571.517, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1570.417, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1569.807, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18075, 1578.263, -1683.022, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1577.202, -1683.023, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1583.774, -1662.817, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1582.714, -1662.817, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19940, 1557.868, -1670.066, 2113.916, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18762, 1564.599, -1674.801, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1674.801, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1674.981, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1674.981, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.077, -1674.981, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.077, -1674.801, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1674.801, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1680.203, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1680.353, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1680.353, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1680.203, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.609, -1680.203, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.609, -1680.363, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1680.363, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1680.203, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.097, -1680.203, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1680.203, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1680.353, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.097, -1680.353, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19994, 1590.464, -1679.881, 2981.300, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(4150, 1528.750, -1661.588, 2109.290, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4186, 1476.268, -1693.858, 2116.290, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3985, 1476.338, -1632.208, 2108.790, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(712, 1509.208, -1669.938, 2119.229, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(713, 1495.269, -1708.318, 2109.510, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4163, 1465.968, -1731.568, 2109.290, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3997, 1479.348, -1801.540, 2109.360, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3980, 1481.188, -1785.068, 2119.239, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4002, 1479.869, -1790.400, 2152.550, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3994, 1476.130, -1593.218, 2109.148, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(620, 1479.290, -1666.179, 2109.489, 356.858, 0.000, 3.137, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(647, 1499.359, -1620.160, 2112.330, 356.850, 0.000, 359.540, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(647, 1476.540, -1665.250, 2112.090, 356.850, 0.000, 357.260, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(647, 1483.509, -1665.438, 2112.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4016, 1493.718, -1547.180, 2114.408, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4144, 1438.680, -1518.468, 2109.128, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4008, 1405.170, -1544.530, 2116.760, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4206, 1476.438, -1640.170, 2110.530, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(700, 1494.208, -1694.438, 2110.458, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3978, 1392.000, -1654.938, 2107.458, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4005, 1414.500, -1681.479, 2122.128, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4197, 1392.088, -1655.130, 2107.458, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4006, 1406.948, -1620.318, 2128.800, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4146, 1367.588, -1583.280, 2109.158, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19807, 1567.203, -1668.214, 2112.896, 0.000, 0.000, 170.200, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3975, 1575.119, -1675.710, 2109.900, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3858, 1552.018, -1673.497, 2112.035, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11711, 1552.113, -1674.778, 2115.017, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19808, 1560.417, -1670.963, 2112.836, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1579.130, -1675.119, 2985.942, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(14532, 1558.860, -1668.640, 2113.006, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1775, 1553.730, -1679.786, 2113.126, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2855, 1561.784, -1671.616, 2112.966, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1560.404, -1669.642, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1569.217, -1686.812, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1564.017, -1688.142, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2827, 1566.670, -1667.262, 2112.901, 0.000, 0.000, 274.100, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1564.017, -1695.813, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19830, 1570.212, -1665.953, 2113.365, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1687.484, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1808, 1571.930, -1670.338, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1567.675, -1666.910, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2202, 1570.705, -1671.496, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19813, 1565.810, -1668.401, 2112.305, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1562.037, -1683.335, 2116.866, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1570.897, -1683.335, 2116.866, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1569.017, -1672.215, 2116.866, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1561.953, -1690.484, 2116.926, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2202, 1570.835, -1683.955, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1568.265, -1688.140, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1560.772, -1688.913, 2116.916, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(14532, 1571.330, -1689.780, 2113.006, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1565.545, -1696.833, 2112.035, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1560.494, -1699.024, 2112.035, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2202, 1559.905, -1695.206, 2112.035, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19873, 1562.281, -1662.129, 2113.036, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19835, 1561.162, -1671.328, 2113.046, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1557.968, -1685.932, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1553.910, -1687.177, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2068, 1552.635, -1687.932, 2115.408, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2373, 1553.395, -1688.606, 2112.035, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.883, -1688.949, 2112.875, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.896, -1688.728, 2112.891, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.906, -1688.515, 2112.884, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.919, -1688.306, 2112.895, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.907, -1688.094, 2112.890, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.861, -1687.870, 2112.862, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1553.662, -1688.132, 2114.196, 0.000, 0.000, 272.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1687.324, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1686.533, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1687.324, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1686.964, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1686.754, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1553.903, -1688.811, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1553.903, -1687.900, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1553.903, -1688.320, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.050, -1686.596, 2112.165, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1553.990, -1686.947, 2112.395, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2619, 1553.658, -1686.799, 2114.447, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19813, 1573.358, -1674.957, 2981.610, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(348, 1554.008, -1686.759, 2112.515, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.165, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.165, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.395, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.615, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.846, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.385, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.615, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.810, -1689.798, 2113.056, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1554.794, -1689.820, 2113.306, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1555.343, -1689.644, 2112.239, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1555.132, -1689.618, 2112.246, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1554.169, -1689.652, 2112.337, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1554.357, -1689.655, 2112.317, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1579.413, -1670.450, 2982.521, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1581.154, -1670.450, 2982.521, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1579.130, -1670.399, 2985.942, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1579.753, -1675.195, 2985.394, 180.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1580.804, -1675.205, 2985.384, 180.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1579.403, -1675.211, 2982.521, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1581.144, -1675.211, 2982.521, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11706, 1568.150, -1670.950, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.836, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11705, 1570.103, -1670.967, 2982.931, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11727, 1574.270, -1674.966, 2983.719, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11727, 1573.560, -1674.966, 2983.719, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1586.831, -1670.536, 2981.280, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1592.253, -1670.489, 2986.151, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2165, 1588.973, -1665.392, 2981.280, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(14532, 1586.287, -1670.036, 2982.250, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1664.385, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1664.385, 2982.630, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1665.715, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1667.045, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1588.385, -1663.857, 2981.280, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.698, -1667.939, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.698, -1668.550, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.698, -1669.161, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1590.925, -1675.060, 2987.483, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1586.683, -1675.060, 2985.291, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2164, 1590.624, -1682.919, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1592.468, -1663.670, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1591.837, -1663.670, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.108, -1663.670, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2066, 1590.387, -1664.000, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2066, 1590.967, -1664.000, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1808, 1586.000, -1667.870, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1593.765, -1677.566, 2982.311, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2165, 1587.382, -1675.662, 2981.280, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1586.074, -1676.319, 2981.280, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2164, 1587.072, -1682.919, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2164, 1588.844, -1682.919, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2986, 1591.788, -1682.898, 2984.192, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16780, 1589.723, -1680.186, 2985.293, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16780, 1596.415, -1678.935, 2985.293, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16780, 1590.215, -1666.560, 2985.173, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1591.974, -1676.230, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1592.654, -1676.240, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1593.345, -1676.230, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1591.293, -1676.250, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1590.474, -1679.881, 2981.280, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1586.914, -1680.221, 2981.280, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1585.486, -1672.662, 2987.194, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1593.859, -1682.414, 2987.384, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1596.185, -1676.951, 2981.300, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1597.026, -1678.931, 2981.300, 0.000, 0.000, 1350.000, 1, -1, -1, 450.000, 450.000);


	///2 floor

	tmpobjid = CreateDynamicObject(18981, 1574.162, -1682.075, 60.671, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(18756, 1565.427, -1692.328, 63.131, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", 0);
	tmpobjid = CreateDynamicObject(18756, 1565.517, -1696.129, 63.091, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.222, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1563.415, -1694.222, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.202, 64.121, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.202, 61.101, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.235, -1698.049, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.734, -1698.059, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18981, 1574.123, -1682.075, 65.181, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1572.466, -1693.317, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1569.046, -1692.696, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19174, 1568.835, -1690.469, 63.171, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "sw_PD", 0);
	tmpobjid = CreateDynamicObject(1499, 1567.096, -1682.487, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(19378, 1581.254, -1688.918, 61.121, 540.000, 450.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_bathfloor1", -1);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1691.051, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1691.662, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1999, 1568.078, -1676.958, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19387, 1561.874, -1688.708, 62.951, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19387, 1561.794, -1688.718, 62.971, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(1499, 1561.816, -1689.447, 61.191, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(19437, 1569.033, -1685.547, 62.941, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.934, -1692.696, 60.351, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1569.034, -1692.716, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6340, "rodeo05_law2", "citywall6", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.944, -1692.716, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.942, -1692.696, 66.211, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1572.453, -1693.297, 66.211, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1572.433, -1693.297, 60.351, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.730, -1698.119, 66.221, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.700, -1698.039, 60.351, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1565.531, -1694.208, 65.891, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.202, 64.561, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1561.706, -1693.316, 62.951, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(14401, 1585.198, -1682.219, 61.501, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19445, 1561.883, -1694.277, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1560.127, -1693.293, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19328, 1568.619, -1680.060, 62.851, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17511, "stadium_lae2", "ticketsnprice_lae2", 0);
	tmpobjid = CreateDynamicObject(19328, 1568.620, -1673.721, 62.621, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "CJ_PAINTING20", 0);
	tmpobjid = CreateDynamicObject(2161, 1560.018, -1682.641, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.260, -1698.039, 60.351, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.736, -1693.306, 60.351, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.784, -1694.946, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.794, -1688.587, 59.591, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.793, -1688.123, 60.431, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.795, -1688.123, 65.581, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.785, -1681.285, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19174, 1557.741, -1682.631, 63.831, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1689.129, 65.621, 180.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.473, -1693.275, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.726, -1693.306, 66.221, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1563.247, -1694.847, 66.221, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.893, -1694.266, 60.351, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.773, -1694.266, 59.591, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.893, -1694.266, 66.231, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.795, -1694.316, 62.931, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.773, -1694.266, 65.971, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2161, 1560.018, -1682.641, 62.531, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.234, -1676.319, 62.581, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.484, -1682.544, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1557.405, -1682.554, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.451, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.038, 63.451, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.038, 63.361, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.699, 63.361, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.106, -1693.275, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.699, 63.271, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.271, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.171, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.171, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.061, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.049, 63.061, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.029, 62.951, 360.000, 270.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.669, 62.951, 360.000, 270.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1687.048, 65.621, 180.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.475, -1682.534, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.135, -1682.534, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1556.926, -1682.524, 62.941, 0.000, 0.000, 1170.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1556.917, -1693.293, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.416, -1693.303, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1557.533, -1693.255, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1555.484, -1693.287, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1690.120, 62.181, 360.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.095, -1693.287, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1557.894, -1693.277, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18981, 1566.182, -1682.075, 60.691, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19355, 1553.823, -1692.646, 65.971, 0.000, 0.000, 720.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.120, 62.181, 360.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1553.824, -1695.866, 59.591, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18981, 1565.933, -1682.075, 65.191, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(2165, 1557.278, -1683.082, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2164, 1554.899, -1682.653, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.070, 62.181, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(14455, 1555.591, -1693.260, 62.841, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2608, 1555.529, -1682.761, 62.641, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1561.902, -1687.115, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.802, -1687.115, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.905, -1684.735, 60.421, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.897, -1684.735, 65.581, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.797, -1684.735, 65.581, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.795, -1684.735, 60.421, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.916, -1686.316, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.906, -1683.505, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.837, -1684.836, 60.431, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.837, -1684.836, 65.551, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.832, -1687.095, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.832, -1682.724, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.902, -1682.715, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.792, -1682.715, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.571, 62.191, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.920, 62.191, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.920, 63.781, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.781, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.681, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.591, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.501, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.411, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.321, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.231, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.141, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.041, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1682.229, 63.041, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.141, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.231, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.321, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.411, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.501, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.591, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.681, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1686.291, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1683.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 62.941, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 62.941, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1685.380, 62.931, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1684.479, 62.931, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1568.943, -1685.547, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(2180, 1556.303, -1690.711, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.721, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.101, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1563.587, -1682.566, 60.321, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.925, -1686.324, 60.311, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.935, -1683.494, 60.311, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1692.282, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.125, -1682.544, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1557.645, -1682.554, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1553.824, -1683.645, 59.591, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1560.094, -1682.544, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1560.096, -1682.534, 66.001, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1558.715, -1682.534, 66.001, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.775, -1683.583, 59.591, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.785, -1686.313, 59.591, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1573.665, -1684.796, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1692.880, 61.191, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1692.220, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1691.560, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1690.899, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1690.239, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1689.569, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1688.898, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1688.238, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 62.191, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1564.716, -1682.565, 60.421, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6340, "rodeo05_law2", "citywall6", -1);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1688.228, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(19437, 1561.892, -1681.495, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6340, "rodeo05_law2", "citywall6", -1);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1692.869, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1692.199, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1691.529, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1690.869, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1690.199, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1689.549, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1688.878, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1688.005, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1688.675, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1689.345, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1690.006, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1690.676, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1691.347, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1692.007, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1692.647, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1564.426, -1682.565, 65.571, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1688.435, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1572.806, -1692.046, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19373, 1574.425, -1687.322, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1689.026, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1689.736, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1690.417, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1691.088, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1691.758, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1692.378, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1693.059, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19387, 1575.954, -1686.087, 62.941, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19387, 1567.874, -1682.507, 62.951, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1564.525, -1682.545, 60.431, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19387, 1567.884, -1682.477, 62.961, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1567.853, -1676.319, 62.581, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1564.566, -1682.545, 65.551, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.936, -1683.506, 62.921, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.916, -1684.746, 60.331, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.906, -1683.495, 60.331, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.916, -1684.745, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.906, -1683.505, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1562.613, -1682.546, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.273, -1682.546, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1565.498, -1682.586, 60.321, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1563.421, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1570.228, -1682.586, 60.331, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1570.228, -1682.586, 66.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1563.608, -1682.596, 66.201, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.781, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1566.293, -1682.556, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1569.433, -1682.556, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1562.603, -1682.556, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19174, 1561.985, -1691.429, 63.301, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1690.441, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.139, -1687.140, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.139, -1686.500, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1691.052, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1692.251, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1691.651, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1688.740, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1689.340, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19445, 1573.747, -1693.267, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.671, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.561, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.441, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.331, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.211, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1564.442, -1682.550, 62.981, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1575.997, -1692.426, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19982, 1565.472, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1563.462, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1565.499, -1682.606, 66.201, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19387, 1567.884, -1682.477, 62.961, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19387, 1568.965, -1687.098, 62.961, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19174, 1568.609, -1677.884, 63.141, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(1721, 1565.818, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1565.208, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(14532, 1568.233, -1678.892, 62.161, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.977, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1563.607, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 62.991, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.432, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18762, 1562.353, -1691.168, 60.701, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1562.353, -1686.177, 60.701, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1562.353, -1685.176, 60.701, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1565.286, -1683.035, 60.701, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1566.477, -1683.035, 60.701, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1568.498, -1685.907, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1568.498, -1690.848, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1567.518, -1695.019, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1563.347, -1695.019, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1564.628, -1693.828, 60.701, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(19445, 1563.024, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1562.453, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1567.805, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1568.446, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.924, -1683.949, 69.471, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.966, -1683.949, 69.481, 270.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.924, -1683.399, 69.471, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.965, -1683.399, 69.481, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.965, -1692.490, 69.481, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.894, -1692.490, 69.471, 450.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1562.545, -1677.716, 62.931, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1558.585, -1682.466, 62.941, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.056, -1682.456, 60.421, 180.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.056, -1682.446, 65.571, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.736, -1677.615, 62.941, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1565.636, -1669.595, 62.931, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.293, -1682.486, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.283, -1682.446, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.285, -1682.445, 59.581, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.706, -1677.603, 59.601, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.575, -1677.603, 59.591, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1564.365, -1669.601, 59.601, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1564.856, -1669.609, 65.971, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.696, -1677.622, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.554, -1677.622, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2180, 1559.054, -1690.711, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2180, 1556.323, -1687.860, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2165, 1566.073, -1672.214, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19994, 1564.347, -1681.164, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19387, 1575.984, -1686.077, 62.951, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.497, -1688.896, 62.941, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.535, -1671.465, 62.931, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.716, -1671.465, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.897, -1693.186, 62.941, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.887, -1684.825, 62.941, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(1999, 1563.147, -1681.848, 61.191, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(1999, 1564.158, -1679.838, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19387, 1569.005, -1687.088, 62.951, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(14532, 1566.226, -1682.003, 62.161, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19994, 1563.467, -1678.623, 61.201, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19994, 1563.467, -1678.613, 61.191, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19808, 1563.478, -1679.965, 62.011, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19808, 1562.937, -1681.176, 62.011, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19610, 1563.482, -1680.034, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19610, 1562.912, -1681.155, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1563.500, -1679.537, 62.241, -15.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(2263, 1563.460, -1680.490, 61.975, 15.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1563.408, -1681.190, 62.210, -15.000, 0.000, 810.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(2263, 1562.453, -1681.150, 61.954, 15.000, 0.000, 990.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2855, 1562.979, -1680.617, 61.981, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2855, 1564.269, -1679.887, 61.981, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(19174, 1562.649, -1680.804, 63.141, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(18880, 1562.736, -1676.320, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1568.508, -1676.320, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1568.363, -1676.319, 61.011, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1568.363, -1676.319, 63.671, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1566.806, -1676.324, 60.431, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.098, -1676.320, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1566.806, -1676.344, 65.651, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1565.243, -1676.319, 62.161, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.243, -1676.319, 62.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.903, -1676.319, 62.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.212, -1676.319, 63.881, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.832, -1676.319, 63.881, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.392, -1676.319, 62.571, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1566.241, -1676.319, 62.571, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.212, -1676.319, 63.791, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.852, -1676.319, 63.791, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.211, -1676.319, 63.701, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.851, -1676.319, 63.701, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.851, -1676.319, 63.601, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.230, -1676.319, 63.601, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.230, -1676.319, 63.501, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.860, -1676.319, 63.501, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.230, -1676.319, 63.401, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.850, -1676.319, 63.401, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.218, -1676.319, 63.301, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.878, -1676.319, 63.301, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.878, -1676.319, 63.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.197, -1676.319, 63.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.197, -1676.319, 63.081, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.838, -1676.319, 63.081, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.838, -1676.319, 62.971, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.157, -1676.319, 62.971, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.157, -1676.319, 62.871, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.827, -1676.319, 62.871, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.215, -1676.319, 62.771, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.875, -1676.319, 62.771, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.875, -1676.319, 62.671, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.234, -1676.319, 62.671, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19994, 1566.967, -1677.663, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2855, 1568.129, -1676.827, 61.981, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(1499, 1568.977, -1686.362, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(2270, 1565.812, -1693.574, 64.341, 0.000, 90.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19808, 1568.248, -1677.635, 62.021, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19610, 1568.242, -1677.644, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1567.730, -1677.607, 62.227, -15.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(2263, 1568.679, -1677.647, 61.983, 15.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(3383, 1558.041, -1682.559, 66.611, 180.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19445, 1562.575, -1667.983, 59.591, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.554, -1668.012, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.714, -1667.992, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.706, -1667.983, 59.601, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.804, -1680.406, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.813, -1680.417, 65.981, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19610, 1565.422, -1672.354, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1553.804, -1695.866, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.730, 63.811, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.811, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2180, 1559.053, -1687.860, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.720, 63.721, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.710, 63.631, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.039, 63.631, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.039, 63.541, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.475, -1682.544, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.541, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19174, 1570.936, -1693.191, 62.971, 360.000, 90.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "barbersmir1", 0);
	tmpobjid = CreateDynamicObject(1499, 1563.466, -1676.327, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(18880, 1564.977, -1676.320, 63.821, 180.000, 90.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1564.977, -1676.320, 64.571, 180.000, 90.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1561.865, -1676.324, 61.951, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19994, 1558.971, -1689.218, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.211, -1689.198, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.220, -1689.218, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1689.218, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1691.948, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.181, -1691.958, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.191, -1691.958, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1559.031, -1691.958, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1557.961, -1684.128, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1557.961, -1684.118, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.211, -1689.188, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.191, -1691.948, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1559.031, -1691.948, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.181, -1691.948, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1691.928, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1689.208, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.221, -1689.208, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.971, -1689.208, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19476, 1565.464, -1694.058, 64.341, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "|2|", 120, "Ariel", 170, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19476, 1561.973, -1688.696, 64.211, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "CONFERENCE HALL", 120, "Ariel", 55, 1, -16777216, -1, 1);
	tmpobjid = CreateDynamicObject(2161, 1568.610, -1672.012, 61.161, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1568.610, -1672.012, 62.511, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(11685, 1567.437, -1675.779, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19476, 1567.864, -1682.615, 64.211, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "CHIEF OF POLICE", 120, "Ariel", 55, 1, -16777216, -1, 1);
	tmpobjid = CreateDynamicObject(14455, 1567.732, -1669.690, 62.841, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(11685, 1566.137, -1675.779, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(14455, 1562.591, -1670.470, 62.841, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2263, 1565.430, -1671.863, 62.269, -15.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19808, 1565.427, -1672.325, 62.011, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.690, 62.181, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2263, 1565.400, -1672.818, 62.012, 15.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1565.440, -1671.863, 62.269, -15.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.684, -1676.319, 63.961, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.684, -1676.319, 64.421, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.864, -1676.319, 63.841, 180.000, 180.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1564.955, -1676.319, 63.841, 180.000, 180.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19994, 1566.278, -1673.394, 61.191, 0.000, 0.000, -161.100, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19994, 1565.158, -1673.394, 61.191, 0.000, 0.000, 160.199, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1499, 1575.947, -1685.312, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(18075, 1557.724, -1687.871, 64.721, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -1);
	tmpobjid = CreateDynamicObject(14793, 1580.785, -1689.942, 64.591, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19432, 1580.482, -1688.341, 62.927, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "barbersmir1", 0);
	tmpobjid = CreateDynamicObject(18075, 1565.438, -1687.938, 64.731, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1563.894, -1691.909, 69.471, 450.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.965, -1691.909, 69.481, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19476, 1568.855, -1687.116, 64.211, 0.000, 0.000, 900.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "UNDRESSED", 120, "Ariel", 55, 1, -16777216, -1, 1);
	tmpobjid = CreateDynamicObject(19476, 1565.424, -1672.644, 62.041, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "CHIEF OF POLICE", 120, "Ariel", 33, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19475, 1565.398, -1672.633, 61.911, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19475, 1565.468, -1672.633, 61.911, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1714, 1565.402, -1670.735, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2704, 1572.174, -1689.734, 61.891, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2386, 1572.475, -1691.520, 63.342, 0.000, 0.000, -42.600, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1561.829, -1679.673, 61.191, 0.000, 0.000, 135.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1553.795, -1688.583, 61.191, 0.000, 0.000, 135.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1558.387, -1682.553, 61.191, 0.000, 0.000, 45.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(14842, 1577.643, -1692.213, 63.241, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1563.478, -1679.665, 62.021, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1563.380, -1681.165, 62.021, 0.000, 0.000, 92.099, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19807, 1562.939, -1679.995, 62.081, 0.000, 0.000, -172.100, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19807, 1563.121, -1681.906, 62.081, 0.000, 0.000, 86.900, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(14842, 1579.523, -1691.543, 63.241, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19835, 1567.986, -1677.147, 62.091, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1567.878, -1677.635, 62.021, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19807, 1568.019, -1678.156, 62.081, 0.000, 0.000, -90.300, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(11745, 1572.452, -1688.678, 63.411, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(11745, 1569.461, -1688.678, 63.411, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2386, 1570.895, -1692.812, 61.922, 0.000, 0.000, -158.499, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2844, 1570.794, -1691.414, 61.192, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2844, 1570.014, -1689.564, 61.192, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1553.801, -1688.768, 61.191, 0.000, 0.000, 135.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1558.419, -1682.539, 61.191, 0.000, 0.000, 225.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1572.421, -1676.315, 61.191, 0.000, 0.000, 225.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1565.428, -1671.975, 62.021, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1557.758, -1676.340, 66.861, 0.000, 0.000, 45.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1570.894, -1690.979, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1570.894, -1686.346, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1565.903, -1679.286, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1565.803, -1673.243, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	//police interior - close

	//news interior - open
	tmpobjid = CreateObject(19377, 3193.722167, -1759.692626, 3000.000000, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 3922, "bistro", "DinerFloor", 0x00000000);
	tmpobjid = CreateObject(19461, 3188.558593, -1759.696289, 3001.836181, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3193.459228, -1764.424804, 3001.836181, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3198.181152, -1759.518310, 3001.836181, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3193.285888, -1754.953857, 3001.836181, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3198.388916, -1759.531127, 3001.836181, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(1747, 3196.243652, -1754.666381, 3002.479248, 0.000000, 359.250000, 1.500000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19372, 3191.189697, -1760.833496, 3000.015869, 180.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "carp04S", 0x00000000);
	tmpobjid = CreateObject(1502, 3193.727050, -1759.448730, 3000.085937, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14653, "ab_trukstpb", "mustard", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateObject(1806, 3189.731445, -1757.865966, 3000.085937, 0.000000, 0.000000, 322.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_boothpanel", 0x00000000);
	tmpobjid = CreateObject(1502, 3193.705566, -1761.147216, 3000.085937, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14653, "ab_trukstpb", "mustard", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateObject(19369, 3196.161865, -1759.393554, 3002.650390, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "ws_doormat", 0x00000000);
	tmpobjid = CreateObject(14391, 3189.988281, -1755.899414, 3001.047851, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1897, 3188.713623, -1756.129394, 3001.167724, 0.000000, 77.749938, 89.749969, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1505, 3190.163818, -1764.376342, 3000.123046, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 4830, "airport2", "sjmpostbar3", 0x00000000);
	tmpobjid = CreateObject(19377, 3193.721679, -1759.692382, 3003.651367, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "brwall_128", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateObject(1751, 3189.355712, -1754.610839, 3002.901611, 20.091918, 359.363433, 0.441130, 300.00);
	tmpobjid = CreateObject(1751, 3190.076416, -1754.605712, 3002.910156, 20.088499, 359.362792, 0.439453, 300.00);
	tmpobjid = CreateObject(1751, 3190.800537, -1754.608398, 3002.915283, 20.088499, 359.362792, 0.439453, 300.00);
	tmpobjid = CreateObject(1751, 3191.523925, -1754.614746, 3002.918701, 20.088499, 359.362792, 0.439453, 300.00);
	tmpobjid = CreateObject(1750, 3189.379150, -1754.682128, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1750, 3190.091064, -1754.683715, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1750, 3190.799072, -1754.741088, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1750, 3191.505615, -1754.796264, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.687255, -1755.719482, 3001.838867, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.623046, -1755.720336, 3001.838867, 0.000000, 0.000000, 269.994506, 300.00);
	tmpobjid = CreateObject(19157, 3195.849609, -1757.290039, 3000.996582, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2637, 3196.191406, -1757.656250, 3000.490722, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2309, 3197.029785, -1758.972900, 3000.085937, 0.000000, 0.000000, 18.000000, 300.00);
	tmpobjid = CreateObject(2309, 3195.488281, -1759.111328, 3000.085937, 0.000000, 0.000000, 338.000000, 300.00);
	tmpobjid = CreateObject(19610, 3196.679443, -1758.143188, 3000.945312, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(19610, 3195.518310, -1758.142578, 3000.945312, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.624755, -1757.222778, 3004.263671, 0.000000, 0.000000, 90.005493, 300.00);
	tmpobjid = CreateObject(1649, 3193.624023, -1757.222656, 3004.263671, 0.000000, 0.000000, 269.994506, 300.00);
	tmpobjid = CreateObject(1897, 3193.644042, -1756.807617, 3002.708496, 270.000000, 180.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1897, 3193.642089, -1754.586547, 3002.520507, 90.000000, 179.994506, 0.000000, 300.00);
	tmpobjid = CreateObject(19609, 3196.533447, -1761.020385, 3000.085937, 0.000000, 0.000000, 272.000000, 300.00);
	tmpobjid = CreateObject(19614, 3194.369628, -1761.955444, 3000.085937, 0.000000, 0.000000, 302.000000, 300.00);
	tmpobjid = CreateObject(1716, 3197.848388, -1760.472045, 3000.085937, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(19317, 3194.289794, -1762.276245, 3000.850830, 0.000000, 359.000000, 333.750000, 300.00);
	tmpobjid = CreateObject(19319, 3198.072265, -1762.105468, 3001.717041, 0.000000, 0.000000, 269.494628, 300.00);
	tmpobjid = CreateObject(19318, 3194.473144, -1763.050903, 3000.791503, 0.000000, 0.000000, 235.500000, 300.00);
	tmpobjid = CreateObject(19614, 3194.545654, -1763.382324, 3000.085937, 0.000000, 0.000000, 239.997680, 300.00);
	tmpobjid = CreateObject(1516, 3197.365234, -1763.781616, 3000.085937, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1516, 3196.170654, -1763.792724, 3000.085937, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3195.877441, -1763.614257, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3196.289550, -1763.637207, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3197.117675, -1763.635253, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3197.646240, -1763.642578, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2231, 3195.882568, -1764.391601, 3000.600585, 0.000000, 0.000000, 180.000000, 300.00);
	tmpobjid = CreateObject(2231, 3197.136718, -1764.397094, 3000.600585, 0.000000, 0.000000, 179.994506, 300.00);
	tmpobjid = CreateObject(19157, 3195.871337, -1763.260009, 3000.996582, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.678955, -1761.772338, 3004.263671, 0.000000, 0.000000, 90.005493, 300.00);
	tmpobjid = CreateObject(1649, 3193.687011, -1763.310302, 3001.838867, 0.000000, 0.000000, 90.005493, 300.00);
	tmpobjid = CreateObject(1649, 3193.678710, -1761.771484, 3004.263671, 0.000000, 0.000000, 269.994506, 300.00);
	tmpobjid = CreateObject(1649, 3193.647460, -1763.280273, 3001.838867, 0.000000, 0.000000, 269.989013, 300.00);
	tmpobjid = CreateObject(1897, 3193.720214, -1762.142089, 3002.520507, 90.000000, 180.005493, 359.983520, 300.00);
	tmpobjid = CreateObject(1897, 3193.694091, -1764.371704, 3002.520507, 90.000000, 179.994506, 179.994506, 300.00);
	tmpobjid = CreateObject(1897, 3193.695556, -1764.063476, 3003.701660, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1897, 3193.729980, -1760.612060, 3002.520507, 90.000000, 180.005493, 359.994506, 300.00);
	tmpobjid = CreateObject(1897, 3193.698730, -1760.613769, 3003.455566, 90.000000, 180.000000, 359.989074, 300.00);
	tmpobjid = CreateObject(1886, 3197.980468, -1755.113037, 3002.781738, 0.000000, 0.500000, 329.499969, 300.00);
	tmpobjid = CreateObject(1886, 3196.011718, -1755.139892, 3002.781738, 0.000000, 0.499877, 352.746459, 300.00);
	tmpobjid = CreateObject(1886, 3193.741455, -1755.072753, 3002.781738, 0.000000, 0.499877, 30.243530, 300.00);
	tmpobjid = CreateObject(2647, 3196.937011, -1758.007202, 3001.056640, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2647, 3195.711669, -1758.042968, 3001.056640, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.608886, -1763.918334, 3000.683837, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.608398, -1763.917968, 3001.839843, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.608398, -1763.917968, 3002.936767, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1763.287475, 3000.683837, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.609619, -1763.285156, 3001.839843, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.605224, -1763.285522, 3002.936767, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1759.453125, 3000.683837, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1760.118896, 3000.688964, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1760.118164, 3001.868896, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1759.461547, 3001.868896, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1759.460937, 3002.990234, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1760.115722, 3002.990234, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(19319, 3188.675292, -1761.668212, 3001.717041, 0.000000, 0.000000, 90.505371, 300.00);
	tmpobjid = CreateObject(2233, 3196.808105, -1755.137817, 3000.254394, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2233, 3195.841064, -1755.139160, 3000.254394, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1828, 3195.964111, -1757.071044, 3000.095947, 0.000000, 0.000000, 274.000000, 300.00);
	//news interior - close
	//police cameras - open (radar)
	tmpobjid = CreateDynamicObject(18880, -198.926849, 947.135559, 14.810990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, -187.646759, 947.135559, 14.810990, 0.000000, 0.000000, -179.499938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, 94.517295, 1203.664306, 17.699777, 0.000000, 0.000000, -97.199981, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, 93.232658, 1193.495361, 17.699777, 0.000000, 0.000000, 92.200035, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, -123.134742, 1238.189086, 17.115497, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, -111.634719, 1238.189086, 17.115497, 0.000000, 0.000000, -176.199966, -1, -1, -1, 300.00, 300.00);
	CreateDynamicObject(18880, 1841.67566, -1332.81030, 12.42326, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18880, 1476.90369, -1586.84070, 11.96082, 0.00000, 0.00000, -84.00000);
	CreateDynamicObject(18880, 1145.76001, -1566.81946, 12.20486, 0.00000, 0.00000, -87.00000);
	CreateDynamicObject(18880, 1066.31921, -1135.38037, 22.30401, 0.00000, 0.00000, -84.00000);
	CreateDynamicObject(18880, 1622.61157, -1166.33142, 23.06120, 0.00000, 0.00000, 92.00000);
	CreateDynamicObject(18880, 1709.48230, -1408.97510, 12.52891, 0.00000, 0.00000, 0.00000);
	//police cameras - close (radar)

	//atms - open
	CreateDynamicObject(19324, 1458.71545, -1749.91138, 13.09340, 0.00000, 0.00000, 179.00000);
	CreateDynamicObject(19324, 1657.65051, -1722.25598, 13.15729, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19324, 1810.79114, -1875.65393, 13.11213, 0.00000, 0.00000, 88.00000);
	CreateDynamicObject(19324, 1928.57300, -1782.82910, 13.06317, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19324, 2233.23438, -1162.01892, 25.44419, 0.00000, 0.00000, 271.00000);
	CreateDynamicObject(19324, 2479.99731, -1758.04346, 13.06336, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19324, 1944.45129, -2062.05420, 13.13845, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19324, 1746.62891, -1460.95679, 13.09532, 0.00000, 0.00000, 179.00000);
	CreateDynamicObject(19324, 1742.49707, -1272.31335, 13.09977, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19324, 1014.66711, -928.68799, 41.91920, 0.00000, 0.00000, 8.00000);
	CreateDynamicObject(19324, 787.69751, -1105.32739, 23.48933, 0.00000, 0.00000, 94.00000);
	//atms - close
}



stock ToggleEngine(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
}

stock ToggleAlarm(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, toggle, doors, bonnet, boot, objective);
}

stock ToggleBonnet(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, toggle, boot, objective);
}

stock ToggleLights(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, toggle, alarm, doors, bonnet, boot, objective);
}

stock ToggleBoot(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, toggle, objective);
}

EditScreenTexts()
{
	//new string115[115];
}

EditPlayerScreenTexts(playerid)
{
	new string256[256];
	new hours;
	new minutes;
	new seconds;
	gettime(hours, minutes, seconds);
	new year, mounth, day;
	getdate(year, mounth, day);
	new string115[115];
	format(string115, sizeof string115, "%s%d:%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds, day, ((mounth < 10) ? ("0") : ("")), mounth, (year < 10) ? ("0") : (""), year);
	TextDrawSetString(Clock[playerid], string115);
	format(string115, sizeof string115, "%d.%s%d.%s%d", day, ((mounth<10) ? ("0") : ("")), mounth, (year<10) ? ("0") : (""), year);
	TextDrawSetString(Date[playerid], string115);
}

public CorVehDetector(Float: radi, playerid, targetid)
{
	new Float: posx, Float: posy, Float: posz;
	new Float: oldposx, Float: oldposy, Float: oldposz;
	new Float: tempposx, Float: tempposy, Float: tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	//radi = 2.0;	//Trigger Radius
	GetVehiclePos(targetid, posx, posy, posz);
	tempposx = (oldposx - posx);
	tempposy = (oldposy - posy);
	tempposz = (oldposz - posz);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}

	return 0;
}

public CorDetector(Float: radi, playerid, targetid)
{
	if (IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new Float: posx, Float: posy, Float: posz;
		new Float: oldposx, Float: oldposy, Float: oldposz;
		new Float: tempposx, Float: tempposy, Float: tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0;	//Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx - posx);
		tempposy = (oldposy - posy);
		tempposz = (oldposz - posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}

	return 0;
}

public GeneralTimer2ms()
{
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);
	
	//Lottery Notification
	
	if (minutes == 5 && seconds == 0 && !lottoTellTimer)
	{
		SendClientMessageToAll(COLOR_LOTTO, "San Andreas Lottery: Лотарията ще се състои след 4 минути! Побързайте да си купите билетче!");
		lottoTellTimer = true;
	}
	
	if(minutes == 5 && seconds == 1 && lottoTellTimer)
	{
		lottoTellTimer = false;
	}
	
	//Start Lottery

	if (minutes == 9 && seconds == 0 && !lottoTimer)
	{
		LotteryEveryHour();
		lottoTimer = true;
	}
	
	if(minutes == 9 && seconds == 1 && lottoTimer)
	{
		lottoTimer = false;
	}

	//Payday

	if (minutes == 0 && seconds == 0 && !paydayTimer)
	{
		new string256[256];
		format(string256, 256, "SERVER:{FFFFFF} Часът вече е %d:00.", hours);
		SendClientMessageToAll(COLOR_LIGHTYELLOW, string256);
		ChangeHours();
		PayDay();
		paydayTimer = true;
	}
	
	if (minutes == 0 && seconds == 1 && paydayTimer)
	{
		paydayTimer = false;
	}
}

public GeneralTimerms()
{
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (turfAttacker[i] == true)
		{
			new faction = PlayerInfo[i][pFaction];
			new turfAttacked = AttackTurfInfo[faction][attackedTurfID];
			if (!IsPlayerInTurf(i, TurfInfo[turfAttacked][zMinX], TurfInfo[turfAttacked][zMinY], TurfInfo[turfAttacked][zMaxX], TurfInfo[turfAttacked][zMaxY]))
			{
				new string256[256];
				new Faction = PlayerInfo[i][pFaction];
				format(string256, 256, "[FACTION CHAT] %s излезе от територията и отпадна от атаката!", GetPlayerNickname(i));
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(i);
			}
		}
	}

	for (new i; i < MAX_PLAYERS; i++)
	{
		CheckForSpeed(i, 120, 1841.67566, -1332.81030, 12.42326);
		CheckForSpeed(i, 120, 1476.90369, -1586.84070, 11.96082);
		CheckForSpeed(i, 120, 1145.76001, -1566.81946, 12.20486);
		CheckForSpeed(i, 110, 1066.31921, -1135.38037, 22.30401);
		CheckForSpeed(i, 110, 1622.61157, -1166.33142, 23.06120);
		CheckForSpeed(i, 110, 1709.48230, -1408.97510, 12.52891);

		CheckForSpeed(i, 120, -193.1795, 948.1841, 16.0578);
		CheckForSpeed(i, 120, -117.2377, 1237.5996, 17.8028);
		CheckForSpeed(i, 120, 91.3815, 1198.7338, 18.5156);

		if (PlayerTimerInfo[i][ptTurnEngine] > 0)
		{
			PlayerTimerInfo[i][ptTurnEngine]--;
		}

		if (playerAfkMinutes[i] >= 1)	// if(playerAfkMinutes[i] >= 1) NetStats_MessagesRecvPerSecond
		{
			if (AFKDetect[i] == gettime() && isLogged[i] == true)
			{
				new string256[256];
				if (!PlayerInfo[i][pAFK])
				{
					new formattedAFKSeconds[20];
					format(formattedAFKSeconds, 20, "%s%d", (playerAfkSeconds[i] < 10) ? ("0") : (""), playerAfkSeconds[i]);
					format(string256, 256, "Вие бяхте извън играта за {FFFFFF}%d мин. и %d сек.", playerAfkMinutes[i], formattedAFKSeconds);
					SendClientMessage(i, COLOR_YELLOW, string256);
				}

				playerAfkSeconds[i] = 0;
				playerAfkMinutes[i] = 0;
			}
		}

		if (playerAfkMinutes[i] >= 35 && !PlayerInfo[i][pAFK] && isLogged[i] == true)
		{
			if (!PlayerInfo[i][pAdminDuty] && PlayerInfo[i][pJailed] == 0 && PlayerInfo[i][pPoliceJail] == 0 && PlayerInfo[i][pSelectedGender] == 1)
			{
				new string256[256];
				new accountNickname[MAX_PLAYER_NAME];
				GetPlayerName(i, accountNickname, 25);
				format(string256, 256, "SERVER: %s беше сложен в AFK залата[Reason: Твърде дълго време извън играта]", accountNickname);
				SendClientMessageToAll(COLOR_AFK, string256);
				SendClientMessage(i, COLOR_AFK, "AFK: Използвай /back за да се върнеш в играта!");
				SetPlayerInterior(i, 15);
				SetPlayerVirtualWorld(i, i + 1);
				SetPlayerPos(i, 2215.454833, -1147.475585, 1025.796875);
				PlayerInfo[i][pAFK] = true;
			}
		}

		if(PlayerTimerInfo[i][ptSnowTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptSnowTimer] > 0)
			{
				PlayerTimerInfo[i][ptSnowTimer]--;
			}

			if (PlayerTimerInfo[i][ptSnowTimer] <= 0)
			{
				if(startedSnow[i])
				{
					ResetPlayerSnow(i);
					PlayerTimerInfo[i][ptSnowTimer] = 1;
				}
			}
		}

		if (PlayerTimerInfo[i][ptWorkingVeh] > 0)
		{
			if (PlayerTimerInfo[i][ptWorkingVeh] > 0)
			{
				PlayerTimerInfo[i][ptWorkingVeh]--;
			}

			if (PlayerTimerInfo[i][ptWorkingVeh] <= 0)
			{
				RepairVehicle(workingOnVeh[i]);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
			}
		}

		if (PlayerTimerInfo[i][ptHideGiveCash] > 0)
		{
			if (PlayerTimerInfo[i][ptHideGiveCash] > 0)
			{
				PlayerTimerInfo[i][ptHideGiveCash]--;
			}

			if (PlayerTimerInfo[i][ptHideGiveCash] <= 0)
			{
				TextDrawHideForPlayer(i, GiveCashText[i]);
			}
		}

		if (PlayerTimerInfo[i][ptPark] > 0)
		{
			if (PlayerTimerInfo[i][ptPark] > 0)
			{
				PlayerTimerInfo[i][ptPark]--;
			}

			if (PlayerTimerInfo[i][ptPark] <= 0)
			{
				new hisVehID = PlayerInfo[i][pPrivateVeh][GetPlayerPrivateVehID(i)];
				new vehicleid = PrivateVehInfo[hisVehID][vVeh];
				new Float: vehHealth;
				GetVehicleHealth(vehicleid, vehHealth);
				DestroyVehicle(vehicleid);
				PrivateVehInfo[hisVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[hisVehID][vVehID], PrivateVehInfo[hisVehID][vVehX], PrivateVehInfo[hisVehID][vVehY], PrivateVehInfo[hisVehID][vVehZ], PrivateVehInfo[hisVehID][vVehA], PrivateVehInfo[hisVehID][vVehC1], PrivateVehInfo[hisVehID][vVehC2], RESPAWN_VEHS_SECONDS);
				new newVeh = PrivateVehInfo[hisVehID][vVeh];
				PutPlayerInVehicle(i, newVeh, 0);
				VehicleInfo[newVeh][vIsPrivate] = 1;
				SetPrivateVehicleTune(newVeh);
				SetVehicleHealth(newVeh, vehHealth);
			}
		}

		if (PlayerTimerInfo[i][ptSpawn] > 0)
		{
			if (PlayerTimerInfo[i][ptSpawn] > 0)
			{
				PlayerTimerInfo[i][ptSpawn]--;
			}

			if (PlayerTimerInfo[i][ptSpawn] <= 0)
			{
				SpawnPlayer(i);
			}
		}
	}
}

stock LevelUpLoop(playerid)
{
	if (PlayerInfo[playerid][pExp] > 0)
	{
		new expToLevelUp = PlayerInfo[playerid][pLevel] + EXP_PLUS;
		while (PlayerInfo[playerid][pExp] >= expToLevelUp)
		{
			PlayerInfo[playerid][pLevel] += 1;
			PlayerInfo[playerid][pExp] -= expToLevelUp;
			expToLevelUp = PlayerInfo[playerid][pLevel] + EXP_PLUS;
		}

		new string256[256];
		format(string256, 256, "* Твоето ниво се вдигна, поздравления! Новото ти ниво е %d *", PlayerInfo[playerid][pLevel]);
		SendClientMessage(playerid, COLOR_ORANGE, string256);
	}
}

stock GivePlayerExp(playerid, exp)
{
	new expToLevelUp = PlayerInfo[playerid][pLevel] + EXP_PLUS;
	PlayerInfo[playerid][pExp] += exp;
	if (PlayerInfo[playerid][pExp] >= expToLevelUp)
	{
		LevelUpLoop(playerid);
	}

	if (PlayerInfo[playerid][pExp] >= 0)
	{
		ShowLevelStatsOnScreen(playerid);
	}

	UpdatePlayerLevelExp(playerid);
}

stock GivePlayerLevel(playerid, level)
{
	PlayerInfo[playerid][pLevel] += level;
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	new string256[256];
	format(string256, 256, "* Твоето ниво се вдигна, поздравления! Новото ти ниво е %d *", PlayerInfo[playerid][pLevel]);
	SendClientMessage(playerid, COLOR_ORANGE, string256);
	UpdatePlayerLevelExp(playerid);
}

stock GetFactionOnlinePlayers(factionID)
{
	new count = 0;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAFK] == false)
		{
			if (PlayerInfo[i][pFaction] == factionID) count++;
		}
	}

	return count;
}

stock FactionPayday()
{
	new string256[256];
	for (new f = 0; f < MAX_FACTIONS; f++)
	{
		if (IsGangFaction(f))
		{
			if (GetFactionOnlinePlayers(f) >= 1)
			{
				new turfsCount = FactionInfo[f][fTurfs];
				if (turfsCount > 1)
				{
					new moneyEarned = 0;
					if (turfsCount >= 1 && turfsCount <= 4)
					{
						moneyEarned = 500;
					}
					else if (turfsCount >= 5 && turfsCount <= 9)
					{
						moneyEarned = 900;
					}
					else if (turfsCount >= 10 && turfsCount <= 15)
					{
						moneyEarned = 1300;
					}
					else if (turfsCount >= 16)
					{
						moneyEarned = 1800;
					}

					FactionInfo[f][fBankAccount] += moneyEarned;
					format(string256, 256, "Faction Payday: Вашата организация получи $%d от териториите, които притежава!", moneyEarned);
					SendFactionMessage(f, COLOR_FACTION, string256);
				}
			}
		}
	}
}

stock PayDay()
{
	new string256[256];
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (isLogged[i])
		{
			new playedMinutes = PlayerInfo[i][pPlayedSeconds] / 60;
			new addMoney;
			if (playedMinutes >= 20)
			{
				SendClientMessage(i, COLOR_LIGHTPURPLE, "|___ BANK STATMENT ___|");
				format(string256, 256, "  Баланс: $%d", PlayerInfo[i][pBank]);
				SendClientMessage(i, COLOR_LIGHTBLUE, string256);
				format(string256, 256, "  Онлайн бонус: $%d", playedMinutes);
				SendClientMessage(i, COLOR_LIGHTBLUE, string256);
				format(string256, 256, "  Бонус Exp: 3");
				SendClientMessage(i, COLOR_LIGHTGREEN, string256);
				if (PlayerInfo[i][pBizOwnedID] >= 0)
				{
					new hisBiz = PlayerInfo[i][pBizOwnedID];
					GivePlayerCash(i, BizInfo[hisBiz][bPayOut]);
					format(string256, 256, "  PayOut от вашия бизнес: $%d", BizInfo[hisBiz][bPayOut]);
					SendClientMessage(i, COLOR_LIGHTORANGE, string256);
				}

				if (PlayerInfo[i][pFaction] == FACTION_ARMY)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2600;
								format(string256, 256, "  Заплата от San Andreas Army: $2600");
								SendClientMessage(i, COLOR_ARMY, string256);
								format(string256, 256, "  Бонус от San Andreas Army: 3 Exp");
								SendClientMessage(i, COLOR_ARMY, string256);
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
								format(string256, 256, "  Заплата от San Andreas Army: $2800");
								SendClientMessage(i, COLOR_ARMY, string256);
								format(string256, 256, "  Бонус от San Andreas Army: 4 Exp");
								SendClientMessage(i, COLOR_ARMY, string256);
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3500;
								format(string256, 256, "  Заплата от San Andreas Army: $3500");
								SendClientMessage(i, COLOR_ARMY, string256);
								format(string256, 256, "  Бонус от San Andreas Army: 5 Exp");
								SendClientMessage(i, COLOR_ARMY, string256);
							}

						case 4:
							{
								GivePlayerExp(i, 10);
								addMoney += 4700;
								format(string256, 256, "  Заплата от San Andreas Army: $4700");
								SendClientMessage(i, COLOR_ARMY, string256);
								format(string256, 256, "  Бонус от San Andreas Army: 10 Exp");
								SendClientMessage(i, COLOR_ARMY, string256);
							}

						case 5:
							{
								GivePlayerExp(i, 11);
								addMoney += 5800;
								format(string256, 256, "  Заплата от San Andreas Army: $5800");
								SendClientMessage(i, COLOR_ARMY, string256);
								format(string256, 256, "  Бонус от San Andreas Army: 11 Exp");
								SendClientMessage(i, COLOR_ARMY, string256);
							}

						case 6:
							{
								GivePlayerExp(i, 12);
								addMoney += 6800;
								format(string256, 256, "  Заплата от San Andreas Army: $6800");
								SendClientMessage(i, COLOR_ARMY, string256);
								format(string256, 256, "  Бонус от San Andreas Army: 12 Exp");
								SendClientMessage(i, COLOR_ARMY, string256);
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_KACC)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2600;
								format(string256, 256, "  Заплата от Military Aviation: $2600");
								SendClientMessage(i, COLOR_KACC, string256);
								format(string256, 256, "  Бонус от Military Aviation: 3 Exp");
								SendClientMessage(i, COLOR_KACC, string256);
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
								format(string256, 256, "  Заплата от Military Aviation: $2800");
								SendClientMessage(i, COLOR_KACC, string256);
								format(string256, 256, "  Бонус от Military Aviation: 4 Exp");
								SendClientMessage(i, COLOR_KACC, string256);
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3500;
								format(string256, 256, "  Заплата от Military Aviation: $3500");
								SendClientMessage(i, COLOR_KACC, string256);
								format(string256, 256, "  Бонус от Military Aviation: 5 Exp");
								SendClientMessage(i, COLOR_KACC, string256);
							}

						case 4:
							{
								GivePlayerExp(i, 10);
								addMoney += 4700;
								format(string256, 256, "  Заплата от Military Aviation: $4700");
								SendClientMessage(i, COLOR_KACC, string256);
								format(string256, 256, "  Бонус от Military Aviation: 10 Exp");
								SendClientMessage(i, COLOR_KACC, string256);
							}

						case 5:
							{
								GivePlayerExp(i, 11);
								addMoney += 5800;
								format(string256, 256, "  Заплата от Military Aviation: $5800");
								SendClientMessage(i, COLOR_KACC, string256);
								format(string256, 256, "  Бонус от Military Aviation: 11 Exp");
								SendClientMessage(i, COLOR_KACC, string256);
							}

						case 6:
							{
								GivePlayerExp(i, 12);
								addMoney += 6800;
								format(string256, 256, "  Заплата от Military Aviation: $6800");
								SendClientMessage(i, COLOR_KACC, string256);
								format(string256, 256, "  Бонус от Military Aviation: 12 Exp");
								SendClientMessage(i, COLOR_KACC, string256);
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_FBI)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
								format(string256, 256, "  Заплата от FBI: $2400");
								SendClientMessage(i, COLOR_FBI, string256);
								format(string256, 256, "  Бонус от FBI: 3 Exp");
								SendClientMessage(i, COLOR_FBI, string256);
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
								format(string256, 256, "  Заплата от FBI: $2800");
								SendClientMessage(i, COLOR_FBI, string256);
								format(string256, 256, "  Бонус от FBI: 4 Exp");
								SendClientMessage(i, COLOR_FBI, string256);
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
								format(string256, 256, "  Заплата от FBI: $3100");
								SendClientMessage(i, COLOR_FBI, string256);
								format(string256, 256, "  Бонус от FBI: 5 Exp");
								SendClientMessage(i, COLOR_FBI, string256);
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
								format(string256, 256, "  Заплата от FBI: $4100");
								SendClientMessage(i, COLOR_FBI, string256);
								format(string256, 256, "  Бонус от FBI: 6 Exp");
								SendClientMessage(i, COLOR_FBI, string256);
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
								format(string256, 256, "  Заплата от FBI: $5100");
								SendClientMessage(i, COLOR_FBI, string256);
								format(string256, 256, "  Бонус от FBI: 7 Exp");
								SendClientMessage(i, COLOR_FBI, string256);
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
								format(string256, 256, "  Заплата от FBI: $6100");
								SendClientMessage(i, COLOR_FBI, string256);
								format(string256, 256, "  Бонус от FBI: 8 Exp");
								SendClientMessage(i, COLOR_FBI, string256);
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_LVPD)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
								format(string256, 256, "  Заплата от LVPD: $2400");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LVPD: 3 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
								format(string256, 256, "  Заплата от LVPD: $2800");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LVPD: 4 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
								format(string256, 256, "  Заплата от LVPD: $3100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LVPD: 5 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
								format(string256, 256, "  Заплата от LVPD: $4100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LVPD: 6 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
								format(string256, 256, "  Заплата от LVPD: $5100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LVPD: 7 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
								format(string256, 256, "  Заплата от LVPD: $6100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LVPD: 8 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_LSPD)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
								format(string256, 256, "  Заплата от LSPD: $2400");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LSPD: 3 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
								format(string256, 256, "  Заплата от LSPD: $2800");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LSPD: 4 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
								format(string256, 256, "  Заплата от LSPD: $3100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LSPD: 5 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
								format(string256, 256, "  Заплата от LSPD: $4100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LSPD: 6 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
								format(string256, 256, "  Заплата от LSPD: $5100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LSPD: 7 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
								format(string256, 256, "  Заплата от LSPD: $6100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от LSPD: 8 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}
					}
				}
				
				if (PlayerInfo[i][pFaction] == FACTION_RCPD)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
								format(string256, 256, "  Заплата от RCPD: $2400");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от RCPD: 3 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
								format(string256, 256, "  Заплата от RCPD: $2800");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от RCPD: 4 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
								format(string256, 256, "  Заплата от RCPD: $3100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от RCPD: 5 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
								format(string256, 256, "  Заплата от RCPD: $4100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от RCPD: 6 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
								format(string256, 256, "  Заплата от RCPD: $5100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от RCPD: 7 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
								format(string256, 256, "  Заплата от RCPD: $6100");
								SendClientMessage(i, COLOR_POLICE_2, string256);
								format(string256, 256, "  Бонус от RCPD: 8 Exp");
								SendClientMessage(i, COLOR_POLICE_2, string256);
							}
					}
				}

				GivePlayerExp(i, 3);
				if (PlayerInfo[i][pJob] == JOB_NEWS)
				{
					format(string256, 256, "  Заплата от San Andreas News: $1300");
					SendClientMessage(i, COLOR_LIGHTORANGE, string256);
					format(string256, 256, "  Бонус от San Andreas News: 2 Exp");
					SendClientMessage(i, COLOR_LIGHTGREEN, string256);
					GivePlayerExp(i, 2);
					addMoney += 1300;
				}

				if (PlayerInfo[i][pJob] == JOB_TAXI)
				{
					format(string256, 256, "  Заплата от такси компанията: $1250");
					SendClientMessage(i, COLOR_LIGHTORANGE, string256);
					format(string256, 256, "  Бонус от такси компанията: 2 Exp");
					SendClientMessage(i, COLOR_LIGHTGREEN, string256);
					GivePlayerExp(i, 2);
					addMoney += 1250;
				}

				if (PlayerInfo[i][pJob] == JOB_MECHANIC)
				{
					format(string256, 256, "  Заплата от компанията за механици: $1450");
					SendClientMessage(i, COLOR_LIGHTORANGE, string256);
					format(string256, 256, "  Бонус от компанията за механици: 2 Exp");
					SendClientMessage(i, COLOR_LIGHTGREEN, string256);
					GivePlayerExp(i, 2);
					addMoney += 1450;
				}

				if (PlayerInfo[i][pVip] == 1)
				{
					format(string256, 256, "  VIP Bonus: $1350, 3 Exp");
					SendClientMessage(i, COLOR_VIP, string256);
					GivePlayerExp(i, 3);
					addMoney += 1350;
				}

				if (PlayerInfo[i][pVip] == 2)
				{
					format(string256, 256, "  VIP Bonus: $1550, 5 Exp");
					SendClientMessage(i, COLOR_VIP, string256);
					GivePlayerExp(i, 5);
					addMoney += 1550;
				}

				if (PlayerInfo[i][pVip] == 3)
				{
					format(string256, 256, "  VIP Bonus: $1750, 7 Exp");
					SendClientMessage(i, COLOR_VIP, string256);
					GivePlayerExp(i, 7);
					addMoney += 1750;
				}

				format(string256, 256, "  Такса: $5");
				SendClientMessage(i, COLOR_LIGHTBLUE, string256);
				SendClientMessage(i, COLOR_LIGHTPURPLE, "|_____________________|");
				addMoney += playedMinutes * 3;
				addMoney -= 5;
				PlayerInfo[i][pBank] += addMoney;
				format(string256, 256, "Нов Баланс: $%d", PlayerInfo[i][pBank]);
				SendClientMessage(i, COLOR_GREEN, string256);
				format(string256, 256, "~y~PayDay~n~~w~PayCheck~n~~g~$%d", addMoney);
				GameTextForPlayer(i, string256, 5000, 1);
				PlayerInfo[i][pPlayedSeconds] = 0;
				PlayerInfo[i][pGiftPaydays]++;
				if (PlayerInfo[i][pGiftPaydays] >= 2)
				{
					SendClientMessage(i, COLOR_MAXLIGHTGREEN, "");
					SendClientMessage(i, COLOR_MAXLIGHTGREEN, "[GIFT] Вие имате подаръци, които ви чакат!");
				}
			}
			else
			{
				SendClientMessage(i, COLOR_LIGHTPURPLE, "Трябва да си играл поне 20 минути, за да получиш PayDay.");
			}
		}
	}

	FactionPayday();
}

stock LotteryEveryHour()
{
	new wonNum = randomex(1, 64);
	new bool: someoneWon = false;
	new string256[256];
	format(string256, 256, "San Andreas Lottery: Време е за лотарията, печелившото число е %d", wonNum);
	SendClientMessageToAll(COLOR_LOTTO2, string256);
	for (new i; i < MAX_PLAYERS; i++)
	{
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(i, accountNickname, 25);
		if (lottoNumber[i] > 0)
		{
			if (lottoNumber[i] != wonNum)
			{
				format(string256, 256, "San Andreas Lottery: Вашето число е %d, то се оказа непечелившо.", lottoNumber[i]);
				SendClientMessage(i, COLOR_LOTTO2, string256);
			}
			else if (lottoNumber[i] == wonNum)
			{
				format(string256, 256, "* San Andreas Lottery: Поздравления, вашето число се оказа печелившо и печелите $%d в банката *", lottoNumber[i], lottoReward);
				SendClientMessage(i, COLOR_LOTTO2, string256);
				format(string256, 256, "* San Andreas Lottery: Имаме победител, %s спечели от лотарията $%d *", accountNickname, lottoReward);
				SendClientMessageToAll(COLOR_LOTTO2, string256);
				PlayerInfo[i][pBank] += lottoReward;
				someoneWon = true;
			}
		}

		lottoNumber[i] = 0;
	}

	if (someoneWon == true)
	{
		lottoReward = 1000;
		format(string256, 256, "San Andreas Lottery: Понеже имаме победител в лотарията, печалбата се рестартира и сега тя е $1000");
		SendClientMessageToAll(COLOR_LOTTO, string256);
	}
	else if (someoneWon == false)
	{
		if (lottoReward < 100000)
		{
			lottoReward += 100;
			format(string256, 256, "San Andreas Lottery: Понеже няма победител, печалбата се увеличи и сега тя е $%d", lottoReward);
			SendClientMessageToAll(COLOR_LOTTO, string256);
		}
	}
}

public GeneralTimer1s()
{
	EditScreenTexts();
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);

	for (new f = 0; f < MAX_FACTIONS; f++)
	{
		if (FactionInfo[f][fTurfTime] > 0)
		{
			if (FactionInfo[f][fTurfTime] > 0)
			{
				FactionInfo[f][fTurfTime]--;
			}

			if (FactionInfo[f][fTurfTime] == 0)
			{
				SendFactionMessage(f, COLOR_TURF, "[FACTION CHAT] Вашата банда/мафия вече може да нападне нова територия!");
			}
		}

		if (AttackTurfInfo[f][finishTimer] > 0)
		{
			AttackTurfInfo[f][finishTimer]--;
		}

		if (AttackTurfInfo[f][finishTimer] > 0)
		{
			if (AttackTurfInfo[f][finishTimer] > 0)
			{
				AttackTurfInfo[f][finishTimer]--;
			}

			if (AttackTurfInfo[f][finishTimer] == 0)
			{
				FinishTurfSuccess(f);
			}
		}
	}

    if (eventCount > 0)
    {
        if (eventCount > 0)
        {
            eventCount--;
        }

        if (eventCount == 5)
        {
            EventCount2();
        }
        else if (eventCount == 3)
        {
            EventCount1();
        }
        else if (eventCount == 0)
        {
            EventCountStart();
        }
    }

	if (respawnVehsTimer > 0)
	{
		if (respawnVehsTimer > 0)
		{
			respawnVehsTimer--;
		}

		if (respawnVehsTimer == 0)
		{
			RespawnAllVehs();
		}
	}

    if (paintBallOpenTimer > 0)
    {
        if (paintBallOpenTimer > 0)
        {
            paintBallOpenTimer--;
        }
        if (paintBallOpenTimer == 0)
        {
            paintBallOpen = true;
            SendClientMessageToAll(COLOR_PAINTBALL, "PaintBall: Изминаха 15 минути от края на последната игра и вече арената е отворена!");
        }
    }

    if (paintBallStartTimer > 0)
    {
        if (paintBallStartTimer > 0)
        {
            paintBallStartTimer--;
        }
        if (paintBallStartTimer == 0)
        {
            paintBallStarted = true;
            paintBallEndTimer = 5*60;
            for(new i=0; i<MAX_PLAYERS; i++)
            {
                if(inPaintBall[i])
                {
                    GameTextForPlayer(i, "~w~THE GAME STARTED~n~~g~GO GO GO", 1500, 3);
                    TextDrawShowForPlayer(i, PaintBallTimerText);
                }
            }
            SendClientMessageToAll(COLOR_PAINTBALL, "PaintBall: Играта започна! Късмет на всички участници");
        }
    }

	if (paintBallEndTimer > 0)
	{
		if (paintBallEndTimer > 0)
		{
			paintBallEndTimer--;
			new string115[115];
			if (paintBallEndTimer >= 60)
			{
				format(string115, sizeof string115, "~r~PaintBall: ~w~%d Min", paintBallEndTimer / 60);
				TextDrawSetString(PaintBallTimerText, string115);
			}
			else if (paintBallEndTimer < 60)
			{
				format(string115, sizeof string115, "~r~PaintBall: ~y~%d Sec", paintBallEndTimer);
				TextDrawSetString(PaintBallTimerText, string115);
			}
		}

		if (paintBallEndTimer == 0)
		{
			ClosePaintBall();
		}
	}

	if (normalVoteTimer > 0)
	{
		if (normalVoteTimer > 0)
		{
			normalVoteTimer--;
		}

		if (normalVoteTimer == 0)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				didVote[i] = false;
			}
			new string256[256];
			format(string256, 256, "VOTE: Запитването на всички играчи свърши! Въпрос: {ff0000}%s", normalVoteQuestion);
			SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
			format(string256, 256, "VOTE: Резултатите от гласуването са ДА: %d, НЕ: %d", normalVoteYES, normalVoteNO);
			SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
			if (normalVoteYES > normalVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Повечето играчи гласуваха 'ДА' на зададения въпрос!");
			}
			else if (normalVoteYES < normalVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Повечето играчи гласуваха 'НЕ' на зададения въпрос!");
			}
			else if (normalVoteYES == normalVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Запитването завърши с равни резултати!");
			}

			normalVoteYES = 0;
			normalVoteNO = 0;
		}
	}

	if (respawnVehsVoteTimer > 0)
	{
		if (respawnVehsVoteTimer > 0)
		{
			respawnVehsVoteTimer--;
		}

		if (respawnVehsVoteTimer == 0)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				didVote[i] = false;
			}
			new string256[256];
			SendClientMessageToAll(COLOR_ADMIN_RED, "Преброяването за Respawn на превозите свърши, резултатите са:");
			format(string256, 256, "ДА: %d, НЕ: %d", respawnVehsVoteYES, respawnVehsVoteNO);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			if (respawnVehsVoteYES >= respawnVehsVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Превозите ще се Respawn-нат след 10 секунди!");
				respawnVehsTimer = 10;
			}
			else
			{
				SendClientMessageToAll(COLOR_WHITE, "Превозите няма да се Respawn-нат!");
			}

			respawnVehsVoteYES = 0;
			respawnVehsVoteNO = 0;
		}
	}

	if (robberyTime > 0)
	{
		if (robberyTime > 0)
		{
			robberyTime--;
		}
	}

	if (normalRobberyWaitingTimer > 0)
	{
		normalRobberyWaitingTimer--;
	}

	if (atmRobberyWaitingTimer > 0)
	{
		atmRobberyWaitingTimer--;
	}

	//atm robberygettingmoneytimer - open
	if (atmRobberyGettingMoneyTimer > 0)
	{
		if (atmRobberyGettingMoneyTimer > 0)
		{
			atmRobberyGettingMoneyTimer--;
		}

		if (atmRobberyGettingMoneyTimer == 0)
		{
			new bool: inAtmRobPlace = false;
			if (GetPlayerNearATM(atmRobberID) == atmRobberyPlaceIndex)	// in position
			{
				CollectAtmRobberyCash();
				atmRobberyCollectTimeCheck = 0;
				inAtmRobPlace = true;
			}

			if (inAtmRobPlace == false)
			{
				if (atmRobberyCollectTimeCheck == 0)
				{
					SendClientMessage(atmRobberID, COLOR_ORANGE, "ATM Robbery: Ако не се върнеш до 3 минути на банкомата, обирът ще приключи!");
					atmRobberyCollectTimeCheck = 3 * 60;
				}
			}

			atmRobberyGettingMoneyTimer = 2;
			if (atmRobberyMoney >= 32500)
			{
			 	//goto
				new string256[256];
				format(string256, 256, "ATM Robbery: Ти получи $%d след края на обира!", atmRobberyMoney);
				SendClientMessage(atmRobberID, COLOR_ORANGE, string256);
				SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда не успяха да спрат крадеца!");
				GivePlayerCash(atmRobberID, atmRobberyMoney);
				StopAtmRobbery();
			}
		}
	}

	//other timer - open
	if (atmRobberyCollectTimeCheck > 0)
	{
		if (atmRobberyCollectTimeCheck > 0)
		{
			atmRobberyCollectTimeCheck--;
		}

		if (atmRobberyCollectTimeCheck == 0)
		{
			new string256[256];
			format(string256, 256, "ATM Robbery: Ти получи $%d след края на обира!", atmRobberyMoney);
			SendClientMessage(atmRobberID, COLOR_ORANGE, string256);
			SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда успяха да спрат крадеца!");
			GivePlayerCash(atmRobberID, atmRobberyMoney);
			StopAtmRobbery();
		}
	}

	//other timer - close

	//atm robberygettingmoneytimer - close

	if (robberyGettingMoneyTimer > 0)
	{
		if (robberyGettingMoneyTimer > 0)
		{
			robberyGettingMoneyTimer--;
		}

		if (robberyGettingMoneyTimer == 0)
		{
			//goto
			new bool: inRobPlace = false;
			for (new i; i < MAX_PLAYERS; i++)
			{
				if (isNormalRobberyLeaderPlayer[i] == true)
				{
					if (IsPlayerInRangeOfPoint(i, 17, 2144.2419, 1639.6534, 993.5761) && GetPlayerVirtualWorld(i) == normalRobberyVirtualWorld)
					{
						if (normalRobPlace == 1)
						{
							CollectRobberyCash();
							robberyCollectTimeCheck = 0;
							inRobPlace = true;
						}
					}
				}
			}

			if (inRobPlace == false)
			{
				if (robberyCollectTimeCheck == 0)
				{
					SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: Лидерът на обира трябва да се върне, иначе до 3 минути обирът се спира.");
					robberyCollectTimeCheck = 3 * 60;
				}
			}

			robberyGettingMoneyTimer = 2;
			if (normalRobberyMoney >= 32500)
			{
			 	//goto
				SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: *Обирът е напълно успешен. Поздравления *");
				new dividedMoney = normalRobberyMoney / normalRobberyMembers;
				new string256[256];
				format(string256, 256, "Robbery: Всеки получава по $%d, след раздялата на печалбата.", dividedMoney);
				SendNormalRobberyMessage(COLOR_ORANGE, string256);
				SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда не успяха да спрат крадците.");
				GiveAllRobbersMoney();
				StopRobbery();
			}
		}
	}

	if (robberyCollectTimeCheck > 0)
	{
		if (robberyCollectTimeCheck > 0)
		{
			robberyCollectTimeCheck--;
		}

		if (robberyCollectTimeCheck == 0)
		{
			SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: *Обирът приключи, защото лидерът напусна обира *");
			new dividedMoney = normalRobberyMoney / normalRobberyMembers;
			new string256[256];
			format(string256, 256, "Robbery: Всеки получава по $%d, след раздялата на печалбата.", dividedMoney);
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
			SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда не успяха да спрат крадците.");
			GiveAllRobbersMoney();
			StopRobbery();
		}
	}

	if (robberyTimerToStart > 0)
	{
		if (robberyTimerToStart > 0)
		{
			robberyTimerToStart--;
		}

		if (robberyTimerToStart == 0)
		{
			if (startedNormalRobGettingMoney == false)
			{
				isNormalRobberyLeaderPlayer[normalRobberyLeaderID] = false;
				normalRobberyLeaderID = -1;
				startedNormalRobbery = false;
				StopRobbery();
				SendClientMessageToAll(COLOR_ORANGE, "Robbery: Обирът се провали, защото лидерът не започна да краде навреме.");
			}
		}
	}

	if (groveGateTimer > 0)
	{
		if (groveGateTimer > 0)
		{
			groveGateTimer -= 1;
		}

		if (groveGateTimer == 0)
		{
			MoveDynamicObject(groveGate, 2451.77979, -1648.77783, 13.54980, 2, 0.00000, -92.00000, 0.00000);
		}
	}

	if (unseenCriminalsGate1Timer > 0)
	{
		if (unseenCriminalsGate1Timer > 0)
		{
			unseenCriminalsGate1Timer -= 1;
		}

		if (unseenCriminalsGate1Timer == 0)
		{
			MoveDynamicObject(unseenCriminalsGate1, 1350.60486, -2048.07642, 59.41744, 16, 0.00000, 0.00000, 4.00000);
		}
	}

	if (unseenCriminalsGate2Timer > 0)
	{
		if (unseenCriminalsGate2Timer > 0)
		{
			unseenCriminalsGate2Timer -= 1;
		}

		if (unseenCriminalsGate2Timer == 0)
		{
			MoveDynamicObject(unseenCriminalsGate2, 1360.36194, -2046.93872, 59.11782, 16, 0.00000, 0.00000, 9.00000);
		}
	}

	if (lspdGateDoorTimer > 0)
	{
		if (lspdGateDoorTimer > 0)
		{
			lspdGateDoorTimer--;
		}

		if (lspdGateDoorTimer == 0)
		{
			MoveDynamicObject(lspdGateDoor, 1581.93713, -1637.98376, 13.92183, 2, 0.00000, 0.00000, -87.09998);
		}
	}

	if (armyPort1Timer > 0)
	{
		if (armyPort1Timer > 0)
		{
			armyPort1Timer--;
		}

		if (armyPort1Timer == 0)
		{
			MoveDynamicObject(armyPort1, 135.142593, 1941.479492, 21.597537, 5.00, 0, 0, 0);
		}
	}

	if (armyPort2Timer > 0)
	{
		if (armyPort2Timer > 0)
		{
			armyPort2Timer--;
		}

		if (armyPort2Timer == 0)
		{
			MoveDynamicObject(armyPort2, 285.723236, 1820.534057, 19.915033, 5.00, 0, 0, 89.800071);
		}
	}

	if (kaccPortTimer > 0)
	{
		if (kaccPortTimer > 0)
		{
			kaccPortTimer--;
		}

		if (kaccPortTimer == 0)
		{
			MoveDynamicObject(kaccPort, 2497.108642, 2777.073730, 11.421746, 5.00, 0, 0, 90.000007);
			MoveDynamicObject(kaccPort2, 2496.962646, 2769.198974, 11.428610, 5.00, 0, 0, 90.000007);
		}
	}

	if (lvpdPort1Timer > 0)
	{
		if (lvpdPort1Timer > 0)
		{
			lvpdPort1Timer--;
		}

		if (lvpdPort1Timer == 0)
		{
			MoveDynamicObject(lvpdPort1, 2238.143798, 2450.422607, 10.642805, 5.0, 0.000000, -90.699943, -90.500106);
		}
	}
	
	if (lvpdPort2Timer > 0)
	{
		if (lvpdPort2Timer > 0)
		{
			lvpdPort2Timer--;
		}

		if (lvpdPort2Timer == 0)
		{
			MoveDynamicObject(lvpdPort2, 2335.135498, 2443.826660, 9.541273, 5.0, 0.000000, 0.000000, 63.700000);
		}
	}


	if (lspdPortTimer > 0)
	{
		if (lspdPortTimer > 0)
		{
			lspdPortTimer--;
		}

		if (lspdPortTimer == 0)
		{
			MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 6, 1.00000, -89.50008, -89.20010);
		}
	}

	if (unseenCriminalsGateTimer_LV > 0)
	{
		if (unseenCriminalsGateTimer_LV > 0)
		{
			unseenCriminalsGateTimer_LV--;
		}

		if (unseenCriminalsGateTimer_LV == 0)
		{
			MoveDynamicObject(unseenCriminalsGate1_LV, 1033.731079, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
			MoveDynamicObject(unseenCriminalsGate2_LV, 1023.610839, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
			
		}
	}

	if (lspdGateTimer > 0)
	{
		if (lspdGateTimer > 0)
		{
			lspdGateTimer--;
		}

		if (lspdGateTimer == 0)
		{
			MoveDynamicObject(lspdGate, 1588.66833, -1638.39941, 14.45710, 2, 0.00000, 0.00000, -90.60007);
		}
	}

	if (serverGmxTimer > 0)
	{
		if (serverGmxTimer > 0)
		{
			serverGmxTimer--;
		}

		if (serverGmxTimer == 0)
		{
			GMXStart2();
		}
	}

	if (serverrestarttimer > 0)
	{
		if (serverrestarttimer > 0)
		{
			serverrestarttimer--;
		}

		if (serverrestarttimer >= 2)
		{
			new string256[256];
			format(string256, 256, "~r~~h~Restart after %d seconds", serverrestarttimer);
			TextDrawSetString(RESTARTText, string256);
		}
		else if (serverrestarttimer == 1)
		{
			GMXStart1();
		}
	}

	if (minutes == 7 && seconds == 0 ||
		minutes == 15 && seconds == 0 ||
		minutes == 25 && seconds == 0)
	{
		AutoMessage();
	}

	for (new i; i < MAX_VEHICLES; i++)
	{
		if (VehicleTimerInfo[i][vtLastAlarmON] > 0)
		{
			VehicleTimerInfo[i][vtLastAlarmON]--;
		}
	
		if (VehicleTimerInfo[i][vtTurnAlarmOFF] > 0)
		{
			if (VehicleTimerInfo[i][vtTurnAlarmOFF] > 0)
			{
				VehicleTimerInfo[i][vtTurnAlarmOFF]--;
			}

			if (VehicleTimerInfo[i][vtTurnAlarmOFF] == 0)
			{
				ToggleAlarm(i, VEHICLE_PARAMS_OFF);
			}
		}
		if (VehicleTimerInfo[i][vtTaxiFareTimer] > 0)
		{
			if (VehicleTimerInfo[i][vtTaxiFareTimer] > 0)
			{
				VehicleTimerInfo[i][vtTaxiFareTimer]--;
			}

			if (VehicleTimerInfo[i][vtTaxiFareTimer] == 0)
			{
				VehicleTimerInfo[i][vtTaxiFareTimer] = 6;
				VehicleInfo[i][vTaxiFare] += 1;
				for (new allPlayers; allPlayers < MAX_PLAYERS; allPlayers++)
				{
					if (GetPlayerVehicleID(allPlayers) == i)
					{
						UpdateFareText(allPlayers);
					}
				}
			}
		}

		if (VehicleTimerInfo[i][vtRadioChange] > 0)
		{
			if (VehicleTimerInfo[i][vtRadioChange] > 0)
			{
				VehicleTimerInfo[i][vtRadioChange]--;
			}

			if (VehicleTimerInfo[i][vtRadioChange] == 0)
			{
				new stringRadio[50];
				format(stringRadio, 50, "~b~~h~RADIO %s", radioAudioStreamNames[radioveh[i]]);
				for (new allPlayersInVeh = 0; allPlayersInVeh < MAX_PLAYERS; allPlayersInVeh++)
				{
					if (IsPlayerInVehicle(allPlayersInVeh, i))
					{
						GameTextForPlayer(allPlayersInVeh, stringRadio, 650, 1);
						if (radioveh[i] > 0)
						{
							if (!PlayerInfo[allPlayersInVeh][pDisableCarRadio])
							{
								PlayAudioStreamForPlayer(allPlayersInVeh, radioAudioStream[radioveh[i]]);
							}
						}
						else if (radioveh[i] == 0)
						{
							if (!PlayerInfo[allPlayersInVeh][pDisableCarRadio])
							{
								StopAudioStreamForPlayer(allPlayersInVeh);
							}
						}
					}
				}
			}
		}

		if (VehicleTimerInfo[i][vtRespawn] > 0)
		{
			if (VehicleTimerInfo[i][vtRespawn] > 0)
			{
				VehicleTimerInfo[i][vtRespawn]--;
			}

			if (VehicleTimerInfo[i][vtRespawn] <= 0)
			{
				SetVehicleToRespawn(i);
			}
		}

		if (VehicleTimerInfo[i][vtRentTime] > 0)
		{
			if (VehicleTimerInfo[i][vtRentTime] > 0)
			{
				VehicleTimerInfo[i][vtRentTime]--;
			}

			if (VehicleTimerInfo[i][vtRentTime] <= 0)
			{
				new rentor = VehicleInfo[i][vRentedBy];
				VehicleTimerInfo[i][vtRespawn] = 5 * 60;
				VehicleTimerInfo[i][vtRentTime] = 0;
				VehicleInfo[i][vRentedBy] = -1;
				SendClientMessage(rentor, COLOR_LIGHTPURPLE, "Изтече наемът над превозното средство, което наехте!");
				if (GetPlayerVehicleID(rentor) == i && IsPlayerDriver(rentor))
				{
					RemovePlayerFromVehicle(rentor);
				}
			}
		}
	}

	for (new i; i < MAX_PLAYERS; i++)
	{
		EditPlayerScreenTexts(i);

		if (gettime() - AFKDetect[i] > 5)
		{
			GivePlayerAfkTimerSecond(i);
		}

		if (isLogged[i] == true && PlayerInfo[i][pAFK] == false)
		{
			PlayerInfo[i][pPlayedSeconds]++;
		}

		if (PlayerTimerInfo[i][ptLastOverSpeed] > 0)
		{
			PlayerTimerInfo[i][ptLastOverSpeed]--;
		}

		if (changeGunTimer[i] > 0)
		{
			changeGunTimer[i]--;
		}

		if (PlayerTimerInfo[i][ptVehicleTurnEngineOn] > 0)
		{
			if (PlayerTimerInfo[i][ptVehicleTurnEngineOn] > 0)
			{
				PlayerTimerInfo[i][ptVehicleTurnEngineOn]--;
			}

			if (PlayerTimerInfo[i][ptVehicleTurnEngineOn] <= 0)
			{
				if (IsPlayerInAnyVehicle(i))
				{
					new string256[256];
					format(string256, 256, "> Двигателят е {40BF00}Включен");
					SendInCarMessage(i, COLOR_WHITE, string256);
					new vehicleID = GetPlayerVehicleID(i);
					ToggleEngine(vehicleID, VEHICLE_PARAMS_ON);
					vehEngineStatusON[vehicleID] = true;
				}
			}
		}

		if (busTeleportTimer[i] > 0)
		{
			if (busTeleportTimer[i] > 0)
			{
				busTeleportTimer[i]--;
			}

			if (busTeleportTimer[i] <= 0)
			{
				SendClientMessage(i, COLOR_BUS, "[Bus] Вие пристигнахте до дестинацията ви. Можете да напуснете автобуса.");
			}
		}

		if (PlayerTimerInfo[i][ptRemoveArmourObject] > 0)
		{
			if (PlayerTimerInfo[i][ptRemoveArmourObject] > 0)
			{
				PlayerTimerInfo[i][ptRemoveArmourObject]--;
			}

			if (PlayerTimerInfo[i][ptRemoveArmourObject] <= 0)
			{
				RemovePlayerAttachedObject(i, 7);
			}
		}

		if (PlayerTimerInfo[i][ptSetPlayerArmourObjTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptSetPlayerArmourObjTimer] > 0)
			{
				PlayerTimerInfo[i][ptSetPlayerArmourObjTimer]--;
			}

			if (PlayerTimerInfo[i][ptSetPlayerArmourObjTimer] <= 0)
			{
				SetArmourObjectToPlayer(i);
			}
		}

		if (PlayerTimerInfo[i][ptSetArmourObject] > 0)
		{
			if (PlayerTimerInfo[i][ptSetArmourObject] > 0)
			{
				PlayerTimerInfo[i][ptSetArmourObject]--;
			}

			if (PlayerTimerInfo[i][ptSetArmourObject] <= 0)
			{
				new Float: armourPoints;
				GetPlayerArmour(i, armourPoints);
				if (PlayerInfo[i][pFaction] == FACTION_LSPD ||
					PlayerInfo[i][pFaction] == FACTION_LVPD ||
					PlayerInfo[i][pFaction] == FACTION_RCPD ||
					PlayerInfo[i][pFaction] == FACTION_KACC ||
					PlayerInfo[i][pFaction] == FACTION_ARMY ||
					PlayerInfo[i][pFaction] == FACTION_FBI)
				{
					if (armourPoints > 0)
					{
						SetPlayerAttachedObject(i, PLAYER_OBJECT_ARMOUR, 19142, 1, 0.08, 0.04, 0.00, 0.0, 0.0, -7.4);
					}
				}
				else
				{
					if (armourPoints > 0)
					{
						SetPlayerAttachedObject(i, PLAYER_OBJECT_ARMOUR, 19515, 1, 0.08, 0.04, 0.00, 0.0, 0.0, -7.4);
					}
				}
			}
		}

		if (PlayerTimerInfo[i][ptEndIntro] > 0)
		{
			if (PlayerTimerInfo[i][ptEndIntro] > 0)
			{
				PlayerTimerInfo[i][ptEndIntro]--;
			}

			if (PlayerTimerInfo[i][ptEndIntro] <= 0)
			{
				HideWelcomeTextDraws(i);
				ShowLoginOrRegister(i);
			}
		}

		if (PlayerTimerInfo[i][ptHideScreenLevelInfo] > 0)
		{
			if (PlayerTimerInfo[i][ptHideScreenLevelInfo] > 0)
			{
				PlayerTimerInfo[i][ptHideScreenLevelInfo]--;
			}

			if (PlayerTimerInfo[i][ptHideScreenLevelInfo] <= 0)
			{
				TextDrawHideForPlayer(i, LevelStats_CurrentLevel[i]);
				TextDrawHideForPlayer(i, LevelStats_NextLevel[i]);
				TextDrawHideForPlayer(i, LevelStats_Info[i]);
				ProgressBarHideForPlayer(i, LevelStats_EXP[i]);
				TextDrawHideForPlayer(i, LevelStats_BACKGROUND[i]);
			}
		}

		if (PlayerTimerInfo[i][ptHideCashInfo] > 0)
		{
			if (PlayerTimerInfo[i][ptHideCashInfo] > 0)
			{
				PlayerTimerInfo[i][ptHideCashInfo]--;
			}

			if (PlayerTimerInfo[i][ptHideCashInfo] <= 0)
			{
				TextDrawHideForPlayer(i, CashInfo[i]);
			}
		}

		if (PlayerTimerInfo[i][ptHideMessageInfo] > 0)
		{
			if (PlayerTimerInfo[i][ptHideMessageInfo] > 0)
			{
				PlayerTimerInfo[i][ptHideMessageInfo]--;
			}

			if (PlayerTimerInfo[i][ptHideMessageInfo] <= 0)
			{
				TextDrawHideForPlayer(i, MessageInfo[i]);
			}
		}

		if (PlayerTimerInfo[i][ptHideCommandInfo] > 0)
		{
			if (PlayerTimerInfo[i][ptHideCommandInfo] > 0)
			{
				PlayerTimerInfo[i][ptHideCommandInfo]--;
			}

			if (PlayerTimerInfo[i][ptHideCommandInfo] <= 0)
			{
				TextDrawHideForPlayer(i, CommandInfo[i]);
			}
		}

		if (PlayerTimerInfo[i][ptAntiAssaultSpamDamaged] > 0)
		{
			PlayerTimerInfo[i][ptAntiAssaultSpamDamaged]--;
		}

		if (PlayerTimerInfo[i][ptAntiAssaultSpamAttacker] > 0)
		{
			PlayerTimerInfo[i][ptAntiAssaultSpamAttacker]--;
		}

		if (PlayerTimerInfo[i][ptFinishDrugEffect] > 0)
		{
			if (PlayerTimerInfo[i][ptFinishDrugEffect] > 0)
			{
				PlayerTimerInfo[i][ptFinishDrugEffect]--;
			}

			if (PlayerTimerInfo[i][ptFinishDrugEffect] <= 0)
			{
				SetPlayerDrunkLevel(i, 0);
				SetPlayerWeather(i, serverWeather);
				SendClientMessage(i, COLOR_WHITE, "Ефектът на наркотика вече свърши!");
			}
		}

		if (PlayerTimerInfo[i][ptClearChatAnimation] > 0)
		{
			if (PlayerTimerInfo[i][ptClearChatAnimation] > 0)
			{
				PlayerTimerInfo[i][ptClearChatAnimation]--;
			}

			if (PlayerTimerInfo[i][ptClearChatAnimation] <= 0)
			{
				if (GetPVarInt(i, "UseAnim") == 0 && IsPlayerInAnyVehicle(i) == 0 && GetPlayerSpecialAction(i) == SPECIAL_ACTION_NONE)
				{
					ClearAnimations(i);
					ClearAnimations(i);
					ClearAnimations(i);
					ClearAnimations(i);
					ClearAnimations(i);
					SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
				}
			}
		}

		if (PlayerInfo[i][pPoliceJail] > 0)
		{
			if (PlayerInfo[i][pPoliceJail] > 0)
			{
				PlayerInfo[i][pPoliceJail]--;
			}

			if (PlayerInfo[i][pPoliceJail] <= 0)
			{
				SendClientMessage(i, COLOR_POLICE_2, "Вие вече сте на свобода, бъдете по-внимателен!");
				SetToSpawn(i);
			}
		}

		if (PlayerInfo[i][pMuted] > 0)
		{
			if (PlayerInfo[i][pMuted] > 0)
			{
				PlayerInfo[i][pMuted]--;
			}

			if (PlayerInfo[i][pMuted] <= 0)
			{
				SendClientMessage(i, COLOR_ADMIN_GREEN, "Изтече наказанието ти и вече си отглушен в чата!");
			}
		}

		if (PlayerInfo[i][pJailed] > 0)
		{
			if (PlayerInfo[i][pJailed] > 0)
			{
				PlayerInfo[i][pJailed]--;
			}

			if (PlayerInfo[i][pJailed] <= 0)
			{
				SendClientMessage(i, COLOR_ADMIN_GREEN, "Вие вече излязохте от админ затвора, бъдете по-внимателен!");
				SetToSpawn(i);
			}
		}

		if (PlayerInfo[i][pLastVRepair] > 0)
		{
			PlayerInfo[i][pLastVRepair]--;
		}

		if (PlayerInfo[i][pBusTimer] > 0)
		{
			if (PlayerInfo[i][pBusTimer] > 0)
			{
				PlayerInfo[i][pBusTimer]--;
			}

			if (PlayerInfo[i][pBusTimer] <= 0)
			{
			 	SendClientMessage(i,COLOR_JOB,"SERVER: Вече отново можеш да работиш Bus Job!");
			}
		}

		if (PlayerInfo[i][pDeliverTimer] > 0)
		{
			if (PlayerInfo[i][pDeliverTimer] > 0)
			{
				PlayerInfo[i][pDeliverTimer]--;
			}

			if (PlayerInfo[i][pDeliverTimer] <= 0)
			{
			 	SendClientMessage(i,COLOR_JOB,"SERVER: Вече отново можеш да работиш Deliver Job!");
			}
		}

		if(PlayerInfo[i][pVipGunSpamTimer] > 0)
		{
			PlayerInfo[i][pVipGunSpamTimer]--;
		}

		if (PlayerInfo[i][pCoalmineTimer] > 0)
		{
			if (PlayerInfo[i][pCoalmineTimer] > 0)
			{
				PlayerInfo[i][pCoalmineTimer]--;
			}

			if (PlayerInfo[i][pCoalmineTimer] <= 0)
			{
			 	SendClientMessage(i,COLOR_JOB,"SERVER: Вече отново можеш да работиш Coalmine Job!");
			}
		}

		if (PlayerInfo[i][pPizzaTimer] > 0)
		{
			if (PlayerInfo[i][pPizzaTimer] > 0)
			{
				PlayerInfo[i][pPizzaTimer]--;
			}

			if (PlayerInfo[i][pPizzaTimer] <= 0)
			{
			 	SendClientMessage(i,COLOR_JOB,"SERVER: Вече отново можеш да работиш Pizza Job!");
			}
		}

		if (PlayerInfo[i][pSweeperTimer] > 0)
		{
			if (PlayerInfo[i][pSweeperTimer] > 0)
			{
				PlayerInfo[i][pSweeperTimer]--;
			}

			if (PlayerInfo[i][pSweeperTimer] <= 0)
			{
			 	SendClientMessage(i,COLOR_JOB,"SERVER: Вече отново можеш да работиш Sweeper Job!");
			}
		}

		if (PlayerTimerInfo[i][ptSetToSpawnVar] > 0)
		{
			if (PlayerTimerInfo[i][ptSetToSpawnVar] > 0)
			{
				PlayerTimerInfo[i][ptSetToSpawnVar]--;
			}

			if (PlayerTimerInfo[i][ptSetToSpawnVar] <= 0)
			{
				setToSpawn[i] = false;
			}
		}

		if (PlayerTimerInfo[i][ptShowIntro] > 0)
		{
			if (PlayerTimerInfo[i][ptShowIntro] > 0)
			{
				PlayerTimerInfo[i][ptShowIntro]--;
			}

			if (PlayerTimerInfo[i][ptShowIntro] <= 0)
			{
				ShowPlayerIntro(i);
				ClearChatBig(i);
			}
		}

		if (PlayerTimerInfo[i][ptAFKBack] > 0)
		{
			PlayerTimerInfo[i][ptAFKBack]--;
		}

		if (PlayerTimerInfo[i][ptDuelTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptDuelTimer] > 0)
			{
				PlayerTimerInfo[i][ptDuelTimer]--;
			}
			if (PlayerTimerInfo[i][ptDuelTimer] <= 0)
			{
				GameTextForPlayer(i, "~w~3", 3000, 3);
				GameTextForPlayer(duelInvitor[i], "~w~3", 3000, 3);
				PlayerTimerInfo[i][ptDuelTimer2] = 2;
			}
		}
		if (PlayerTimerInfo[i][ptDuelTimer2] > 0)
		{
			if (PlayerTimerInfo[i][ptDuelTimer2] > 0)
			{
				PlayerTimerInfo[i][ptDuelTimer2]--;
			}
			if (PlayerTimerInfo[i][ptDuelTimer2] <= 0)
			{
				GameTextForPlayer(i, "~w~2", 3000, 3);
				GameTextForPlayer(duelInvitor[i], "~w~2", 3000, 3);
				PlayerTimerInfo[i][ptDuelTimer3] = 2;
			}
		}
		if (PlayerTimerInfo[i][ptDuelTimer3] > 0)
		{
			if (PlayerTimerInfo[i][ptDuelTimer3] > 0)
			{
				PlayerTimerInfo[i][ptDuelTimer3]--;
			}
			if (PlayerTimerInfo[i][ptDuelTimer3] <= 0)
			{
				GameTextForPlayer(i, "~w~1", 3000, 3);
				GameTextForPlayer(duelInvitor[i], "~w~1", 3000, 3);
				PlayerTimerInfo[i][ptDuelTimer4] = 2;
			}
		}
		if (PlayerTimerInfo[i][ptDuelTimer4] > 0)
		{
			if (PlayerTimerInfo[i][ptDuelTimer4] > 0)
			{
				PlayerTimerInfo[i][ptDuelTimer4]--;
			}
			if (PlayerTimerInfo[i][ptDuelTimer4] <= 0)
			{
				GameTextForPlayer(i, "~r~FIGHT", 3000, 3);
				GameTextForPlayer(duelInvitor[i], "~r~FIGHT", 3000, 3);
				TogglePlayerControllable(i, 1);
				TogglePlayerControllable(duelInvitor[i], 1);
			}
		}

		if (PlayerTimerInfo[i][ptFishTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptFishTimer] > 0)
			{
				PlayerTimerInfo[i][ptFishTimer]--;
			}

			if (PlayerTimerInfo[i][ptFishTimer] <= 0)
			{
				new fishID = random(5);
				if (fishID == 0)
				{
					SendClientMessage(i, COLOR_FISH, "Вие не хванахте нищо! На въдицата ви се закачи боклук.");
				}

				if (fishID == 1)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Шаран %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 2)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Скумрия %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 3)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Цаца %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 4)
				{
					new fishWeight = randomex(15, 44);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Скат %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 5)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Омар %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				TogglePlayerControllable(i, 1);
				ClearAnimations(i);
				RemovePlayerAttachedObject(i, 2);
			}
		}

		if (PlayerTimerInfo[i][pResetPlayerLabel] > 0)
		{
			if (PlayerTimerInfo[i][pResetPlayerLabel] > 0)
			{
				PlayerTimerInfo[i][pResetPlayerLabel]--;
			}

			if (PlayerTimerInfo[i][pResetPlayerLabel] <= 0)
			{
				UpdateDynamic3DTextLabelText(PlayerLabel[i], COLOR_RED, "");
			}
		}

		if (PlayerTimerInfo[i][ptPoliceStunned] > 0)
		{
			if (PlayerTimerInfo[i][ptPoliceStunned] > 0)
			{
				PlayerTimerInfo[i][ptPoliceStunned]--;
			}

			if (PlayerTimerInfo[i][ptPoliceStunned] <= 0)
			{
				ClearAnimations(i);
			}
		}

		if (PlayerTimerInfo[i][ptClearAnimation] > 0)
		{
			if (PlayerTimerInfo[i][ptClearAnimation] > 0)
			{
				PlayerTimerInfo[i][ptClearAnimation]--;
			}

			if (PlayerTimerInfo[i][ptClearAnimation] <= 0)
			{
				ClearAnimationCondition(i);
			}
		}

		if (PlayerTimerInfo[i][ptFreeze] > 0)
		{
			if (PlayerTimerInfo[i][ptFreeze] > 0)
			{
				PlayerTimerInfo[i][ptFreeze]--;
			}

			if (PlayerTimerInfo[i][ptFreeze] <= 0)
			{
				TogglePlayerControllable(i, 0);
			}
		}
		
		if (PlayerTimerInfo[i][ptUnfreeze] > 0)
		{
			if (PlayerTimerInfo[i][ptUnfreeze] > 0)
			{
				PlayerTimerInfo[i][ptUnfreeze]--;
			}

			if (PlayerTimerInfo[i][ptUnfreeze] <= 0)
			{
				TogglePlayerControllable(i, 1);
			}
		}

		if (PlayerTimerInfo[i][ptBan] > 0)
		{
			if (PlayerTimerInfo[i][ptBan] > 0)
			{
				PlayerTimerInfo[i][ptBan]--;
			}

			if (PlayerTimerInfo[i][ptBan] <= 0)
			{
			 	//Ban(i);
				new stringBan[256];
				new hisIP[35];
				GetPlayerIp(i, hisIP, 35);
				format(stringBan, 256, "banip %s", hisIP);
				SendRconCommand(stringBan);
				SendRconCommand("reloadbans");
			}
		}

		if (PlayerTimerInfo[i][ptKick] > 0)
		{
			if (PlayerTimerInfo[i][ptKick] > 0)
			{
				PlayerTimerInfo[i][ptKick]--;
			}

			if (PlayerTimerInfo[i][ptKick] <= 0)
			{
				Kick(i);
			}
		}

		if (PlayerTimerInfo[i][ptFuel] > 0)
		{
			if (PlayerTimerInfo[i][ptFuel] > 0)
			{
				PlayerTimerInfo[i][ptFuel]--;
			}

			if (PlayerTimerInfo[i][ptFuel] <= 0)
			{
				if (IsPlayerInAnyVehicle(i) && IsPlayerDriver(i))
				{
					new vehModel;
					vehModel = GetVehicleModel(GetPlayerVehicleID(i));
					if (IsNoFuelVehicle(vehModel) == 0)
					{
						PlayerTimerInfo[i][ptFuel] = 50;
						if (vehFuel[GetPlayerVehicleID(i)] <= 0)
						{
							ToggleEngine(GetPlayerVehicleID(i), VEHICLE_PARAMS_OFF);
							vehFuel[GetPlayerVehicleID(i)] = 0;
							SendClientMessage(i, COLOR_LIGHTPURPLE, "Превозното средство няма бензин, заредете го от бензиностанция.");
						}
						else
						{
							if (vehEngineStatusON[GetPlayerVehicleID(i)] == true)
							{
								vehFuel[GetPlayerVehicleID(i)] -= 1;
							}
						}

						UpdateSpeedoText(i);
					}
				}
			}
		}
	}
}

stock UpdateFareText(playerid)
{
	new stringvehicle[256];
	format(stringvehicle, 256, "Fare: ~y~~h~$%d", VehicleInfo[GetPlayerVehicleID(playerid)][vTaxiFare]);
	TextDrawSetString(FareStatus[playerid], stringvehicle);
}

stock UpdateTankFuelText(playerid)
{
    new stringvehicle[256];
    new vehicleid = GetPlayerVehicleID(playerid);
    new trailerid = GetVehicleTrailer(vehicleid);
    format(stringvehicle, 256, "~y~Tank: %d L", VehicleInfo[trailerid][vTankFuel]);
    TextDrawSetString(TankFuel[playerid], stringvehicle);
}


stock UpdateSpeedoText(playerid)
{
	new vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
	new stringvehicle[256];
	if (IsNoFuelVehicle(vehModel) == 0)
	{
		format(stringvehicle, sizeof(stringvehicle), "%d Km/H", GetVehicleKmh(GetPlayerVehicleID(playerid)));
		TextDrawSetString(SpeedStatus[playerid], stringvehicle);

		format(stringvehicle, sizeof(stringvehicle), "%d L", vehFuel[GetPlayerVehicleID(playerid)]);
		TextDrawSetString(FuelStatus[playerid], stringvehicle);
	}
	else if (IsNoFuelVehicle(vehModel) == 1)
	{
		format(stringvehicle, sizeof(stringvehicle), "%d Km/H", GetVehicleKmh(GetPlayerVehicleID(playerid)));
		TextDrawSetString(SpeedStatus[playerid], stringvehicle);
	}
}

stock SaveServer()
{
	for (new playerid; playerid < MAX_PLAYERS; playerid++)
	{
		SaveAccount(playerid);
	}

	for (new veh; veh < ReturnNextUnusedPrivateVehID(); veh++)
	{
		if (PrivateVehInfo[veh][vVehID] != 0)
		{
			SavePrivateVehicle(veh);
		}
	}

	for(new crew; crew < MAX_CREWS; crew++)
	{
		SaveCrew(crew);
	}

	for (new faction; faction < MAX_FACTIONS; faction++)
	{
		SaveFaction(faction);
	}

	for (new turf; turf < MAX_TURFS; turf++)
	{
		SaveTurf(turf);
	}

	for (new graffiti; graffiti < MAX_GRAFFITI; graffiti++)
	{
		SaveGraffiti(graffiti);
	}

    for(new records; records < MAX_TOP_RECORDS; records++)
    {
        SaveRecord(records);
    }
}

public OnGameModeExit()
{
	//CloseDB();
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	return 1;
}

stock ShowPlayerBank(playerid)
{
	new string2230[512];
	new string2230result[2230];
	format(string2230, 512, "{55A2F9}Банковата карта на %s\n\n", GetPlayerNickname(playerid));
	strcat(string2230result, string2230);
	format(string2230, 512, "{55A2F9}Сума в банката: $%d\n", PlayerInfo[playerid][pBank]);
	strcat(string2230result, string2230);
	ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{EBEBEB}Документи:", string2230result, "Затвори", "");
}

stock ShowPlayerStatsPage2(giveplayerid, playerid)
{
	new string512[512];
	new stringResult[2048];
	format(string512, sizeof(string512), "{FFFFFF}Кокаин: {40BF00}%d гр.\n", PlayerInfo[playerid][pCocaine]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Марихуана: {40BF00}%d гр.\n", PlayerInfo[playerid][pMarijuana]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Хероин: {40BF00}%d гр.\n\n", PlayerInfo[playerid][pHeroin]);
	strcat(stringResult, string512);
	if (!PlayerInfo[playerid][pMoneyBag])
	{
		strcat(stringResult, "{FFFFFF}Чанта за обир (Money Bag): {40BF00}Няма\n");
	}
	else
	{
		strcat(stringResult, "{FFFFFF}Чанта за обир (Money Bag): {40BF00}Има \n");
	}

	if (!PlayerInfo[playerid][pVudica])
	{
		strcat(stringResult, "{FFFFFF}Въдица за ловене на риба: {40BF00}Няма\n");
	}
	else 
	{
		strcat(stringResult, "{FFFFFF}Въдица за ловене на риба: {40BF00}Има \n");
	}

	format(string512, sizeof(string512), "{FFFFFF}Стръв: {40BF00}%d бр.\n", PlayerInfo[playerid][pStruv]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Цигари: {40BF00}%d бр.\n", PlayerInfo[playerid][pCiggs]);
	strcat(stringResult, string512);
	if (!PlayerInfo[playerid][pTracker])
	{
		strcat(stringResult, "{FFFFFF}Тракер за коли: {40BF00}Няма\n");
	}
	else
	{
		strcat(stringResult, "{FFFFFF}Тракер за коли: {40BF00}Има \n");
	}

	if (!PlayerInfo[playerid][pDice])
	{
		strcat(stringResult, "{FFFFFF}Зарче за хвърляне: {40BF00}Няма\n");
	}
	else
	{
		strcat(stringResult, "{FFFFFF}Зарче за хвърляне: {40BF00}Има \n");
	}

	if (PlayerInfo[playerid][pGPS])
	{
		strcat(stringResult, "{FFFFFF}GPS Навигатор: {40BF00}Има\n\n");
	}
	else
	{
		strcat(stringResult, "{FFFFFF}GPS Навигатор: {40BF00}Няма\n\n");
	}
	format(string512, sizeof(string512), "{FFFFFF}Предупреждения: {40BF00}%d от 5 \n", PlayerInfo[playerid][pWarns]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Admin Предупреждения: {40BF00}%d от 3 \n\n", PlayerInfo[playerid][pAdminWarns]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Mute Time: {40BF00}%d мин. \n", PlayerInfo[playerid][pMuted]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Jail Time: {40BF00}%d мин. \n", PlayerInfo[playerid][pJailed]);
	strcat(stringResult, string512);
	format(string512, sizeof(string512), "{FFFFFF}Police Jail Time: {40BF00}%d мин.\n\n", PlayerInfo[playerid][pPoliceJail]);
	strcat(stringResult, string512);
	ShowPlayerDialog(giveplayerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{40BF00}Статистика на персонажа:", stringResult, "Затвори", "");
}

stock ShowPlayerStats(giveplayerid, playerid)
{
	seeingStats[giveplayerid] = playerid;	//TODO
	new string[256];
	format(string, sizeof(string), "Account Statistics for %s, ID: %d [Ping: %d, FPS: %d]",GetPlayerNickname(playerid), playerid, GetPlayerPing(playerid), GetPlayerFPS(playerid));
	SendClientMessage(giveplayerid, 0xFFC707FF, string); //26D326
	//Account
	format(string, sizeof(string), "[Account] Player Level: %d | EXP: %d | Admin Level: %d | Weapon Skills: [/weaponskills] | V.I.P Level: %d",
		PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pExp], PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pVip]);
	SendClientMessage(giveplayerid, 0x26D326FF, string);
	//Player
	new job = PlayerInfo[playerid][pJob];
	new faction = PlayerInfo[playerid][pFaction];
	new isBoss[8];
	if(PlayerInfo[playerid][pJobBoss])
	{
		format(isBoss, sizeof(isBoss), "Yes");
	}
	else
	{
		format(isBoss, sizeof(isBoss), "No");
	}
	format(string, sizeof(string), "[Player] Cash: $%d | Bank: $%d | Faction: %s(Rank: %d) | Job: %s | Job Boss: %s",
		PlayerInfo[playerid][pCash], PlayerInfo[playerid][pBank], getFactionName(faction), PlayerInfo[playerid][pRank], getJobName(job), isBoss);
	SendClientMessage(giveplayerid, 0x26D326FF, string);
	//Ownership
	new hisHouse[32];
	if(PlayerInfo[playerid][pHouseOwnedID] == -1)
	{
		format(hisHouse, sizeof(hisHouse), "No");
	}
	else
	{
		format(hisHouse, sizeof(hisHouse), "%d", PlayerInfo[playerid][pHouseOwnedID]);
	}
	new hisBiz[32];
	if(PlayerInfo[playerid][pBizOwnedID] == -1)
	{
		format(hisBiz, sizeof(hisBiz), "No");
	}
	else
	{
		format(hisBiz, sizeof(hisBiz), "%d", PlayerInfo[playerid][pBizOwnedID]);
	}
	format(string, sizeof(string), "[Ownership] House Number: %s | Bussiness Number: %s | Vouchers in BGN: %d",
		hisHouse, hisBiz, PlayerInfo[playerid][pVoucherBGN]);
	SendClientMessage(giveplayerid, 0x26D326FF, string);
	//Miscellaneous
	format(string, sizeof(string), "[Miscellaneous] Total Kills: %d | Police Fines: $%d | Wanted Level: %d",
		PlayerInfo[playerid][pKills], PlayerInfo[playerid][pFine], PlayerInfo[playerid][pWantedLevel]);
	SendClientMessage(giveplayerid, 0x26D326FF, string);
	//Miscellaneous
	format(string, sizeof(string), "[Punishments] Mute: %d min | Prison: %d min | Jail: %d min | Warns: %d/5 | Admin Warns: %d/3",
		PlayerInfo[playerid][pMuted], PlayerInfo[playerid][pPoliceJail], PlayerInfo[playerid][pJailed], PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pAdminWarns]);
	SendClientMessage(giveplayerid, 0xE60000FF, string);
}

stock HideWelcomeTextDraws(playerid)
{
	TextDrawHideForPlayer(playerid, WelcomeText[0]);
	TextDrawHideForPlayer(playerid, WelcomeText[1]);
	TextDrawHideForPlayer(playerid, introBlackLines[0]);
	TextDrawHideForPlayer(playerid, introBlackLines[1]);
}

stock ShowWelcomeTextDraws(playerid)
{
	TextDrawShowForPlayer(playerid, WelcomeText[0]);
	TextDrawShowForPlayer(playerid, WelcomeText[1]);
	TextDrawShowForPlayer(playerid, introBlackLines[0]);
	TextDrawShowForPlayer(playerid, introBlackLines[1]);
}

stock ShowLoginOrRegister(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);
	if (!dini_Exists(accountFileNickname))
	{
		new string256[256];
		format(string256, 256, "{FFFFFF}Добре дошли, {40BF00}%s\n\n{FFFFFF}За да играете тук трябва да се регистрирате в сървъра!\nЗа да го направите, напишете паролата си отдолу:", accountNickname);
		ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Регистрация:", string256, "Регистрирай", "Излез");
	}
	else
	{
		new string256[256];
		format(string256, 256, "{FFFFFF}Добре дошли, {40BF00}%s\n\n{FFFFFF}Вашият профил вече е регистриран в сървъра!\nЗа да влезете в профила си, трябва да напишете паролата отдолу:", accountNickname);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Вход в сървъра", string256, "Влез", "Излез");
	}
}

stock CameraMovingOnJoin(playerid)
{
	InterpolateCameraPos(playerid, 1728.3097, 1769.5918, 64.7344, 2257.8169, 1751.3516, 75.2725, 10000, CAMERA_MOVE);
	InterpolateCameraLookAt(playerid, 1729.3125, 1769.5573, 64.7543, 2258.8198, 1751.3170, 75.2924, 10000, CAMERA_MOVE);
}

stock GivePlayerAllGuns(playerid)
{
	for (new i = 0; i < 13; i++)
	{
		if (PlayerInfo[playerid][pWeapon][i] != 0)
		{
			GivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon][i], PlayerInfo[playerid][pWeaponAmmo][i]);
		}
	}

	changeGunTimer[playerid] = 4;
}

stock GetPlayerAllGuns(playerid)
{
	ResetPlayerWeapons(playerid);
}

stock SavePlayerAllGuns(playerid)
{
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, PlayerInfo[playerid][pWeapon][i], PlayerInfo[playerid][pWeaponAmmo][i]);
	}
}

stock SavePlayerLastLogin(playerid)
{
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);
	new year, mounth, day;
	getdate(year, mounth, day);
	PlayerInfo[playerid][pLastMonth] = mounth;
	PlayerInfo[playerid][pLastYear] = year;
	PlayerInfo[playerid][pLastDay] = day;
	PlayerInfo[playerid][pLastHour] = hours;
	PlayerInfo[playerid][pLastMinute] = minutes;
	PlayerInfo[playerid][pLastSecond] = seconds;
}

stock SaveAccount(playerid)
{
	if (isLogged[playerid] == true)
	{
		//SQL_SaveUser(playerid);
		new accountFileNickname[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(accountFileNickname, 256, "%s.ini", accountNickname);
		if (inPaintBall[playerid] == false && inEvent[playerid] == false)
		{
			SavePlayerAllGuns(playerid);
		}

		SaveInventory(playerid);
		for (new i; i < 13; i++)
		{
			new string256[256];
			format(string256, 256, "pWeapon[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeapon][i]);
			format(string256, 256, "pWeaponAmmo[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeaponAmmo][i]);
		}

		for (new i; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pWeaponSkill[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeaponSkill][i]);
		}

		for (new i; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pWeaponSkillPoints[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeaponSkillPoints][i]);
		}

		for (new i; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pAchievement[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pAchievement][i]);
		}

		for (new i; i < 3; i++)
		{
			new string256[256];
			format(string256, 256, "pPrivateVeh[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pPrivateVeh][i]);
		}

		for (new i = 1; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pFishSlot[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pFishSlot][i]);
		}

		for (new i = 1; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pFishWeight[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pFishWeight][i]);
		}

		for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
		{
			new string256[256];
			format(string256, 256, "pClothes[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pClothes][i]);
		}

        for (new i = 0; i < MAX_PLAYER_ATTACHMENTS; i++)
        {
            new string256[256];
            format(string256, 256, "pAttachements[%d]", i);
            dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements][i]);
            format(string256, 256, "pAttachementsSlot[%d]", i);
            dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachementsSlot][i]);
            format(string256, 256, "pAttachementsBone[%d]", i);
            dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachementsBone][i]);
            format(string256, 256, "pAttachements_X[%d]", i);
            dini_FloatSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements_X]);
            format(string256, 256, "pAttachements_Y[%d]", i);
            dini_FloatSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements_Y]);
            format(string256, 256, "pAttachements_Z[%d]", i);
            dini_FloatSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements_Z]);
            format(string256, 256, "pAttachements_RX[%d]", i);
            dini_FloatSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements_RX]);
            format(string256, 256, "pAttachements_RY[%d]", i);
            dini_FloatSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements_RY]);
            format(string256, 256, "pAttachements_RZ[%d]", i);
            dini_FloatSet(accountFileNickname, string256, PlayerInfo[playerid][pAttachements_RZ]);
        }

		dini_Set(accountFileNickname, "pPassword", PlayerInfo[playerid][pPassword]);
        dini_Set(accountFileNickname, "pVipText", PlayerInfo[playerid][pVipText]);
		dini_IntSet(accountFileNickname, "pAdmin", PlayerInfo[playerid][pAdmin]);
		dini_IntSet(accountFileNickname, "pPrivateVehFreeSlot", PlayerInfo[playerid][pPrivateVehFreeSlot]);
		dini_BoolSet(accountFileNickname, "pGPS", PlayerInfo[playerid][pGPS]);
		dini_BoolSet(accountFileNickname, "pVudica", !PlayerInfo[playerid][pVudica]);
		dini_IntSet(accountFileNickname, "pGiftPaydays", PlayerInfo[playerid][pGiftPaydays]);
		dini_IntSet(accountFileNickname, "pMuted", PlayerInfo[playerid][pMuted]);
		dini_IntSet(accountFileNickname, "pJailed", PlayerInfo[playerid][pJailed]);
		dini_IntSet(accountFileNickname, "pFightStyle", PlayerInfo[playerid][pFightStyle]);
		dini_IntSet(accountFileNickname, "pLastYear", PlayerInfo[playerid][pLastYear]);
		dini_IntSet(accountFileNickname, "pLastMonth", PlayerInfo[playerid][pLastMonth]);
		dini_IntSet(accountFileNickname, "pLastDay", PlayerInfo[playerid][pLastDay]);
		dini_IntSet(accountFileNickname, "pLastMinute", PlayerInfo[playerid][pLastMinute]);
		dini_IntSet(accountFileNickname, "pLastSecond", PlayerInfo[playerid][pLastSecond]);
		dini_IntSet(accountFileNickname, "pLastHour", PlayerInfo[playerid][pLastHour]);
        dini_IntSet(accountFileNickname, "pVipTextColor", PlayerInfo[playerid][pVipTextColor]);
		dini_IntSet(accountFileNickname, "pSpawn", PlayerInfo[playerid][pSpawn]);
		dini_BoolSet(accountFileNickname, "pDice", PlayerInfo[playerid][pDice]);
        dini_BoolSet(accountFileNickname, "pFactionSkin", PlayerInfo[playerid][pFactionSkin]);
		dini_IntSet(accountFileNickname, "pInvCapacity", PlayerInfo[playerid][pInvCapacity]);
		dini_BoolSet(accountFileNickname, "pEvent", PlayerInfo[playerid][pEvent]);
		dini_IntSet(accountFileNickname, "pCiggs", PlayerInfo[playerid][pCiggs]);
		dini_BoolSet(accountFileNickname, "pMoneyBag", PlayerInfo[playerid][pMoneyBag]);
		dini_IntSet(accountFileNickname, "pCrew", PlayerInfo[playerid][pCrew]);
		dini_IntSet(accountFileNickname, "pVoucherBGN", PlayerInfo[playerid][pVoucherBGN]);
		dini_IntSet(accountFileNickname, "pWarns", PlayerInfo[playerid][pWarns]);
		dini_IntSet(accountFileNickname, "pAdminWarns", PlayerInfo[playerid][pAdminWarns]);
		dini_BoolSet(accountFileNickname, "pTracker", PlayerInfo[playerid][pTracker]);
		dini_IntSet(accountFileNickname, "pVip", PlayerInfo[playerid][pVip]);
		dini_IntSet(accountFileNickname, "pStruv", PlayerInfo[playerid][pStruv]);
		dini_IntSet(accountFileNickname, "pFactionBaseSpawn", PlayerInfo[playerid][pFactionBaseSpawn]);
		dini_IntSet(accountFileNickname, "pHeroin", PlayerInfo[playerid][pHeroin]);
		dini_IntSet(accountFileNickname, "pMarijuana", PlayerInfo[playerid][pMarijuana]);
		dini_IntSet(accountFileNickname, "pCocaine", PlayerInfo[playerid][pCocaine]);
		dini_IntSet(accountFileNickname, "pJob", PlayerInfo[playerid][pJob]);
		dini_IntSet(accountFileNickname, "pJobBoss", PlayerInfo[playerid][pJobBoss]);
		dini_IntSet(accountFileNickname, "pPoliceJail", PlayerInfo[playerid][pPoliceJail]);
		dini_IntSet(accountFileNickname, "pWantedLevel", PlayerInfo[playerid][pWantedLevel]);
		dini_BoolSet(accountFileNickname, "pPoliceDuty", PlayerInfo[playerid][pPoliceDuty]);
		dini_BoolSet(accountFileNickname, "pArmyDuty", PlayerInfo[playerid][pArmyDuty]);
		dini_BoolSet(accountFileNickname, "pKACCDuty", PlayerInfo[playerid][pKACCDuty]);
		dini_BoolSet(accountFileNickname, "pTaxiDuty", PlayerInfo[playerid][pTaxiDuty]);
		dini_BoolSet(accountFileNickname, "pFuelCoDuty", PlayerInfo[playerid][pFuelCoDuty]);
		dini_IntSet(accountFileNickname, "pFbiDuty", PlayerInfo[playerid][pFbiDuty]);
		dini_IntSet(accountFileNickname, "pLaser", PlayerInfo[playerid][pLaser]);
		dini_IntSet(accountFileNickname, "pMission", PlayerInfo[playerid][pMission]);
		dini_BoolSet(accountFileNickname, "pDisableCarRadio", PlayerInfo[playerid][pDisableCarRadio]);
		dini_BoolSet(accountFileNickname, "pDisableNews", PlayerInfo[playerid][pDisableNews]);
		dini_IntSet(accountFileNickname, "pHouseOwnedID", PlayerInfo[playerid][pHouseOwnedID]);
		dini_IntSet(accountFileNickname, "pBizOwnedID", PlayerInfo[playerid][pBizOwnedID]);
		dini_IntSet(accountFileNickname, "pAdminDuty", PlayerInfo[playerid][pAdminDuty]);
		dini_IntSet(accountFileNickname, "pFaction", PlayerInfo[playerid][pFaction]);
		dini_IntSet(accountFileNickname, "pRank", PlayerInfo[playerid][pRank]);
		dini_IntSet(accountFileNickname, "pGender", PlayerInfo[playerid][pGender]);
		dini_IntSet(accountFileNickname, "pFine", PlayerInfo[playerid][pFine]);
		dini_IntSet(accountFileNickname, "pCash", PlayerInfo[playerid][pCash]);
		dini_IntSet(accountFileNickname, "pNormalSkin", PlayerInfo[playerid][pNormalSkin]);
		dini_IntSet(accountFileNickname, "pBank", PlayerInfo[playerid][pBank]);
		dini_BoolSet(accountFileNickname, "pAFK", PlayerInfo[playerid][pAFK]);
		dini_IntSet(accountFileNickname, "pLevel", PlayerInfo[playerid][pLevel]);
		dini_IntSet(accountFileNickname, "pExp", PlayerInfo[playerid][pExp]);
		dini_IntSet(accountFileNickname, "pSweeperTimer", PlayerInfo[playerid][pSweeperTimer]);
		dini_IntSet(accountFileNickname, "pPizzaPassed", PlayerInfo[playerid][pPizzaPassed]);
		dini_IntSet(accountFileNickname, "pDeliverPassed", PlayerInfo[playerid][pDeliverPassed]);
        dini_IntSet(accountFileNickname, "pKills", PlayerInfo[playerid][pKills]);
		dini_IntSet(accountFileNickname, "pBusPassed", PlayerInfo[playerid][pBusPassed]);
		dini_IntSet(accountFileNickname, "pCoalminePassed", PlayerInfo[playerid][pCoalminePassed]);
		dini_IntSet(accountFileNickname, "pSweeperPassed", PlayerInfo[playerid][pSweeperPassed]);
		dini_IntSet(accountFileNickname, "pSweeperLevel", PlayerInfo[playerid][pSweeperLevel]);
		dini_IntSet(accountFileNickname, "pBusLevel", PlayerInfo[playerid][pBusLevel]);
		dini_IntSet(accountFileNickname, "pPizzaLevel", PlayerInfo[playerid][pPizzaLevel]);
		dini_IntSet(accountFileNickname, "pDeliverLevel", PlayerInfo[playerid][pDeliverLevel]);
		dini_IntSet(accountFileNickname, "pCoalmineLevel", PlayerInfo[playerid][pCoalmineLevel]);
		dini_IntSet(accountFileNickname, "pPizzaTimer", PlayerInfo[playerid][pPizzaTimer]);
		dini_IntSet(accountFileNickname, "pDeliverTimer", PlayerInfo[playerid][pDeliverTimer]);
		dini_IntSet(accountFileNickname, "pCoalmineTimer", PlayerInfo[playerid][pCoalmineTimer]);
		dini_IntSet(accountFileNickname, "pVipGunSpamTimer", PlayerInfo[playerid][pVipGunSpamTimer]);
		dini_IntSet(accountFileNickname, "pBusTimer", PlayerInfo[playerid][pBusTimer]);
		dini_IntSet(accountFileNickname, "pLastVRepair", PlayerInfo[playerid][pLastVRepair]);
		dini_IntSet(accountFileNickname, "pSelectedGender", PlayerInfo[playerid][pSelectedGender]);
		dini_IntSet(accountFileNickname, "pArmourPack", PlayerInfo[playerid][pArmourPack]);
		if (IsPlayerSpawned(playerid))
		{
			new Float: X, Float: Y, Float: Z;
			new Float: Angle;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, Angle);
			new Float: armour;
			GetPlayerArmour(playerid, armour);
			dini_IntSet(accountFileNickname, "pSkin", GetPlayerSkin(playerid));
			if (!inPaintBall[playerid] && !inEvent[playerid])
			{
				dini_FloatSet(accountFileNickname, "pArmour", armour);
			}
			else if (inPaintBall[playerid] || inEvent[playerid])
			{
				dini_FloatSet(accountFileNickname, "pArmour", beforeArmour[playerid]);
			}

			dini_FloatSet(accountFileNickname, "pX", X);
			dini_FloatSet(accountFileNickname, "pY", Y);
			dini_FloatSet(accountFileNickname, "pZ", Z);
			dini_FloatSet(accountFileNickname, "pAngle", Angle);
			SavePlayerAccountVirtualWorld(playerid, accountFileNickname);
			dini_IntSet(accountFileNickname, "pInterior", GetPlayerInterior(playerid));
		}
	}
}

stock SavePlayerArmour(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);
	new Float: armour;
	GetPlayerArmour(playerid, armour);
	dini_FloatSet(accountFileNickname, "pArmour", armour);
}

stock SavePlayerAccountVirtualWorld(playerid, accountFileNickname[])
{
	if (inBuyVehVW[playerid] == -1)
	{
		dini_IntSet(accountFileNickname, "pVWorld", GetPlayerVirtualWorld(playerid));
	}
	else if (inBuyVehVW[playerid] != -1)
	{
		new virtualWorld = inBuyVehVW[playerid];
		dini_IntSet(accountFileNickname, "pVWorld", virtualWorld);
	}
}

stock SaveInventory(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "/Inventory/%s.ini", accountNickname);
	if (!dini_Exists(accountFileNickname))
	{
		dini_Create(accountFileNickname);
	}

	new string256[256];
	for (new i = 0; i != MAX_INVENTORY; i++)
	{
		format(string256, 256, "invExists[%d]", i);
		dini_IntSet(accountFileNickname, string256, InventoryInfo[playerid][i][invExists]);
		format(string256, 256, "invItem[%d]", i);
		dini_Set(accountFileNickname, string256, InventoryInfo[playerid][i][invItem]);
		format(string256, 256, "invModel[%d]", i);
		dini_IntSet(accountFileNickname, string256, InventoryInfo[playerid][i][invModel]);
		format(string256, 256, "invQuantity[%d]", i);
		dini_IntSet(accountFileNickname, string256, InventoryInfo[playerid][i][invQuantity]);
	}
}

stock LoadInventory(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "/Inventory/%s.ini", accountNickname);
	if (!dini_Exists(accountFileNickname))
	{
		dini_Create(accountFileNickname);
	}

	new string256[256];
	for (new i; i < MAX_INVENTORY; i++)
	{
		format(string256, 256, "invExists[%d]", i);
		InventoryInfo[playerid][i][invExists] = dini_Int(accountFileNickname, string256);
		if (InventoryInfo[playerid][i][invExists] == 1)
		{
			format(string256, 256, "invItem[%d]", i);
			format(InventoryInfo[playerid][i][invItem], 32, dini_Get(accountFileNickname, string256));
			format(string256, 256, "invModel[%d]", i);
			InventoryInfo[playerid][i][invModel] = dini_Int(accountFileNickname, string256);
			format(string256, 256, "invQuantity[%d]", i);
			InventoryInfo[playerid][i][invQuantity] = dini_Int(accountFileNickname, string256);
		}
	}
}

stock LoadAccount(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);

	format(PlayerInfo[playerid][pPassword], 500, "%s", dini_Get(accountFileNickname, "pPassword"));
	LoadInventory(playerid);
	for (new i; i < 13; i++)
	{
		new string256[256];
		format(string256, 256, "pWeapon[%d]", i);
		PlayerInfo[playerid][pWeapon][i] = dini_Int(accountFileNickname, string256);
		format(string256, 256, "pWeaponAmmo[%d]", i);
		PlayerInfo[playerid][pWeaponAmmo][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pWeaponSkill[%d]", i);
		PlayerInfo[playerid][pWeaponSkill][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pWeaponSkillPoints[%d]", i);
		PlayerInfo[playerid][pWeaponSkillPoints][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pAchievement[%d]", i);
		PlayerInfo[playerid][pAchievement][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 3; i++)
	{
		new string256[256];
		format(string256, 256, "pPrivateVeh[%d]", i);
		PlayerInfo[playerid][pPrivateVeh][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 1; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pFishSlot[%d]", i);
		PlayerInfo[playerid][pFishSlot][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 1; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pFishWeight[%d]", i);
		PlayerInfo[playerid][pFishWeight][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 1; i < MAX_PLAYER_CLOTHES; i++)
	{
		new string256[256];
		format(string256, 256, "pClothes[%d]", i);
		PlayerInfo[playerid][pClothes][i] = dini_Int(accountFileNickname, string256);
	}

    for (new i = 0; i < MAX_PLAYER_ATTACHMENTS; i++)
    {
        new string256[256];
        format(string256, 256, "pAttachements[%d]", i);
        PlayerInfo[playerid][pAttachements][i] = dini_Int(accountFileNickname, string256);
        format(string256, 256, "pAttachementsSlot[%d]", i);
        PlayerInfo[playerid][pAttachementsSlot][i] = dini_Int(accountFileNickname, string256);
        format(string256, 256, "pAttachementsBone[%d]", i);
        PlayerInfo[playerid][pAttachementsBone][i] = dini_Int(accountFileNickname, string256);
        format(string256, 256, "pAttachements_X[%d]", i);
        PlayerInfo[playerid][pAttachements_X] = dini_Float(accountFileNickname, string256);
        format(string256, 256, "pAttachements_Y[%d]", i);
        PlayerInfo[playerid][pAttachements_Y] = dini_Float(accountFileNickname, string256);
        format(string256, 256, "pAttachements_Z[%d]", i);
        PlayerInfo[playerid][pAttachements_Z] = dini_Float(accountFileNickname, string256);
        format(string256, 256, "pAttachements_RX[%d]", i);
        PlayerInfo[playerid][pAttachements_RX] = dini_Float(accountFileNickname, string256);
        format(string256, 256, "pAttachements_RY[%d]", i);
        PlayerInfo[playerid][pAttachements_RY] = dini_Float(accountFileNickname, string256);
        format(string256, 256, "pAttachements_RZ[%d]", i);
        PlayerInfo[playerid][pAttachements_RZ] = dini_Float(accountFileNickname, string256);
    }

    format(PlayerInfo[playerid][pVipText], 64, "%s", dini_Get(accountFileNickname, "pVipTex"));
	PlayerInfo[playerid][pAdmin] = dini_Int(accountFileNickname, "pAdmin");
	PlayerInfo[playerid][pJob] = dini_Int(accountFileNickname, "pJob");
	PlayerInfo[playerid][pGPS] = dini_Bool(accountFileNickname, "pGPS");
	PlayerInfo[playerid][pVudica] = dini_Bool(accountFileNickname, "pVudica");
	PlayerInfo[playerid][pStruv] = dini_Int(accountFileNickname, "pStruv");
	PlayerInfo[playerid][pGiftPaydays] = dini_Int(accountFileNickname, "pGiftPaydays");
	PlayerInfo[playerid][pMuted] = dini_Int(accountFileNickname, "pMuted");
	PlayerInfo[playerid][pJailed] = dini_Int(accountFileNickname, "pJailed");
	PlayerInfo[playerid][pSpawn] = dini_Int(accountFileNickname, "pSpawn");
	PlayerInfo[playerid][pDice] = dini_Bool(accountFileNickname, "pDice");
    PlayerInfo[playerid][pFactionSkin] = dini_Bool(accountFileNickname, "pFactionSkin");
	PlayerInfo[playerid][pFightStyle] = dini_Int(accountFileNickname, "pFightStyle");
	PlayerInfo[playerid][pLastYear] = dini_Int(accountFileNickname, "pLastYear");
	PlayerInfo[playerid][pLastMonth] = dini_Int(accountFileNickname, "pLastMonth");
	PlayerInfo[playerid][pLastDay] = dini_Int(accountFileNickname, "pLastDay");
	PlayerInfo[playerid][pLastMinute] = dini_Int(accountFileNickname, "pLastMinute");
	PlayerInfo[playerid][pLastSecond] = dini_Int(accountFileNickname, "pLastSecond");
	PlayerInfo[playerid][pLastHour] = dini_Int(accountFileNickname, "pLastHour");
    PlayerInfo[playerid][pVipTextColor] = dini_Int(accountFileNickname, "pVipTextColor");
	PlayerInfo[playerid][pInvCapacity] = dini_Int(accountFileNickname, "pInvCapacity");
	PlayerInfo[playerid][pEvent] = dini_Bool(accountFileNickname, "pEvent");
	PlayerInfo[playerid][pPrivateVehFreeSlot] = dini_Int(accountFileNickname, "pPrivateVehFreeSlot");
	PlayerInfo[playerid][pCiggs] = dini_Int(accountFileNickname, "pCiggs");
	PlayerInfo[playerid][pMoneyBag] = dini_Bool(accountFileNickname, "pMoneyBag");
	PlayerInfo[playerid][pCrew] = dini_Int(accountFileNickname, "pCrew");
	PlayerInfo[playerid][pVoucherBGN] = dini_Int(accountFileNickname, "pVoucherBGN");
	PlayerInfo[playerid][pWarns] = dini_Int(accountFileNickname, "pWarns");
	PlayerInfo[playerid][pAdminWarns] = dini_Int(accountFileNickname, "pAdminWarns");
	PlayerInfo[playerid][pTracker] = dini_Bool(accountFileNickname, "pTracker");
	PlayerInfo[playerid][pVip] = dini_Int(accountFileNickname, "pVip");
	PlayerInfo[playerid][pMarijuana] = dini_Int(accountFileNickname, "pMarijuana");
	PlayerInfo[playerid][pHeroin] = dini_Int(accountFileNickname, "pHeroin");
	PlayerInfo[playerid][pFactionBaseSpawn] = dini_Int(accountFileNickname, "pFactionBaseSpawn");
	PlayerInfo[playerid][pCocaine] = dini_Int(accountFileNickname, "pCocaine");
	PlayerInfo[playerid][pJobBoss] = dini_Bool(accountFileNickname, "pJobBoss");
	PlayerInfo[playerid][pPoliceJail] = dini_Int(accountFileNickname, "pPoliceJail");
	PlayerInfo[playerid][pWantedLevel] = dini_Int(accountFileNickname, "pWantedLevel");
	PlayerInfo[playerid][pSelectedGender] = dini_Int(accountFileNickname, "pSelectedGender");
	PlayerInfo[playerid][pFaction] = dini_Int(accountFileNickname, "pFaction");
	PlayerInfo[playerid][pNormalSkin] = dini_Int(accountFileNickname, "pNormalSkin");
	PlayerInfo[playerid][pPoliceDuty] = dini_Bool(accountFileNickname, "pPoliceDuty");
	PlayerInfo[playerid][pArmyDuty] = dini_Bool(accountFileNickname, "pArmyDuty");
	PlayerInfo[playerid][pKACCDuty] = dini_Bool(accountFileNickname, "pKACCDuty");
	PlayerInfo[playerid][pTaxiDuty] = dini_Bool(accountFileNickname, "pTaxiDuty");
	PlayerInfo[playerid][pFuelCoDuty] = dini_Bool(accountFileNickname, "pFuelCoDuty");
	PlayerInfo[playerid][pFbiDuty] = dini_Bool(accountFileNickname, "pFbiDuty");
	PlayerInfo[playerid][pLaser] = dini_Int(accountFileNickname, "pLaser");
	PlayerInfo[playerid][pMission] = dini_Int(accountFileNickname, "pMission");
	PlayerInfo[playerid][pDisableCarRadio] = dini_Bool(accountFileNickname, "pDisableCarRadio");
	PlayerInfo[playerid][pDisableNews] = dini_Bool(accountFileNickname, "pDisableNews");
	PlayerInfo[playerid][pHouseOwnedID] = dini_Int(accountFileNickname, "pHouseOwnedID");
	PlayerInfo[playerid][pBizOwnedID] = dini_Int(accountFileNickname, "pBizOwnedID");
	PlayerInfo[playerid][pAdminDuty] = dini_Bool(accountFileNickname, "pAdminDuty");
	PlayerInfo[playerid][pRank] = dini_Int(accountFileNickname, "pRank");
	PlayerInfo[playerid][pGender] = dini_Int(accountFileNickname, "pGender");
	PlayerInfo[playerid][pCash] = dini_Int(accountFileNickname, "pCash");
	PlayerInfo[playerid][pBank] = dini_Int(accountFileNickname, "pBank");
	PlayerInfo[playerid][pAFK] = dini_Bool(accountFileNickname, "pAFK");
	PlayerInfo[playerid][pLevel] = dini_Int(accountFileNickname, "pLevel");
	PlayerInfo[playerid][pExp] = dini_Int(accountFileNickname, "pExp");
	PlayerInfo[playerid][pSweeperLevel] = dini_Int(accountFileNickname, "pSweeperLevel");
	PlayerInfo[playerid][pBusLevel] = dini_Int(accountFileNickname, "pBusLevel");
	PlayerInfo[playerid][pDeliverLevel] = dini_Int(accountFileNickname, "pDeliverLevel");
	PlayerInfo[playerid][pPizzaLevel] = dini_Int(accountFileNickname, "pPizzaLevel");
	PlayerInfo[playerid][pCoalmineLevel] = dini_Int(accountFileNickname, "pCoalmineLevel");
	PlayerInfo[playerid][pSweeperTimer] = dini_Int(accountFileNickname, "pSweeperTimer");
	PlayerInfo[playerid][pSweeperPassed] = dini_Int(accountFileNickname, "pSweeperPassed");
	PlayerInfo[playerid][pBusPassed] = dini_Int(accountFileNickname, "pBusPassed");
	PlayerInfo[playerid][pPizzaPassed] = dini_Int(accountFileNickname, "pPizzaPassed");
	PlayerInfo[playerid][pCoalminePassed] = dini_Int(accountFileNickname, "pCoalminePassed");
    PlayerInfo[playerid][pDeliverPassed] = dini_Int(accountFileNickname, "pDeliverPassed");
	PlayerInfo[playerid][pBusPassed] = dini_Int(accountFileNickname, "pBusPassed");
	PlayerInfo[playerid][pPizzaTimer] = dini_Int(accountFileNickname, "pPizzaTimer");
	PlayerInfo[playerid][pDeliverTimer] = dini_Int(accountFileNickname, "pDeliverTimer");
	PlayerInfo[playerid][pCoalmineTimer] = dini_Int(accountFileNickname, "pCoalmineTimer");
	PlayerInfo[playerid][pVipGunSpamTimer] = dini_Int(accountFileNickname, "pVipGunSpamTimer");
	PlayerInfo[playerid][pBusTimer] = dini_Int(accountFileNickname, "pBusTimer");
	PlayerInfo[playerid][pLastVRepair] = dini_Int(accountFileNickname, "pLastVRepair");
	PlayerInfo[playerid][pArmourPack] = dini_Int(accountFileNickname, "pArmourPack");
	PlayerInfo[playerid][pSkin] = dini_Int(accountFileNickname, "pSkin");
	PlayerInfo[playerid][pFine] = dini_Int(accountFileNickname, "pFine");
    PlayerInfo[playerid][pKills] = dini_Int(accountFileNickname, "pKills");
	PlayerInfo[playerid][pArmour] = dini_Float(accountFileNickname, "pArmour");

	GivePlayerCash(playerid, 0);
	FixPlayerInfoNullValues(playerid);
	UpdatePlayerWantedStars(playerid);
	AddScreenTexts(playerid);
}

stock GivePlayerCash(playerid, money)
{
	PlayerInfo[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	if(!firstSpawn[playerid])
	{
		SendCashScreenText(playerid, money);
	}
	return PlayerInfo[playerid][pCash];
}

stock GivePlayerCashWithText(playerid, money)
{
	new string256[256];
	if (money >= 0)
	{
		format(string256, 256, "~g~~h~+ %d", money);
		TextDrawSetString(GiveCashText[playerid], string256);
	}
	else if (money <= -1)
	{
		format(string256, 256, "~r~~h~- %d", money);
		TextDrawSetString(GiveCashText[playerid], string256);
	}

	TextDrawShowForPlayer(playerid, GiveCashText[playerid]);
	PlayerTimerInfo[playerid][ptHideGiveCash] = 5;
	PlayerInfo[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}

stock ClearChatBig(playerid)
{
	for (new i; i < 125; i++)
	{
		SendClientMessage(playerid, COLOR_WHITE, "");
	}
}

stock ClearChatSmall(playerid)
{
	for (new i; i < 25; i++)
	{
		SendClientMessage(playerid, COLOR_WHITE, "");
	}
}

stock SetPlayerDutySkinLSPD(playerid)
{
	if (PlayerInfo[playerid][pGender] == GENDER_MALE)
	{
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				SetPlayerSkin(playerid, 280);
			case 2:
				SetPlayerSkin(playerid, 281);
			case 3:
				SetPlayerSkin(playerid, 282);
			case 4:
				SetPlayerSkin(playerid, 265);
			case 5:
				SetPlayerSkin(playerid, 17);
			case 6:
				SetPlayerSkin(playerid, 120);
		}
	}
	else
	{
		SetPlayerSkin(playerid, 308);
	}
}


stock SetPlayerDutySkinRCPD(playerid)
{
	if (PlayerInfo[playerid][pGender] == GENDER_MALE)
	{
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				SetPlayerSkin(playerid, 282);
			case 2:
				SetPlayerSkin(playerid, 282);
			case 3:
				SetPlayerSkin(playerid, 283);
			case 4:
				SetPlayerSkin(playerid, 263);
			case 5:
				SetPlayerSkin(playerid, 17);
			case 6:
				SetPlayerSkin(playerid, 120);
		}
	}
	else
	{
		SetPlayerSkin(playerid, 308);
	}
}

stock SetPlayerDutySkinLVPD(playerid)
{
	if (PlayerInfo[playerid][pGender] == GENDER_MALE)
	{
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				SetPlayerSkin(playerid, 282);
			case 2:
				SetPlayerSkin(playerid, 282);
			case 3:
				SetPlayerSkin(playerid, 283);
			case 4:
				SetPlayerSkin(playerid, 263);
			case 5:
				SetPlayerSkin(playerid, 17);
			case 6:
				SetPlayerSkin(playerid, 120);
		}
	}
	else
	{
		SetPlayerSkin(playerid, 308);
	}
}

stock SetPlayerDutySkinFBI(playerid)
{
	if (PlayerInfo[playerid][pGender] == GENDER_MALE)
	{
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				SetPlayerSkin(playerid, 286);
			case 2:
				SetPlayerSkin(playerid, 163);
			case 3:
				SetPlayerSkin(playerid, 164);
			case 4:
				SetPlayerSkin(playerid, 164);
			case 5:
				SetPlayerSkin(playerid, 165);
			case 6:
				SetPlayerSkin(playerid, 295);
		}
	}
	else
	{
		SetPlayerSkin(playerid, 308);
	}
}

stock SetPlayerDutySkinARMY(playerid)
{
	if (PlayerInfo[playerid][pGender] == GENDER_MALE)
	{
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				SetPlayerSkin(playerid, 287);
			case 2:
				SetPlayerSkin(playerid, 287);
			case 3:
				SetPlayerSkin(playerid, 287);
			case 4:
				SetPlayerSkin(playerid, 287);
			case 5:
				SetPlayerSkin(playerid, 287);
			case 6:
				SetPlayerSkin(playerid, 61);
		}
	}
	else
	{
		SetPlayerSkin(playerid, 308);
	}
}


stock SetPlayerFactionSkin(playerid)
{
	if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 177);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 176);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 156);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 176);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 21);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 21);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 105);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 149);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 86);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 106);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 107);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 107);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 117);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 117);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 118);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 117);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 120);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 120);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 114);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 116);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 114);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 116);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 116);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 115);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_ITALIAN_MAFIA)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 111);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 125);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 124);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 126);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_WCW)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 73);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 291);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 247);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 100);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 248);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 248);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 103);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 103);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 102);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 102);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 104);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 104);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 108);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 109);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 109);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 110);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 110);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 108);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_UNSEEN)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pNormalSkin]);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 111);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 111);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 120);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 120);
			}
		}
}

stock SetPlayerNormalSkin(playerid)
{
	if (PlayerInfo[playerid][pNormalSkin] >= 1)
	{
		SetPlayerSkin(playerid, PlayerInfo[playerid][pNormalSkin]);
	}
	else
	{
		SetPlayerSkin(playerid, 217);
	}
}

stock RestartPlayerSkin(playerid)
{
	if (IsPlayerInAnyVehicle(playerid))
	{
		return 1;
	}

	if (PlayerInfo[playerid][pGender] == GENDER_MALE && PlayerInfo[playerid][pFactionSkin])
	{
		SetPlayerFactionSkin(playerid);
    }

    if(!PlayerInfo[playerid][pFactionSkin])
    {
        SetPlayerNormalSkin(playerid);
    }

    if (PlayerInfo[playerid][pPoliceDuty])
    {
        if(PlayerInfo[playerid][pFaction] == FACTION_LSPD)
        {
            SetPlayerDutySkinLSPD(playerid);
        }
        else if(PlayerInfo[playerid][pFaction] == FACTION_LVPD)
        {
            SetPlayerDutySkinLVPD(playerid);
        }
		else if(PlayerInfo[playerid][pFaction] == FACTION_RCPD)
        {
            SetPlayerDutySkinRCPD(playerid);
        }
    }

	if (PlayerInfo[playerid][pKACCDuty])
    {
        SetPlayerDutySkinARMY(playerid);
    }

    if (PlayerInfo[playerid][pArmyDuty])
    {
        SetPlayerDutySkinARMY(playerid);
    }

    if (PlayerInfo[playerid][pFbiDuty])
    {
        SetPlayerDutySkinFBI(playerid);
    }

	if (PlayerInfo[playerid][pAdminDuty])
	{
		if (PlayerInfo[playerid][pGender] == GENDER_MALE)
		{
			SetPlayerSkin(playerid, 217);
		}
		else if (PlayerInfo[playerid][pGender] == GENDER_FEMALE)
		{
			SetPlayerSkin(playerid, 211);
		}
	}

	return 1;
}

stock SetToOrganisationPos(playerid)
{
	if (inPaintBall[playerid] == true)
	{
		SetPlayerPosToPaintBall(playerid);
		return 1;
	}

	if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1 || PlayerInfo[playerid][pHouseOwnedID] > maxhouses + 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш къща, твоят Spawn беше променен на Faction Spawn!");
			}
			else if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = CIVIL_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш къща, твоят Spawn беше променен на Civilian Spawn!");
			}

			SetToSpawn(playerid);
			return 1;
		}

		new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, HouseInfo[hisHouse][hX], HouseInfo[hisHouse][hY], HouseInfo[hisHouse][hZ]);
	}
	else if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1 || PlayerInfo[playerid][pBizOwnedID] > maxbiz + 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш бизнес, твоят Spawn беше променен на Faction Spawn!");
			}
			else if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = CIVIL_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш бизнес, твоят Spawn беше променен на Civilian Spawn!");
			}

			SetToSpawn(playerid);
			return 1;
		}

		new hisBiz = PlayerInfo[playerid][pBizOwnedID];
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, BizInfo[hisBiz][bX], BizInfo[hisBiz][bY], BizInfo[hisBiz][bZ]);
	}
	else if (PlayerInfo[playerid][pSpawn] == CIVIL_SPAWN)
	{
		new randSpawn = randomex(0, 13);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		switch (randSpawn)
		{
			case 0:
				{
					SetPlayerPos(playerid, 1154.1002, -1768.0070, 16.5938);
					SetPlayerFacingAngle(playerid, 1.2317);
				}

			case 1:
				{
					SetPlayerPos(playerid, 1760.9598, -1901.4241, 13.5643);
					SetPlayerFacingAngle(playerid, 269.4358);
				}

				//TELNET SPAWNS
			case 2:
				{
					SetPlayerPos(playerid, 2178.9063, 1285.6537, 10.8203);
					SetPlayerFacingAngle(playerid, 270.3970);
				}

			case 3:
				{
					SetPlayerPos(playerid, 1027.0188, -1344.9539, 13.7266);
					SetPlayerFacingAngle(playerid, 1.2900);
				}

			case 4:
				{
					SetPlayerPos(playerid, 2216.9980, -1170.4368, 25.7266);
					SetPlayerFacingAngle(playerid, 359.7421);
				}

			case 5:
				{
					SetPlayerPos(playerid, 2097.3970, 2490.7754, 14.8390);
					SetPlayerFacingAngle(playerid, 179.1149);
				}

			case 6:
				{
					SetPlayerPos(playerid, 386.7134, -2028.5282, 7.8359);
					SetPlayerFacingAngle(playerid, 89.3663);
				}

			case 7:
				{
					SetPlayerPos(playerid, 1676.4705, -1634.6233, 14.2266);
					SetPlayerFacingAngle(playerid, 269.8728);
				}

			case 8:
				{
					SetPlayerPos(playerid, 2225.3550, 1838.6611, 10.8203);
					SetPlayerFacingAngle(playerid, 90.2421);
				}

			case 9:
				{
					SetPlayerPos(playerid, 2551.8250, 2244.6887, 10.8203);
					SetPlayerFacingAngle(playerid, 167.6396);
				}

			case 10:
				{
					SetPlayerPos(playerid, 1742.8735, -1863.2289, 13.5753);
					SetPlayerFacingAngle(playerid, 359.7475);
				}

			case 11:
				{
					SetPlayerPos(playerid, 1688.3342, 1447.8641, 10.7678);
					SetPlayerFacingAngle(playerid, 269.8827);
				}

			case 12:
				{
					SetPlayerPos(playerid, 2216.9980, -1170.4368, 25.7266);
					SetPlayerFacingAngle(playerid, 359.7421);
				}
		}

		SetCameraBehindPlayer(playerid);
	}
	else if (PlayerInfo[playerid][pSpawn] == FACTION_SPAWN)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN)
		{
			PlayerInfo[playerid][pSpawn] = CIVIL_SPAWN;
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш Faction, твоят Spawn беше променен на Civilian Spawn!");
			SetToSpawn(playerid);
			return 1;
		}

		//Military Aviation
		if (PlayerInfo[playerid][pFaction] == FACTION_KACC)
		{
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2503.5432,2799.6079,10.8203);
			}
			else if(randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2588.8887,2784.8779,10.8203);
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}

		//San Andreas Army
		if (PlayerInfo[playerid][pFaction] == FACTION_ARMY)
		{
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 211.4815, 1810.5336, 21.8672);
				SetPlayerFacingAngle(playerid, 6.4513);
			}

			if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 207.2556, 1814.8164, 21.8672);
				SetPlayerFacingAngle(playerid, 356.1112);
			}

			if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 216.4520, 1814.0637, 21.86723);
				SetPlayerFacingAngle(playerid, 269.0037);
			}

			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}

		//LVPD - Open
		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1591.7196, -1679.6591, 2982.2700);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1589.6692, -1668.6022, 2982.2700);
			}

			SetCameraBehindPlayer(playerid);
			FreezeAntiDropOnSpawn(playerid);
		}

		//LVPD - Close
		//LSPD - Open
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1361.7283,1577.9279,1468.7877);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1356.2367,1568.9114,1467.6976);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 1353.5338,1576.3496,1467.6976);
			}

			SetCameraBehindPlayer(playerid);
			FreezeAntiDropOnSpawn(playerid);
		}

		//LSPD - Close
		
		//RCPD - Open
		if (PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 632.6009,-574.5419,16.3359);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 632.5308,-557.5382,16.3359);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 621.0555,-586.2197,17.2330);
			}
			FreezeAntiDropOnSpawn(playerid);
			SetCameraBehindPlayer(playerid);
		}
		//RCPD - Close
		if (PlayerInfo[playerid][pFaction] == FACTION_UNSEEN)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 7);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 870.6838,1918.8923,-89.8059);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 881.1417,1914.6948,-88.9928);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 882.9411,1920.6356,-88.9928);
			}
			
			SetCameraBehindPlayer(playerid);

		}

		if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 317.6528, 1121.1263, 1083.8828);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 321.3961, 1121.6896, 1083.8828);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 142.0186, 1369.6454, 1083.8643);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 139.3100, 1379.4185, 1088.3672);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_WCW)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 671.6198, -458.3946, 16.5363);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 672.3406, -471.3957, 16.5363);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 655.7034, -469.8148, 16.3359);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2191.0217, -1202.4036, 1049.0234);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2193.2202, -1211.8517, 1049.0234);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 2184.1042, -1206.2347, 1049.0234);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2237.5654, -1076.6680, 1049.0234);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2237.6440, -1072.9741, 1049.0234);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 2243.5703, -1074.0305, 1049.0310);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_ITALIAN_MAFIA)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 447.4254, 1401.6086, 1084.3120);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 446.5664, 1406.0546, 1084.3047);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 450.2023, 1407.4314, 1084.3080);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2496.0024, -1709.4805, 1014.7422);
				SetPlayerFacingAngle(playerid, 2.1533);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2496.0024, -1709.4805, 1014.7422);
				SetPlayerFacingAngle(playerid, 2.1533);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
		{
			SetPlayerVirtualWorld(playerid, 2);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 142.0186, 1369.6454, 1083.8643);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 139.3100, 1379.4185, 1088.3672);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1565.2728, -1688.5635, 62.1910);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1571.5658, -1686.5858, 62.1910);
			}

			SetCameraBehindPlayer(playerid);
			FreezeAntiDropOnSpawn(playerid);
		}
	}

	return 1;
}

stock ResetPlayerInfo(playerid)
{
	for (new i = 0; i < 13; i++)
	{
		PlayerInfo[playerid][pWeapon][i] = 0;
	}

	for (new i = 0; i < 13; i++)
	{
		PlayerInfo[playerid][pWeaponAmmo][i] = 0;
	}

	for (new i = 0; i < 11; i++)
	{
		PlayerInfo[playerid][pWeaponSkill][i] = 1;
	}

	for (new i; i < 11; i++)
	{
		PlayerInfo[playerid][pWeaponSkillPoints][i] = 0;
	}

	for (new i; i < 11; i++)
	{
		PlayerInfo[playerid][pAchievement][i] = 0;
	}

	for (new i = 1; i < 11; i++)
	{
		PlayerInfo[playerid][pFishSlot][i] = 0;
	}

	for (new i = 1; i < 11; i++)
	{
		PlayerInfo[playerid][pFishWeight][i] = 0;
	}

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		PlayerInfo[playerid][pClothes][i] = 0;
	}

    for (new i = 0; i < MAX_PLAYER_ATTACHMENTS; i++)
    {
        PlayerInfo[playerid][pAttachements][i] = 0;
    }

	for (new i = 0; i < 3; i++)
	{
		PlayerInfo[playerid][pPrivateVeh][i] = -1;
	}

	PlayerInfo[playerid][pDice] = false;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pCocaine] = 0;
	PlayerInfo[playerid][pHeroin] = 0;
	PlayerInfo[playerid][pMarijuana] = 0;
	PlayerInfo[playerid][pFactionBaseSpawn] = 0;
	PlayerInfo[playerid][pGPS] = false;
	PlayerInfo[playerid][pVudica] = false;
	PlayerInfo[playerid][pStruv] = 0;
	PlayerInfo[playerid][pGiftPaydays] = 0;
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pFightStyle] = 0;
	PlayerInfo[playerid][pLastYear] = 0;
	PlayerInfo[playerid][pLastMonth] = 0;
	PlayerInfo[playerid][pLastDay] = 0;
	PlayerInfo[playerid][pLastMinute] = 0;
	PlayerInfo[playerid][pLastSecond] = 0;
	PlayerInfo[playerid][pLastHour] = 0;
    PlayerInfo[playerid][pVipTextColor] = 0;
	PlayerInfo[playerid][pSpawn] = CIVIL_SPAWN;
	PlayerInfo[playerid][pInvCapacity] = 0;
	PlayerInfo[playerid][pPrivateVehFreeSlot] = 0;
	PlayerInfo[playerid][pEvent] = false;
	PlayerInfo[playerid][pCiggs] = 0;
	PlayerInfo[playerid][pMoneyBag] = false;
	PlayerInfo[playerid][pCrew] = -1;
	PlayerInfo[playerid][pVoucherBGN] = 0;
	PlayerInfo[playerid][pFactionSkin] = true;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pAdminWarns] = 0;
	PlayerInfo[playerid][pTracker] = false;
	PlayerInfo[playerid][pVip] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pJobBoss] = false;
	PlayerInfo[playerid][pPoliceJail] = 0;
	PlayerInfo[playerid][pFine] = 0;
	PlayerInfo[playerid][pFaction] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pSkin] = 0;
	PlayerInfo[playerid][pWantedLevel] = 0;
	PlayerTimerInfo[playerid][ptLastOverSpeed] = 0;
	PlayerInfo[playerid][pPlayedSeconds] = 0;
	PlayerTimerInfo[playerid][ptRinging] = 0;
	PlayerInfo[playerid][pPoliceDuty] = false;
	PlayerInfo[playerid][pArmyDuty] = false;
	PlayerInfo[playerid][pKACCDuty] = false;
	PlayerInfo[playerid][pTaxiDuty] = false;
	PlayerInfo[playerid][pFuelCoDuty] = false;
	PlayerInfo[playerid][pFbiDuty] = false;
	PlayerInfo[playerid][pLaser] = 0;
	PlayerInfo[playerid][pMission] = 1;
	PlayerInfo[playerid][pDisableCarRadio] = false;
	PlayerInfo[playerid][pDisableNews] = false;
	PlayerInfo[playerid][pHouseOwnedID] = -1;
	PlayerInfo[playerid][pBizOwnedID] = -1;
	PlayerInfo[playerid][pAdminDuty] = false;
	PlayerInfo[playerid][pGender] = 0;
	PlayerInfo[playerid][pSelectedGender] = 0;
	PlayerInfo[playerid][pArmour] = 0;
	PlayerInfo[playerid][pArmourPack] = 0;
	PlayerInfo[playerid][pCash] = 0;
	PlayerInfo[playerid][pPizzaTimer] = 0;
	PlayerInfo[playerid][pDeliverTimer] = 0;
	PlayerInfo[playerid][pCoalmineTimer] = 0;
	PlayerInfo[playerid][pVipGunSpamTimer] = 0;
	PlayerInfo[playerid][pSweeperTimer] = 0;
	PlayerInfo[playerid][pPizzaPassed] = 0;
	PlayerInfo[playerid][pDeliverPassed] = 0;
    PlayerInfo[playerid][pKills] = 0;
	PlayerInfo[playerid][pCoalminePassed] = 0;
	PlayerInfo[playerid][pBusPassed] = 0;
	PlayerInfo[playerid][pSweeperPassed] = 0;
	PlayerInfo[playerid][pSweeperLevel] = 1;
	PlayerInfo[playerid][pBusLevel] = 1;
	PlayerInfo[playerid][pDeliverLevel] = 1;
	PlayerInfo[playerid][pCoalmineLevel] = 1;
	PlayerInfo[playerid][pPizzaLevel] = 1;
	PlayerInfo[playerid][pBusTimer] = 0;
	PlayerInfo[playerid][pLastVRepair] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pAFK] = false;
	PlayerTimerInfo[playerid][ptFishTimer] = 0;
	PlayerTimerInfo[playerid][ptAFKBack] = 0;
	PlayerTimerInfo[playerid][ptShowIntro] = 0;
	PlayerTimerInfo[playerid][ptSetToSpawnVar] = 0;
	PlayerTimerInfo[playerid][ptHideGiveCash] = 0;
	PlayerTimerInfo[playerid][ptBan] = 0;
	PlayerTimerInfo[playerid][ptFinishDrugEffect] = 0;
	PlayerTimerInfo[playerid][ptFreeze] = 0;
	PlayerTimerInfo[playerid][ptHideCommandInfo] = 0;
	PlayerTimerInfo[playerid][ptHideCashInfo] = 0;
	PlayerTimerInfo[playerid][ptHideMessageInfo] = 0;
	PlayerTimerInfo[playerid][ptHideScreenLevelInfo] = 0;
	PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] = 0;
	PlayerTimerInfo[playerid][ptAntiAssaultSpamAttacker] = 0;
	PlayerTimerInfo[playerid][ptAntiAssaultSpamDamaged] = 0;
	PlayerTimerInfo[playerid][ptSetArmourObject] = 0;
	PlayerTimerInfo[playerid][ptRemoveArmourObject] = 0;
	PlayerTimerInfo[playerid][ptSetPlayerArmourObjTimer] = 0;
	PlayerTimerInfo[playerid][ptDuelTimer] = 0;
	PlayerTimerInfo[playerid][ptDuelTimer2] = 0;
	PlayerTimerInfo[playerid][ptDuelTimer3] = 0;
	PlayerTimerInfo[playerid][ptDuelTimer4] = 0;
}

stock ResetPlayerVariables(playerid)
{
	for (new i = 0; i < 20; i++)
	{
		policeBarricade[playerid][i] = -1;
	}
	pDrunkLevelLast[playerid] = 0;
	pFPS[playerid] = 30;
	rentorVeh[playerid] = false;
	sentMissionMSG[playerid] = false;
	isInDuel[playerid] = false;
	duelMoneyBet[playerid] = 0;
	duelSended[playerid] = -1;
	duelInvitor[playerid] = -1;
	startedSnow[playerid] = false;
	replyPM[playerid] = -1;
    attachIndex[playerid] = -1;
	AFKDetect[playerid] = 0;
	changeGunTimer[playerid] = 0;
	playerCurrentGun[playerid] = 0;
	playerAfkSeconds[playerid] = 0;
	playerAfkMinutes[playerid] = 0;
	LastPos[playerid][lpUsed] = 0;
	buyItemWithBGNIndex[playerid] = -1;
	RemovePlayerSiren(playerid);
	policeSiren[playerid] = -1;
	RemoveTmpVehApplyObject(playerid);
	addVehObjectID[playerid] = -1;
	selectedCrewID[playerid] = -1;
	addVehObjectIDType[playerid] = -1;
	hisLastVeh[playerid] = -1;
	vehLocker[playerid] = -1;
	didVote[playerid] = false;
    eventCreator[playerid] = false;
    loadedClothes[playerid] = false;
    inEvent[playerid] = false;
	inPaintBall[playerid] = false;
	logoTextEnabled[playerid] = true;
	timeTextEnabled[playerid] = true;
	setToSpawn[playerid] = false;
	buyingVehStoreIndex[playerid] = -1;
	playerVehToBuy[playerid] = -1;
	inBuyVehVW[playerid] = -1;
	isNormalRobberyLeaderPlayer[playerid] = false;
	isAtmRobber[playerid] = false;
	inNormalRobbery[playerid] = false;
	busTeleportTimer[playerid] = 0;
	buyFoodSelect[playerid] = 0;
	buyDrinkSelect[playerid] = 0;
	isRobber[playerid] = false;
	vehOffererOfferTo[playerid] = -1;
	vehOfferPrivateVehIndex[playerid] = -1;
	vehBuyerBuyFrom[playerid] = -1;
	houseOffererOfferTo[playerid] = -1;
	houseOfferPrice[playerid] = 0;
	houseBuyerBuyFrom[playerid] = -1;
	bizOffererOfferTo[playerid] = -1;
	bizOfferPrice[playerid] = 0;
	bizBuyerBuyFrom[playerid] = -1;
	turfAttacker[playerid] = false;
	gpsOn[playerid] = false;
	lottoNumber[playerid] = 0;
	gateopening[playerid] = false;
	scripterMode[playerid] = false;
	inTaxiVeh[playerid] = false;
	isWorkingBus[playerid] = false;
	isWorkingSweep[playerid] = false;
	isWorkingDeliver[playerid] = false;
	isWorkingCoalmine[playerid] = false;
	isWorkingPizza[playerid] = false;
	firstTryGetDocuments[playerid] = false;
	spec[playerid] = false;
	spawned[playerid] = false;
	firstSpawn[playerid] = true;
	isLogged[playerid] = false;
	newProfile_firstSpawn[playerid] = false;
	TeamInvite[playerid] = -1;
	RepairInvite[playerid] = -1;
	vehicleStickerPlayer[playerid] = -1;
	JobInvite[playerid] = -1;
	passwordChances[playerid] = 3;
}

stock ShowPlayerIntro(playerid)
{
	new randomMusic = random(sizeof(joinAudioStream));
	PlayAudioStreamForPlayer(playerid, joinAudioStream[randomMusic]);
	TogglePlayerSpectating(playerid, true);
	CameraMovingOnJoin(playerid);
	ShowWelcomeTextDraws(playerid);
	PlayerTimerInfo[playerid][ptEndIntro] = 12;
	SetPlayerTime(playerid, 0, 0);
}

stock RemoveBuildingsForPlayer(playerid)
{
	//grove 2
	RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2487.3984, -1688.1016, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2488.8047, -1684.7891, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2491.8984, -1688.1016, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2498.6719, -1688.2344, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3594, 2532.9844, -1719.4297, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3594, 2537.9688, -1700.7109, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2491.2344, -1653.9609, 12.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2492.2656, -1653.9922, 12.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2505.6719, -1658.9063, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2510.9219, -1656.1328, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2501.9297, -1650.5078, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 3594, 2514.3906, -1658.6016, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 2446.5547, -1681.0703, 12.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3593, 2457.8672, -1679.6719, 12.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2475.0000, -1653.6094, 12.7891, 0.25);
	//grove 2
	//cripz
	RemoveBuildingForPlayer(playerid, 3728, 319.1719, -1226.4922, 76.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3730, 356.9844, -1201.4531, 67.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 13878, 370.0156, -1236.7813, 61.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3613, 319.1719, -1226.4922, 76.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 322.1328, -1225.2031, 84.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 314.6016, -1225.1406, 84.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 322.5234, -1215.1641, 75.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 327.6094, -1211.1953, 74.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 321.6875, -1211.4766, 75.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 333.3594, -1206.5938, 74.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 327.2188, -1208.0703, 85.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 341.2813, -1221.3438, 64.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 13748, 370.0156, -1236.7813, 61.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 338.6094, -1203.1563, 73.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3608, 356.9844, -1201.4531, 67.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 352.4688, -1202.1563, 80.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 359.4219, -1194.1016, 81.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 373.9688, -1191.9609, 66.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 374.2031, -1178.3594, 72.7813, 0.25);
	//cripz
	//grove
	RemoveBuildingForPlayer(playerid, 3592, 2451.7344, -1637.4844, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 17879, 2484.5313, -1667.6094, 21.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2448.9141, -1648.8516, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2446.7734, -1646.4219, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2453.9609, -1653.6953, 12.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2455.9063, -1648.8047, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3593, 2437.4844, -1644.1172, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2460.5859, -1642.4922, 12.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 17514, 2449.1563, -1639.0234, 13.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3589, 2451.7344, -1637.4844, 15.1328, 0.25);
	//grove
	//Unseen Criminals - open
	RemoveBuildingForPlayer(playerid, 691, 1290.8750, -2042.6094, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1290.9766, -2025.9375, 60.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1284.9844, -2020.2500, 57.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1242.7266, -2007.3828, 64.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1280.2031, -2007.3828, 63.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1270.8984, -2000.6563, 57.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1279.4141, -1998.4766, 56.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1260.0781, -1995.7813, 55.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1280.4453, -1992.7422, 54.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1291.0469, -2007.0703, 54.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1286.0000, -2000.3984, 55.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1291.0938, -1997.9922, 53.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1407.8438, -2020.5234, 50.5938, 0.25);
	//Unseen Criminals - close
	//San Andreas Army - open
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	//San Andreas Army - close
	//beach objects - open
	RemoveBuildingForPlayer(playerid, 1266, 400.0938, -1753.1016, 17.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 337.4531, -1875.0000, 3.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 289.2266, -1875.0000, 3.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 245.5391, -1875.0000, 2.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 245.5391, -1875.0000, 2.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 289.2266, -1875.0000, 3.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 337.4531, -1875.0000, 3.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 400.0938, -1753.1094, 17.1406, 0.25);
	//beach objects - close
	//army - open
	RemoveBuildingForPlayer(playerid, 986, 2497.409, 2769.110, 11.531, 0.250);
	RemoveBuildingForPlayer(playerid, 985, 2497.409, 2777.070, 11.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2497.909, 2823.850, 24.007, 0.250);
	RemoveBuildingForPlayer(playerid, 7102, 2514.590, 2822.949, 13.250, 0.250);
	RemoveBuildingForPlayer(playerid, 7169, 2514.590, 2822.949, 13.250, 0.250);
	//army - close
	//mechanic - open
	RemoveBuildingForPlayer(playerid, 5397, 1866.329, -1789.780, 20.945, 0.250);
    RemoveBuildingForPlayer(playerid, 5536, 1866.329, -1789.780, 20.945, 0.250);
    RemoveBuildingForPlayer(playerid, 1308, 1867.719, -1798.199, 12.703, 0.250);
	//mechanic - close
	//Los Santos Parking - open
	RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1791.1797, -1816.6328, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1788.5078, -1816.5703, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1796.9609, -1817.3906, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
	//Los Santos Parking - close
	//police ls
	RemoveBuildingForPlayer(playerid, 1266, 1565.4141, -1722.3125, 25.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1565.4141, -1722.3125, 25.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1545.5234, -1678.8438, 14.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1545.5625, -1672.2188, 14.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1541.4766, -1648.4531, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1642.0313, 13.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4192, 1591.6953, -1674.8516, 20.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 1118.9063, -2008.2422, 75.0234, 0.25);
	//police ls
	//Los Santos Park near Police - open
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1693.3906, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1687.1016, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);

	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1664.6250, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1658.3438, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);

	//Los Santos park near Police - close
}

stock AddScreenTexts(playerid)
{
	TextDrawShowForPlayer(playerid, Clock[playerid]);
	TextDrawShowForPlayer(playerid, ServerLogo[playerid]);
	//TextDrawShowForPlayer(playerid,SiteText);
}

stock AddPlayerMapIcons(playerid)
{
	SetPlayerMapIcon(playerid, 1, LOC_FUELSTATION_1, 56, 0);
	SetPlayerMapIcon(playerid, 2, LOC_FUELSTATION_2, 56, 0);
	SetPlayerMapIcon(playerid, 3, LOC_FUELSTATION_3, 56, 0);
	SetPlayerMapIcon(playerid, 4, LOC_FUELSTATION_4, 56, 0);
	SetPlayerMapIcon(playerid, 5, LOC_FUELSTATION_5, 56, 0);
	SetPlayerMapIcon(playerid, 6, LOC_FUELSTATION_6, 56, 0);
	SetPlayerMapIcon(playerid, 7, LOC_FUELSTATION_7, 56, 0);
	SetPlayerMapIcon(playerid, 8, LOC_FUELSTATION_8, 56, 0);
	SetPlayerMapIcon(playerid, 9, LOC_FUELSTATION_9, 56, 0);
	SetPlayerMapIcon(playerid, 10, LOC_FUELSTATION_10, 56, 0);
	SetPlayerMapIcon(playerid, 11, LOC_FUELSTATION_11, 56, 0);
	SetPlayerMapIcon(playerid, 12, LOC_FUELSTATION_12, 56, 0);
	SetPlayerMapIcon(playerid, 13, LOC_FUELSTATION_13, 56, 0);
	SetPlayerMapIcon(playerid, 14, LOC_FUELSTATION_14, 56, 0);
	SetPlayerMapIcon(playerid, 15, LOC_FUELSTATION_15, 56, 0);
	SetPlayerMapIcon(playerid, 16, LOC_FUELSTATION_16, 56, 0);
	//Locations
	CreateDynamicMapIconEx(MiniGamesArena, 23, 0, MAPICON_LOCAL, 105.0);

	CreateDynamicMapIconEx(Police, 30, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(RobPoint, 36, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(RobPointBC, 36, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(Bank, 52, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(Autosallon, 55, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(GarageNeon, 55, 0, MAPICON_LOCAL, 105.0);

	CreateDynamicMapIconEx(FishingPlace, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(PizzaJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(TaxiJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(SweepJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(MechanicJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(DeliverJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(CoalmineJob, 19, 0, MAPICON_LOCAL, 105.0);
	//ATMS
	CreateDynamicMapIconEx(LOC_ATM_1, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_2, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_3, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_4, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_5, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_6, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_7, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_8, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_9, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_10, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_11, 52, 0, MAPICON_LOCAL, 25.0);
}

stock ShowPlayerBoxesTextDraws(playerid)
{
	TextDrawShowForPlayer(playerid, Box[0]);
	TextDrawShowForPlayer(playerid, Box[1]);
}

stock HidePlayerBoxesTextDraws(playerid)
{
	TextDrawHideForPlayer(playerid, Box[0]);
	TextDrawHideForPlayer(playerid, Box[1]);
}

stock getJobName(job)
{
	new name[60];
	format(name, 60, "%s", JobInfo[job][jName]);
	return name;
}

stock getFactionName(faction)
{
	new name[60];
	format(name, 60, "%s", FactionInfo[faction][fName]);
	return name;
}

stock SaveGraffiti(graffitiID)
{
	new stringGraffiti[180];
	format(stringGraffiti, 180, "/Graffiti/%d.ini", graffitiID);
	if (dini_Exists(stringGraffiti))
	{
		dini_IntSet(stringGraffiti, "GraffitiOwner", GraffitiInfo[graffitiID][GraffitiOwner]);
		dini_FloatSet(stringGraffiti, "gX", GraffitiInfo[graffitiID][gX]);
		dini_FloatSet(stringGraffiti, "gY", GraffitiInfo[graffitiID][gY]);
		dini_FloatSet(stringGraffiti, "gZ", GraffitiInfo[graffitiID][gZ]);
		dini_FloatSet(stringGraffiti, "gXY", GraffitiInfo[graffitiID][gXY]);
		dini_FloatSet(stringGraffiti, "gYY", GraffitiInfo[graffitiID][gYY]);
		dini_FloatSet(stringGraffiti, "gZY", GraffitiInfo[graffitiID][gZY]);
	}
}

stock LoadGraffiti()
{
	new stringGraffiti[180];
	for (new g = 0; g < MAX_GRAFFITI; g++)
	{
		format(stringGraffiti, 180, "/Graffiti/%d.ini", g);
		if (dini_Exists(stringGraffiti))
		{
			GraffitiInfo[g][GraffitiOwner] = dini_Int(stringGraffiti, "GraffitiOwner");
			GraffitiInfo[g][gX] = dini_Float(stringGraffiti, "gX");
			GraffitiInfo[g][gY] = dini_Float(stringGraffiti, "gY");
			GraffitiInfo[g][gZ] = dini_Float(stringGraffiti, "gZ");
			GraffitiInfo[g][gXY] = dini_Float(stringGraffiti, "gXY");
			GraffitiInfo[g][gYY] = dini_Float(stringGraffiti, "gYY");
			GraffitiInfo[g][gZY] = dini_Float(stringGraffiti, "gZY");
			new gangName[60];
			format(gangName, 60, "%s", getFactionName(GraffitiInfo[g][GraffitiOwner]));
			new gangColor = FactionInfo[GraffitiInfo[g][GraffitiOwner]][fGrColor];
			GraffitiInfo[g][gObjectID] = CreateDynamicObject(19482, GraffitiInfo[g][gX], GraffitiInfo[g][gY], GraffitiInfo[g][gZ], GraffitiInfo[g][gXY], GraffitiInfo[g][gYY], GraffitiInfo[g][gZY], -1, 0, -1, 200);
			SetDynamicObjectMaterialText(GraffitiInfo[g][gObjectID], 0, gangName, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, gangColor, 0, 1);
			CreateDynamicMapIconEx(GraffitiInfo[g][gX], GraffitiInfo[g][gY], GraffitiInfo[g][gZ], 53, 0, MAPICON_LOCAL, 145.0);
			maxGraffiti++;
		}
	}

	printf("Life of San Andreas Server - System: Графитите бяха заредени. %d графита", maxGraffiti);
}

stock LoadTurfs()
{
	new stringTurf[180];
	for (new t = 0; t < MAX_TURFS; t++)
	{
		format(stringTurf, 180, "/Turfs/%d.ini", t);
		if (dini_Exists(stringTurf))
		{
			if(!isMainTurf(t))
			{
				format(stringTurf, 180, "/Turfs/%d.ini", t);
				TurfInfo[t][TurfOwner] = dini_Int(stringTurf, "TurfOwner");
			}
		}

		GangZoneCreate(TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]);
	}

	printf("Life of San Andreas Server - System: Териториите бяха заредени");
}

stock LoadPlayerTurfs(playerid)
{
	for (new t = 0; t < MAX_TURFS; t++)
	{
		GangZoneShowForPlayer(playerid, t, FactionInfo[TurfInfo[t][TurfOwner]][fColor]);
	}
}

stock ResetPlayerInventory(playerid)
{
	for (new i = 0; i != MAX_INVENTORY; i++)
	{
		InventoryInfo[playerid][i][invExists] = false;
		InventoryInfo[playerid][i][invModel] = 0;
		InventoryInfo[playerid][i][invQuantity] = 0;
	}
}

public OnPlayerConnect(playerid)
{
	if (serverGmxTimer > 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "SERVER: Сървърът се рестартира в момента!");
		PlayerTimerInfo[playerid][ptKick] = 1;
	}
    if(!IsPlayerNPC(playerid))
    {
        Remove3DVipLabel(playerid);
        RemoveBuildingsForPlayer(playerid);
    	ClearChatSmall(playerid);
    	DefinePlayerScreenTexts(playerid);
    	AddPlayerMapIcons(playerid);
    	LoadPlayerTurfs(playerid);
    	ResetPlayerInventory(playerid);
    	new accountFileNickname[256];
    	new accountNickname[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, accountNickname, 25);
    	format(accountFileNickname, 256, "%s.ini", accountNickname);
    	if (dini_Exists(accountFileNickname))
    	{
    		new warns = dini_Int(accountFileNickname, "pWarns");
    		if (warns >= 5)
    		{
    			SendClientMessage(playerid, COLOR_DARKRED2, "SERVER: Акаунтът ти е блокиран!");
    			ForceClassSelection(playerid);
    			TogglePlayerSpectating(playerid, true);
    			PlayerTimerInfo[playerid][ptKick] = 1;
    			return 1;
    		}
    	}

    	new string256[256];
    	for (new i; i < MAX_PLAYERS; i++)
    	{
    		if (playerid != i)
    		{
    			format(string256, 256, "%s {ffffff}влезе в сървъра!", GetAccountNickname(playerid));
    			SendClientMessage(i, 0x00e600FF, string256);
    		}
    	}

    	ResetPlayerVariables(playerid);
    	ResetPlayerInfo(playerid);
    	PlayerTimerInfo[playerid][ptShowIntro] = 1;
    	SetPlayerDefaultColor(playerid);
    }
	return 1;
}

stock GetRentedVehicleID(playerid)
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		if (VehicleInfo[i][vRentedBy] == playerid)
		{
			VehicleTimerInfo[i][vtRespawn] = 5 * 60;
			VehicleTimerInfo[i][vtRentTime] = 0;
			VehicleInfo[i][vRentedBy] = -1;
		}
	}
}

stock DestroyBuyVehicle(playerid)
{
	if (playerVehToBuy[playerid] != -1 && isLogged[playerid] == true)
	{
		DestroyVehicle(playerVehToBuy[playerid]);
	}
}

stock LeaveAllWorkingJobs(playerid)
{
	inTaxiVeh[playerid] = false;
	isTaxiVehWorking[playerid] = false;
	isWorkingSweep[playerid] = false;
	isWorkingBus[playerid] = false;
	isWorkingPizza[playerid] = false;
	isBusVehWorking[playerid] = false;
	isWorkingDeliver[playerid] = false;
	isWorkingCoalmine[playerid] = false;
}

public OnPlayerDisconnect(playerid, reason)
{
	new string256[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(string256, 256, "%s {ffffff}излезе от сървъра!", GetAccountNickname(playerid));
	SendClientMessageToAll(0xFF0000FF, string256);
	SaveAccount(playerid);
	UnlockOLockedVeh(playerid);
	GetRentedVehicleID(playerid);
	DestroyBuyVehicle(playerid);
	LeaveAllWorkingJobs(playerid);
	RemovePlayerSiren(playerid);
	RemoveTmpVehApplyObject(playerid);
	RemovePoliceBarricade(playerid);
    Remove3DVipLabel(playerid);
    RemovePlayerAttacheds(playerid);
	if(rentorVeh[playerid])
	{
		UnRentPlayerVeh(playerid);
	}
	if (isInDuel[playerid] == true)
	{
		SetPlayerDefaultColor(duelEnemy[playerid]);
		new stringduel[256];
		GivePlayerCash(playerid, -duelMoneyBet[playerid]);
		GivePlayerCash(duelEnemy[playerid], duelMoneyBet[playerid]);
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer2] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer3] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer4] = 0;
		format(stringduel, 256, "DUEL: Ти победи служебно, защото %s излезе от сървъра и получаваш $%d от залога", GetPlayerNickname(playerid), duelMoneyBet[playerid]);
		SendClientMessage(duelEnemy[playerid], COLOR_DUEL, stringduel);
		duelMoneyBet[duelEnemy[playerid]] = 0;
		SetPlayerPos(duelEnemy[duelEnemy[playerid]], beforeDuelX[duelEnemy[playerid]], beforeDuelY[duelEnemy[playerid]], beforeDuelZ[duelEnemy[playerid]]);
		SetPlayerHealth(duelEnemy[playerid], beforeDuelHealth[duelEnemy[playerid]]);
		SetPlayerArmour(duelEnemy[playerid], beforeDuelArmour[duelEnemy[playerid]]);
		SetPlayerInterior(duelEnemy[playerid], beforeDuelInterior[duelEnemy[playerid]]);
		SetPlayerVirtualWorld(duelEnemy[playerid], beforeDuelVirtualWorld[duelEnemy[playerid]]);
		duelInvitor[duelEnemy[playerid]] = -1;
		duelSended[duelEnemy[playerid]] = -1;
		duelEnemy[duelEnemy[playerid]] = -1;
	}
	if (duelInvitor[playerid] != -1)
	{
		new string[256];
		format(string, 256, "DUEL: %s излезе от сървъра и поканата за дуел е отменена", GetPlayerNickname(duelSended[duelInvitor[playerid]]));
		SendClientMessage(duelSended[playerid], COLOR_DUEL, string);
		duelInvitor[playerid] = -1;
		isInDuel[duelInvitor[playerid]] = false;
		duelSended[duelInvitor[playerid]] = -1;
	}
	if (duelSended[playerid] != -1)
	{
		new string[256];
		format(string, 256, "DUEL: %s излезе от сървъра и поканата за дуел е отменена", GetPlayerNickname(playerid));
		SendClientMessage(duelSended[playerid], COLOR_DUEL, string);
		duelSended[playerid] = -1;
		isInDuel[duelSended[playerid]] = false;
		duelInvitor[duelSended[playerid]] = -1;
	}
	
	if(startedSnow[playerid])
	{
		RemoveSnowObjects(playerid);
	}
    if(inEvent[playerid])
    {
        eventPlayers--;
    }
	if (isAtmRobber[playerid] == true)
	{
		SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда успяха да спрат крадеца!");
		StopAtmRobbery();
	}

	if (isNormalRobberyLeaderPlayer[playerid] == true && isLogged[playerid] == true)
	{
		SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: *Обирът приключи, защото лидерът напусна сървъра *");
		SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда успяха да спрат крадците!");
		StopRobbery();
	}

	if (inNormalRobbery[playerid] == true && isNormalRobberyLeaderPlayer[playerid] == false && isLogged[playerid] == true)
	{
		format(string256, 256, "Robbery: %s напусна сървъра и отпадна от обира.", GetPlayerNickname(playerid));
		SendNormalRobberyMessage(COLOR_ORANGE, string256);
		normalRobberyMembers -= 1;
	}

	if (vehOffererOfferTo[playerid] != -1 && isLogged[playerid] == true)
	{
		new vehBuyer = vehOffererOfferTo[playerid];
		SendClientMessage(vehBuyer, COLOR_WHITE, "SERVER: Човекът, на който предложи продажба излезе от сървъра!");
		vehBuyerBuyFrom[vehBuyer] = -1;
	}

	if (vehBuyerBuyFrom[playerid] != -1 && isLogged[playerid] == true)
	{
		new vehOfferer = vehOffererOfferTo[playerid];
		SendClientMessage(vehOfferer, COLOR_WHITE, "SERVER: Човекът, който ти предложи продажба излезе от сървъра!");
		vehOffererOfferTo[vehOfferer] = -1;
	}

	if (houseOffererOfferTo[playerid] != -1 && isLogged[playerid] == true)
	{
		new houseBuyer = houseOffererOfferTo[playerid];
		SendClientMessage(houseBuyer, COLOR_WHITE, "SERVER: Човекът, на който предложи продажба на къща излезе от сървъра!");
		houseBuyerBuyFrom[houseBuyer] = -1;
	}

	if (houseBuyerBuyFrom[playerid] != -1 && isLogged[playerid] == true)
	{
		new houseOfferer = houseOffererOfferTo[playerid];
		SendClientMessage(houseOfferer, COLOR_WHITE, "SERVER: Човекът, който ти предложи продажба на къща излезе от сървъра!");
		houseOffererOfferTo[houseOfferer] = -1;
	}

	if (bizOffererOfferTo[playerid] != -1 && isLogged[playerid] == true)
	{
		new bizBuyer = bizOffererOfferTo[playerid];
		SendClientMessage(bizBuyer, COLOR_WHITE, "SERVER: Човекът, на който предложи продажба на бизнес излезе от сървъра!");
		bizBuyerBuyFrom[bizBuyer] = -1;
	}

	if (bizBuyerBuyFrom[playerid] != -1 && isLogged[playerid] == true)
	{
		new bizOfferer = bizOffererOfferTo[playerid];
		SendClientMessage(bizOfferer, COLOR_WHITE, "SERVER: Човекът, който ти предложи продажба на бизнес излезе от сървъра!");
		bizOffererOfferTo[bizOfferer] = -1;
	}

	if (turfAttacker[playerid] == true && isLogged[playerid] == true)
	{
		new Faction = PlayerInfo[playerid][pFaction];
		format(string256, 256, "[FACTION CHAT] %s излезе от сървъра и отпадна от атаката на територията!", GetPlayerNickname(playerid));
		SendFactionMessage(Faction, COLOR_TURF, string256);
		LeaveTurfAttacker(playerid);
	}
    LeaveFromPaintBall(playerid);
	return 1;
}

stock ResetInteriorAndWorld(playerid)
{
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
}

stock RestVwAndInterior(playerid)
{
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
}

stock SetPlayerFightStyle(playerid)
{
	if (PlayerInfo[playerid][pFightStyle] == 0)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	}

	if (PlayerInfo[playerid][pFightStyle] == 1)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
	}

	if (PlayerInfo[playerid][pFightStyle] == 2)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	}

	if (PlayerInfo[playerid][pFightStyle] == 3)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	}

	if (PlayerInfo[playerid][pFightStyle] == 4)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}

	if (PlayerInfo[playerid][pFightStyle] == 5)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
	}
}

stock StartAttackedTurfsFlashing(playerid)
{
	for (new i = 0; i < MAX_FACTIONS; i++)
	{
		if (AttackTurfInfo[i][attackedFaction] == 1)
		{
			new turfAttacked = AttackTurfInfo[i][attackedTurfID];
			StartFlashingForPlayer(playerid, turfAttacked);
		}
	}
}

stock HandleNpcOnExitVehicle(playerid)
{
    new npcName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, npcName, sizeof(npcName));
    if(!strcmp(npcName, "[BOT]Pilot", true))
    {
        PutPlayerInVehicle(playerid, npcVeh[0], 0);
    }
    if(!strcmp(npcName, "[BOT]Rhino1", true))
    {
        PutPlayerInVehicle(playerid, npcVeh[1], 0);
    }
    if(!strcmp(npcName, "[BOT]Hydra1", true))
    {
        PutPlayerInVehicle(playerid, npcVeh[2], 0);
    }
}

stock HandleNpcOnSpawn(playerid)
{
    new npcName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, npcName, sizeof(npcName));
    if(!strcmp(npcName, "[BOT]Pilot", true))
    {
        PutPlayerInVehicle(playerid, npcVeh[0], 0);
    }
    if(!strcmp(npcName, "[BOT]Rhino1", true))
    {
        PutPlayerInVehicle(playerid, npcVeh[1], 0);
    }
    if(!strcmp(npcName, "[BOT]Hydra1", true))
    {
        PutPlayerInVehicle(playerid, npcVeh[2], 0);
    }
    SetPlayerColor(playerid, COLOR_NPC);
}

public OnPlayerSpawn(playerid)
{
    if(!IsPlayerNPC(playerid))
    {
		SetSpawnRandomAnim(playerid);
    	GivePlayerLaser(playerid);
    	StopAudioStreamForPlayer(playerid);
    	SetPlayerWeaponSkillByLevel(playerid);
    	SetPlayerFightStyle(playerid);
    	LoadPlayerTurfs(playerid);
    	StartAttackedTurfsFlashing(playerid);
    	if (!inPaintBall[playerid] && !inEvent[playerid])
    	{
    		GivePlayerAllGuns(playerid);
    	}

        if(loadedClothes[playerid])
        {
            LoadPlayerrAttacheds(playerid);
        }

    	if (inPaintBall[playerid])
    	{
    		SetArmour(playerid, 100);
    		GivePlayerPaintBallGuns(playerid);
    	}

    	SetCameraBehindPlayer(playerid);
    	spawned[playerid] = true;
    	SetToOrganisationPos(playerid);
    	RestartPlayerSkin(playerid);
    	if (newProfile_firstSpawn[playerid] == true)
    	{
    		GivePlayerWeapon(playerid, WEAPON_COLT45, 120);
    		newProfile_firstSpawn[playerid] = false;
			/*
			//MISSIONS
			SendClientMessage(playerid, COLOR_MISSION, "SERVER: В сървъра един от начините за развитие е да минаваш мисии!");
			SetPlayerPos(playerid, 1700.2706,1448.5060,10.7991);
			SetPlayerFacingAngle(playerid, 263.4625);
			*/
    	}

    	if (PlayerInfo[playerid][pAFK])
    	{
    		SetPlayerInterior(playerid, 15);
    		SetPlayerVirtualWorld(playerid, playerid + 1);
    		SetPlayerPos(playerid, 2215.454833, -1147.475585, 1025.796875);
    		SendClientMessage(playerid, COLOR_AFK, "AFK: Все още си в AFK! Използвай /back, когато си тук!");
    	}

    	if (PlayerInfo[playerid][pPoliceJail] > 0)
    	{
    		SendClientMessage(playerid, COLOR_POLICE_2, "Вие все още сте в полицейския затвор!");
    		SetPlayerPos(playerid, 1579.2612, -1677.0515, 2982.2800);
    		SetPlayerInterior(playerid, 6);
    		SetPlayerVirtualWorld(playerid, 1);
    		FreezeAntiDropOnSpawn(playerid);
    		SetPlayerAttachedObject(playerid, PLAYER_OBJECT_CUFFS, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
    	}

    	if (PlayerInfo[playerid][pJailed] > 0)
    	{
    		SendClientMessage(playerid, COLOR_ADMIN_RED, "Вие все още сте в ADMIN затвора!");
    		SetPlayerVirtualWorld(playerid, 1);
    		SetPlayerInterior(playerid, 4);
    		SetPlayerPos(playerid, 299.7077, 303.4193, 999.1484);
    		SetPlayerAttachedObject(playerid, PLAYER_OBJECT_CUFFS, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
    	}
		
		if(firstSpawn[playerid])
		{
			if(christmasTime)
			{
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Времето е снежно! За да спреш снега за себе си напиши /snow");
				startedSnow[playerid] = true;
				AddSnowObjects(playerid);
			}
			SetPlayerTime(playerid, serverTime, 0); //RESET PLAYER TIME AFTER LOGIN/REGISTER
		}
		
    	firstSpawn[playerid] = false;
    	SetPlayerDefaultColor(playerid);
    	SetArmour(playerid, PlayerInfo[playerid][pArmour]);
        AddPlayerLabel(playerid);
		/*
		//MISSIONS
		StartMission(playerid);
		*/
    }
    else
    {
        HandleNpcOnSpawn(playerid);
    }
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if (LastPos[playerid][lpUsed] == 1)
	{
		LastPos[playerid][lpUsed] = 0;
	}

    if(inEvent[playerid])
    {
        inEvent[playerid] = false;
        eventPlayers--;
    }

	PlayerInfo[playerid][pArmour] = 0;
    SendDeathMessage(killerid, playerid, reason);

    if(playerid != killerid)
    {
        PlayerInfo[killerid][pKills] += 1;
        CheckForTopRecord(killerid, TOP_RECORD_KILLS);
		TransferPlayerAmmuOnDeath(playerid, killerid);
    }

	UnlockOLockedVeh(playerid);
	if (inPaintBall[playerid] == true && inPaintBall[killerid] == true)
	{
        if(paintBallOpen)
        {
		  paintBallKills[killerid] += 1;
        }
	}

	if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
	{
		RemoveArmourObject(playerid);
	}

	if (isInDuel[playerid])
	{
		SetPlayerDefaultColor(duelEnemy[playerid]);
		new stringduel[256];
		GivePlayerCash(playerid, -duelMoneyBet[playerid]);
		GivePlayerCash(duelEnemy[playerid], duelMoneyBet[playerid]);
		GameTextForPlayer(duelEnemy[playerid], "~g~WINNER", 5000, 3);
		format(stringduel, 256, "Ти спечели дуела срещу %s и получаваш $%d от залога.", GetPlayerNickname(playerid), duelMoneyBet[playerid]);
		SendClientMessage(duelEnemy[playerid], COLOR_DUEL, stringduel);
		format(stringduel, 256, "Ти загуби дуела срещу %s и загуби $%d от залога.", GetPlayerNickname(duelEnemy[playerid]), duelMoneyBet[playerid]);
		SendClientMessage(playerid, COLOR_DUEL, stringduel);
		duelMoneyBet[playerid] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer2] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer3] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer4] = 0;
		PlayerTimerInfo[playerid][ptDuelTimer] = 0;
		PlayerTimerInfo[playerid][ptDuelTimer2] = 0;
		PlayerTimerInfo[playerid][ptDuelTimer3] = 0;
		PlayerTimerInfo[duelEnemy[playerid]][ptDuelTimer4] = 0;
		duelMoneyBet[duelEnemy[playerid]] = 0;
		SetPlayerPos(duelEnemy[playerid], beforeDuelX[duelEnemy[playerid]], beforeDuelY[duelEnemy[playerid]], beforeDuelZ[duelEnemy[playerid]]);
		SetPlayerHealth(duelEnemy[playerid], beforeDuelHealth[duelEnemy[playerid]]);
		SetPlayerArmour(duelEnemy[playerid], beforeDuelArmour[duelEnemy[playerid]]);
		SetPlayerInterior(duelEnemy[playerid], beforeDuelInterior[duelEnemy[playerid]]);
		SetPlayerVirtualWorld(duelEnemy[playerid], beforeDuelVirtualWorld[duelEnemy[playerid]]);
		duelInvitor[playerid] = -1;
		duelInvitor[duelEnemy[playerid]] = -1;
		isInDuel[duelEnemy[playerid]] = false;
		isInDuel[playerid] = false;
		duelSended[playerid] = -1;
		duelSended[duelEnemy[playerid]] = -1;
		duelEnemy[duelEnemy[playerid]] = -1;
		duelEnemy[playerid] = -1;
	}

	if (isAtmRobber[playerid] == true)
	{
		SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда успяха да спрат крадеца!");
		StopAtmRobbery();
	}

	if (inNormalRobbery[playerid] == true && isNormalRobberyLeaderPlayer[playerid] == false)
	{
		new string256[256];
		format(string256, 256, "Robbery: %s припадна и отпадна от обира.", GetPlayerNickname(playerid));
		SendNormalRobberyMessage(COLOR_ORANGE, string256);
		normalRobberyMembers -= 1;
		inNormalRobbery[playerid] = false;
	}

	if (isNormalRobberyLeaderPlayer[playerid] == true)
	{
		new string256[256];
		format(string256, 256, "Robbery: Лидерът на обира %s припадна и заради това обирът се прекратява.", GetPlayerNickname(playerid));
		SendNormalRobberyMessage(COLOR_ORANGE, string256);
		SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда успяха да спрат крадците.");
		inNormalRobbery[playerid] = false;
		isNormalRobberyLeaderPlayer[playerid] = true;
		StopRobbery();
	}

	if (isPlayerWorkingNow(playerid) == 1)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Вие умряхте и не успяхте да завършите работата си!");
		LeavePlayerWork(playerid);
	}

	spawned[playerid] = false;
	if (inPaintBall[playerid] == false)
	{
		SavePlayerAllGuns(playerid);
	}

	if (inPaintBall[killerid] == false)
	{
		if (PlayerInfo[killerid][pVip] == 1)
		{
			GivePlayerCash(killerid, 20);
		}

		if (PlayerInfo[killerid][pVip] == 1)
		{
			GivePlayerCash(killerid, 30);
		}

		if (PlayerInfo[killerid][pVip] == 1)
		{
			GivePlayerCash(killerid, 40);
		}
	}

	if (PlayerInfo[killerid][pPoliceDuty] || PlayerInfo[killerid][pFbiDuty] || PlayerInfo[killerid][pArmyDuty] || PlayerInfo[killerid][pKACCDuty])
	{
		if (PlayerInfo[playerid][pWantedLevel] > 0)
		{
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new killeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, killeridNickname, 25);
			new string256[256];
			format(string256, 256, "%s нарани %s почти до смърт и той вече е в затвора!", killeridNickname, playeridNickname);
			SendLocalMessage(12.0, killerid, COLOR_LIGHTPURPLE4, string256);
			format(string256, 256, "[FACTION CHAT] %s нарани %s почти до смърт и той вече е в затвора!", killeridNickname, playeridNickname);
			SendFactionMessage(PlayerInfo[killerid][pFaction], COLOR_POLICE_2, string256);
			PlayerInfo[playerid][pPoliceJail] = JailTimeByWanted(PlayerInfo[playerid][pWantedLevel]);
			GetPlayerAllGuns(playerid);
			format(string256, 256, "{ff0000}[WASTED] {0040FF}Вие бяхте подложен на арест за %d минути!", JailTimeByWanted(PlayerInfo[playerid][pWantedLevel]) / 60);
			SendClientMessage(playerid, COLOR_POLICE_2, string256);
			if (PlayerInfo[playerid][pFine] > 0)
			{
				format(string256, 256, "Вие бяхте хванат с глоби, заради това те бяха изплатени! Вие изгубихте {ff0000}$%d{ffffff}!", PlayerInfo[playerid][pFine]);
				SendClientMessage(playerid, COLOR_WHITE, string256);
				GivePlayerCash(playerid, -PlayerInfo[playerid][pFine]);
			}

			GetPlayerAllWanted(playerid);
			PlayerInfo[playerid][pFine] = 0;
		}
	}

	if (turfAttacker[playerid] == true)
	{
		new string256[256];
		new Faction = PlayerInfo[playerid][pFaction];
		format(string256, 256, "[FACTION CHAT] %s умря и отпадна от атаката на територията!", GetPlayerNickname(playerid));
		SendFactionMessage(Faction, COLOR_TURF, string256);
		LeaveTurfAttacker(playerid);
	}

	return 1;
}

stock ResetPlayerSnow(playerid)
{
	new Float:pPos[3];
	GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
	for(new i = 0; i < MAX_SNOW_OBJECTS; i++)
	{
		if(IsValidDynamicObject(snowFallingObject[playerid][i]))
		{
			SetDynamicObjectPos(snowFallingObject[playerid][i], pPos[0] + random(25), pPos[1] + random(25), pPos[2] - 5);
		}
	}
}


stock RemoveSnowObjects(playerid)
{
	startedSnow[playerid] = false;
    for(new i = 0; i < MAX_SNOW_OBJECTS; i++)
	{
		if(IsValidDynamicObject(snowFallingObject[playerid][i]))
		{
			DestroyDynamicObject(snowFallingObject[playerid][i]);
		}
	}
	PlayerTimerInfo[playerid][ptSnowTimer] = 0;
}

stock AddSnowObjects(playerid)
{
	for(new i = 0; i < MAX_SNOW_OBJECTS; i++)
	{
		if(IsValidDynamicObject(snowFallingObject[playerid][i]))
		{
			DestroyDynamicObject(snowFallingObject[playerid][i]);
		}
	}
	new Float:pPos[3];
	GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
	for(new i = 0; i < MAX_SNOW_OBJECTS; i++)
	{
		snowFallingObject[playerid][i] = CreateDynamicObject(18864, pPos[0] + random(25), pPos[1] + random (25), pPos[2] - 5, random(100), random(100), random(100), -1, -1, playerid);
    }
	startedSnow[playerid] = true;
	PlayerTimerInfo[playerid][ptSnowTimer] = 1;
}

stock SavePrivateVehTune(vehicleid)
{
	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new specialIndex = VehicleInfo[vehicleid][vPrivateID];
		PrivateVehInfo[specialIndex][vVehSpoiler] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
		PrivateVehInfo[specialIndex][vVehHood] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
		PrivateVehInfo[specialIndex][vVehRoof] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
		PrivateVehInfo[specialIndex][vVehNitro] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
		PrivateVehInfo[specialIndex][vVehSideskirt] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
		PrivateVehInfo[specialIndex][vVehLights] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
		PrivateVehInfo[specialIndex][vVehExhaust] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
		PrivateVehInfo[specialIndex][vVehStereo] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
		PrivateVehInfo[specialIndex][vVehWheels] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
		PrivateVehInfo[specialIndex][vVehHyd] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
		PrivateVehInfo[specialIndex][vVehBumperF] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
		PrivateVehInfo[specialIndex][vVehBumperR] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
		PrivateVehInfo[specialIndex][vVehVentsR] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
		PrivateVehInfo[specialIndex][vVehVentsL] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
	}
}

stock SetPrivateVehicleTune(vehicleid)
{
	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new specialIndex = VehicleInfo[vehicleid][vPrivateID];
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehSpoiler]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehHood]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehRoof]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehNitro]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehSideskirt]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehLights]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehExhaust]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehWheels]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehHyd]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehBumperF]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehBumperR]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehVentsR]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehVentsL]);
		if (PrivateVehInfo[specialIndex][vVehPaintJob] != -1)
		{
			ChangeVehiclePaintjob(vehicleid, PrivateVehInfo[specialIndex][vVehPaintJob]);
		}

		for (new i = 0; i < 2; i++)
		{
			if (strcmp(GetVehicleStickerName(specialIndex, i), "", true) != 0)	//goto
			{
				if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]))
				{
					DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]);
				}

				new vehStickerText[256];
				format(vehStickerText, 256, "%s", GetVehicleStickerName(specialIndex, i));
				new vehSticker = PrivateVehInfo[specialIndex][vVehSticker][i];
				new Float: vehStickerX = PrivateVehInfo[specialIndex][vVehStickerX][i];
				new Float: vehStickerY = PrivateVehInfo[specialIndex][vVehStickerY][i];
				new Float: vehStickerZ = PrivateVehInfo[specialIndex][vVehStickerZ][i];
				new Float: vehStickerXY = PrivateVehInfo[specialIndex][vVehStickerXY][i];
				new Float: vehStickerYY = PrivateVehInfo[specialIndex][vVehStickerYY][i];
				new Float: vehStickerZY = PrivateVehInfo[specialIndex][vVehStickerZY][i];
				vehSticker = CreateDynamicObject(19482, vehStickerX, vehStickerY, vehStickerZ, vehStickerXY, vehStickerYY, vehStickerZY, -1, 0, -1, 200);
				SetDynamicObjectMaterialText(vehSticker, 0, vehStickerText, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vehSticker, vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
			}
		}

		//Veh Objects - open
		for (new i = 0; i < 20; i++)
		{
			if (PrivateVehInfo[specialIndex][vVehObject][i] != 0)
			{
				if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][i]))
				{
					DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][i]);
				}

				//Apply Objects - open
				new vehObjID = PrivateVehInfo[specialIndex][vVehObject][i];
				new Float: vehObjX = PrivateVehInfo[specialIndex][vVehObjectX][i];
				new Float: vehObjY = PrivateVehInfo[specialIndex][vVehObjectY][i];
				new Float: vehObjZ = PrivateVehInfo[specialIndex][vVehObjectZ][i];
				new Float: vehObjRX = PrivateVehInfo[specialIndex][vVehObjectRX][i];
				new Float: vehObjRY = PrivateVehInfo[specialIndex][vVehObjectRY][i];
				new Float: vehObjRZ = PrivateVehInfo[specialIndex][vVehObjectRZ][i];
				new Float: X, Float: Y, Float: Z;
				GetVehiclePos(vehicleid, X, Y, Z);
				PrivateVehInfo[specialIndex][vVehObjID][i] = CreateDynamicObject(vehObjID, X, Y, Z, 0, 0, 0);
				new vehObjectToApply = PrivateVehInfo[specialIndex][vVehObjID][i];
				AttachDynamicObjectToVehicle(vehObjectToApply, vehicleid, vehObjX, vehObjY, vehObjZ, vehObjRX, vehObjRY, vehObjRZ);
				//Apply Objects - close
			}
		}

		//Veh Objects - close

		if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
		{
			new neonObjectID = PrivateVehInfo[specialIndex][vVehNeonColor];
			if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]))
			{
				DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]);
			}

			if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]))
			{
				DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]);
			}

			PrivateVehInfo[specialIndex][vVehNeon][0] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
			AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][0], vehicleid, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
			PrivateVehInfo[specialIndex][vVehNeon][1] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
			AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][1], vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
		}
	}
}

stock RemoveVehicleDeath(vehicleid)
{
    VehicleTimerInfo[vehicleid][vtRespawn]=0;
    deadVeh[vehicleid]=false;
}

public OnVehicleSpawn(vehicleid)
{
	SetPrivateVehicleTune(vehicleid);
	SetGangVehTune(vehicleid);
	SetJobVehLocked(vehicleid);
	SetVehicloEngineOff(vehicleid);
    if(deadVeh[vehicleid])
    {
        RemoveVehicleDeath(vehicleid);
    }
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	printf("[say] %s(id:%d): %s", accountNickname, playerid, text);
	if (isLogged[playerid] == false)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да пишеш в чата сега, защото не си в профила си!");
		return 0;
	}

	if (PlayerInfo[playerid][pMuted] > 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да пишеш в чата сега, защото си заглушен!");
		return 0;
	}

	new string256[256];
	format(string256, 256, "{FFFFFF}(%d): {FFFFFF}%s", playerid, text[0]);
	SendPlayerMessageToAll(playerid, string256);
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	new cmd[256];
	new tmp[256];
	new idx;
	cmd = strtok(cmdtext, idx);
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	printf("[cmd] %s (ID: %d): %s", accountNickname, playerid, cmdtext);
	if (isLogged[playerid] == false)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Трябва първо да влезеш в профила си!");
		return 1;
	}

	if (strcmp(cmd, "/inventory", true) == 0)
	{
		OpenInventory(playerid);
		return 1;
	}

	if (strcmp(cmd, "/exit", true) == 0)
	{
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, -27.3025, -57.6649, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 3, 501.980987, -69.150199, 998.757812) ||
				IsPlayerInRangeOfPoint(playerid, 3, -2026.9447, -103.6024, 1035.1832) ||
				IsPlayerInRangeOfPoint(playerid, 3, 296.8089, -112.0065, 1001.5156) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1260.6464, -785.4418, 1091.9063) ||
				IsPlayerInRangeOfPoint(playerid, 3, -27.3512, -31.7518, 1003.5573) ||
				IsPlayerInRangeOfPoint(playerid, 3, 207.054992, -138.804992, 1003.507812) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1494.4723, 1303.5813, 1093.2891) ||
				IsPlayerInRangeOfPoint(playerid, 3, 362.8670, -75.1642, 1001.5078) ||
				IsPlayerInRangeOfPoint(playerid, 3, 834.6642, 7.5311, 1004.1870) ||
				IsPlayerInRangeOfPoint(playerid, 3, -25.9455, -141.5480, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 3, 203.7447, -50.6649, 1001.8047) ||
				IsPlayerInRangeOfPoint(playerid, 3, 285.9084, -86.7750, 1001.5229) ||
				IsPlayerInRangeOfPoint(playerid, 3, 315.7523, -143.6341, 999.6016) ||
				IsPlayerInRangeOfPoint(playerid, 3, 493.4793, -24.9576, 1000.6719) ||
				IsPlayerInRangeOfPoint(playerid, 3, 744.6210, 1436.3411, 1102.7031) ||
				IsPlayerInRangeOfPoint(playerid, 3, 773.9693, -78.8193, 1000.6628) ||
				IsPlayerInRangeOfPoint(playerid, 3, 774.1560, -50.4766, 1000.5859) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1133.2222, -15.8171, 1000.6797) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1204.7975, -13.8216, 1000.9219) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1306.8253, 3.2698, 1001.0272) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2018.6144, 1017.7792, 996.8750) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2234.1011, 1714.4489, 1012.3828) ||
				IsPlayerInRangeOfPoint(playerid, 3, -229.1534, 1401.3180, 27.7656) ||
				IsPlayerInRangeOfPoint(playerid, 3, 377.0852, -193.3047, 1000.6328) ||
				IsPlayerInRangeOfPoint(playerid, 3, 364.9964, -11.8438, 1001.8516) ||
				IsPlayerInRangeOfPoint(playerid, 3, 460.5563, -88.6419, 999.5547) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1727.7561, -1638.0088, 20.2230) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2541.9399, -1304.0100, 1025.0703) ||
				IsPlayerInRangeOfPoint(playerid, 3, -1395.4200, 1245.6000, 1039.8672) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1781.7737, 1650.2898, -12.8729))
			{
				if (GetPlayerVirtualWorld(playerid) == alb + 500)
				{
					if (BizInfo[alb][bLocked] == 1)
					{
						return SendClientMessage(playerid, COLOR_WHITE, "Бизнесът е заключен и не можеш да излезеш !");
					}

					SetPlayerPos(playerid, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]);
					SetPlayerInterior(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}

		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, 2324.5479, -1149.5146, 1050.7101) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2270.3855, -1210.4730, 1047.5625) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2196.8506, -1204.2477, 1049.0234) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2468.8413, -1698.4177, 1013.5078) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1260.6464, -785.4418, 1091.9063) ||
				IsPlayerInRangeOfPoint(playerid, 3, 327.9635, 1477.7430, 1084.4375) ||
				IsPlayerInRangeOfPoint(playerid, 3, 318.5932, 1114.4792, 1083.8828) ||
				IsPlayerInRangeOfPoint(playerid, 3, 309.0916, 313.6412, 1003.3047) ||
				IsPlayerInRangeOfPoint(playerid, 3, 261.0904, 1284.2944, 1080.2578) ||
				IsPlayerInRangeOfPoint(playerid, 3, 226.2984, 1114.3319, 1080.9929) ||
				IsPlayerInRangeOfPoint(playerid, 3, 225.8726, 1021.4523, 1084.0177) ||
				IsPlayerInRangeOfPoint(playerid, 3, 223.1015, 1287.0764, 1082.1406) ||
				IsPlayerInRangeOfPoint(playerid, 3, 140.2254, 1365.9796, 1083.8594) ||
				IsPlayerInRangeOfPoint(playerid, 3, 83.0758, 1322.2808, 1083.8662) ||
				IsPlayerInRangeOfPoint(playerid, 3, -68.7704, 1352.9250, 1080.2109) ||
				IsPlayerInRangeOfPoint(playerid, 3, -42.5628, 1405.5011, 1084.4297) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2495.98, -1692.08, 1014.74) ||
				IsPlayerInRangeOfPoint(playerid, 3, 83.03, 1322.28, 1083.87) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2807.48, -1174.76, 1025.57) ||
				IsPlayerInRangeOfPoint(playerid, 3, 260.85, 1237.24, 1084.26) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2237.59, -1081.64, 1049.02) ||
				IsPlayerInRangeOfPoint(playerid, 3, 446.99, 1397.07, 1084.30) ||
				IsPlayerInRangeOfPoint(playerid, 3, 377.15, 1417.41, 1081.33) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2308.77, -1212.94, 1049.02) ||
				IsPlayerInRangeOfPoint(playerid, 3, 243.72, 304.91, 999.15) || IsPlayerInRangeOfPoint(playerid, 3, 2283.04, -1140.28, 1050.90))
			{
				if (GetPlayerVirtualWorld(playerid) == alh + 50)
				{
					if (HouseInfo[alh][hLocked] == 1)
					{
						return SendClientMessage(playerid, COLOR_HOUSE, "Къщата е заключена и не можеш да излезеш !");
					}

					SetPlayerPos(playerid, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]);
					SetPlayerInterior(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/enter", true) == 0)
	{
		for (new alb = 0; alb < maxbiz; alb++)	// Dynamic Houses
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (BizInfo[alb][bLocked] == 1)
				{
					return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът е заключен и не можете да влезете !");
				}

				if (BizInfo[alb][bFee] > PlayerInfo[playerid][pCash] && PlayerInfo[playerid][pBizOwnedID] != alb)
				{
					return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за да платите таксата за вход !");
				}

				if (PlayerInfo[playerid][pBizOwnedID] != alb)
				{
					GivePlayerCash(playerid, -BizInfo[alb][bFee]);
					BizInfo[alb][bEarnings] += BizInfo[alb][bFee];
				}

				new string256[256];
				format(string256, 256, "Добре дошли в %s. Вие платихте {ff0000}$%d {ffffff}за да влезете.", BizInfo[alb][bName], BizInfo[alb][bFee]);
				SendClientMessage(playerid, COLOR_WHITE, string256);
				if (BizInfo[alb][bType] == 1)	// 24/7 Business
				{
					SetPlayerPos(playerid, -27.3025, -57.6649, 1003.5469);
					SetPlayerFacingAngle(playerid, 357.5915);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 2)	// Bar Business
				{
					SetPlayerPos(playerid, 501.980987, -69.150199, 998.757812);
					SetPlayerFacingAngle(playerid, 179.826400);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 11);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 3)	// Ammunation Business
				{
					SetPlayerPos(playerid, 296.8089, -112.0065, 1001.5156);
					SetPlayerFacingAngle(playerid, 76.7251);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 4)	// Advertisement Agency
				{
					SetPlayerPos(playerid, -27.3512, -31.7518, 1003.5573);
					SetPlayerFacingAngle(playerid, 86.7239);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 5)	// Fast Food
				{
					SetPlayerPos(playerid, 207.054992, -138.804992, 1003.507812);
					SetPlayerFacingAngle(playerid, 182.1137);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 6)	// Casino
				{
					SetPlayerPos(playerid, 362.8670, -75.1642, 1001.5078);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 7)	// 24/7
				{
					SetPlayerPos(playerid, -25.9455, -141.5480, 1003.5469);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 16);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 8)	// 24/7
				{
					SetPlayerPos(playerid, 203.7447, -50.6649, 1001.8047);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 9)	// 24/7
				{
					SetPlayerPos(playerid, 285.9084, -86.7750, 1001.5229);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 10)	// ammo
				{
					SetPlayerPos(playerid, 315.7523, -143.6341, 999.6016);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 11)	// ammo
				{
					SetPlayerPos(playerid, 493.4793, -24.9576, 1000.6719);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 17);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 12)	// ammo
				{
					SetPlayerPos(playerid, 744.6210, 1436.3411, 1102.7031);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 13)	// ammo
				{
					SetPlayerPos(playerid, 773.9693, -78.8193, 1000.6628);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 14)	// ammo
				{
					SetPlayerPos(playerid, 774.1560, -50.4766, 1000.5859);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 15)	// ammo
				{
					SetPlayerPos(playerid, 1133.2222, -15.8171, 1000.6797);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 12);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 16)	// ammo
				{
					SetPlayerPos(playerid, 1204.7975, -13.8216, 1000.9219);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 17)	// ammo
				{
					SetPlayerPos(playerid, 2018.6144, 1017.7792, 996.8750);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 18)	// ammo
				{
					SetPlayerPos(playerid, 2234.1011, 1714.4489, 1012.3828);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 19)	// ammo
				{
					SetPlayerPos(playerid, -229.1534, 1401.3180, 27.7656);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 18);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 20)	// ammo
				{
					SetPlayerPos(playerid, 364.9964, -11.8438, 1001.8516);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 21)	// ammo
				{
					SetPlayerPos(playerid, 460.5563, -88.6419, 999.5547);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 22)	// ammo
				{
					PlayerTimerInfo[playerid][ptUnfreeze] = 2;
					TogglePlayerControllable(playerid, 0);
					SetPlayerInterior(playerid, 1);
					SetPlayerPos(playerid, 1781.7737, 1650.2898, -12.8729);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}
			}
		}

		for (new alh = 0; alh < maxhouses + 2; alh++)	// Dynamic Houses
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (HouseInfo[alh][hLocked] == 1)
				{
					return SendClientMessage(playerid, COLOR_HOUSE, "Къщата е заключена и не можеш да влезеш!");
				}

				SetPlayerVirtualWorld(playerid, alh + 50);
				if (HouseInfo[alh][hInterior] == 1)
				{
					SetPlayerPos(playerid, 2283.04, -1140.28, 1050.90);
					SetPlayerFacingAngle(playerid, 267.0980);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 11);
				}

				if (HouseInfo[alh][hInterior] == 2)
				{
					SetPlayerPos(playerid, 243.72, 304.91, 999.15);
					SetPlayerFacingAngle(playerid, 267.3974);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
				}

				if (HouseInfo[alh][hInterior] == 3)
				{
					SetPlayerPos(playerid, 2308.77, -1212.94, 1049.02);
					SetPlayerFacingAngle(playerid, 359.8550);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 4)
				{
					SetPlayerPos(playerid, 377.15, 1417.41, 1081.33);
					SetPlayerFacingAngle(playerid, 1.6415);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 15);
				}

				if (HouseInfo[alh][hInterior] == 5)
				{
					SetPlayerPos(playerid, 446.99, 1397.07, 1084.30);
					SetPlayerFacingAngle(playerid, 359.1347);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 6)
				{
					SetPlayerPos(playerid, 2237.59, -1081.64, 1049.02);
					SetPlayerFacingAngle(playerid, 89.1791);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 7)
				{
					SetPlayerPos(playerid, 260.85, 1237.24, 1084.26);
					SetPlayerFacingAngle(playerid, 359.8550);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 8)
				{
					SetPlayerPos(playerid, 2807.48, -1174.76, 1025.57);
					SetPlayerFacingAngle(playerid, 89.4224);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 8);
				}

				if (HouseInfo[alh][hInterior] == 9)
				{
					SetPlayerPos(playerid, 83.03, 1322.28, 1083.87);
					SetPlayerFacingAngle(playerid, 0.7248);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 10)
				{
					SetPlayerPos(playerid, 2495.98, -1692.08, 1014.74);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 3);
				}

				if (HouseInfo[alh][hInterior] == 11)
				{
					SetPlayerPos(playerid, -42.5628, 1405.5011, 1084.4297);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 8);
				}

				if (HouseInfo[alh][hInterior] == 12)
				{
					SetPlayerPos(playerid, -68.7704, 1352.9250, 1080.2109);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 13)
				{
					SetPlayerPos(playerid, 83.0758, 1322.2808, 1083.8662);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 14)
				{
					SetPlayerPos(playerid, 140.2254, 1365.9796, 1083.8594);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 15)
				{
					SetPlayerPos(playerid, 223.1015, 1287.0764, 1082.1406);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
				}

				if (HouseInfo[alh][hInterior] == 16)
				{
					SetPlayerPos(playerid, 225.8726, 1021.4523, 1084.0177);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
				}

				if (HouseInfo[alh][hInterior] == 17)
				{
					SetPlayerPos(playerid, 226.2984, 1114.3319, 1080.9929);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 18)
				{
					SetPlayerPos(playerid, 261.0904, 1284.2944, 1080.2578);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
				}

				if (HouseInfo[alh][hInterior] == 19)
				{
					SetPlayerPos(playerid, 309.0916, 313.6412, 1003.3047);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
				}

				if (HouseInfo[alh][hInterior] == 20)
				{
					SetPlayerPos(playerid, 318.5932, 1114.4792, 1083.8828);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 21)
				{
					SetPlayerPos(playerid, 327.9635, 1477.7430, 1084.4375);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 15);
				}

				if (HouseInfo[alh][hInterior] == 22)
				{
					SetPlayerPos(playerid, 1260.6464, -785.4418, 1091.9063);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 23)
				{
					SetPlayerPos(playerid, 2468.8413, -1698.4177, 1013.5078);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 24)
				{
					SetPlayerPos(playerid, 2196.8506, -1204.2477, 1049.0234);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 25)
				{
					SetPlayerPos(playerid, 2270.3855, -1210.4730, 1047.5625);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
				}

				if (HouseInfo[alh][hInterior] == 26)
				{
					SetPlayerPos(playerid, 2324.5479, -1149.5146, 1050.7101);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 12);
				}
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/fish", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 2102.1777, -104.5141, 2.2685) ||
			IsPlayerInRangeOfVehicle(playerid, boatFish[0], 10) ||
			IsPlayerInRangeOfVehicle(playerid, boatFish[1], 10))
		{
			if (!PlayerInfo[playerid][pVudica]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате въдица.");
			if (PlayerInfo[playerid][pStruv] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате стръв.");
			if (GetPlayerFreeFishSlot(playerid) == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш свободно място в слотовете за риба!");
			TogglePlayerControllable(playerid, 0);
			SetPlayerAttachedObject(playerid, PLAYER_OBJECT_HOOK, 18632, 1, -0.091109, 0.255484, 0.018155, 94.362060, 312.328125, 190.418655, 1.000000, 1.000000, 1.000000);
			ApplyAnimationWithCondition(playerid, "SAMP", "FishingIdle", 3.0, 1, 1, 0, 0, 0);
			ApplyAnimationWithCondition(playerid, "SAMP", "FishingIdle", 3.0, 1, 1, 0, 0, 0);
			SendClientMessage(playerid, COLOR_FISH, "Вие хвърлихте въдицата, нека видим какво ще хванете.");
			new string256[256];
			format(string256, 256, "%s взе въдицата и я хвърли.", accountNickname);
			SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
			PlayerInfo[playerid][pStruv] -= 1;
			PlayerTimerInfo[playerid][ptFishTimer] = 6;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на мястото за риболов");
		}

		return 1;
	}

	if (strcmp(cmd, "/destroyprivateveh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroyprivateveh [private veh id]");
			return 1;
		}

		new privateID;
		privateID = strval(tmp);
		if (privateID < 0) return SendClientMessage(playerid, COLOR_GRAD1, "ID-тата на личните превозни средства започват от 0 нагоре!");
		if (PrivateVehInfo[privateID][vVehID] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Грешно ID на лично превозно средство!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Interior!");
		new string256[256];
		format(string256, 256, "Вие унищожихте %d ID Лично превозно средство!", privateID);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		new hisVehID = privateID;
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		PrivateVehInfo[hisVehID][vVehID] = 0;
		if (IsValidVehicle(vehicleid))
		{
			DestroyVehicle(vehicleid);
		}

		RestartPrivateTuneInfo(hisVehID);
		format(string256, 256, "/PrivateVehs/%d.ini", hisVehID);
		dini_Remove(string256);
		return 1;
	}

	if (strcmp(cmd, "/spawnprivate", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/spawnprivate [private veh id]");
			return 1;
		}

		new privateID;
		privateID = strval(tmp);
		if (privateID < 0) return SendClientMessage(playerid, COLOR_GRAD1, "ID-тата на личните превозни средства започват от 0 нагоре!");
		if (PrivateVehInfo[privateID][vVehID] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Грешно ID на лично превозно средство!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Interior!");
		new string256[256];
		format(string256, 256, "Вие телепортирахте %d ID Лично превозно средство до себе си!", privateID);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		new hisVehID = privateID;
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetVehiclePos(vehicleid, X, Y, Z);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		return 1;
	}
	if (strcmp(cmd, "/veh3dtext", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new isPrivate = VehicleInfo[vehicleid][vIsPrivate];
		if (isPrivate == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в лично превозно средство!");
		new string2230[512];
		new string2230result[1500];
		new specialIndex = VehicleInfo[vehicleid][vPrivateID];
		if (strcmp(PrivateVehInfo[specialIndex][vVehText], "", true) != 0)
		{
			format(string2230, 512, "{FF0000}Премахни 3D Text");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_VEHTEXT_REMOVE, DIALOG_STYLE_LIST, "Vehicle 3D Text:", string2230result, "Избери", "Излез");
		}
		else
		{
			format(string2230, 512, "{FFFFFF}Добави 3D Text");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_VEHTEXT_ADD, DIALOG_STYLE_LIST, "Vehicle 3D Text:", string2230result, "Избери", "Излез");
		}
		return 1;
	}
	if (strcmp(cmd, "/vehobjects", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new isPrivate = VehicleInfo[vehicleid][vIsPrivate];
		if (isPrivate == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в лично превозно средство!");
		new string2230[512];
		new string2230result[1500];
		for (new i = 0; i < 20; i++)
		{
			new specialIndex = VehicleInfo[vehicleid][vPrivateID];
			new fakeSlot = i + 1;
			if (PrivateVehInfo[specialIndex][vVehObject][i] != 0)
			{
				new objID = PrivateVehInfo[specialIndex][vVehObject][i];
				format(string2230, 512, "{FFFFFF}Слот %d {FF0000}[Зает] | Премахни (ID: %d)\n", fakeSlot, objID);
				strcat(string2230result, string2230);
			}
			else
			{
				format(string2230, 512, "{FFFFFF}Слот %d {40BF00}[Свободен] | Добави\n", fakeSlot);
				strcat(string2230result, string2230);
			}
		}

		ShowPlayerDialog(playerid, DIALOG_VEHOBJECTS, DIALOG_STYLE_LIST, "Vehicle Objects:", string2230result, "Избери", "Излез");
		return 1;
	}

    if (strcmp(cmd, "/removetexts", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
        TextDrawHideForPlayer(playerid, levelText[playerid]);
        TextDrawHideForPlayer(playerid, expText[playerid]);
        TextDrawHideForPlayer(playerid, Date[playerid]);
        TextDrawHideForPlayer(playerid, AreaImage[playerid]);
        return 1;
    }

    if (strcmp(cmd, "/autohours", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
        ChangeHours();
        return 1;
    }

	if (strcmp(cmd, "/managecrews", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string128[128];
		new string1024[1024];
		for (new i = 0; i < MAX_CREWS; i++)
		{
			new fakeSlot = i + 1;
			if (CrewInfo[i][cExists])
			{
				format(string128, sizeof(string128), "{FFFFFF}Слот %d {FF0000}[ Crew Name: %s ]\n", fakeSlot, GetCrewName(i));
				strcat(string1024, string128);
			}
			else
			{
				format(string128, sizeof(string128), "{FFFFFF}Слот %d {40BF00}[ Няма създаден Crew ]\n", fakeSlot);
				strcat(string1024, string128);
			}
		}

		ShowPlayerDialog(playerid, DIALOG_MANAGE_CREWS, DIALOG_STYLE_LIST, "Manage Crews:", string1024, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/myfish", true) == 0)
	{
		new string2230[512];
		new string2230result[1500];
		for (new i = 1; i < 11; i++)
		{
			new fishSlotID = PlayerInfo[playerid][pFishSlot][i];
			new fishWeight = PlayerInfo[playerid][pFishWeight][i];
			if (fishSlotID == 0)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {FFFF00}[Empty]\n", i);
				strcat(string2230result, string2230);
			}
			else if (fishSlotID != 0)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {FFFF00}[%s - %d Kg]\n", i, GetFishName(fishSlotID), fishWeight);
				strcat(string2230result, string2230);
			}
		}

		ShowPlayerDialog(playerid, DIALOG_MYFISH, DIALOG_STYLE_LIST, "Fish:", string2230result, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/myskins", true) == 0)
	{
		new string256[256];
		format(string256, 256, "{FFFFFF}1. Смени своя Skin при Spawn\n2. Изхвърли Skin");
		ShowPlayerDialog(playerid, DIALOG_MY_CLOTHES, DIALOG_STYLE_LIST, "Clothes", string256, "Напред", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/buyfood", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 377.3176, -67.4344, 1001.5078) || IsPlayerInRangeOfPoint(playerid, 4, 369.6004, -6.0170, 1001.8589) ||
			IsPlayerInRangeOfPoint(playerid, 4, 450.4710, -83.6515, 999.5547))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Храни\nНапитки");
			ShowPlayerDialog(playerid, DIALOG_BUYFOODORDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Напред", "Излез");
		}
		else if (IsPlayerInRangeOfPoint(playerid, 4, 2434.4692, 1005.0504, 10.8203) || IsPlayerInRangeOfPoint(playerid, 4, 2153.7478, 981.3260, 10.8125) ||
			IsPlayerInRangeOfPoint(playerid, 4, 2034.2792, 1526.3484, 10.8203))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Храни\nНапитки");
			ShowPlayerDialog(playerid, DIALOG_BUYFOODORDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Напред", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/buyskin", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 203.9277, -43.2615, 1001.8047) || IsPlayerInRangeOfPoint(playerid, 4, 207.1997, -129.1777, 1003.5078))
		{
			OpenBuySkins(playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в магазин за дрехи!");
		}

		return 1;
	}

	if (strcmp(cmd, "/smoke", true) == 0)
	{
		if (PlayerInfo[playerid][pCiggs] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате цигари в себе си.");
		PlayerInfo[playerid][pCiggs] -= 1;
		new string256[256];
		format(string256, 256, "* %s запали цигара и започна да пуши", GetPlayerNickname(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		SpecialActionWithCondition(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
		return 1;
	}

	if (strcmp(cmd, "/sellfish", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 1782.3506, 1665.1987, -12.8913) && GetPlayerInterior(playerid) == 1)
		{
			new string2230[512];
			new string2230result[1500];
			new bool: haveFish = false;
			format(string2230, 512, "{FFFFFF}Fish\t{FFFFFF}Weight\t{FFFFFF}Price\n");
			strcat(string2230result, string2230);
			for (new i = 1; i < 11; i++)
			{
				new fishSlotID = PlayerInfo[playerid][pFishSlot][i];
				new fishWeight = PlayerInfo[playerid][pFishWeight][i];
				new fishPrice = GetPlayerFishPrice(playerid, i);
				if (fishSlotID != 0)
				{
					format(string2230, 512, "{FFFFFF}%s\t{FFFFFF}%d Кг\t{FFFFFF}$%d\n", GetFishName(fishSlotID), fishWeight, fishPrice);
					strcat(string2230result, string2230);
					haveFish = true;
				}
			}

			if (haveFish == false)
			{
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Fishing Store", "Ти нямаш риба, която да продадеш!", "Излез", "");
				return 1;
			}

			ShowPlayerDialog(playerid, DIALOG_SELL_FISH, DIALOG_STYLE_TABLIST_HEADERS, "Fishing Store", string2230result, "Избери", "Излез");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в риболовен магазин!");
		}

		return 1;
	}

	if (strcmp(cmd, "/sellcrate", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 1782.3506, 1665.1987, -12.8913) && GetPlayerInterior(playerid) == 1)
		{
			new totalFishPrice;
			for (new i = 1; i < 11; i++)
			{
				totalFishPrice += GetPlayerFishPrice(playerid, i);
			}

			if (totalFishPrice == 0)
			{
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Fishing Store", "Вие нямате риба, която да продадете!", "Излез", "");
				return 1;
			}

			new string556[556];
			format(string556, 556, "{FFFFFF}Можете да продадете всичката си риба за {40BF00}$%d\n{FFFFFF}Ако наистина искате да продадете рибата си, натиснете 'Продай' отдолу!", totalFishPrice);
			ShowPlayerDialog(playerid, DIALOG_SELL_FISHCRATE, DIALOG_STYLE_MSGBOX, "Fishing Store", string556, "Продвай", "Излез");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в риболовен магазин!");
		}

		return 1;
	}

	if (strcmp(cmd, "/neon", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 8, 1880.8676,-1793.3455,13.8777))
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
			if (IsPlayerInHisPrivateVeh(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в твое лично превозно средство!");
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 510 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
				//motors
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 463 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 521 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 423 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 522 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 581 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 586 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 461 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 468
				//flying
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 476 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 497 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 501 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 511 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 520 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 548 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 553 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 465 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 464 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 469 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 563 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 577 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 592 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 593 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 417 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 447 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не може да има неон!");
				return 1;
			}

			new string556[556];
			format(string556, 556, "{FFFFFF}Червен неон: {40BF00}$114, 000\n{FFFFFF}Син неон: {40BF00}$124, 000\n{FFFFFF}Зелен неон: {40BF00}$125, 000\n{FFFFFF}Жълт неон: {40BF00}$126, 000\n{FFFFFF}Розов неон: {40BF00}$127, 000\n{FFFFFF}Бял неон: {40BF00}$128, 000");
			ShowPlayerDialog(playerid, DIALOG_BUYNEON, DIALOG_STYLE_LIST, "Neon Store", string556, "Buy", "Close");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в гаража за неон!");
		}

		return 1;
	}

	if (strcmp(cmd, "/buyveh", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, 703.5286, -514.7781, -5.6289) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 501)
		{
			buyingVehStoreIndex[playerid] = 0;
			inBuyVehVW[playerid] = 501;
			new newVirtualWorld = playerid + 1;
			SetPlayerVirtualWorld(playerid, newVirtualWorld);
			SetPlayerPos(playerid, 705.1166, -518.0377, -5.6684);
			SetPlayerCameraPos(playerid, 701.0486, -514.7349, -5.6289);
			SetPlayerCameraLookAt(playerid, 697.3192, -514.7677, -5.6300);
			new string556[556];
			new vehName[70];
			new vehID = 0;
			new vehModelID = sellBikeFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellBikeFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellBikeFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%s\n{FFFFFF}Level: {FFFF00}%d", vehName, FormatNumber(vehPrice), vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYBIKE, DIALOG_STYLE_MSGBOX, "Bike Store", string556, "Buy", "Next");
			buyVehFromStoreIndex[playerid] = 0;
		}
		else if (IsPlayerInRangeOfPoint(playerid, 3, 2131.8313, -1150.7656, 24.1215) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			buyingVehStoreIndex[playerid] = 1;
			inBuyVehVW[playerid] = 0;
			new newVirtualWorld = playerid + 1;
			SetPlayerVirtualWorld(playerid, newVirtualWorld);
			SetPlayerPos(playerid, 2122.3015, -1135.6859, 25.3364);
			SetPlayerCameraPos(playerid, 2122.3015, -1135.6859, 25.3364);
			SetPlayerCameraLookAt(playerid, 2124.2815, -1128.2109, 25.2091);
			new string556[556];
			new vehName[70];
			new vehID = 0;
			new vehModelID = sellCarFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellCarFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellBikeFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%s\n{FFFFFF}Level: {FFFF00}%d", vehName, FormatNumber(vehPrice), vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYCAR, DIALOG_STYLE_MSGBOX, "Veh Store", string556, "Buy", "Next");
			buyVehFromStoreIndex[playerid] = 0;
		}

		return 1;
	}

	if (strcmp(cmd, "/barrier", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1583.2211, -1637.3295, 13.3905))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
			lspdGateDoorTimer = 10;
			MoveDynamicObject(lspdGateDoor, 1581.937133, -1637.983764, 9.981795, 2.0, 0.000000, 0.000000, -87.099975);
		}

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 1542.8047, -1627.7461, 13.3828))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
			lspdPortTimer = 10;
			MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 2, 1.00000, 11.0000, -89.20010);
		}

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 2236.8057,2453.7966,10.6956))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return NotInFactionMessage(playerid, FACTION_LVPD);
			lvpdPort1Timer = 10;
			MoveDynamicObject(lvpdPort1, 2238.143798, 2450.422607, 10.642805, 5.0, 0.000000, 0.300016, -90.500106);
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 10.0, 2338.5601,2443.2805,6.3782))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return NotInFactionMessage(playerid, FACTION_LVPD);
			lvpdPort2Timer = 10;
			MoveDynamicObject(lvpdPort2, 2335.135498, 2443.826660, 4.351267, 5.0, 0.000000, 0.000000, 63.700000);
		}

		if (IsPlayerInRangeOfPoint(playerid, 15.0, 2448.5400, -1650.9452, 13.4048))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_GROVE) return NotInFactionMessage(playerid, FACTION_GROVE);
			groveGateTimer = 10;
			MoveDynamicObject(groveGate, 2451.77979, -1648.77783, 13.54984, 2, 0.00000, 0.00000, 0.00000);
		}

		//Unseen Criminals - open
		if (IsPlayerInRangeOfPoint(playerid, 15.0, 1355.8478, -2048.7498, 56.6921))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN) return NotInFactionMessage(playerid, FACTION_UNSEEN);
			armyPort1Timer = 10;
			MoveDynamicObject(unseenCriminalsGate1, 1341.79736, -2049.01465, 59.41744, 16.0, 0.00000, 0.00000, 4.00000);
			MoveDynamicObject(unseenCriminalsGate2, 1366.25281, -2045.44141, 59.11782, 16.0, 0.00000, 0.00000, 9.00000);
			unseenCriminalsGate1Timer = 10;
			unseenCriminalsGate2Timer = 10;
		}

		//Unseen Criminals - close

		//San Andreas Army - open
		if (IsPlayerInRangeOfPoint(playerid, 10.0, 136.5198, 1941.1293, 19.3139))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return NotInFactionMessage(playerid, FACTION_ARMY);
			armyPort1Timer = 10;
			MoveDynamicObject(armyPort1, 135.142593, 1941.479492, 15.087491, 5.00, 0, 0, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 285.2253, 1820.8843, 17.6406))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return NotInFactionMessage(playerid, FACTION_ARMY);
			armyPort2Timer = 10;
			MoveDynamicObject(armyPort2, 285.723236, 1820.534057, 13.034932, 5.00, 0, 0, 89.800071);
		}

		//San Andreas Army - close

		//Military Aviation - open
		if (IsPlayerInRangeOfPoint(playerid, 10.0, 2495.6892,2773.1677,10.8188))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_KACC) return NotInFactionMessage(playerid, FACTION_KACC);
			kaccPortTimer = 10;
			MoveDynamicObject(kaccPort, 2497.108642, 2784.875976, 11.421746, 5.00, 0, 0, 90.000007);
			MoveDynamicObject(kaccPort2, 2496.778808, 2761.218750, 11.428609, 5.00, 0, 0, 90.000007);
		}

		//Military Aviation - close

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 1588.2328, -1635.5154, 13.3828))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
			lspdGateTimer = 10;
			MoveDynamicObject(lspdGate, 1588.6683, -1638.3994, 10.2556, 2, 0.0000, 0.0000, -90.6001);
		}
		
		//Unseen Criminals - open
		
		if (IsPlayerInRangeOfPoint(playerid, 10.0, 1027.3562,1177.6782,10.6719))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN) return NotInFactionMessage(playerid, FACTION_UNSEEN);
			unseenCriminalsGateTimer_LV = 10;
			MoveDynamicObject(unseenCriminalsGate1_LV, 1037.571899, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
			MoveDynamicObject(unseenCriminalsGate2_LV, 1017.189880, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
		}

		//Unseen Criminals - close

		return 1;
	}

	if (strcmp(cmd, "/getgun", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1348.3685, 1570.4054, 1467.6976) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 6)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на LSPD и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_POLICE, DIALOG_STYLE_LIST, "{B37D57}Police's Guns:", "M4 (автомат): $2200\nDeagle (пистолет): $1500\nБухалка", "Избери", "Излез");
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 5.0, 256.9827,66.0424,1003.6406) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 6)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_RCPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на RCPD и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_POLICE, DIALOG_STYLE_LIST, "{B37D57}Police's Guns:", "M4 (автомат): $2200\nDeagle (пистолет): $1500\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1590.1691, -1682.0958, 2982.2700) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 6)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на LVPD и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_POLICE, DIALOG_STYLE_LIST, "{B37D57}Police's Guns:", "M4 (автомат): $2200\nDeagle (пистолет): $1500\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 880.5675, -2255.6067, 12.8527) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_KACC) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на Military Aviation и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_ARMY, DIALOG_STYLE_LIST, "{B37D57}Army's Guns:", "M4 (автомат): $2200\nDeagle (пистолет): $1500\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 213.2412, 1806.7898, 17.6406) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на San Andreas Army и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_ARMY, DIALOG_STYLE_LIST, "{B37D57}Army's Guns:", "M4 (автомат): $2200\nDeagle (пистолет): $1500\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1570.0121, -1691.7775, 62.1910) && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_FBI) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на FBI и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_FBI, DIALOG_STYLE_LIST, "{B37D57}FBI's Guns:", "M4 (автомат): $2200\nDeagle (пистолет): $1500\nБухалка", "Избери", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/buy", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 1782.3506, 1665.1987, -12.8913) && GetPlayerInterior(playerid) == 1)
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Въдица ($50)\nСтръв, 10 червея ($31)");
			ShowPlayerDialog(playerid, DIALOG_BUYFISH, DIALOG_STYLE_LIST, "FISH STORE", string256, "Вземи", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, -22.9671, -55.6587, 1003.5469) ||
			IsPlayerInRangeOfPoint(playerid, 4, -30.7964, -29.0106, 1003.5573) ||
			IsPlayerInRangeOfPoint(playerid, 4, -22.0741, -138.6289, 1003.5469))
		{
			new string556[556];
			format(string556, 556, "{FFFFFF}Нож ($10)\n{FFFFFF}Бухалка ($15)\n{FFFFFF}Камера ($25)\n{FFFFFF}GPS ($350)\nЦигари 10x ($6)\nТракер за лични коли 3x ($900)\nБилетче от лотарията\nХрани и напитки\nПърва помощ ($70)\nИнструменти за поправка на кола ($170)\nСпрей за графити ($3000)\nЗарче ($160)");
			ShowPlayerDialog(playerid, DIALOG_GENERALSTORE, DIALOG_STYLE_LIST, "GENERAL STORE", string556, "Вземи", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 2, 1857.1810, -1874.2731, 13.4829))
		{
			new string556[556];
			format(string556, 556, "{FFFFFF}Money Bag ($10000)\n{FFFFFF}Кокаин ($145 гр.)\n{FFFFFF}Марихуана ($255 гр.)\n{FFFFFF}Хероин ($365 гр.)");
			ShowPlayerDialog(playerid, DIALOG_BLACKMARKET, DIALOG_STYLE_LIST, "BLACK MARKET", string556, "Вземи", "Излез");
		}

		return 1;
	}

    if (strcmp(cmd, "/leaveevent", true) == 0)
    {
        if (!inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си участник в Event-а!");
        SendClientMessage(playerid, COLOR_EVENT, "Ти напусна евента!");
        LeaveFromEvent(playerid);
        return 1;
    }

	if (strcmp(cmd, "/dm", true) == 0)
    {
        if (inPaintBall[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от PaintBall първо!");
		if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си заподозрян!");
        if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Admin смяна първо!");
        if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от AFK първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
		if (PlayerHealth(playerid) < 100.0) return SendClientMessage(playerid, COLOR_GRAD1, "За да се телепортираш трябва да имаш 100 точки живот!"); 
		SetPlayerPos(playerid, 2391.9109,1038.5081,10.8203);
		SetPlayerFacingAngle(playerid,177.0329);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_WHITE, "Ти успешно се телепортира до DM");
        return 1;
    }
	
	if (strcmp(cmd, "/dm2", true) == 0)
    {
        if (inPaintBall[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от PaintBall първо!");
		if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си заподозрян!");
        if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от AFK първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
		if (PlayerHealth(playerid) < 100.0) return SendClientMessage(playerid, COLOR_GRAD1, "За да се телепортираш трябва да имаш 100 точки живот!"); 
		SetPlayerPos(playerid, 1135.5582,1335.1517,10.8203);
		SetPlayerFacingAngle(playerid,177.0329);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_WHITE, "Ти успешно се телепортира до DM 2");
        return 1;
    }

    if (strcmp(cmd, "/joinevent", true) == 0)
    {
		if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си заподозрян!");
        if (inPaintBall[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от PaintBall първо!");
        if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Police смяна първо!");
        if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fbi смяна първо!");
        if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
        if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Army смяна първо!");
		if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C. смяна първо!");
        if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Admin смяна първо!");
        if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от AFK първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си участник в Event-а!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти си създател на Event-а!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
        if(eventPlayers > eventLimit) return SendClientMessage(playerid, COLOR_GRAD1, "Няма места за влизане в Event-а!");
        new string256[256];
        SavePlayerAllGuns(playerid);
        GetPlayerAllGuns(playerid);
        GetPlayerHealth(playerid, beforeHealth[playerid]);
        GetPlayerArmour(playerid, beforeArmour[playerid]);
        SetArmour(playerid, 100);
        SetPlayerHealth(playerid, 100);
        SetPlayerInterior(playerid, eventInterior);
        SetPlayerVirtualWorld(playerid, eventVirtualWorld);
        SetPlayerColor(playerid, 0x80FF00FF);
        eventPlayers += 1;
        format(string256, sizeof(string256), "%s {80FF00}се пресъедини към евента. За да се пресъединиш и ти напиши {FF0000}/joinevent .", GetPlayerNickname(playerid));
        SendClientMessageToAll(COLOR_EVENT, string256);
        if(eventFreeze)
        {
            TogglePlayerControllable(playerid, 0);
        }
        return 1;
    }
	
	if (strcmp(cmd, "/joinpaintball", true) == 0)
	{
		JoinPaintBall(playerid);
		return 1;
	}

	if (strcmp(cmd, "/leavepaintball", true) == 0)
	{
		if (inPaintBall[playerid] == false) SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в играта PaintBall!");
		LeaveFromPaintBall(playerid);
		new string256[256];
		format(string256, 256, "PaintBall: %s напусна PaintBall!", GetPlayerNickname(playerid));
		SendClientMessageToAll(COLOR_PAINTBALL, string256);
		return 1;
	}

	if (strcmp(cmd, "/getarmour", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща!");
		new neededVw = PlayerInfo[playerid][pHouseOwnedID] + 50;
		if (neededVw != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в къщата ви!");
		new houseID = PlayerInfo[playerid][pHouseOwnedID];
		if (HouseInfo[houseID][hArmour] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В къщата ти няма жилетка!");
		new Float: hisArmour;
		GetPlayerArmour(playerid, hisArmour);
		if (hisArmour >= 100) return SendClientMessage(playerid, COLOR_GRAD1, "Жилетката ти е все още здрава!");
		SetArmour(playerid, 100);
		HouseInfo[houseID][hArmour] -= 1;
		SendClientMessage(playerid, COLOR_WEAPONS, "Вие облякохте жилетката, която имахте!");
		SaveHouse(houseID);
		return 1;
	}

	if (strcmp(cmd, "/buyarmour", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 291.3295, -106.2229, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 296.3936, -80.8117, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 308.2184, -141.4642, 999.6016))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buyarmour [house/player]");
				return 1;
			}

			new level[32];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buyarmour [house/player]");
				return 1;
			}

			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			if (strcmp(level, "house", false) == 0 && strcmp(level, "player", false) == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buyarmour [house/player]");
				return 1;
			}

			if (strcmp(level, "house", true) == 0)
			{
				if (PlayerInfo[playerid][pCash] < 450) return SendClientMessage(playerid, COLOR_GRAD1, "Бронята струва $450, а ти нямаш толкова!");
				if (PlayerInfo[playerid][pHouseOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща!");
				new houseID = PlayerInfo[playerid][pHouseOwnedID];
				if (HouseInfo[houseID][hArmour] >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "В къщата ти има вече 3 жилетки! Не можеш да купиш още една!");
				HouseInfo[houseID][hArmour] += 1;
				GivePlayerCash(playerid, -450);
				SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте жилетка за $450! Използвайте я чрез /getarmour");
				SaveHouse(houseID);
			}

			if (strcmp(level, "player", true) == 0)
			{
				if (PlayerInfo[playerid][pCash] < 450) return SendClientMessage(playerid, COLOR_GRAD1, "Бронята струва $450, а ти нямаш толкова!");
				new Float: hisArmour;
				GetPlayerArmour(playerid, hisArmour);
				if (hisArmour >= 100) return SendClientMessage(playerid, COLOR_GRAD1, "Жилетката ти е заредена напълно!");
				SetArmour(playerid, 100);
				GivePlayerCash(playerid, -450);
				SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте жилетка за $450!");
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/buygun", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 291.3295, -106.2229, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 296.3936, -80.8117, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 308.2184, -141.4642, 999.6016))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Пистолет със заглушител, 300 патрона ($5250)\n{FFFFFF}MP5, 500 патрона ($7420)\n{FFFFFF}Tec9, 500 патрона ($6420)\n{FFFFFF}Sawn-off, 200 патрона ($7420)\n{FF3737}VIP Level 1{FFFFFF}: Пистолет със заглушител, 120 патрона");
			ShowPlayerDialog(playerid, DIALOG_AMMUSTORE, DIALOG_STYLE_LIST, "AMMUNATION", string256, "Вземи", "Излез");
		}

		return 1;
	}

	//Fighting styles - open
	if (strcmp(cmd, "/train", true) == 0)
	{
		new level[32];
		if (!IsPlayerInRangeOfPoint(playerid, 4, 773.6641, -72.9778, 1000.6484) && !IsPlayerInRangeOfPoint(playerid, 4, 773.0745, -39.3959, 1000.6865))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в салон за да тренираш!");
			return 1;
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, 773.6641, -72.9778, 1000.6484))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/train [fighting style]");
				SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: normal $2300, grabkick $3300, boxing $4300");
				return 1;
			}

			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			if (strcmp(level, "normal", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 2300)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Normal и това ти струваше $2300!");
				PlayerInfo[playerid][pFightStyle] = 0;
				GivePlayerCash(playerid, -2300);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			}

			if (strcmp(level, "grabkick", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 3300)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Grab Kick и това ти струваше $3300!");
				PlayerInfo[playerid][pFightStyle] = 1;
				GivePlayerCash(playerid, -3300);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
			}

			if (strcmp(level, "boxing", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 4300)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Boxing и това ти струваше $4300!");
				PlayerInfo[playerid][pFightStyle] = 2;
				GivePlayerCash(playerid, -4300);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			}
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, 773.0745, -39.3959, 1000.6865))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/train [fighting style]");
				SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: kungfu $3400, elbow $5400, kneehead $6400");
				return 1;
			}

			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			if (strcmp(level, "kungfu", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 3400)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kungfu и това ти струваше $3400!");
				PlayerInfo[playerid][pFightStyle] = 3;
				GivePlayerCash(playerid, -3400);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			}

			if (strcmp(level, "elbow", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 4)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 5400)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Elbow и това ти струваше $5400!");
				PlayerInfo[playerid][pFightStyle] = 4;
				GivePlayerCash(playerid, -5400);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
			}

			if (strcmp(level, "kneehead", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 5)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 6400)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kneehead и това ти струваше $6400!");
				PlayerInfo[playerid][pFightStyle] = 5;
				GivePlayerCash(playerid, -6400);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
		}

		return 1;
	}

	//Fighting styles - close
	if (strcmp(cmd, "/drink", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 496.7184, -76.0349, 998.7578) || IsPlayerInRangeOfPoint(playerid, 4, -224.7806, 1403.9601, 27.7734))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Бира ($5)\n{FFFFFF}Вино ($10)\n{FFFFFF}Водка ($10)");
			ShowPlayerDialog(playerid, DIALOG_DRINKSSTORE, DIALOG_STYLE_LIST, "DRINKS STORE", string256, "Вземи", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/logotext", true) == 0)
	{
		if (logoTextEnabled[playerid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие премахнахте логото на сървъра от екрана *");
			TextDrawHideForPlayer(playerid, ServerLogo[playerid]);
			logoTextEnabled[playerid] = false;
		}
		else if (logoTextEnabled[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие сложихте логото на сървъра на екрана *");
			TextDrawShowForPlayer(playerid, ServerLogo[playerid]);
			logoTextEnabled[playerid] = true;
		}

		return 1;
	}

	if (strcmp(cmd, "/time", true) == 0)
	{
		if (timeTextEnabled[playerid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие премахнахте вашия часовник от екрана *");
			TextDrawHideForPlayer(playerid, Clock[playerid]);
			TextDrawHideForPlayer(playerid, Date[playerid]);
			timeTextEnabled[playerid] = false;
		}
		else if (timeTextEnabled[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие сложихте вашия часовник на екрана *");
			TextDrawShowForPlayer(playerid, Clock[playerid]);
			TextDrawShowForPlayer(playerid, Date[playerid]);
			timeTextEnabled[playerid] = true;
		}

		return 1;
	}

	if (strcmp(cmd, "/givekeys", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new giveplayerid = ReturnUser(tmp);

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new car;
		car = strval(tmp);
		if (car < 400 || car > 611)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на превозните средства трябва да са от 400 до 612!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new color1;
		color1 = strval(tmp);
		if (color1 < 0 || color1 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new color2;
		color2 = strval(tmp);
		if (color2 < 0 || color2 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

        if (ExistVehicleID(1850)) return SendClientMessage(playerid, COLOR_GRAD1, "Достигнат е тоталният лимит на превозни средства!");
		if (GetPrivateVehsNumber(giveplayerid) >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма свободен слот за лични превози!");
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerid, giveplayeridNickname, 25);
		new string256[256];
		format(string256, 256, "Ти даде личен превоз на %s", giveplayeridNickname);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		format(string256, 256, "*** Честито %s ти даде лично превозно средство ***", accountNickname);
		SendClientMessage(giveplayerid, COLOR_PRIVATEVEH, string256);
		//create and give veh - open
		new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
		format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, giveplayeridNickname);
		new freeSlot = GetPlayerPrivateVehFreeSlot(giveplayerid);
		PlayerInfo[giveplayerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
		PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
		PrivateVehInfo[unusedPrivateVehID][vVehID] = car;	//goto
		PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
		PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
		PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
		PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
		DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
		PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
		new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
		VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
		VehicleInfo[vehicle][vIsPrivate] = 1;
		SavePrivateVehicle(unusedPrivateVehID);
		unusedPrivateVehID++;
		Inventory_Add(giveplayerid, "Ключове за кола", 11746, 1);
		PlayerInfo[giveplayerid][pPrivateVehFreeSlot] += 1;
		SendClientMessage(giveplayerid, COLOR_WHITE, "SERVER: Използвайте /getmycar за да пуснете превозното си средство!");
		//create and give veh - close

		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		SetVehiclePos(vehicle, X, Y, Z);
		PutPlayerInVehicle(playerid, vehicle, 0);
		new vehModel = GetVehicleModel(vehicle);
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			ToggleEngine(vehicle, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp(cmd, "/veh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/veh [carid] [color1] [color2]");
			return 1;
		}

		new car;
		car = strval(tmp);
		if (car < 400 || car > 611)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на превозните средства трябва да са от 400 до 612!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/veh [carid] [color1] [color2]");
			return 1;
		}

		new color1;
		color1 = strval(tmp);
		if (color1 < 0 || color1 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/veh [carid] [color1] [color2]");
			return 1;
		}

		new color2;
		color2 = strval(tmp);
		if (color2 < 0 || color2 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		new carid = CreateVehicle(car, X, Y, Z, 0.0, color1, color2, RESPAWN_VEHS_SECONDS);
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		adminVeh[carid] = true;
		new vehModel = GetVehicleModel(carid);
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			ToggleEngine(carid, VEHICLE_PARAMS_OFF);
		}

		new string256[256];
		format(string256, 256, "Ти създаде ново превозно средство {FFFFFF}(ID: %d | Model: %d) ", GetPlayerVehicleID(playerid), vehModel);
		SendClientMessage(playerid, 0x00FF00FF, string256);
		return 1;
	}

	if (strcmp(cmd, "/givelevel", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givelevel [ID на играч] [level]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level = strval(tmp);
			if (level < 1 || level > 1000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Можеш да дадеш между 1 и 1000 Levels наведнъж.");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "*Ти получи %d Level от %s *", level, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "*Ти даде %d Level на %s *", level, giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			GivePlayerLevel(giveplayerID, level);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/giveexp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveexp [ID на играч] [exp]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveexp [ID на играч] [exp]");
				return 1;
			}

			new exp = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "*Ти получи %d Exp от %s *", exp, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "* Ти даде %d Exp на %s *", exp, giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			GivePlayerExp(giveplayerID, exp);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/respawn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/respawn [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти беше пуснат на Spawn позицията си от администратор %s", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			format(string256, 256, "Admin: Ти пусна %s на Spawn позицията му", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SetToSpawn(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/akill", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/akill [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти беше убит от администратор %s", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_RED, string256);
			format(string256, 256, "Admin: Ти уби %s като администратор", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_ADMIN_RED, string256);
			SetPlayerHealth(giveplayerID, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/clearchat", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				ClearChatBig(i);
			}

			GetPlayerName(playerid, accountNickname, 25);
			new string256[256];
			format(string256, 256, "Чатът на сървъра беше изтрит от %s", accountNickname);
			SendClientMessageToAll(COLOR_WHITE, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setworld", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setworld [ID на играч] [world]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new world = strval(tmp);
			if (world < 0 || world > 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Virtual Worlds са между 0 и 10000.");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти беше сложен в Virtual World ID %d от %s", world, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "Admin: Ти сложи Virtual World ID %d на %s", world, giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			SetPlayerVirtualWorld(giveplayerID, world);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setint", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setint [ID на играч] [interior]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new interior = strval(tmp);
			if (interior < 0 || interior > 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Interiors са между 0 и 10000.");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти беше сложен в Interior ID %d от %s", interior, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "Admin: Ти сложи Interior ID %d на %s", interior, giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			SetPlayerInterior(giveplayerID, interior);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	//
	if (strcmp(cmd, "/disarm", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/disarm [ID на играч]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new string256[256];
				ResetPlayerWeapons(giveplayerid);
				format(string256, 256, "Admin: %s взе твоите оръжия!", GetAccountNickname(playerid));
				SendClientMessage(giveplayerid, COLOR_YELLOW, string256);
				format(string256, 256, "Admin: Ти взе оръжията на %s !", GetAccountNickname(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givegun", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givegun [playerid] [weaponid] [ammount]");
				SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
				SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
				SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
				return 1;
			}

			new level;
			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (!strlen(tmp) || level == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givegun [playerid] [weaponid] [ammount]");
				SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
				SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
				SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
				return 1;
			}

			if (level > 46)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID оръжие не съществува!");
				return 1;
			}

			tmp = strtok(cmdtext, idx);
			new ammount = strval(tmp);
			if (!strlen(tmp) || ammount == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givegun [playerid] [weaponid] [ammount]");
				SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
				SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
				SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
				return 1;
			}

			if (ammount < 1)
			{
				SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да дадеш толкова амуниции!");
				return 1;
			}

			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new weaponname[32];
				GetWeaponName(level, weaponname, 32);
				new string256[256];
				format(string256, 256, "Admin: Ти даде на %s оръжие %s с %d амуниции!", GetAccountNickname(giveplayerID), weaponname, ammount);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "Admin: %s ти даде %s с %d амуниции!", GetAccountNickname(playerid), weaponname, ammount);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				if (level == 21)
				{
					SetPlayerArmedWeapon(giveplayerID, 0);
					SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_USEJETPACK);
					SetPlayerArmedWeapon(giveplayerID, 0);
					SetPlayerArmedWeapon(giveplayerID, 0);
					SetPlayerArmedWeapon(giveplayerID, 0);
				}

				GivePlayerWeapon(giveplayerID, level, ammount);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/golastpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			if (LastPos[playerid][lpUsed] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма как да използваш тази команда!");
			SetPlayerPos(playerid, LastPos[playerid][lpPx], LastPos[playerid][lpPy], LastPos[playerid][lpPz]);
			SetPlayerInterior(playerid, LastPos[playerid][lpInterior]);
			SetPlayerVirtualWorld(playerid, LastPos[playerid][lpVWorld]);
			SendClientMessage(playerid, COLOR_WHITE, "Ти се върна на предходната си позиция!");
			LastPos[playerid][lpUsed] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/checkhouseinterior", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/checkhouseinterior [interior 1-26]");
				return 1;
			}

			new interiorID = strval(tmp);
			if (interiorID < 1 || interiorID > 26) return SendClientMessage(playerid, COLOR_GRAD1, "Невалиден Interior ID!");
			new string256[256];
			format(string256, 256, "Ти провери House Interior ID: %d", interiorID);
			SendClientMessage(playerid, COLOR_HOUSE, string256);
			SendClientMessage(playerid, COLOR_HOUSE, "За да излезеш от Interior-а, напиши /golastpos");

			if (LastPos[playerid][lpUsed] == 0)
			{
				GetPlayerPos(playerid, LastPos[playerid][lpPx], LastPos[playerid][lpPy], LastPos[playerid][lpPz]);
				LastPos[playerid][lpInterior] = GetPlayerInterior(playerid);
				LastPos[playerid][lpVWorld] = GetPlayerVirtualWorld(playerid);
				LastPos[playerid][lpUsed] = 1;
			}

			//House Interiors - open
			if (interiorID == 1)
			{
				SetPlayerPos(playerid, 2283.04, -1140.28, 1050.90);
				SetPlayerFacingAngle(playerid, 267.0980);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 11);
			}

			if (interiorID == 2)
			{
				SetPlayerPos(playerid, 243.72, 304.91, 999.15);
				SetPlayerFacingAngle(playerid, 267.3974);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 1);
			}

			if (interiorID == 3)
			{
				SetPlayerPos(playerid, 2308.77, -1212.94, 1049.02);
				SetPlayerFacingAngle(playerid, 359.8550);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 6);
			}

			if (interiorID == 4)
			{
				SetPlayerPos(playerid, 377.15, 1417.41, 1081.33);
				SetPlayerFacingAngle(playerid, 1.6415);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 15);
			}

			if (interiorID == 5)
			{
				SetPlayerPos(playerid, 446.99, 1397.07, 1084.30);
				SetPlayerFacingAngle(playerid, 359.1347);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 2);
			}

			if (interiorID == 6)
			{
				SetPlayerPos(playerid, 2237.59, -1081.64, 1049.02);
				SetPlayerFacingAngle(playerid, 89.1791);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 2);
			}

			if (interiorID == 7)
			{
				SetPlayerPos(playerid, 260.85, 1237.24, 1084.26);
				SetPlayerFacingAngle(playerid, 359.8550);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 9);
			}

			if (interiorID == 8)
			{
				SetPlayerPos(playerid, 2807.48, -1174.76, 1025.57);
				SetPlayerFacingAngle(playerid, 89.4224);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 8);
			}

			if (interiorID == 9)
			{
				SetPlayerPos(playerid, 83.03, 1322.28, 1083.87);
				SetPlayerFacingAngle(playerid, 0.7248);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 9);
			}

			if (interiorID == 10)
			{
				SetPlayerPos(playerid, 2495.98, -1692.08, 1014.74);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 3);
			}

			if (interiorID == 11)
			{
				SetPlayerPos(playerid, -42.5628, 1405.5011, 1084.4297);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 8);
			}

			if (interiorID == 12)
			{
				SetPlayerPos(playerid, -68.7704, 1352.9250, 1080.2109);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 6);
			}

			if (interiorID == 13)
			{
				SetPlayerPos(playerid, 83.0758, 1322.2808, 1083.8662);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 9);
			}

			if (interiorID == 14)
			{
				SetPlayerPos(playerid, 140.2254, 1365.9796, 1083.8594);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 15)
			{
				SetPlayerPos(playerid, 223.1015, 1287.0764, 1082.1406);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 1);
			}

			if (interiorID == 16)
			{
				SetPlayerPos(playerid, 225.8726, 1021.4523, 1084.0177);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 7);
			}

			if (interiorID == 17)
			{
				SetPlayerPos(playerid, 226.2984, 1114.3319, 1080.9929);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 18)
			{
				SetPlayerPos(playerid, 261.0904, 1284.2944, 1080.2578);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 4);
			}

			if (interiorID == 19)
			{
				SetPlayerPos(playerid, 309.0916, 313.6412, 1003.3047);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 4);
			}

			if (interiorID == 20)
			{
				SetPlayerPos(playerid, 318.5932, 1114.4792, 1083.8828);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 21)
			{
				SetPlayerPos(playerid, 327.9635, 1477.7430, 1084.4375);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 15);
			}

			if (interiorID == 22)
			{
				SetPlayerPos(playerid, 1260.6464, -785.4418, 1091.9063);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 23)
			{
				SetPlayerPos(playerid, 2468.8413, -1698.4177, 1013.5078);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 2);
			}

			if (interiorID == 24)
			{
				SetPlayerPos(playerid, 2196.8506, -1204.2477, 1049.0234);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 6);
			}

			if (interiorID == 25)
			{
				SetPlayerPos(playerid, 2270.3855, -1210.4730, 1047.5625);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 10);
			}

			if (interiorID == 26)
			{
				SetPlayerPos(playerid, 2324.5479, -1149.5146, 1050.7101);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 12);
			}

			//House Interiors - close
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givelevelall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givelevelall [level]");
				return 1;
			}

			new level = strval(tmp);
			new string256[256];
			format(string256, 256, "* Всички играчи получиха %d Level от администратор %s *", level, GetAccountNickname(playerid));
			SendClientMessageToAll(COLOR_YELLOW, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					GivePlayerLevel(i, level);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givebgnall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givebgnall [BGN]");
				return 1;
			}

			new cash = strval(tmp);
			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			format(string256, 256, "Admin: Всички играчи получиха %d лева в касата (BGN) от %s!", cash, playeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_ORANGE, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					PlayerInfo[i][pVoucherBGN] += cash;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/giveexpall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveexpall [exp]");
				return 1;
			}

			new exp = strval(tmp);
			new string256[256];
			format(string256, 256, "* Всички играчи получиха %d Exp от администратор %s *", exp, GetAccountNickname(playerid));
			SendClientMessageToAll(COLOR_YELLOW, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					GivePlayerExp(i, exp);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givecashall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givecashall [cash]");
				return 1;
			}

			new cash = strval(tmp);
			new string256[256];
			format(string256, 256, "* Всички играчи получиха $%d от администратор %s *", cash, GetAccountNickname(playerid));
			SendClientMessageToAll(COLOR_YELLOW, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					GivePlayerCash(i, cash);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	//
	if (strcmp(cmd, "/setfactionmoney", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setfactionmoney [faction: 1-17] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove");
				return 1;
			}

			new factionID = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setfactionmoney [faction: 1-17] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove");
				return 1;
			}

			new cash = strval(tmp);
			if (factionID == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на Civilian!");
			new string256[256];
			format(string256, 256, "Faction Money: Ти сложи $%d на организация %s", cash, FactionInfo[factionID][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "Faction Money: Парите на вашата организация бяха променени на $%d в банката от Admin %s", cash, accountNickname);
			SendFactionMessage(factionID, COLOR_FACTION, string256);
			FactionInfo[factionID][fBankAccount] = cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givefactionmoney", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givefactionmoney [faction: 1-14] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove");
				return 1;
			}

			new factionID = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givefactionmoney [faction: 1-14] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove");
				return 1;
			}

			new cash = strval(tmp);
			if (factionID == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на Civilian!");
			new string256[256];
			format(string256, 256, "Faction Money: Ти даде $%d в банковата сметка на %s", cash, FactionInfo[factionID][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "Faction Money: Вашата организация получи $%d в банката от Admin %s", cash, accountNickname);
			SendFactionMessage(factionID, COLOR_FACTION, string256);
			FactionInfo[factionID][fBankAccount] += cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setlevel", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setlevel [ID на играч] [level]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setlevel [ID на играч] [level]");
				return 1;
			}

			new level = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Твоя Level беше променени от %s на %d", playeridNickname, level);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "Admin: Ти сложи Level-а на %s да е %d", giveplayeridNickname, level);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			PlayerInfo[giveplayerID][pLevel] = level;
			GivePlayerLevel(giveplayerID, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givebgn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givebgn [ID на играч] [BGN]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givebgn [ID на играч] [BGN]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: %s ти даде %d лева в касата (BGN)!", playeridNickname, cash);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Admin: Ти даде на %s %d лева в касата (BGN)!", giveplayeridNickname, cash);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
			PlayerInfo[giveplayerID][pVoucherBGN] += cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setbgn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setbgn [ID на играч] [BGN]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setbgn [ID на играч] [BGN]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Твоите пари в касата (BGN) бяха променени от %s на %d лева!", playeridNickname, cash);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Admin: Ти сложи BGN валутата в касата на %s да е %d лева!", giveplayeridNickname, cash);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
			PlayerInfo[giveplayerID][pVoucherBGN] = cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setcash", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setcash [ID на играч] [cash]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setcash [ID на играч] [cash]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Твоите пари в брой бяха променени от %s на $%d", playeridNickname, cash);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "Admin: Ти сложи парите на %s да са $%d", giveplayeridNickname, cash);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			PlayerInfo[giveplayerID][pCash] = cash;
			GivePlayerCash(giveplayerID, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givecash", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givecash [ID на играч] [cash]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givecash [ID на играч] [cash]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "*Ти получи $%d от Admin %s *", cash, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			format(string256, 256, "*Ти даде $%d на %s *", cash, giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			GivePlayerCash(giveplayerID, cash);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makeboss", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeboss [ID на играч] [Job: 1-4]");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 1: Taxi, 2: Mechanic, 3: SA News, 4: Fuel Company");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new job = strval(tmp);
			if (job < 1 || job >= MAX_JOBS)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeboss [ID на играч] [Job: 1-4]");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 1: Taxi, 2: Mechanic, 3: SA News, 4: Fuel Company");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти беше назначен за шеф на %s от %s", JobInfo[job][jName], playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Admin: %s беше назначен за шеф на %s от %s", giveplayeridNickname, JobInfo[job][jName], playeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Твоята нова работа е %s! За да видиш командите, използвай /jobhelp", JobInfo[job][jName]);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			PlayerInfo[giveplayerID][pJob] = job;
			PlayerInfo[giveplayerID][pJobBoss] = true;
			QuitJobProcess(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getboss", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getboss [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			if (!PlayerInfo[giveplayerID][pJobBoss]) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е шеф на фирма!");
			PlayerInfo[giveplayerID][pJob] = JOB_NO;
			PlayerInfo[giveplayerID][pJobBoss] = false;
			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Твоята шефска позиция от фирмата е махната от %s! Вече си без работа!", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_DARKGREEN, string256);
			format(string256, 256, "Admin: %s беше премахнат от неговата фирма, където беше шеф от %s!", giveplayeridNickname, playeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_DARKGREEN, string256);
			QuitJobProcess(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getleader", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getleader [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е лидер на Faction!");
			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти беше премахнат от лидерската си позиция от %s! Вече си цивилен!", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_DARKGREEN, string256);
			format(string256, 256, "Admin: %s беше премахнат от лидерската си позиция от %s!", giveplayeridNickname, playeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_DARKGREEN, string256);
			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LSPD || PlayerInfo[giveplayerID][pFaction] == FACTION_LVPD
				 || PlayerInfo[giveplayerID][pFaction] == FACTION_RCPD)
			{
				SetPoliceOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_FBI)
			{
				SetFbiOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_ARMY)
			{
				SetArmyOffDuty(giveplayerID);
			}
			
			if(PlayerInfo[giveplayerID][pFaction] == FACTION_KACC)
			{
				SetKACCOffDuty(giveplayerID);
			}

			if (turfAttacker[giveplayerID] == true)
			{
				new Faction = PlayerInfo[giveplayerID][pFaction];
				format(string256, 256, "[FACTION CHAT] %s излезе от бандата/мафията и отпадна от атаката на територията!", GetPlayerNickname(playerid));
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(giveplayerID);
			}

			PlayerInfo[giveplayerID][pFaction] = FACTION_CIVILIAN;
			PlayerInfo[giveplayerID][pRank] = 1;
			SetPlayerDefaultColor(giveplayerID);
			if (policeSiren[giveplayerID] != -1) RemovePlayerSiren(giveplayerID);
			RemovePoliceBarricade(giveplayerID);
			if (IsPlayerAttachedObjectSlotUsed(giveplayerID, 7)) RemoveArmourObjectIfNotLaw(giveplayerID);
			RestartPlayerSkin(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setturf", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		new faction = strval(tmp);
		if (faction < 1 || faction >= MAX_FACTIONS)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setturf[Faction: 1-17]");
			SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
			SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
			SendClientMessage(playerid, COLOR_WHITE, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove");
			return 1;
		}

		if (faction == FACTION_CRIP || faction == FACTION_BALLAS || faction == FACTION_GROVE ||
			faction == FACTION_VAGOS || faction == FACTION_AZTECAS || faction == FACTION_TRIADS)
		{
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Interior!");
			new bool: sameGang = false;
			new isInTurf = -1;
			for (new t = 0; t < MAX_TURFS; t++)
			{
				if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
				{
					isInTurf = t;
					if (TurfInfo[t][TurfOwner] == faction)
					{
						sameGang = true;
					}
				}
			}

			if (isInTurf == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на територия!");
			if (sameGang == true) return SendClientMessage(playerid, COLOR_GRAD1, "Тази територия вече е на посочената организация!");
			if (TurfAttacked(isInTurf)) return SendClientMessage(playerid, COLOR_GRAD1, "Тази територия в момента е под атака и не можеш да промениш собственика й!");
			//Turfs:
			TurfInfo[isInTurf][TurfOwner] = faction;
			SaveTurf(isInTurf);
			//Factions:
			FactionInfo[faction][fTurfs]++;
			new oldTurfOwner = TurfInfo[isInTurf][TurfOwner];
			FactionInfo[faction][fTurfs]++;
			FactionInfo[oldTurfOwner][fTurfs]--;
			SaveFaction(faction);
			SaveFaction(oldTurfOwner);
			SendClientMessage(playerid, COLOR_ADMIN_RED, "Ти промени собственика на територията над която си!");
			for (new i; i < MAX_PLAYERS; i++)
			{
				LoadPlayerTurfs(i);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази организация не е банда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makeleader", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeleader [ID на играч] [Faction: 1-15]");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Cripz, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove, 15: RCPD");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new faction = strval(tmp);
			if (faction < 1 || faction >= MAX_FACTIONS)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeleader [ID на играч] [Faction: 1-15]");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 1: LSPD, 2: Military Aviation, 3: FBI, 4: Cripz, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 7: Ballas, 8: Unseen Criminals, 9: San Andreas Army");
				SendClientMessage(playerid, COLOR_YELLOW, "ID: 10: Italian Mafia, 11: Aztecas, 12: LVPD, 13: Triads, 14: Grove, 15: RCPD");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}
			new string256[256];
			format(string256, 256, "*** Ти беше назначен за лидер на %s от %s ***", FactionInfo[faction][fName], GetPlayerNickname(playerid));
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "*** %s беше назначен за лидер на %s от %s Честито ***", GetPlayerNickname(giveplayerID), FactionInfo[faction][fName], GetPlayerNickname(playerid));
			SendClientMessageToAll(COLOR_ADMIN_ORANGE, string256);
			if (turfAttacker[playerid] == true)
			{
				new Faction = PlayerInfo[playerid][pFaction];
				format(string256, 256, "[FACTION CHAR] %s излезе от бандата/мафията и отпадна от атаката на територията!", GetPlayerNickname(giveplayerID));
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(playerid);
			}

			PlayerInfo[giveplayerID][pFaction] = faction;
			PlayerInfo[giveplayerID][pRank] = 6;
			JoinFactionAffect(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/mybank", true) == 0)
	{
		ShowPlayerBank(playerid);
		return 1;
	}

	if (strcmp(cmd, "/mylocation", true) == 0)
	{
		if (!PlayerInfo[playerid][pGPS]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш GPS, който да използваш!");
		if (GetPlayerInterior(playerid) == 0)
		{
			new string256[256];
			format(string256, 256, "GPS: Вашата локация е %s!", GetPlayerZone(playerid));
			SendClientMessage(playerid, COLOR_GPS, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GPS, "GPS: В момента си в Interior!");
		}

		return 1;
	}

	if (strcmp(cmd, "/mybgn", true) == 0)
	{
		new string256[256];
		format(string256, 256, "Вашата сметка: Вие притежавате {0099FF}%d {FFFFFF}лева във вашата сметка!", PlayerInfo[playerid][pVoucherBGN]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		format(string256, 256, "Вашата сметка: Парите са регистрирани на профил: {0099FF}%s", accountNickname);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/weaponskills", true) == 0)
	{
		/*
		stock GetWeaponName_WSIndex(index)
		{
			new string32[32];
			switch(index)
			{
				case 0: format(string32, 32, "Пистолет");
				case 1: format(string32, 32, "Пистолет със заглушител");
				case 2: format(string32, 32, "Deagle");
				case 3: format(string32, 32, "Shotgun");
				case 4: format(string32, 32, "Sawn-off");
				case 5: format(string32, 32, "Spas-12");
				case 6: format(string32, 32, "Micro-uzi");
				case 7: format(string32, 32, "MP5");
				case 8: format(string32, 32, "AK47");
				case 9: format(string32, 32, "M4");
				case 10: format(string32, 32, "Sniper");
			}
			return string32;
		}
		*/
		new string2230[512];
		new string2230result[2230];
		for(new i=0; i<10; i++)
		{
			format(string2230, 512, "{FFFFFF}Постигнатото ти ниво с %s е {FFFF00}%d/10\n", GetWeaponName_WSIndex(i),PlayerInfo[playerid][pWeaponSkill][i]);
			strcat(string2230result, string2230);
		}
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF0000}Weapon Skills", string2230result, "Затвори", "");
		return 1;
	}

	if (strcmp(cmd, "/stats", true) == 0)
	{
		ShowPlayerStats(playerid, playerid);
		return 1;
	}

	if (strcmp(cmd, "/gotocor", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotocor[coor x] [coor y] [coor z]");
		new coorx;
		coorx = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotocor[coor x] [coor y] [coor z]");
		new coory;
		coory = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotocor[coor x] [coor y] [coor z]");
		new coorz;
		coorz = strval(tmp);
		SetPlayerPos(playerid, coorx, coory, coorz);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вие се телепортирахте успешно до оказаните координати.");
		return 1;
	}

	if (strcmp(cmd, "/makeevent", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeevent [ID на играч]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayeridNickname, 25);
				new string256[256];
				format(string256, 256, "*** Ти получи Event права от %s поздравления ***", accountNickname);
				SendClientMessage(giveplayerid, COLOR_ADMIN_ORANGE, string256);
				format(string256, 256, "*** Ти даде Event права на %s ***", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
				PlayerInfo[giveplayerid][pEvent] = true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getevent", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getevent [ID на играч]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayeridNickname, 25);
				new string256[256];
				format(string256, 256, "%s премахна твоите Event права", accountNickname);
				SendClientMessage(giveplayerid, COLOR_ADMIN_DARKGREEN, string256);
				format(string256, 256, "Ти махна Event правата на %s.", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_ADMIN_DARKGREEN, string256);
				GetEventAdmin(giveplayerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getvip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getvip [ID на играч]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayeridNickname, 25);
				new string256[256];
				format(string256, 256, "%s премахна твоите VIP права", accountNickname);
				SendClientMessage(giveplayerid, COLOR_ADMIN_DARKGREEN, string256);
				format(string256, 256, "Ти премахна VIP правата на %s", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_ADMIN_DARKGREEN, string256);
				PlayerInfo[giveplayerid][pVip] = 0;
				RemovePlayerLaser(giveplayerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getadmin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getadmin [ID на играч]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				new string256[256];
				format(string256, 256, "Admin: %s премахна всички Admin права на %s", GetPlayerNickname(playerid), GetPlayerNickname(giveplayerid));
				SendClientMessageToAll(COLOR_ADMIN_DARKGREEN, string256);
				PlayerInfo[giveplayerid][pAdmin] = 0;
				GetEventAdmin(giveplayerid);
				PlayerInfo[giveplayerid][pAdminWarns] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makevip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makevip [ID на играч] [1-3]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level[5];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makevip [ID на играч] [1-3]");
				return 1;
			}

			strmid(level, tmp, 0, 5, 5);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (strval(level) < 1 || strval(level) > 3)
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makevip [ID на играч] [1-3]");
					return 1;
				}

				new vipLevel = strval(level);
				new string256[256];
				PlayerInfo[giveplayerid][pVip] = vipLevel;
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayeridNickname, 25);
				format(string256, 256, "*** Ти получи %d Vip Level от %s Честито! ***", vipLevel, playeridNickname);
				SendClientMessage(giveplayerid, COLOR_ADMIN_ORANGE, string256);
				format(string256, 256, "* Ти направи %s да е %d Vip Level *", giveplayeridNickname, vipLevel);
				SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makeadmin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeadmin [ID на играч] [1-5]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level[5];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeadmin [ID на играч] [1-5]");
				return 1;
			}

			strmid(level, tmp, 0, 5, 5);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (strval(level) < 1 || strval(level) > 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeadmin [ID на играч] [1-5]");
					return 1;
				}

				new adminLevel = strval(level);
				new string256[256];
				PlayerInfo[giveplayerid][pAdmin] = adminLevel;
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayeridNickname, 25);
				format(string256, 256, "*** %s беше назначен за %s от %s поздравления! ***", giveplayeridNickname, GetAdminLevelName(adminLevel), playeridNickname);
				SendClientMessageToAll(COLOR_ADMIN_ORANGE, string256);
				if (strval(level) < 5 && scripterMode[playerid] == true)
				{
					scripterMode[playerid] = false;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/createbiz", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level] [payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new price;
		price = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level] [payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new type;
		type = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level] [payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new level;
		level = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level] [payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new payout;
		payout = strval(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			//todo

			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);

			if (price < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да е по-голяма от $0!");
			if (type < 1 || type > 22) return SendClientMessage(playerid, COLOR_GRAD1, "Този тип е невалиден!");
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш бизнес в този Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш бизнес в този Interior!");
			new biz[64];
			format(biz, 64, "/Bizz/%d.ini", ReturnNextUnusedBizID());
			SendClientMessage(playerid, COLOR_BIZ, "Вие успешно създадохте нов бизнес.");
			maxbiz += 1;
			if (!dini_Exists(biz))
			{
				dini_Create(biz);
				dini_IntSet(biz, "bOwner", 0);
				dini_Set(biz, "bOwnerName", "None");
				dini_FloatSet(biz, "bX", X);
				dini_FloatSet(biz, "bY", Y);
				dini_FloatSet(biz, "bZ", Z);
				dini_IntSet(biz, "bLocked", 0);
				dini_IntSet(biz, "bType", type);
				dini_IntSet(biz, "bPrice", price);
				dini_IntSet(biz, "bLevel", level);
				dini_IntSet(biz, "bPayOut", payout);
				new oldbizid = ReturnNextUnusedBizID();
				BizInfo[oldbizid][bX] = dini_Float(biz, "bX");
				BizInfo[oldbizid][bY] = dini_Float(biz, "bY");
				BizInfo[oldbizid][bZ] = dini_Float(biz, "bZ");
				BizInfo[oldbizid][bOwner] = dini_Int(biz, "bOwner");
				BizInfo[oldbizid][bLocked] = dini_Int(biz, "bLocked");
				BizInfo[oldbizid][bPrice] = dini_Int(biz, "bPrice");
				BizInfo[oldbizid][bType] = dini_Int(biz, "bType");
				BizInfo[oldbizid][bLevel] = dini_Int(biz, "bLevel");
				BizInfo[oldbizid][bPayOut] = dini_Int(biz, "bPayOut");
				dini_IntSet(biz, "bStock", 60);
				BizInfo[oldbizid][bStock] = 60;
				if (type != 27)
				{
					dini_IntSet(biz, "bFee", 2);
					BizInfo[oldbizid][bFee] = 2;
				}

				if (type == 1)
				{
					dini_Set(biz, "bName", "General Store");
					format(BizInfo[oldbizid][bName], 256, "General Store");
				}

				if (type == 2)
				{
					dini_Set(biz, "bName", "Bar");
					format(BizInfo[oldbizid][bName], 256, "Bar");
				}

				if (type == 3)
				{
					dini_Set(biz, "bName", "Ammu-Nation");
					format(BizInfo[oldbizid][bName], 256, "Ammu-Nation");
				}

				if (type == 4)
				{
					dini_Set(biz, "bName", "General Store");
					format(BizInfo[oldbizid][bName], 256, "General Store");
				}

				if (type == 5)
				{
					dini_Set(biz, "bName", "Prolaps Store");
					format(BizInfo[oldbizid][bName], 256, "Prolaps Store");
				}

				if (type == 6)
				{
					dini_Set(biz, "bName", "Burger Shot");
					format(BizInfo[oldbizid][bName], 256, "Burger Shot");
				}

				if (type == 7)
				{
					dini_Set(biz, "bName", "General Store");
					format(BizInfo[oldbizid][bName], 256, "General Store");
				}

				if (type == 8)
				{
					dini_Set(biz, "bName", "Urban Store");
					format(BizInfo[oldbizid][bName], 256, "Urban Store");
				}

				if (type == 9)
				{
					dini_Set(biz, "bName", "Ammu-Nation");
					format(BizInfo[oldbizid][bName], 256, "Ammu-Nation");
				}

				if (type == 10)
				{
					dini_Set(biz, "bName", "Ammu-Nation");
					format(BizInfo[oldbizid][bName], 256, "Ammu-Nation");
				}

				if (type == 11)
				{
					dini_Set(biz, "bName", "Disco");
					format(BizInfo[oldbizid][bName], 256, "Disco");
				}

				if (type == 12)
				{
					dini_Set(biz, "bName", "Sex Shop");
					format(BizInfo[oldbizid][bName], 256, "Sex Shop");
				}

				if (type == 13)
				{
					dini_Set(biz, "bName", "Gym");
					format(BizInfo[oldbizid][bName], 256, "Gym");
				}

				if (type == 14)
				{
					dini_Set(biz, "bName", "Gym");
					format(BizInfo[oldbizid][bName], 256, "Gym");
				}

				if (type == 15)
				{
					dini_Set(biz, "bName", "Casino");
					format(BizInfo[oldbizid][bName], 256, "Casino");
				}

				if (type == 16)
				{
					dini_Set(biz, "bName", "STRIP CLUB");
					format(BizInfo[oldbizid][bName], 256, "STRIP CLUB");
				}

				if (type == 17)
				{
					dini_Set(biz, "bName", "4 Dragons");
					format(BizInfo[oldbizid][bName], 256, "4 Dragons");
				}

				if (type == 18)
				{
					dini_Set(biz, "bName", "Caligula'S");
					format(BizInfo[oldbizid][bName], 256, "Caligula'S");
				}

				if (type == 19)
				{
					dini_Set(biz, "bName", "Bar");
					format(BizInfo[oldbizid][bName], 256, "Bar");
				}

				if (type == 20)
				{
					dini_Set(biz, "bName", "Cluckin' Bell");
					format(BizInfo[oldbizid][bName], 256, "Cluckin' Bell");
				}

				if (type == 21)
				{
					dini_Set(biz, "bName", "Restaurant");
					format(BizInfo[oldbizid][bName], 256, "Restaurant");
				}

				if (type == 22)
				{
					dini_Set(biz, "bName", "Fishing Store");
					format(BizInfo[oldbizid][bName], 256, "Fishing Store");
				}

				bizPickup[oldbizid] = CreateDynamicPickup(1272, 1, BizInfo[oldbizid][bX], BizInfo[oldbizid][bY], BizInfo[oldbizid][bZ], 0);
				AddBizLabel(oldbizid);
				AddBizActor(oldbizid);
				bizPickupIndex[bizPickup[oldbizid]] = oldbizid;
				isBizPickup[bizPickup[oldbizid]] = true;
				AddBizIcon(oldbizid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/createhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
				return 1;
			}

			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			new model;
			model = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
				return 1;
			}

			new type;
			type = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
				return 1;
			}

			new level;
			level = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
			if (model < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да е по-голяма от $0!");
			if (type < 1 || type > 28) return SendClientMessage(playerid, COLOR_GRAD1, "Този интериор е невалиден!");
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш къща в този Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш къща в този Interior!");
			new house[64];
			new oldhouseid = ReturnNextUnusedHouseID();
			format(house, 64, "/Houses/%d.ini", ReturnNextUnusedHouseID());
			SendClientMessage(playerid, COLOR_HOUSE, "Ти успешно създаде нова къща!");
			maxhouses += 1;
			if (!dini_Exists(house))
			{
				dini_Create(house);
				dini_IntSet(house, "hOwner", 0);
				dini_Set(house, "hOwnerName", "None");
				dini_IntSet(house, "hOwner", 0);
				dini_FloatSet(house, "hX", X);
				dini_FloatSet(house, "hY", Y);
				dini_FloatSet(house, "hZ", Z);
				dini_IntSet(house, "hLocked", 0);
				dini_IntSet(house, "hInterior", type);
				dini_IntSet(house, "hPrice", model);
				dini_IntSet(house, "hLevel", level);
				dini_Set(house, "hName", result);
				HouseInfo[oldhouseid][hX] = dini_Float(house, "hX");
				HouseInfo[oldhouseid][hY] = dini_Float(house, "hY");
				HouseInfo[oldhouseid][hZ] = dini_Float(house, "hZ");
				HouseInfo[oldhouseid][hOwner] = dini_Int(house, "hOwner");
				HouseInfo[oldhouseid][hLocked] = dini_Int(house, "hLocked");
				HouseInfo[oldhouseid][hPrice] = dini_Int(house, "hPrice");
				HouseInfo[oldhouseid][hLevel] = dini_Int(house, "hLevel");
				HouseInfo[oldhouseid][hInterior] = dini_Int(house, "hInterior");
				format(HouseInfo[oldhouseid][hOwnerName], 256, "%s", dini_Get(house, "hOwnerName"));
				housePickup[oldhouseid] = CreateDynamicPickup(1273, 1, X, Y, Z, 0);
				housePickupIndex[housePickup[oldhouseid]] = oldhouseid;
				isHousePickup[housePickup[oldhouseid]] = true;
				format(HouseInfo[oldhouseid][hName], 256, result);
				AddHouseIcon(oldhouseid);
				AddHouseLabel(oldhouseid);
                HouseInfo[oldhouseid][hExists] = true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setrankname", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrankname [Rank: 1-6] [Име на Rank]");
			return 1;
		}

		new rnkid = strval(tmp);
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrankname [Rank: 1-6] [Име на Rank]");
			return 1;
		}

		if (rnkid < 1 || rnkid > 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrankname [Rank: 1-6] [Име на Rank]");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 25) return SendClientMessage(playerid, COLOR_GRAD1, "Символите трябва да бъдат между 1 и 25 знака!");
		if (strfind(result, "||", true) == 0 || strfind(result, "|", true) == 0 || strfind(result, "~", true) == 0 || strfind(result, ",", true) == 0)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш символите |, ~ и ,");
		}

		new string256[256];
		format(string256, 256, "[FACTION CHAT] %s промени името на Rank %d на %s", accountNickname, rnkid, result);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		if (rnkid == 1) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1], 64, "%s", result);
		if (rnkid == 2) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2], 64, "%s", result);
		if (rnkid == 3) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3], 64, "%s", result);
		if (rnkid == 4) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4], 64, "%s", result);
		if (rnkid == 5) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5], 64, "%s", result);
		if (rnkid == 6) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6], 64, "%s", result);
		SaveFaction(PlayerInfo[playerid][pFaction]);
		return 1;
	}

	if (strcmp(cmd, "/ask", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ask [въпрос]");
			return 1;
		}

		new string256[256];
		format(string256, 256, "Вашият въпрос: {FFFFFF}%s", result);
		SendClientMessage(playerid, COLOR_TYPICAL_BLUE, string256);
		SendClientMessage(playerid, COLOR_TYPICAL_BLUE, "Въпросът беше изпратен до всички онлайн администратори");
		new admins = GetAdmins();
		if (admins == 0)
		{
			SendClientMessage(playerid, COLOR_DARKRED2, "SERVER: В момента няма онлайн админи на смяна!");
		}

		format(string256, 256, "Въпрос от %s (ID: %d): {FFFFFF}%s", accountNickname, playerid, result);
		SendAdminMessage(COLOR_TYPICAL_BLUE, string256);
		return 1;
	}

	if (strcmp(cmd, "/me", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/me [text]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "%s %s", GetPlayerNickname(playerid), result);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/loc", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/loc [text] (Local Chat)");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "[Local Chat] %s: {ffffff}(%d): %s", GetPlayerNickname(playerid), playerid, result);
		SendLocalMessage(40.0, playerid, GetPlayerColor(playerid), string256);
		if (GetPVarInt(playerid, "UseAnim") == 0 && IsPlayerInAnyVehicle(playerid) == 0 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
		{
			ApplyAnimationWithCondition(playerid, "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 0, 1000, 1);
		}

		return 1;
	}

	if (strcmp(cmd, "/do", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/do [text]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "* %s: ((%s))", GetPlayerNickname(playerid), result);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/d", true) == 0)
	{
		new hisFaction = PlayerInfo[playerid][pFaction];
		if (hisFaction == FACTION_KACC ||
			hisFaction == FACTION_ARMY ||
			hisFaction == FACTION_FBI ||
			hisFaction == FACTION_LSPD ||
			hisFaction == FACTION_RCPD ||
			hisFaction == FACTION_LVPD)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/d [text]");
				return 1;
			}

			new ranktext[32];
			switch (PlayerInfo[playerid][pRank])
			{
				case 1:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
				case 2:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
				case 3:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
				case 4:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
				case 5:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
				case 6:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
			}

			new string256[256];
			if (hisFaction == FACTION_KACC)
			{
				format(string256, 256, "[D] Military Aviation: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_ARMY)
			{
				format(string256, 256, "[D] San Andreas Army: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_FBI)
			{
				format(string256, 256, "[D] FBI: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_LSPD)
			{
				format(string256, 256, "[D] LSPD: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_RCPD)
			{
				format(string256, 256, "[D] RCPD: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_LVPD)
			{
				format(string256, 256, "[D] LVPD: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на държавна организация!");
		}

		return 1;
	}

	if (strcmp(cmd, "/f", true) == 0 || strcmp(cmd, "/faction", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] > 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Usage: (/f)action [text]");
				return 1;
			}

			new ranktext[32];
			switch (PlayerInfo[playerid][pRank])
			{
				case 1:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
				case 2:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
				case 3:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
				case 4:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
				case 5:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
				case 6:
					format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
			}

			new string256[256];
			new hisFaction = PlayerInfo[playerid][pFaction];
			new rankID = PlayerInfo[playerid][pRank];
			if (hisFaction == FACTION_KACC)
			{
				format(string256, 256, "[Military Aviation] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_ARMY)
			{
				format(string256, 256, "[San Andreas Army] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_FBI)
			{
				format(string256, 256, "[FBI] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_LSPD)
			{
				format(string256, 256, "[LSPD] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_RCPD)
			{
				format(string256, 256, "[RCPD] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_LVPD)
			{
				format(string256, 256, "[LVPD] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else
			{
				format(string256, 256, "[FACTION CHAT] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си член на никой Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setrank", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [Rank: 1-5]");
				return 1;
			}

			new giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new rank[5];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [Rank: 1-5]");
				return 1;
			}

			strmid(rank, tmp, 0, 5, 5);
			if (giveplayerid != INVALID_PLAYER_ID)
			{
				if (strval(rank) < 1 || strval(rank) > 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [Rank: 1-5]");
					return 1;
				}

				new rankID = strval(rank);
				new string256[256];
				if (PlayerInfo[giveplayerid][pFaction] != PlayerInfo[playerid][pFaction]) return SendClientMessage(playerid, COLOR_GRAD1, "Въведеният играч не е член на твоята организация!");
				if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да смениш своя ранг!");
				if (PlayerInfo[giveplayerid][pRank] == 6) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да смениш ранга на лидер!");
				if (PlayerInfo[playerid][pRank] == 5 && rankID == 5) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да назначиш играч на 5-ти ранг!");
				PlayerInfo[giveplayerid][pRank] = rankID;
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayeridNickname, 25);
				new ranktext[32];
				switch (PlayerInfo[giveplayerid][pRank])
				{
					case 1:
						format(ranktext, 64, "%s", FactionInfo[PlayerInfo[giveplayerid][pFaction]][fRankName1]);
					case 2:
						format(ranktext, 64, "%s", FactionInfo[PlayerInfo[giveplayerid][pFaction]][fRankName2]);
					case 3:
						format(ranktext, 64, "%s", FactionInfo[PlayerInfo[giveplayerid][pFaction]][fRankName3]);
					case 4:
						format(ranktext, 64, "%s", FactionInfo[PlayerInfo[giveplayerid][pFaction]][fRankName4]);
					case 5:
						format(ranktext, 64, "%s", FactionInfo[PlayerInfo[giveplayerid][pFaction]][fRankName5]);
					case 6:
						format(ranktext, 64, "%s", FactionInfo[PlayerInfo[giveplayerid][pFaction]][fRankName6]);
				}

				format(string256, 256, "[FACTION CHAT] %s назначи %s за %s (Rank ID: %d)", accountNickname, giveplayeridNickname, ranktext, rankID);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
				RestartPlayerSkin(giveplayerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си лидер на Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/canceljob", true) == 0)
	{
		if (JobInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за работа.");
		if (PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте нает на работа.");
		SendClientMessage(playerid, COLOR_WHITE, "Вие отказахте да се присъедините към предложената ви работа!");
		JobInvite[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/acceptjob", true) == 0)
	{
		if (JobInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за работа.");
		if (PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте нает на работа.");
		PlayerInfo[playerid][pJob] = JobInvite[playerid];
		JobInvite[playerid] = -1;
		new string256[256];
		SendClientMessage(playerid, COLOR_WHITE, "Вие се присъединихте към предложената ви работа!");
		new job = PlayerInfo[playerid][pJob];
		format(string256, 256, "Твоята нова работа е %s! За да видиш командите, използвай /jobhelp", JobInfo[job][jName]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		QuitJobProcess(playerid);
		return 1;
	}

	if (strcmp(cmd, "/cancelfaction", true) == 0 || strcmp(cmd, "/cf", true) == 0)
	{
		if (TeamInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за FACTION.");
		if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте във FACTION.");
		new string256[256];
		SendClientMessage(playerid, COLOR_FACTION, "Вие отказахте да се присъедините към организацията (Faction-а)!");
		format(string256, 256, "[FACTION CHAT] %s отказа да се присъедини към вашата организация (Faction)", accountNickname);
		SendFactionMessage(TeamInvite[playerid], COLOR_FACTION, string256);
		TeamInvite[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/setrank", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [rank]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		new rank = strval(tmp);
		if (PlayerInfo[giveplayerID][pFaction] != PlayerInfo[playerid][pFaction]) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е от твоята банда/мафия.");
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да смениш своя ранг.");
		if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер за да използваш тази команда!");
		if (rank > 5 || rank < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ранговете са от 1 до 5.");
		new string256[256];
		new giveplayerIdNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIdNickname, 25);
		PlayerInfo[giveplayerID][pRank] = rank;
		RestartPlayerSkin(giveplayerID);
		SetPlayerDefaultColor(giveplayerID);
		format(string256, 256, "%s промени твоят ранг на %d", accountNickname, rank);
		SendClientMessage(giveplayerID, COLOR_FACTION, string256);
		format(string256, 256, "[FACTION CHAT] %s промени ранга на %s на %d", accountNickname, giveplayerIdNickname, rank);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		return 1;
	}

	if (strcmp(cmd, "/acceptfaction", true) == 0 || strcmp(cmd, "/af", true) == 0)
	{
		if (TeamInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за FACTION.");
		if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте във FACTION.");
		PlayerInfo[playerid][pRank] = 1;
		PlayerInfo[playerid][pFaction] = TeamInvite[playerid];
		TeamInvite[playerid] = -1;
		new string256[256];
		SendClientMessage(playerid, COLOR_FACTION, "Вие се присъединихте към организацията, към която бяхте поканен!");
		format(string256, 256, "[FACTION CHAT] %s се присъедини към %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		JoinFactionAffect(playerid);
		return 1;
	}

	if (strcmp(cmd, "/leavefaction", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте във FACTION.");
		new string256[256];
		format(string256, 256, "Вие пожелахте да напуснете %s", FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
		SendClientMessage(playerid, COLOR_FACTION, string256);
		format(string256, 256, "[FACTION CHAT] %s реши да напусне %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		LeaveFactionAffect(playerid);
		return 1;
	}

	if (strcmp(cmd, "/quitjob", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте нает на работа.");
		new string256[256];
		format(string256, 256, "Вие пожелахте да напуснете {40BF00}%s", JobInfo[PlayerInfo[playerid][pJob]][jName]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		PlayerInfo[playerid][pJob] = JOB_NO;
		PlayerInfo[playerid][pJobBoss] = false;
		QuitJobProcess(playerid);
		return 1;
	}

	if (strcmp(cmd, "/uninvite", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/uninvite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (PlayerInfo[giveplayerID][pFaction] != PlayerInfo[playerid][pFaction]) return SendClientMessage(playerid, COLOR_GRAD1, "Въведеният играч не е член на твоята организация!");
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			if (PlayerInfo[giveplayerID][pRank] == 6) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изгониш лидер!");
			if (PlayerInfo[playerid][pRank] == 5 && PlayerInfo[giveplayerID][pRank] == 5) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изгониш играч над 4-ти ранг!");
			new string256[256];
			new giveplayerIdNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIdNickname, 25);
			format(string256, 256, "Ти изгони %s от %s", giveplayerIdNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "%s те изгони от %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(giveplayerID, COLOR_FACTION, string256);
			format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", accountNickname, giveplayerIdNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
			LeaveFactionAffect(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си лидер на Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/jobuninvite", true) == 0)
	{
		if (PlayerInfo[playerid][pJobBoss])
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jobuninvite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (PlayerInfo[giveplayerID][pJob] != PlayerInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не нает при теб.");
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			new string256[256];
			new giveplayerIdNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIdNickname, 25);
			format(string256, 256, "Ти изгони %s от {40BF00}%s", giveplayerIdNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string256);
			format(string256, 256, "%s те изгони от {40BF00}%s", accountNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(giveplayerID, COLOR_LIGHTBLUE, string256);
			format(string256, 256, "[JOB] %s изгони %s от вашата работа.", accountNickname, giveplayerIdNickname);
			SendJobMessage(PlayerInfo[playerid][pJob], COLOR_JOB, string256);
			PlayerInfo[giveplayerID][pJob] = JOB_NO;
			PlayerInfo[giveplayerID][pJobBoss] = false;
			QuitJobProcess(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шеф.");
		}

		return 1;
	}

	if (strcmp(cmd, "/jobinvite", true) == 0)
	{
		if (PlayerInfo[playerid][pJobBoss])
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jobinvite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да поканиш себе си на работа.");
			if (PlayerInfo[giveplayerID][pJob] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е нает на работа.");
			JobInvite[giveplayerID] = PlayerInfo[playerid][pJob];
			new string256[256];
			new giveplayerIdNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIdNickname, 25);
			format(string256, 256, "Ти покани %s да работи към {40BF00}%s", giveplayerIdNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			format(string256, 256, "%s те покани да работиш към {40BF00}%s", accountNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			SendClientMessage(giveplayerID, COLOR_WHITE, "Използвай {40BF00}/acceptjob (за да приемеш) {ffffff}или {ff0000}/canceljob (за да откажеш)");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шеф.");
		}

		return 1;
	}

	if (strcmp(cmd, "/invite", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/invite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да поканиш себе си във FACTION.");
			if (PlayerInfo[giveplayerID][pFaction] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е във FACTION.");
			TeamInvite[giveplayerID] = PlayerInfo[playerid][pFaction];
			new string256[256];
			new giveplayerIdNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIdNickname, 25);
			format(string256, 256, "Ти покани %s да се присъедини към %s", giveplayerIdNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "%s те покани да се присъединиш към %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(giveplayerID, COLOR_FACTION, string256);
			format(string256, 256, "[FACTION CHAT] %s покани %s да се присъедини към твоята организация (Faction)", accountNickname, giveplayerIdNickname);
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
			SendClientMessage(giveplayerID, COLOR_FACTION, "Използвай /acceptfaction(/af) за да приемеш или /cancelfaction(/cf) за да откажеш!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си лидер на Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/meteroff", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_TAXI)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази команда е само за хора, работещи като таксиджии!");
			return 1;
		}

		if (!IsPlayerDriver(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си шофьор на таксито!");
			return 1;
		}

		if (inTaxiVeh[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в такси, преди да спреш сметката!");
			return 1;
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		if (isTaxiVehWorking[vehicleid] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Сметката не се начислява в момента!");
			return 1;
		}

		if (!PlayerInfo[playerid][pTaxiDuty])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна, като таксиджия!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "Вие закарахте таксито до дестинацията. Тарифата е $%d.", VehicleInfo[vehicleid][vTaxiFare]);
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
		TextDrawHideForPlayer(playerid, FareStatus[playerid]);
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
			{
				format(string256, 256, "Таксито ви отведе до дестинацията, сега трябва да платите $%d.", VehicleInfo[vehicleid][vTaxiFare]);
				SendClientMessage(i, COLOR_LIGHTYELLOW, string256);
				TextDrawHideForPlayer(i, FareStatus[i]);
			}
		}

		VehicleInfo[vehicleid][vTaxiFare] = 0;
		VehicleTimerInfo[vehicleid][vtTaxiFareTimer] = 0;
		isTaxiVehWorking[vehicleid] = false;
		return 1;
	}

	if (strcmp(cmd, "/tune", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_MECHANIC)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 70.0, Garage) && !IsPlayerInRangeOfPoint(playerid, 70.0, 1928.7505, -1861.0504, 15.4305)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в гаража на механиците.");
			if (PlayerTimerInfo[playerid][ptWorkingVeh] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента поправяте друго превозно средство");
			new working;
			if (!IsPlayerInAnyVehicle(playerid))
			{
				for (new i; i < MAX_VEHICLES; i++)
				{
					if (IsPlayerInRangeOfVehicle(playerid, i, 5.0))
					{
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						workingOnVeh[playerid] = i;
						MechanicCarmodDialog(playerid);
						working = 1;
					}
				}
			}

			if (working == 1)
			{
				PlayerTimerInfo[playerid][ptWorkingVeh] = 13;
				SendClientMessage(playerid, COLOR_MECHANICS, "Вие започнахте тунинга, изчакайте малко.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до превозно средство.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте механик.");
		}

		return 1;
	}

	if (strcmp(cmd, "/repair", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_MECHANIC)
		{
			if (PlayerTimerInfo[playerid][ptWorkingVeh] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента поправяте друго превозно средство");
			new working;
			if (!IsPlayerInAnyVehicle(playerid))
			{
				for (new i; i < MAX_VEHICLES; i++)
				{
					if (IsPlayerInRangeOfVehicle(playerid, i, 5.0))
					{
						new Float: vehicleHealth;
						GetVehicleHealth(i, vehicleHealth);
						if (vehicleHealth < 999.0)
						{
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							workingOnVeh[playerid] = i;
							working = 1;
						}
					}
				}
			}

			if (working == 1)
			{
				PlayerTimerInfo[playerid][ptWorkingVeh] = 8;
				SendClientMessage(playerid, COLOR_MECHANICS, "Вие започнахте поправката, изчакайте малко.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до превозно средство, което е много наранено");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте механик.");
		}

		return 1;
	}

	if (strcmp(cmd, "/meteron", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_TAXI)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази команда е само за хора, работещи като таксиджии!");
			return 1;
		}

		if (!IsPlayerDriver(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си шофьор на таксито!");
			return 1;
		}

		if (inTaxiVeh[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в такси, преди да започнеш да начисляваш сметката!");
			return 1;
		}

		if (!PlayerInfo[playerid][pTaxiDuty])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна, като таксиджия!");
			return 1;
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		if (isTaxiVehWorking[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Сметката вече се начислява!");
			return 1;
		}

		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Вие започнахте да начислявате сметката.");
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Не излизайте от таксито, преди да занесете клиента си, защото таксата ще бъде анулирана.");
		isTaxiVehWorking[vehicleid] = true;
		VehicleInfo[vehicleid][vTaxiFare] = 0;
		VehicleTimerInfo[vehicleid][vtTaxiFareTimer] = 5;
		TextDrawShowForPlayer(playerid, FareStatus[playerid]);
		UpdateFareText(playerid);
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
			{
				SendClientMessage(i, COLOR_LIGHTYELLOW, "Таксито започна да начислява сметката.");
				TextDrawShowForPlayer(i, FareStatus[i]);
				UpdateFareText(i);
			}
		}

		return 1;
	}

	if (strcmp("/boot", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehBOOTStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {40BF00}Отворен");
			vehBOOTStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {FF0000}Затворен");
			vehBOOTStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp("/bonnet", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehBONTEStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {40BF00}Отворен");
			vehBONTEStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {FF0000}Затворен");
			vehBONTEStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp("/lights", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehLONStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {40BF00}Включени");
			vehLONStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {FF0000}Изключени");
			vehLONStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp("/alarm", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehAlarmStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {40BF00}Включена");
			vehAlarmStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {FF0000}Изключена");
			vehAlarmStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp(cmd, "/olock", true) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство като щофьор!");
		if (vehLocker[playerid] == -1)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (i != playerid)
				{
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 1);
				}
			}

			vehLocker[playerid] = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid, 0x9ACD32FF, "* Вие заключихте вратите на превозното средство *");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Когато излезете от превозното средство вратите автоматично ще се отключат!");
		}
		else if (vehLocker[playerid] != -1)
		{
			if (GetPlayerVehicleID(playerid) != vehLocker[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превоза, който заключи!");
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (i != playerid)
				{
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 0);
				}
			}

			vehLocker[playerid] = -1;
			SendClientMessage(playerid, 0x9ACD32FF, "* Вие отключихте вратите на превозното средство *");
		}

		return 1;
	}

	if (strcmp(cmd, "/tow", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си механик!");
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в преовзно средство!");
		if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си във влекач!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new Float: dist, Float: closedist = 8, closeveh;
		new Float: x, Float: y, Float: z;
		{
			if (IsTrailerAttachedToVehicle(vehicleid))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си закачил превозно средство!");
				return 1;
			}
		}

		for (new i = 0; i < MAX_VEHICLES; i++)
		{
			if (i != vehicleid && GetVehiclePos(i, x, y, z))
			{
				dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
				if (dist < closedist)
				{
					closedist = dist;
					closeveh = i;
				}
			}
		}

		if (!closeveh) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си до превозно средство!");
		AttachTrailerToVehicle(closeveh, vehicleid);
		SendClientMessage(playerid, 0xFFFFFFFF, "Успешно закачи превозното средство.");
		return 1;
	}

	if (strcmp(cmd, "/jobs", true) == 0)
	{
		new string256[256];
		new job = PlayerInfo[playerid][pJob];
		SendClientMessage(playerid, 0xFF832DFF, "Job Statistics:");
		if (job != JOB_NO)
		{
			format(string256, 256, "JOB: В момента ти си нает, като %s", JobInfo[job][jName]);
			SendClientMessage(playerid, 0xFFCA16FF, string256);
		}
		else
		{
			SendClientMessage(playerid, 0xFFCA16FF, "JOB: В момента не си нает на постоянна работа");
		}

		new sweepTimer = PlayerInfo[playerid][pSweeperTimer];
		new coalmineTimer = PlayerInfo[playerid][pCoalmineTimer];
		new busTimer = PlayerInfo[playerid][pBusTimer];
		new deliverTimer = PlayerInfo[playerid][pDeliverTimer];
		new pizzaTimer = PlayerInfo[playerid][pPizzaTimer];

		new sweepPassed = PlayerInfo[playerid][pSweeperPassed];
		new coalminePassed = PlayerInfo[playerid][pCoalminePassed];
		new busPassed = PlayerInfo[playerid][pBusPassed];
		new pizzaPassed = PlayerInfo[playerid][pPizzaPassed];
		new deliverPassed = PlayerInfo[playerid][pDeliverPassed];

		new sweepToLevelUp = (PlayerInfo[playerid][pSweeperLevel] *25) - sweepPassed;
		new coalmineToLevelUp = (PlayerInfo[playerid][pCoalmineLevel] *25) - coalminePassed;
		new busToLevelUp = (PlayerInfo[playerid][pBusLevel] *25) - busPassed;
		new pizzaToLevelUp = (PlayerInfo[playerid][pPizzaLevel] *25) - pizzaPassed;
		new deliverToLevelUp = (PlayerInfo[playerid][pDeliverLevel] *25) - deliverPassed;

		new sweepLevel = PlayerInfo[playerid][pSweeperLevel];
		new busLevel = PlayerInfo[playerid][pBusLevel];
		new deliverLevel = PlayerInfo[playerid][pDeliverLevel];
		new pizzaLevel = PlayerInfo[playerid][pPizzaLevel];
		new coalmineLevel = PlayerInfo[playerid][pCoalmineLevel];
		format(string256, 256, "SWEEP: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", sweepPassed, sweepLevel, sweepToLevelUp, sweepTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "COALMINE: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", coalminePassed, coalmineLevel, coalmineToLevelUp, coalmineTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "BUS: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", busPassed, busLevel, busToLevelUp, busTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "DELIVER: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", deliverPassed, deliverLevel, deliverToLevelUp, deliverTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "PIZZABOY: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", pizzaPassed, pizzaLevel, pizzaToLevelUp, pizzaTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		return 1;
	}

    if (strcmp(cmd, "/fuelstations", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        new string2230[512];
        new string2230result[2230];
        for (new i; i < MAX_FUEL_STATIONS; i++)
        {
            format(string2230, sizeof(string2230), "{0040FF}Бензиностанция: {FFFFFF}%s {FF0000} Бензин: {F97804}%d L\n", FuelStationInfo[i][fsLocation], FuelStationInfo[i][fsFuel]);
            strcat(string2230result, string2230);
        }
        ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_LIST, "{0040FF}Бензиностанции", string2230result, "Излез", "");
        return 1;
    }

    if (strcmp(cmd, "/fuelgps", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        if (!PlayerInfo[playerid][pGPS]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш GPS в себе си!");
        new string2230[512];
        new string2230result[2230];
        for (new i; i < MAX_FUEL_STATIONS; i++)
        {
            format(string2230, sizeof(string2230), "{0040FF}Бензиностанция: {F97804}%s\n", FuelStationInfo[i][fsLocation], FuelStationInfo[i][fsFuel]);
            strcat(string2230result, string2230);
        }
        ShowPlayerDialog(playerid, DIALOG_FUELSTATIONS_GPS, DIALOG_STYLE_LIST, "{0040FF}Бензиностанции GPS", string2230result, "Напред", "Затвори");
        return 1;
    }

    if (strcmp(cmd, "/refillgs", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        if (!PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна във Fuel Company за да използваш тази команда!");
        new vehicleid = GetPlayerVehicleID(playerid);
        if (!isFuelComapnyVeh[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не принадлежи на Fuel Company!");
        if (!fuelTruckHasTrailer[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си закачил цистерната!");
        if (GetFuelStation(playerid) != -1)
        {
            new fuelStationID = GetFuelStation(playerid);
            if (FuelStationInfo[fuelStationID][fsFuel] >= 4300 && !scripterMode[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Бензиностанцията няма нужда от зареждане в момента!");
            new trailerid = GetVehicleTrailer(vehicleid);
            new liters = 5000 - FuelStationInfo[fuelStationID][fsFuel];
            if (VehicleInfo[trailerid][vTankFuel] < liters) return SendClientMessage(playerid, COLOR_GRAD1, "Цистерната няма достатъчно бензин!");
            new reward = 1000 + liters;
            new string256[256];
            format(string256, sizeof(string256), "Ти зареди бензиностанцията с %d литра и твоята печалба е {40BF00}$%d и 2 Exp", liters, reward);
            SendClientMessage(playerid, COLOR_WHITE, string256);
            GivePlayerExp(playerid, 2);
            GivePlayerCash(playerid, reward);
            FuelStationInfo[fuelStationID][fsFuel] = 5000;
            VehicleInfo[trailerid][vTankFuel] -= liters;
            UpdateFuelStation3DText(fuelStationID);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до бензиностанция!");
        }

        return 1;
    }

    if (strcmp(cmd, "/refillpt", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        if (!PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна във Fuel Company за да използваш тази команда!");
        new vehicleid = GetPlayerVehicleID(playerid);
        if (!isFuelComapnyVeh[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не принадлежи на Fuel Company!");
        if (!IsPlayerInRangeOfPoint(playerid, 20.0 , 264.3938,1457.5801,10.5859)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до мястото за зареждане на бензин!");
        if (!fuelTruckHasTrailer[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си закачил цистерната!");
        new string2230[512];
        new string2230result[2230];
        new trailerid = GetVehicleTrailer(vehicleid);
        format(string2230, sizeof(string2230), "{FF0000}Напиши отдолу колко литра искаш да заредиш в цистерната\n");
        strcat(string2230result, string2230);
        format(string2230, sizeof(string2230), "{FFFFFF}За да заредиш цистерната догоре ти трябват {ffff00}%d {FFFFFF}литра", 10000 - VehicleInfo[trailerid][vTankFuel]);
        strcat(string2230result, string2230);
        ShowPlayerDialog(playerid, DIALOG_FUELSTATIONS_REFILLPT, DIALOG_STYLE_INPUT, "{0040FF}Refill", string2230result, "Зареди", "Затвори");
        return 1;
    }

    if (strcmp(cmd, "/minigames", true) == 0)
    {
        new string2230[512];
        new string2230result[2230];
        format(string2230, sizeof(string2230), "{FFFFFF}PaintBall Arena\n");
        strcat(string2230result, string2230);
        ShowPlayerDialog(playerid, DIALOG_JOIN_MINIGAME, DIALOG_STYLE_LIST, "{4E84FF}Mini-Games", string2230result, "Присъедини се", "Затвори");
        return 1;
    }

	if (strcmp(cmd, "/jobhelp", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_MECHANIC)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Mechanic: /repair /tune /tow");
		}

		if (PlayerInfo[playerid][pJob] == JOB_NEWS)
		{
			SendClientMessage(playerid, COLOR_WHITE, "SA News: /news, /badge, /postadvert");
		}
		else if (PlayerInfo[playerid][pJob] == JOB_TAXI)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Taxi Driver: /taxiduty /meteron /meteroff");
		}
		else if (PlayerInfo[playerid][pJob] == JOB_FUELCOMPANY)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Fuel Company: /fuelcoduty /fuelstations /fuelgps /refillpt /refillgs");
		}

		SendClientMessage(playerid, COLOR_YELLOW, "Основни Job команди: {FFFFFF}За достъп до основните команди, използвай /help");
		return 1;
	}

	if (strcmp(cmd, "/spawn", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		new tmp2 = strval(tmp);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/spawn [1-4]");
			SendClientMessage(playerid, COLOR_YELLOW, "1: Faction, 2: Civilian, 3: House, 4: Bizz");
			return 1;
		}

		if (tmp2 < 1 || tmp2 > 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази опция не съществува!");
		}

		if (tmp2 == 1)
		{
			if (PlayerInfo[playerid][pSpawn] == FACTION_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Faction!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Faction!");
			PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
		}
		else if (tmp2 == 2)
		{
			if (PlayerInfo[playerid][pSpawn] == CIVIL_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Civilian!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Civilian!");
			PlayerInfo[playerid][pSpawn] = CIVIL_SPAWN;
		}
		else if (tmp2 == 3)
		{
			if (PlayerInfo[playerid][pHouseOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща до която да се Spawn!");
			if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на House!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на House!");
			PlayerInfo[playerid][pSpawn] = HOUSE_SPAWN;
		}
		else if (tmp2 == 4)
		{
			if (PlayerInfo[playerid][pBizOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес до който да се Spawn!");
			if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Biz!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Biz!");
			PlayerInfo[playerid][pSpawn] = BIZ_SPAWN;
		}

		return 1;
	}

	if (strcmp(cmd, "/animhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE2, "Използвайте копчето N за да направите анимация.");
		return 1;
	}

	if (strcmp(cmd, "/vehhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE2, "Използвайте копчето N за да използвате багажника,фаровете,капака и алармата.");
		return 1;
	}

    if (strcmp(cmd, "/fskin", true) == 0)
    {
        if(PlayerInfo[playerid][pFactionSkin])
        {
            SendClientMessage(playerid, COLOR_WHITE ,"* Ти избра да се SPAWN-ваш с твоя личен Skin *");
            SendClientMessage(playerid, COLOR_WHITE ,"SERVER: Ако си On Duty няма да се SPAWN-ваш с твоя личен Skin");
            PlayerInfo[playerid][pFactionSkin] = false;
        }
        else
        {
            SendClientMessage(playerid, COLOR_WHITE ,"* Ти избра да се SPAWN-ваш с твоя Faction Skin *");
            PlayerInfo[playerid][pFactionSkin] = true;
        }
        return 1;
    }

	if (strcmp(cmd, "/gps", true) == 0)
	{
		if (!PlayerInfo[playerid][pGPS]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате GPS, който да използвате.");
		new string256[256];
		format(string256, 256, "%s си извади навигатора.", GetPlayerNickname(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		ShowPlayerGPS(playerid);
		return 1;
	}

	if (strcmp(cmd, "/postadvert", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_NEWS) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си новинар за да пуснеш обява!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/postadvert [text]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
		if (!IsPlayerInRangeOfPoint(playerid, 6.0, 3190.9307, -1757.5547, 3001.0859)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в новинарското студио!");
		new string256[256];
		format(string256, 256, "[Advertisiment | The News] %s: %s", GetPlayerNickname(playerid), result);
		SendClientMessageToAll(COLOR_ADVERT, string256);
		return 1;
	}
	if (strcmp(cmd, "/cancelbiz", true) == 0)
	{
		if (bizOffererOfferTo[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си предложил бизнеса си!");
		new bizOfferedTo = bizOffererOfferTo[playerid];
		new offereredToNickname[MAX_PLAYER_NAME];
		GetPlayerName(bizOfferedTo, offereredToNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да продаде бизнеса си на теб!", offereredToNickname);
		SendClientMessage(bizOfferedTo, COLOR_BIZ, string256);
		SendClientMessage(playerid, COLOR_BIZ, "Ти отказа да продадеш бизнеса си!");
		bizBuyerBuyFrom[bizOfferedTo] = -1;
		bizOffererOfferTo[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/cancelhouse", true) == 0)
	{
		if (houseOffererOfferTo[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си предложил къщата си!");
		new houseOfferedTo = houseOffererOfferTo[playerid];
		new offereredToNickname[MAX_PLAYER_NAME];
		GetPlayerName(houseOfferedTo, offereredToNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да продаде къщата си на теб!", offereredToNickname);
		SendClientMessage(houseOfferedTo, COLOR_HOUSE, string256);
		SendClientMessage(playerid, COLOR_HOUSE, "Ти отказа да продадеш къщата си!");
		houseBuyerBuyFrom[houseOfferedTo] = -1;
		houseOffererOfferTo[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/chouse", true) == 0)
	{
		if (houseBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		new houseOfferer = houseBuyerBuyFrom[playerid];
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(houseOfferer, offererNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да купи твоята къща!", offererNickname);
		SendClientMessage(houseOfferer, COLOR_HOUSE, string256);
		SendClientMessage(playerid, COLOR_HOUSE, "Ти отказа да купиш къщата!");
		houseBuyerBuyFrom[playerid] = -1;
		houseOffererOfferTo[houseOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/ahouse", true) == 0)
	{
		if (houseBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		if (PlayerInfo[playerid][pHouseOwnedID] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш купена къща!");
		new houseOfferer = houseBuyerBuyFrom[playerid];
		new housePrice = houseOfferPrice[houseOfferer];
		if (PlayerInfo[playerid][pCash] < housePrice) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари в брой за покупката!");
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(houseOfferer, offererNickname, 25);
		new houseIndex = PlayerInfo[houseOfferer][pHouseOwnedID];
		new string256[256];
		format(string256, 256, "*** Ти купи къщата на %s за $%d! ***", offererNickname, housePrice);
		SendClientMessage(playerid, COLOR_HOUSE, string256);

		format(string256, 256, "*** %s купи къщата ти за $%d! ***", accountNickname, housePrice);
		SendClientMessage(houseOfferer, COLOR_HOUSE, string256);

		if (PlayerInfo[houseOfferer][pSpawn] == HOUSE_SPAWN) SetToFactionSpawnWithText(houseOfferer);
		PlayerInfo[playerid][pHouseOwnedID] = houseIndex;
		PlayerInfo[houseOfferer][pHouseOwnedID] = -1;
		GivePlayerCash(playerid, -housePrice);
		GivePlayerCash(houseOfferer, housePrice);
		format(HouseInfo[houseIndex][hOwnerName], 256, "%s", accountNickname);
		SaveHouse(houseIndex);
		houseBuyerBuyFrom[playerid] = -1;
		houseOffererOfferTo[houseOfferer] = -1;
		if (!IsAchieved(playerid, ACHIEVEMENT_BUYHOUSE))
		{
			GivePlayerAchievement(playerid, ACHIEVEMENT_BUYHOUSE);
		}
		UpdateHouse3DText(houseIndex);
		return 1;
	}

	if (strcmp(cmd, "/abiz", true) == 0)
	{
		if (bizBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		if (PlayerInfo[playerid][pBizOwnedID] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш купен бизнес!");
		new bizOfferer = bizBuyerBuyFrom[playerid];
		new bizPrice = bizOfferPrice[bizOfferer];
		if (PlayerInfo[playerid][pCash] < bizPrice) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари в брой за покупката!");
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(bizOfferer, offererNickname, 25);
		new bizIndex = PlayerInfo[bizOfferer][pBizOwnedID];
		new string256[256];
		format(string256, 256, "Ти купи бизнеса на %s за $%d!", offererNickname, bizPrice);
		SendClientMessage(playerid, COLOR_BIZ, string256);
		format(string256, 256, "%s купи бизнеса ти за $%d!", accountNickname, bizPrice);
		SendClientMessage(bizOfferer, COLOR_BIZ, string256);
		PlayerInfo[playerid][pBizOwnedID] = bizIndex;
		PlayerInfo[bizOfferer][pBizOwnedID] = -1;
		GivePlayerCash(playerid, -bizPrice);
		GivePlayerCash(bizOfferer, bizPrice);
		format(BizInfo[bizIndex][bOwnerName], 256, "%s", accountNickname);
		SaveBiz(bizIndex);
		if (PlayerInfo[bizOfferer][pSpawn] == BIZ_SPAWN) SetToFactionSpawnWithText(bizOfferer);
		bizBuyerBuyFrom[playerid] = -1;
		bizOffererOfferTo[bizOfferer] = -1;
		if (!IsAchieved(playerid, ACHIEVEMENT_BUYBIZ))
        {
            GivePlayerAchievement(playerid, ACHIEVEMENT_BUYBIZ);
        }
		UpdateBiz3DText(bizIndex);
		return 1;
	}

	if (strcmp(cmd, "/cbiz", true) == 0)
	{
		if (bizBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		new bizOfferer = bizBuyerBuyFrom[playerid];
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(bizOfferer, offererNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да купи твоя бизнес!", offererNickname);
		SendClientMessage(bizOfferer, COLOR_BIZ, string256);
		SendClientMessage(playerid, COLOR_BIZ, "Ти отказа да купиш бизнеса!");
		bizBuyerBuyFrom[playerid] = -1;
		bizOffererOfferTo[bizOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/psellbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellbiz [ID на играч] [price]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellbiz [ID на играч] [price]");
			return 1;
		}

		new price = strval(tmp);
		if (giveplayerID == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			return 1;
		}

		new giveplayerNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerNickname, 25);
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си бизнес!");
		if (!CorDetector(10.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне на 10 метра от играча!");
		if (!(price < 1 || price > 3000000000)) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да бъде между $1 и $300000000!");
		if (bizOffererOfferTo[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си предложил бизнеса си за продажба!");
		if (bizBuyerBuyFrom[giveplayerID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има предложение за продажба на бизнес!");
		if (bizBuyerBuyFrom[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо отговори на твоето предложение за продажба, което получи!");
		if (PlayerInfo[giveplayerID][pBizOwnedID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има бизнес!");
		new bizID = PlayerInfo[playerid][pBizOwnedID];
		new bizLevel = BizInfo[bizID][bLevel];
		if (PlayerInfo[giveplayerID][pLevel] < bizLevel) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма нужното ниво за твоя бизнес!");
		new string256[256];
		format(string256, 256, "Ти предложи бизнеса си на %s за $%d!", giveplayerNickname, price);
		SendClientMessage(playerid, COLOR_BIZ, string256);
		SendClientMessage(playerid, COLOR_BIZ, "Използвай /cancelbiz - за да откажеш продажбата!");
		format(string256, 256, "%s ти предложи неговия бизнес за $%d!", accountNickname, price);
		SendClientMessage(giveplayerID, COLOR_BIZ, string256);
		SendClientMessage(giveplayerID, COLOR_BIZ, "/abiz - за да приемеш, /cbiz - за да откажеш");
		bizOffererOfferTo[playerid] = giveplayerID;
		bizOfferPrice[playerid] = price;
		bizBuyerBuyFrom[giveplayerID] = playerid;
		return 1;
	}

	if (strcmp(cmd, "/psellhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellhouse [ID на играч] [price]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellhouse [ID на играч] [price]");
			return 1;
		}

		new price = strval(tmp);
		if (giveplayerID == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			return 1;
		}

		new giveplayerNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerNickname, 25);
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си къща!");
		if (!CorDetector(10.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне на 10 метра от играча!");
		if (!(price < 1 || price > 3000000000)) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да бъде между $1 и $300000000!");
		if (houseOffererOfferTo[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си предложил къщата си за продажба!");
		if (houseBuyerBuyFrom[giveplayerID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има предложение за продажба на къща!");
		if (houseBuyerBuyFrom[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо отговори на твоето предложение за продажба, което получи!");
		if (PlayerInfo[giveplayerID][pHouseOwnedID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има къща!");
		new houseID = PlayerInfo[playerid][pHouseOwnedID];
		new houseLevel = HouseInfo[houseID][hLevel];
		if (PlayerInfo[giveplayerID][pLevel] < houseLevel) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма нужното ниво за твоята къща!");
		new string256[256];
		format(string256, 256, "Ти предложи къщата си на %s за $%d!", giveplayerNickname, price);
		SendClientMessage(playerid, COLOR_HOUSE, string256);
		SendClientMessage(playerid, COLOR_HOUSE, "Използвай /cancelhouse - за да откажеш продажбата!");
		format(string256, 256, "%s ти предложи неговата къща за $%d!", accountNickname, price);
		SendClientMessage(giveplayerID, COLOR_HOUSE, string256);
		SendClientMessage(giveplayerID, COLOR_HOUSE, "/ahouse - за да приемеш, /chouse - за да откажеш");
		houseOffererOfferTo[playerid] = giveplayerID;
		houseOfferPrice[playerid] = price;
		houseBuyerBuyFrom[giveplayerID] = playerid;

		return 1;
	}

	if (strcmp(cmd, "/sellveh", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellveh [playerid] [slot: 1-3] [price]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellveh [playerid] [slot: 1-3] [price]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellveh [playerid] [slot: 1-3] [price]");
			return 1;
		}

		new price;
		price = strval(tmp);
		if (giveplayerID == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			return 1;
		}

		new giveplayerNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerNickname, 25);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3.");
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си превозно средство.");
		if (!CorDetector(10.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне на 10 метра от играча.");
		if (!(price < 1 || price > 3000000000)) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да бъде между $1 и $300000000!");
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот.");
		if (vehOffererOfferTo[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента продаваш друго превозно средство.");
		if (vehBuyerBuyFrom[giveplayerID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът има предложение за друго превозно средство.");
		if (vehBuyerBuyFrom[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо отговори на твоето предложение за продажба, което получи.");
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		new string256[256];
		format(string256, 256, "Ти предложи превозното си средство на %s за $%d. Модел: %s", giveplayerNickname, price, GetVehicleName(vehicleid));
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "/vehsellcancel - за да откажеш продажбата");
		format(string256, 256, "%s ти предложи неговото лично превозно средство за $%d. Модел: %s", giveplayerNickname, price, GetVehicleName(vehicleid));
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, string256);
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, "/vehaccept - за да приемеш, /vehcancel - за да откажеш");
		vehOffererOfferTo[playerid] = giveplayerID;
		vehOfferPrivateVehIndex[playerid] = hisVehID;
		vehOfferPrivateVehPrice[playerid] = price;
		vehOfferPrivateVehSlot[playerid] = realSlot;
		vehBuyerBuyFrom[giveplayerID] = playerid;
		return 1;
	}

	if (strcmp(cmd, "/vehsellcancel", true) == 0)
	{
		if (vehOffererOfferTo[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба.");
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ти отказа продажба на превозно средство.");
		new vehBuyer = vehOffererOfferTo[playerid];
		new buyerNickname[MAX_PLAYER_NAME];
		GetPlayerName(vehBuyer, buyerNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да продаде своето превозно средство.", buyerNickname);
		SendClientMessage(vehBuyer, COLOR_PRIVATEVEH, string256);
		vehOffererOfferTo[playerid] = -1;
		vehBuyerBuyFrom[vehBuyer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/vehcancel", true) == 0)
	{
		if (vehBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба.");
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ти отказа продажба на превозно средство.");
		new vehOfferer = vehBuyerBuyFrom[playerid];
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(vehOfferer, offererNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да купи твоето превозно средство.", offererNickname);
		SendClientMessage(vehOfferer, COLOR_PRIVATEVEH, string256);
		vehBuyerBuyFrom[playerid] = -1;
		vehOffererOfferTo[vehOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/vehaccept", true) == 0)
	{
		if (vehBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
        if (GetPrivateVehsNumber(playerid) >= 1 && PlayerInfo[playerid][pVip] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш повече от 1 лично превозно средство!");
        if (GetPrivateVehsNumber(playerid) >= 2 && PlayerInfo[playerid][pVip] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш повече от 2 лични превозни средства!");
		if (GetPrivateVehsNumber(playerid) >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш повече от 3 лични превозни средства!");
		new vehOfferer = vehBuyerBuyFrom[playerid];
		new vehPrice = vehOfferPrivateVehPrice[vehOfferer];
		if (PlayerInfo[playerid][pCash] < vehPrice) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари в брой за покупката!");
		new vehIndex = vehOfferPrivateVehIndex[vehOfferer];
		new vehicleid = PrivateVehInfo[vehIndex][vVeh];
		new string256[256];
		format(string256, 256, "*** Ти купи %s на %s за $%d ***", GetVehicleName(vehicleid), GetPlayerNickname(vehOfferer), vehPrice);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
        format(string256, 256, "*** Ти успешно продаде %s на %s за $%d ***", GetVehicleName(vehicleid), GetPlayerNickname(playerid), vehPrice);
        SendClientMessage(vehOfferer, COLOR_PRIVATEVEH, string256);
		Inventory_Remove(vehOfferer, "Ключове за кола", 1);
		Inventory_Add(playerid, "Ключове за кола", 11746, 1);
		new hisNewVehSlot = GetPlayerPrivateVehFreeSlot(playerid);
		if (GetPlayerVehicleID(playerid) == vehicleid)
		{
			RemovePlayerFromVehicle(playerid);
		}

		format(PrivateVehInfo[vehIndex][vOwnerName], 256, accountNickname);

		new sellerSlot = vehOfferPrivateVehSlot[playerid];
		PlayerInfo[playerid][pPrivateVeh][hisNewVehSlot] = vehIndex;	// NEW
		PlayerInfo[vehOfferer][pPrivateVeh][sellerSlot] = -1;	//NEW

		SavePrivateVehicle(vehIndex);
		vehBuyerBuyFrom[playerid] = -1;
		vehOffererOfferTo[vehOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/saveserver", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessageToAll(COLOR_ADMIN_RED, "Admin: Сървърът се запаметява от администратор, моля изчакайте малко!");
			SaveServer();
			SendClientMessageToAll(COLOR_ADMIN_RED, "Admin: Сървърът се запамети, благодарим за вашето търпение!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/gmx", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			new minutes;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gmx [minutes] [причина]");
				return 1;
			}

			minutes = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[70];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gmx [minutes] [причина]");
				return 1;
			}

			if (minutes < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Минутите трябва да са най-малко 1!");
				return 1;
			}

			if (strlen(result) < 1 || strlen(result) > 15)
			{
				return SendClientMessage(playerid, COLOR_GRAD1, "Текстът за ъпдейтът трябва да бъде най-много 15 символа");
			}

			new string256[256];
			if (minutes == 1)
				format(string256, 256, "Admin: Сървърът ще се рестартира след 1 минута [Reason: %s]", result);
			else
				format(string256, 256, "Admin: Сървърът ще се рестартира след %d минути [Reason: %s]", minutes, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			serverrestarttimer = minutes * 60;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/changepass", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/changepass [new password]");
			return 1;
		}

		new accountFiles[28];
		format(accountFiles, 28, "%s.ini", accountNickname);
		dini_Set(accountFiles, "pPassword", result);
		format(PlayerInfo[playerid][pPassword], 500, "%s", EncryptPassword(result));
		new string130[130];
		format(string130, 130, "Вие си сменихте паролата! Новата ви парола е {ffff00}%s", result);
		SendClientMessage(playerid, 0xFFFFFFFF, string130);
		return 1;
	}

	if (strcmp(cmd, "/vouchers", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}Сървърът разполага със система за ваучери, чрез която можете да правите поръчки\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Важно е да знаете, че ваучерите не могат да ви бъдат възстановени, след като направите поръчка\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}Екипът на сървъра не отговаря за загуба на ваучерите, при изтриване на акаунт или BAN/BLOCK\n\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}За да видите какво можете да си поръчате, натиснете {00ff00}'Продължи'\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, DIALOG_VOUCHERS, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Продължи", "Изход");
		return 1;
	}

    if (strcmp(cmd, "/clothes", true) == 0)
    {
        if(PlayerInfo[playerid][pVip] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
        if(loadedClothes[playerid]==false)
        {
            SendClientMessage(playerid, COLOR_WHITE,"* Ти зареди своите обекти, използвай /clothes за достъп до тях *");
            LoadPlayerrAttacheds(playerid);
            loadedClothes[playerid]=true;
        }
        else if(loadedClothes[playerid]==true)
        {
            new string2230[512];
            new string2230result[1500];
            for(new i=0; i<MAX_PLAYER_ATTACHMENTS; i++)
            {
                new clothID = PlayerInfo[playerid][pAttachements][i];
                format(string2230,512,"{FFFFFF}%s\n",GetClothName(clothID));
                strcat(string2230result, string2230);
            }
            format(string2230,512,"{ff0000}Премахни всички");
            strcat(string2230result, string2230);
            ShowPlayerDialog(playerid,DIALOG_ATTACHMENTS,DIALOG_STYLE_LIST,"Clothes:",string2230result,"Избери","Излез");
        }
        return 1;
    }

    if (strcmp(cmd, "/3dcolor", true) == 0)
    {
        if(PlayerInfo[playerid][pVip] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");

        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/3dcolor [red/blue/green]");
            return 1;
        }

        new level[32];
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/3dcolor [red/blue/green]");
            return 1;
        }

        strmid(level, tmp, 0, sizeof(level), sizeof(level));
        if (strcmp(level, "start", false) == 0 && strcmp(level, "end", false) == 0 && strcmp(level, "invite", false) == 0 && strcmp(level, "kick", false) == 0 && strcmp(level, "leave", false) == 0 && strcmp(level, "check", false) == 0)
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/3dcolor [red/blue/green]");
            return 1;
        }

        if (strcmp(level, "red", true) == 0)
        {
            PlayerInfo[playerid][pVipTextColor] = 0;
            SendClientMessage(playerid, COLOR_VIP_RED, "3D Text: Вече твоят текст над главата ти ще бъде в червен цвят!");
        }
        else if (strcmp(level, "blue", true) == 0)
        {
            PlayerInfo[playerid][pVipTextColor] = 1;
            SendClientMessage(playerid, COLOR_VIP_RED, "3D Text: Вече твоят текст над главата ти ще бъде в син цвят!");
        }
        else if (strcmp(level, "green", true) == 0)
        {
            PlayerInfo[playerid][pVipTextColor] = 2;
            SendClientMessage(playerid, COLOR_VIP_RED, "3D Text: Вече твоят текст над главата ти ще бъде в зелен цвят!");
        }
        return 1;
    }

    if (strcmp(cmd, "/3dremove", true) == 0)
    {
        if (PlayerInfo[playerid][pVip] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
        if (IsValidDynamic3DTextLabel(PlayerLabel[playerid]))
        {
            format(PlayerInfo[playerid][pVipText], 64, "");
            DestroyDynamic3DTextLabel(PlayerLabel[playerid]);
            SendClientMessage(playerid, COLOR_VIP_RED, "3D Text: Ти премахна твоя 3D Text!");
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш закачен 3D Text над главата си!");
        }
        return 1;
    }

    if (strcmp(cmd, "/3dtext", true) == 0)
    {
        if(PlayerInfo[playerid][pVip] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
        new result[256];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
                result[idx - offset] = cmdtext[idx];
                idx++;
        }
        result[idx - offset] = EOS;
        if (!strlen(result))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/3dtext [text]");
            return 1;
        }
        if(strlen(result) > 20)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Можеш да използваш най-много 20 символа!");
            return 1;
        }
        new string256[256];
        format(PlayerInfo[playerid][pVipText], 64, result);
        AddPlayerLabel(playerid);
        format(string256, 256, "3D Text: Ти добави текст над главата си на който пише %s",result);
        SendClientMessage(playerid, COLOR_VIP_RED, string256);
        return 1;
    }

	if (strcmp(cmd, "/viphelp", true) == 0)
	{
		new string2230[512];
		new string2630result[2630];
		format(string2230, 512, "{FFFFFF}VIP Системата ви дава бонуси с които да улесните играта си.\n\n");
		strcat(string2630result, string2230);
		//Vip Level 1
		format(string2230, 512, "{FFFFFF}За {17B7FF}VIP Ниво 1 {FFFFFF}получавате:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Получаваш право на безплатен {62dd49}пистолет със заглушител {ffffff}от Ammunation през 50 минути\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате {62dd49}$20 {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}$1350 {ffffff}в банката и {62dd49}3 Exp {ffffff}при получаване на Payday\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}2 Exp {ffffff}при получаване на Gift\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFF00}- Бонуси при свършена работа:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   Бонус {62dd49}$450 {ffffff}и {62dd49}2 Exp {ffffff}при свършена работа\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   При свършена работа Spam Timer-ът е намален до {62dd49}30 минути\n");
		strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/vipchat {FFFFFF}за да пишеш във Vip Chat\n");
        strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/kill {FFFFFF}за да се самоубиеш\n");
        strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/r (/reply) {FFFFFF}за да изпратиш PM до последния човек на който си писал\n");
        strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/laser {FFFFFF}за да избереш лазер за своите оръжия\n\n");
		strcat(string2630result, string2230);
		//Vip Level 2
		format(string2230, 512, "{FFFFFF}За {17B7FF}VIP Ниво 2 {FFFFFF}получавате:\n");
		strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Получаваш право на {62dd49}2 лични превозни средства\n");
        strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате {62dd49}$30 {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате общо {62dd49}30 патрона от оръжието {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}$1550 {ffffff}в банката и {62dd49}5 Exp{ffffff} при получаване на Payday\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}4 Exp {ffffff}при получаване на Gift\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFF00}- Бонуси при свършена работа:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   Бонус {62dd49}$895 {ffffff}и {62dd49}4 Exp {ffffff}при свършена работа\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   При свършена работа Spam Timer-ът е намален до {62dd49}25 минути\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/vrepair {FFFFFF}за да поправиш превоза си в гараж\n");
		strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/3dtext {FFFFFF}за да си сложиш 3D Text над името\n");
        strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/3dremove {FFFFFF}за да си сложиш 3D Text над името\n\n");
        strcat(string2630result, string2230);
		//Vip Level 3
		format(string2230, 512, "{FFFFFF}За {17B7FF}VIP Ниво 3 {FFFFFF}получавате:\n");
		strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Получаваш право на {62dd49}3 лични превозни средства\n");
        strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате {62dd49}$40 {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}$1750 {ffffff}в банката и {62dd49}7 Exp {ffffff}при получаване на Payday\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}6 Exp {ffffff}при получаване на Gift\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFF00}- Бонуси при свършена работа:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   Бонус {62dd49}$1250 {ffffff}и {62dd49}6 Exp {ffffff}при свършена работа\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   При свършена работа Spam Timer-ът е намален до {62dd49}20 минути\n");
		strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/clothes {FFFFFF}за да добавиш Attachements към Skin-а си\n");
        strcat(string2630result, string2230);
        format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/3dcolor {FFFFFF}за да смениш цвета на твоя 3D Text");
        strcat(string2630result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{62dd49}VIP SYSTEM", string2630result, "Изход", "");
		return 1;
	}

	if (strcmp(cmd, "/robhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_ORANGE, "Местата, които можеш да обираш са: ");
		SendClientMessage(playerid, COLOR_ORANGE, "1) Caligula's Casino");
		return 1;
	}

	if (strcmp(cmd, "/robatm", true) == 0)
	{
		if (startedAtmRob == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има започнат обир на банкомат!");
		new string256[256];
		format(string256, 256, "Трябва да изчакаш още %d минути, преди да започнеш обир на банкомат!", atmRobberyWaitingTimer / 60);
		if (atmRobberyWaitingTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, string256);
		if (GetPlayerNearATM(playerid) == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до банкомат за да стартираш обир!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да направиш обир във Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да направиш обир в Interior!");
		if (!PlayerInfo[playerid][pMoneyBag]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Money Bag за да направиш обир!");
		atmRobberyPlaceIndex = GetPlayerNearATM(playerid);
		startedAtmRob = true;
		isAtmRobber[playerid] = true;
		atmRobberID = playerid;
		atmRobberyGettingMoneyTimer = 2;
		atmRobberyCollectTimeCheck = 0;
		atmRobberyMoney = 0;
		format(string256, 256, "Police - ATM Robbery Alert: Полицията уведомява, че има обир на банкомат, около %s", GetPlayerZone(playerid));
		SendClientMessageToAll(COLOR_ORANGE, string256);
		SetPlayerAttachedObject(playerid, PLAYER_OBJECT_MONEYBAG, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		GivePlayerWanted(playerid, 2);
		format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте заподозрян в престъпление: Обир на банкомат! Ниво на издирване: %d", PlayerInfo[playerid][pWantedLevel]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string256);
		return 1;
	}

	if (strcmp(cmd, "/rob", true) == 0)
	{
		if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обир.");
		if (normalRobberyStartedGettingCash == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има започнат обир.");
		new bool: inRobPlace = false;
		new string256[256];
		if (IsPlayerInRangeOfPoint(playerid, 8, 2144.2419, 1639.6534, 993.5761))
		{
			normalRobPlace = 1;
			SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Полицията уведомява, че има обир в Caligula's Casino");
			inRobPlace = true;
		}

		if (inRobPlace == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не се намирате на място за обир! Вижте /robhelp");
		}
		else if (inRobPlace == true)
		{
			startedNormalRobGettingMoney = true;
			robberyTimerToStart = 0;
			robberyGettingMoneyTimer = 2;
			robberyCollectTimeCheck = 0;
			normalRobberyStartedGettingCash = true;
			normalRobberyVirtualWorld = GetPlayerVirtualWorld(playerid);
			for (new i; i < MAX_PLAYERS; i++)
			{
				if (isNormalRobberyLeaderPlayer[i] == true)
				{
					GivePlayerWanted(i, 2);
					format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте заподозрян в престъпление: Организиран обир! Ниво на издирване: %d", PlayerInfo[i][pWantedLevel]);
					SendClientMessage(i, COLOR_LIGHTRED, string256);
				}
			}
		}

		return 1;
	}

    if (strcmp(cmd, "/startevent", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг действащ Event!");
        if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
        if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
        if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
        if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
		if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C. смяна първо!");
        if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от AFK!");
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
        new result[256];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startevent [event name]");
            return 1;
        }
        new string256[256];
        format(string256, sizeof(string256),"~r~ %s ~n~ ~w~ TYPE: ~g~/joinevent ~n~ ~b~ NO AWARD!!!",result);
        GameTextForAll(string256, 5000, 3);
        eventInterior = GetPlayerInterior(playerid);
        startedEvent = true;
        stopJoinEvent = false;
        eventAward = false;
        eventCreator[playerid] = true;
        eventInterior = GetPlayerInterior(playerid);
        format(string256, sizeof(string256), "%s: {80FF00}Напишете {F2FF00}/joinevent{80FF00} за да се присъедините към евента.{FFFFFF}  БЕЗ НАГРАДА!", result);
        SendClientMessageToAll(0xFF0000FF, string256);
        SetPlayerVirtualWorld(playerid, eventVirtualWorld);
        return 1;
    }

    if (strcmp(cmd, "/egivegun", true) == 0)
    {
        if (PlayerInfo[playerid][pEvent])
        {
            if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
            tmp = strtok(cmdtext, idx);
            if (!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/egivegun [playerid] [weaponid] [ammount]");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
                SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
                SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
                SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
                SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
                SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                return 1;
            }

            new level;
            new giveplayerID = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if (!strlen(tmp) || level == 0)
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/egivegun [playerid] [weaponid] [ammount]");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
                SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
                SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
                SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
                SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
                SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                return 1;
            }

            if (level > 46)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID оръжие не съществува!");
                return 1;
            }

            tmp = strtok(cmdtext, idx);
            new ammount = strval(tmp);
            if (!strlen(tmp) || ammount == 0)
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/egivegun [playerid] [weaponid] [ammount]");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
                SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
                SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
                SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
                SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
                SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                return 1;
            }

            if (ammount < 1)
            {
                SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да дадеш толкова амуниции!");
                return 1;
            }

            if (giveplayerID != INVALID_PLAYER_ID)
            {
                if(!inEvent[giveplayerID]) return SendClientMessage(playerid, COLOR_GRAD1, "Посоченият играч не е в Event-а!");
                new weaponname[32];
                GetWeaponName(level, weaponname, 32);
                new string256[256];
                format(string256, 256, "Ти даде на %s оръжие %s с %d амуниции!", GetAccountNickname(giveplayerID), weaponname, ammount);
                SendClientMessage(playerid, 0x5065D9FF, string256);
                format(string256, 256, "%s ти даде %s с %d амуниции!", GetAccountNickname(playerid), weaponname, ammount);
                SendClientMessage(giveplayerID, 0x5065D9FF, string256);
                if (level == 21)
                {
                    SetPlayerArmedWeapon(giveplayerID, 0);
                    SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_USEJETPACK);
                    SetPlayerArmedWeapon(giveplayerID, 0);
                    SetPlayerArmedWeapon(giveplayerID, 0);
                    SetPlayerArmedWeapon(giveplayerID, 0);
                }

                GivePlayerWeapon(giveplayerID, level, ammount);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        }

        return 1;
    }

    if (strcmp(cmd, "/egivegunall", true) == 0)
    {
        if (PlayerInfo[playerid][pEvent])
        {
            if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
            new level;
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if (!strlen(tmp) || level == 0)
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/egivegun [playerid] [weaponid] [ammount]");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
                SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
                SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
                SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
                SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
                SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                return 1;
            }

            if (level > 46)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID оръжие не съществува!");
                return 1;
            }

            tmp = strtok(cmdtext, idx);
            new ammount = strval(tmp);
            if (!strlen(tmp) || ammount == 0)
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/egivegun [playerid] [weaponid] [ammount]");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
                SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
                SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
                SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
                SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
                SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
                SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
                return 1;
            }

            if (ammount < 1)
            {
                SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да дадеш толкова амуниции!");
                return 1;
            }
            new weaponname[32];
            GetWeaponName(level, weaponname, 32);
            new string256[256];
            format(string256, 256, "%s даде %s с %d амуниции на всички участници в Event-а!", GetAccountNickname(playerid), weaponname, ammount);
            SendEventMessage(0x5065D9FF, string256);
            for(new i=0; i<MAX_PLAYERS; i++)
            {
                if(inEvent[i])
                {
                    GivePlayerWeapon(i, level, ammount);
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        }

        return 1;
    }

    if (strcmp(cmd, "/ncolor", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ncolor [playerid] [color id]");
            SendClientMessage(playerid, COLOR_YELLOW, "1: Бял, 2: Зелен, 3: Сив, 4: Жълт, 5: Оранжев");
            return 1;
        }
        new giveplayerID = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ncolor [playerid] [color id]");
            SendClientMessage(playerid, COLOR_YELLOW, "1: Бял, 2: Зелен, 3: Сив, 4: Жълт, 5: Оранжев");
            return 1;
        }
        new colorName[32];
        strmid(colorName, tmp, 0, sizeof(colorName), sizeof(colorName));
        if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
        if(inEvent[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не участва в Event-а!");
        if(strcmp(colorName,"1",true)==1 && strcmp(colorName,"2",true)==1 && strcmp(colorName,"3",true)==1 && strcmp(colorName,"4",true)==1)
        if (strcmp(colorName, "1", true) == 0)
        {
            SetPlayerColor(giveplayerID, 0xFFFFFFFF);
        }
        if (strcmp(colorName, "2", true) == 0)
        {
            SetPlayerColor(giveplayerID, 0x28BF0EFF);
        }
        if (strcmp(colorName, "3", true) == 0)
        {
            SetPlayerColor(giveplayerID, 0xFF0000FF);
        }
        if (strcmp(colorName, "4", true) == 0)
        {
            SetPlayerColor(giveplayerID, 0xFF5733FF);
        }
        return 1;
    }

    if (strcmp(cmd, "/egivereward", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        if (!eventAward ) return SendClientMessage(playerid, COLOR_GRAD1, "Event-ът е без награда!");
        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/egivereward [playerid]");
            return 1;
        }
        new giveplayerID = ReturnUser(tmp);
        if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
        if(inEvent[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не участва в Event-а!");
        new string256[256];
        GivePlayerCash(giveplayerID, eventCashReward);
        GivePlayerExp(giveplayerID, eventExpReward);
        format(string256, 256, "Event Reward: %s (ID: %d) даде Event наградата на %s", GetPlayerNickname(playerid), GetPlayerNickname(giveplayerID));
        SendAdminMessage(COLOR_ADMIN_RED, string256);
        format(string256, 256, "Ти даде {ffff00}%d Exp и $%d {5065D9}от Event наградата на {ff0000}%s",eventExpReward, eventCashReward, GetPlayerNickname(giveplayerID));
        SendClientMessage(playerid, 0x5065D9FF, string256);
        format(string256, 256, "Ти получи {ffff00}%d Exp и $%d {5065D9}от Event наградата от {ff0000}%s",eventExpReward, eventCashReward, GetPlayerNickname(playerid));
        SendClientMessage(giveplayerID, 0x5065D9FF, string256);
        return 1;
    }

    if (strcmp(cmd, "/sethpall", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");

        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sethpall [hp]");
            return 1;
        }
        new hp = strval(tmp);

        new string256[256];
        format(string256,256,"%s сложи health на всички играчи в Event-а да е %d",GetPlayerNickname(playerid), hp);
        SendClientMessageToAll(COLOR_EVENT,string256);
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(inEvent[i])
            {
                SetPlayerHealth(i, hp);
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/setarmourall", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");

        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setarmourall [armour]");
            return 1;
        }
        new armour = strval(tmp);

        new string256[256];
        format(string256,256,"%s сложи armour на всички играчи в Event-а да е %d",GetPlayerNickname(playerid), armour);
        SendClientMessageToAll(COLOR_EVENT,string256);
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(inEvent[i])
            {
                SetPlayerArmour(i, armour);
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/efreeze", true) == 0)
    {
        if (PlayerInfo[playerid][pEvent])
        {
            if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
            tmp = strtok(cmdtext, idx);
            if (!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/efreeze [ID на играч]");
                return 1;
            }

            new giveplayerID = strval(tmp);
            if (!IsPlayerConnected(giveplayerID))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
                return 1;
            }

            new string256[256];
            format(string256, 256, "Ти замрази %s", GetPlayerNickname(giveplayerID));
            SendClientMessage(playerid, COLOR_EVENT, string256);
            format(string256, 256, "%s те замрази", GetPlayerNickname(playerid));
            SendClientMessage(giveplayerID, COLOR_EVENT, string256);
            TogglePlayerControllable(giveplayerID, false);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        }

        return 1;
    }

    if (strcmp(cmd, "/eunfreeze", true) == 0)
    {
        if (PlayerInfo[playerid][pEvent])
        {
            if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
            tmp = strtok(cmdtext, idx);
            if (!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/efreeze [ID на играч]");
                return 1;
            }

            new giveplayerID = strval(tmp);
            if (!IsPlayerConnected(giveplayerID))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
                return 1;
            }

            if(!inEvent[giveplayerID])
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Този играч не участва в Event-а!");
                return 1;
            }

            new string256[256];
            format(string256, 256, "Ти отмрази %s", GetPlayerNickname(giveplayerID));
            SendClientMessage(playerid, COLOR_EVENT, string256);
            format(string256, 256, "%s те отмрази", GetPlayerNickname(playerid));
            SendClientMessage(giveplayerID, COLOR_EVENT, string256);
            TogglePlayerControllable(giveplayerID, true);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        }

        return 1;
    }

    if (strcmp(cmd, "/freezeall", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        new string256[256];
        format(string256,256,"%s замрази всички участници в Event-а",GetPlayerNickname(playerid));
        SendClientMessageToAll(COLOR_EVENT,string256);
        eventFreeze = true;
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(inEvent[i])
            {
                TogglePlayerControllable(i, false);
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/unfreezeall", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        new string256[256];
        format(string256,256,"%s отмрази всички участници в Event-а",GetPlayerNickname(playerid));
        SendClientMessageToAll(COLOR_EVENT,string256);
        eventFreeze = false;
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(inEvent[i])
            {
                TogglePlayerControllable(i, true);
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/ec", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        new string256[256];
        format(string256,256,"*** %s стартира брояча на евента, бъдете в готовност ***",GetPlayerNickname(playerid));
        SendClientMessageToAll(COLOR_EVENT,string256);
        StartEventCount();
        return 1;
    }

    if (strcmp(cmd, "/setlimit", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
        SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setlimit [players limit]");
        return 1;
        }
        new limit = strval(tmp);
        if(limit < 1 || limit > 1000)
        {
        SendClientMessage(playerid, COLOR_GRAD1, "Лимитът може да бъде от 1 до 1000 човека!");
        return 1;
        }
        eventLimit = limit;
        new string256[256];
        format(string256, sizeof(string256), "{FF0000}%s{80FF00} сложи лимита за влизането в евента да е %d!",GetPlayerNickname(playerid), limit);
        SendClientMessageToAll(COLOR_EVENT, string256);
        return 1;
    }

    if (strcmp(cmd, "/stopevent", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        if (stopJoinEvent) return SendClientMessage(playerid, COLOR_GRAD1, "Влизането в Event-а е вече забранено!");
        new string256[256];
        format(string256, sizeof(string256),"~w~EVENT ~g~JOIN ~r~OVER");
        GameTextForAll(string256, 5000, 3);
        format(string256, sizeof(string256), "Присъединяването в евента приключи!");
        SendClientMessageToAll(0x5065D9FF, string256);
        stopJoinEvent = true;
        return 1;
    }

    if (strcmp(cmd, "/esetskin", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/esetskin [playerid] [skin id]");
            return 1;
        }
        new giveplayerID = ReturnUser(tmp);

        tmp = strtok(cmdtext, idx);
        new skin = strval(tmp);
        if (skin < 0 || skin > 311)
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/esetskin [ID на играч] [skin id]");
            return 1;
        }

        if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
        if(inEvent[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не участва в Event-а!");
        new string256[256];
        format(string256, 256, "Ти смени Skin ID на {ff0000}%s",GetPlayerNickname(giveplayerID));
        SendClientMessage(playerid, 0x5065D9FF, string256);
        format(string256, 256, "Твоят Skin ID беше променен от %s", GetPlayerNickname(playerid));
        SendClientMessage(giveplayerID, 0x5065D9FF, string256);
        SetPlayerSkin(giveplayerID, skin);
        return 1;
    }

    if (strcmp(cmd, "/endevent", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (!startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма Event!");
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
        new result[256];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/endevent [winner]");
            return 1;
        }
        new string256[256];
        format(string256, sizeof(string256),"EVENT {00B300}WINNER: {FF0000}%s",result);
        SendClientMessageToAll(0xFFFFFFFF,string256);
        format(string256, sizeof(string256),"~w~EVENT ~g~WINNER:~n~~r~%s",result);
        GameTextForAll(string256, 5000, 3);
        startedEvent = false;
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(inEvent[i])
            {
                LeaveFromEvent(i);
            }
            if(eventCreator[i])
            {
                eventCreator[i] = false;
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/startevent2", true) == 0)
    {
        if (!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да ползваш тази команда!");
        if (startedEvent) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг действащ Event!");
        if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
        if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
        if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
        if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
		if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C. смяна първо!");
        if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от AFK!");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
        SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startevent2 [reward exp] [reward cash] [event name]");
        return 1;
        }
        new rewardExp = strval(tmp);

        if(rewardExp < 1)
        {
        SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startevent2 [reward exp] [reward cash] [event name]");
        return 1;
        }

        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
        SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startevent2 [reward exp] [reward cash] [event name]");
        return 1;
        }
        new rewardCash = strval(tmp);

        if(rewardCash < 1)
        {
        SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startevent2 [reward exp] [reward cash] [event name]");
        return 1;
        }

        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
        new result[256];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startevent2 [reward exp] [reward cash] [event name]");
            return 1;
        }
        if(PlayerInfo[playerid][pAdmin] < 5 && rewardExp > 12) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш право да сложиш наградата да е над 12 Exp!"); 
        if(PlayerInfo[playerid][pAdmin] < 5 && rewardCash > 25000) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш право да сложиш наградата да е над $25, 000!"); 
        new string256[256];
        format(string256, sizeof(string256),"~r~ %s ~n~ ~w~ TYPE: ~g~/joinevent ~n~ ~b~ WITH AWARD!!!",result);
        GameTextForAll(string256, 5000, 3);
        eventInterior = GetPlayerInterior(playerid);
        startedEvent = true;
        stopJoinEvent = false;
        eventAward = true;
        eventCreator[playerid] = true;
        eventExpReward = rewardExp;
        eventCashReward = rewardCash;
        format(string256, sizeof(string256), "%s: {80FF00}Напишете {F2FF00}/joinevent{80FF00} за да се присъедините към евента.{FFFFFF} НАГРАДА: %d Exp и $%d", result, rewardExp, rewardCash);
        SendClientMessageToAll(COLOR_EVENT, string256);
        SetPlayerVirtualWorld(playerid, eventVirtualWorld);
        return 1;
    }

	if (strcmp(cmd, "/robbery", true) == 0)
	{
		if (!IsPlayerInRangeOfPoint(playerid, 4, -127.4285, 974.5004, 19.8516) && !IsPlayerInRangeOfPoint(playerid, 4, 2447.9617, -1963.0054, 13.5469))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на място за започване на обир.");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery [start/end/invite/kick/leave/check]");
			return 1;
		}

		new level[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery [start/end/invite/kick/leave/check]");
			return 1;
		}

		strmid(level, tmp, 0, sizeof(level), sizeof(level));
		if (strcmp(level, "start", false) == 0 && strcmp(level, "end", false) == 0 && strcmp(level, "invite", false) == 0 && strcmp(level, "kick", false) == 0 && strcmp(level, "leave", false) == 0 && strcmp(level, "check", false) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery [start/end/invite/kick/leave/check]");
			return 1;
		}

		if (strcmp(level, "start", true) == 0)
		{
			if (startedNormalRobbery == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг обир и не можеш да стартираш сега.");
			new string256[256];
			format(string256, 256, "Трябва да изчакаш още %d минути, преди да започнеш обир!", normalRobberyWaitingTimer / 60);
			if (normalRobberyWaitingTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, string256);
			if (!PlayerInfo[playerid][pMoneyBag]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш Money Bag, където да пазиш парите!");
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Ти започна обир, намери място където да крадеш. За да обираш напиши {ffffff}/rob");
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Имаш 15 минути да намериш място за крадене. Виж /robhelp за да откриеш място за обир.");
			startedNormalRobbery = true;
			startedNormalRobGettingMoney = false;
			isNormalRobberyLeaderPlayer[playerid] = true;
			inNormalRobbery[playerid] = true;
			normalRobberyLeaderID = playerid;
			robberyTimerToStart = 15 * 60;
			normalRobberyMembers = 1;
			normalRobberyMoney = 0;
			SetPlayerSkin(playerid, 24);
			SetPlayerAttachedObject(playerid, PLAYER_OBJECT_MONEYBAG, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		}

		if (strcmp(level, "leave", true) == 0)
		{
			if (isNormalRobberyLeaderPlayer[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Ти си лидер и не можеш да напуснеш обира.");
			if (inNormalRobbery[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си участник в обира.");
			new string256[256];
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Ти реши да напуснеш обира.");
			format(string256, 256, "Robbery: %s напусна обира");
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
			RestartPlayerSkin(playerid);
			inNormalRobbery[playerid] = false;
		}

		if (strcmp(level, "end", true) == 0)
		{
			if (startedNormalRobbery == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма обир.");
			if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обира.");
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Обирът приллючи по твое желание.");
			SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: Обирът приключи по желание на лидера и всеки получава част от ограбената сума.");
			GiveAllRobbersMoney();
			StopRobbery();
		}

		if (strcmp(level, "kick", true) == 0)
		{
			if (startedNormalRobbery == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма обир.");
			if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обира.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery kick [playerid]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изкараш себе си от обира.");
			if (inNormalRobbery[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в обира.");
			if (!CorDetector(4.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб.");
			if (startedNormalRobGettingMoney == true) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да махнеш човек от обира, след като той е започнал.");
			RestartPlayerSkin(giveplayerID);
			inNormalRobbery[giveplayerID] = false;
			RemovePlayerAttachedObject(giveplayerID, 2);
			new string256[256];
			format(string256, 256, "Robbery: Лидерът на обира изкара %s от обира.", GetPlayerNickname(giveplayerID));
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
		}

		if (strcmp(level, "invite", true) == 0)
		{
			if (startedNormalRobbery == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма обир.");
			if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обира.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery invite [playerid]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да вкараш себе си в обира.");
			if (inNormalRobbery[giveplayerID] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече участва в обира.");
			if (!CorDetector(4.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб.");
			if (startedNormalRobGettingMoney == true) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да добавиш човек в обира, след като той е започнал.");
			if (!PlayerInfo[giveplayerID][pMoneyBag]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш Money Bag, където да пазиш парите!");
			new string256[256];
			inNormalRobbery[giveplayerID] = true;
			format(string256, 256, "Robbery: Лидерът на обира вкара %s като участник!", GetPlayerNickname(giveplayerID));
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
			SetPlayerSkin(giveplayerID, 25);
			SetPlayerAttachedObject(giveplayerID, PLAYER_OBJECT_MONEYBAG, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		}

		if (strcmp(level, "check", true) == 0)
		{
			if (startedNormalRobbery == true)
			{
				SendClientMessage(playerid, COLOR_WHITE, "В момента има друг обир и не можеш да стартираш сега!");
			}
			else if (startedNormalRobbery == false)
			{
				SendClientMessage(playerid, COLOR_WHITE, "В момента няма обир!");
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/sweepjob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (PlayerInfo[playerid][pSweeperTimer] < 60 && PlayerInfo[playerid][pSweeperTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство.");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isSweepVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за почистване на улиците.");
		if (PlayerInfo[playerid][pSweeperTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pSweeperTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingSweep[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Sweep Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Почисти улиците");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/busjob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (PlayerInfo[playerid][pBusTimer] < 60 && PlayerInfo[playerid][pBusTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство.");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isBusVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за разнасяне на пътници.");
		if (PlayerInfo[playerid][pBusTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pBusTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingBus[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_BUS_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Bus Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Разнасяй автобуса");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/coalminejob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство!");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isCoalmineVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за работа Coalmine!");
		if (PlayerInfo[playerid][pCoalmineTimer] < 60 && PlayerInfo[playerid][pCoalmineTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (PlayerInfo[playerid][pCoalmineTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pCoalmineTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingCoalmine[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Coalmine Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Свърши работата в мината");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/deliverjob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство!");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isDeliverVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за разнасяне на стока!");
		if (PlayerInfo[playerid][pDeliverTimer] < 60 && PlayerInfo[playerid][pDeliverTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (PlayerInfo[playerid][pDeliverTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pDeliverTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingDeliver[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Deliver Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Достави пиците");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/pizzajob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (PlayerInfo[playerid][pPizzaTimer] < 60 && PlayerInfo[playerid][pPizzaTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство.");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isPizzaVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за разнасяне на пица.");
		if (PlayerInfo[playerid][pPizzaTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pPizzaTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingPizza[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Pizza Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Достави пиците");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/refuel", true) == 0)
	{
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьор!");
		if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_1) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_1) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_2) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_3) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_4) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_5) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_6) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_7) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_8) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_9) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_10) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_11) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_12) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_13) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_14) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_15) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_16))
		{
			new hisVeh = GetPlayerVehicleID(playerid);
			new vehModel = GetVehicleModel(hisVeh);
			new string256[256];
			if (IsNoFuelVehicle(vehModel) == 1)
			{
				format(string256, 256, "Това превозно средство няма нужда от бензиностанция!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Бензиностанция", string256, "Затвори", "");
			}

			if (100 - vehFuel[hisVeh] <= 0)
			{
				format(string256, 256, "Това превозно средство е напълно заредено!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Бензиностанция", string256, "Затвори", "");
				return 1;
			}

			format(string256, 256, "{FFFFFF}Добре дошли в бензиностанцията\n\nМожете да заредите до {FFB20C}%d {FFFFFF}литра.\n{FFFFFF}Посочете долу колко литра искате да заредите.", 100 - vehFuel[hisVeh]);
			ShowPlayerDialog(playerid, DIALOG_REFUEL, DIALOG_STYLE_INPUT, "{FFFFFF}Бензиностанция", string256, "Презареди", "Затвори");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до бензиностанция!");
		}

		return 1;
	}

	if (strcmp(cmd, "/atm", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_1) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_2) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_3) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_4) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_5) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_6) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_7) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_8) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_9) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_10) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_11))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Баланс\n{FFFFFF}Изтегли пари");
			ShowPlayerDialog(playerid, DIALOG_ATM, DIALOG_STYLE_LIST, "ATM Service", string256, "Изтеги", "Затвори");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до банкомат!");
		}

		return 1;
	}

	if (strcmp(cmd, "/bank", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, 1376.5142,-29.1997,1000.8729) && GetPlayerVirtualWorld(playerid) == 1)
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}1. Баланс\n{FFFFFF}2. Изтегли пари\n{FFFFFF}3. Прехвърли пари до друг човек\n{FFFFFF}4. Внеси сума в банковата си сметка\n{FFFFFF}5. Плати си глобите\n{FFFFFF}6. Сметка на организацията");
			ShowPlayerDialog(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "Bank Service", string256, "Изтеги", "Затвори");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в банката!");
		}

		return 1;
	}

	if (strcmp(cmd, "/back", true) == 0)
	{
		if (!PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не си в AFK!");
		if (PlayerTimerInfo[playerid][ptAFKBack] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още не са изминали 3 минути, откакто влезе в AFK!");
		SendClientMessage(playerid, COLOR_AFK, "AFK: Ти се върна в играта!");
		playerAfkMinutes[playerid] = 0;
		playerAfkSeconds[playerid] = 0;
		PlayerInfo[playerid][pAFK] = false;
		SetToSpawn(playerid);
		return 1;
	}

	if (strcmp(cmd, "/afk", true) == 0)
	{
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK, когато си на Admin смяна!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
		if (PlayerInfo[playerid][pJailed] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK, когато си в ADMIN затвора!");
		if (PlayerInfo[playerid][pPoliceJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си в AFK!");
		if (PlayerInfo[playerid][pSelectedGender] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още нямаш лична карта и не можеш да влезеш в AFK!");
		new string256[256];
		format(string256, 256, "AFK: %s излезе в почивка!", accountNickname);
		SendClientMessageToAll(COLOR_AFK, string256);
		SendClientMessage(playerid, COLOR_AFK, "AFK: Използвай /back за да се върнеш в играта!");
		SetPlayerInterior(playerid, 15);
		SetPlayerVirtualWorld(playerid, playerid + 1);
		SetPlayerPos(playerid, 2215.454833, -1147.475585, 1025.796875);
		PlayerInfo[playerid][pAFK] = true;
		PlayerTimerInfo[playerid][ptAFKBack] = 3 * 60;
		return 1;
	}

	if (strcmp(cmd, "/id", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/id [част от никнейма или целия]");
			return 1;
		}

		new foundids;
		new string256[256];
		//F97804
		new nname[MAX_PLAYER_NAME];
		format(string256, 256, "Търсене за: {FF0000}%s", result);
		SendClientMessage(playerid, 0xFFFFFFFF, string256);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, nname, sizeof(nname));
				if (strfind(nname, result, true) != -1)
				{
					foundids += 1;
					if (foundids > 0)
					{
						format(string256, 256, "%d. %s (ID:%d)", foundids, nname, i);
						SendClientMessage(playerid, 0xFFFF00FF, string256);
						//return 1;
					}
				}
			}
		}

		if (foundids == 0)
		{
			format(string256, 256, "Няма открити играчи с този никнейм в сървъра!");
			SendClientMessage(playerid, 0xE60000FF, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/teleportfaction", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/teleportfaction [lspd, army, crip, wcw, vagos, ballas, vip-gang, news]");
			return 1;
		}

		if (strcmp(result, "lspd", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Police);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "army", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Army);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "crip", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Crip);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "wcw", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, WestCoastWheelers);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "vagos", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Vagos);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "ballas", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Ballas);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "vip-gang", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, UnseenCriminals);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "news", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, TheNews);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		return 1;
	}

    if (strcmp(cmd, "/kill", true) == 0)
    {
        if (PlayerInfo[playerid][pVip] < 1)
        {
            return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
        }
        SetPlayerHealth(playerid, 0);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти реши да сложиш край на живота си!");
        return 1;
    }

	if (strcmp(cmd, "/laser", true) == 0)
	{
		if (PlayerInfo[playerid][pVip] < 1)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/laser [off, yellow, blue, red, green]");
			return 1;
		}

		new string256[256];
		if (strcmp(result, "off", true) == 0)
		{
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си премахна лазера! *");
			RemovePlayerLaser(playerid);
			format(string256, 256, "%s прибра лазера си!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "yellow", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 1;
			SetPVarInt(playerid, "color", 19084);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи жълт лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе жълт лазер и го сложи на своите M4 и Mp5!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "blue", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 2;
			SetPVarInt(playerid, "color", 19080);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи син лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе син лазер и го сложи на своите M4 и Mp5!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "red", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 3;
			SetPVarInt(playerid, "color", 18643);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи червен лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе червен лазер и го сложи на своите M4 и Mp5!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "green", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 4;
			SetPVarInt(playerid, "color", 19083);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи зелен лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе зелен лазер и го сложи на своите M4 и Mp5!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/mylocation", true) == 0)
	{
		if (GetPlayerInterior(playerid) != 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Your Location: Вие се намирате в {40BF00}Interior");
		}

		new string256[256];
		format(string256, 256, "Your Location: Вие се намирате в {40BF00}%s", GetPlayerZone(playerid));
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/drugs", true) == 0)
	{
		new string256[256];
		format(string256, 256, "Your Drugs: Кокаин: %d gram/s, Марихуана: %d gram/s, Хероин: %d gram/s", PlayerInfo[playerid][pCocaine], PlayerInfo[playerid][pMarijuana], PlayerInfo[playerid][pHeroin]);
		SendClientMessage(playerid, COLOR_DRUGS, string256);
		return 1;
	}

	if (strcmp(cmd, "/usedrug", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine/marijuana/heroin]");
			return 1;
		}

		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine/marijuana/heroin]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strcmp(result, "heroin", false) == 0 && strcmp(result, "cocaine", false) == 0 && strcmp(result, "marijuana", false) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine/marijuana/heroin]");
			return 1;
		}

		new string256[256];

		if (strcmp(result, "cocaine", true) == 0)
		{
			if (PlayerInfo[playerid][pCocaine] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш кокаин в себе си!");

			tmp = strtok(cmdtext, idx);
			new grams;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine] [grams]");
				return 1;
			}

			grams = strval(tmp);
			if (grams < 1 || grams > 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Грамовете кокаин, които можеш да приемеш са от 1 до 10!");
				return 1;
			}

			if (PlayerInfo[playerid][pCocaine] < grams) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова грама в себе си!");

			new Float: health;
			GetPlayerHealth(playerid, health);

			new healthPoints = grams * 5;
			new Float: newHealth;
			newHealth = health + healthPoints;
			if (newHealth > 100) return SendClientMessage(playerid, COLOR_GRAD1, "Точките ти живот са твърде много за да подейства този грамаж");
			if (health < healthPoints && newHealth <= 100)
			{
				SetPlayerHealth(playerid, newHealth);
			}

			SetPlayerWeather(playerid, 2009);
			SetPlayerDrunkLevel(playerid, 4000);
			format(string256, 256, "* %s взе %d грама кокаин и ги използва!", GetPlayerNickname(playerid), grams);
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Наркотикът вече подейства! Той ви зареди определени точки живот!");
			PlayerTimerInfo[playerid][ptFinishDrugEffect] = 20 * grams;
			PlayerInfo[playerid][pCocaine] -= 1;
		}

		if (strcmp(result, "heroin", true) == 0)
		{
			if (PlayerInfo[playerid][pHeroin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш хероин в себе си!");
			new Float: health;
			GetPlayerHealth(playerid, health);
			tmp = strtok(cmdtext, idx);
			new grams;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [heroin] [grams]");
				return 1;
			}

			grams = strval(tmp);
			if (grams < 1 || grams > 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Грамовете хероин, които можеш да приемеш са от 1 до 10!");
				return 1;
			}

			if (PlayerInfo[playerid][pHeroin] < grams) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова грама в себе си!");

			new healthPoints = grams * 10;
			new Float: newHealth;
			newHealth = health + healthPoints;
			if (newHealth > 100) return SendClientMessage(playerid, COLOR_GRAD1, "Точките ти живот са твърде много за да подейства този грамаж");
			if (health < healthPoints && newHealth <= 100)
			{
				SetPlayerHealth(playerid, newHealth);
			}

			SetPlayerWeather(playerid, 2009);
			SetPlayerDrunkLevel(playerid, 4000);
			format(string256, 256, "* %s взе %d грама хероин и ги използва!", GetPlayerNickname(playerid), grams);
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Наркотикът вече подейства! Той ви зареди определени точки живот!");
			PlayerTimerInfo[playerid][ptFinishDrugEffect] = 25 * grams;
			PlayerInfo[playerid][pHeroin] -= 1;
		}

		if (strcmp(result, "marijuana", true) == 0)
		{
			if (PlayerInfo[playerid][pMarijuana] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш марихуана в себе си!");

			tmp = strtok(cmdtext, idx);
			new grams;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [marijuana] [grams]");
				return 1;
			}

			grams = strval(tmp);
			if (grams < 1 || grams > 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Грамовете марихуана, които можеш да приемеш са от 1 до 10!");
				return 1;
			}

			if (PlayerInfo[playerid][pMarijuana] < grams) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова грама в себе си!");

			new Float: health;
			GetPlayerHealth(playerid, health);
			new healthPoints = grams * 8;
			new Float: newHealth;
			newHealth = health + healthPoints;
			if (newHealth > 100) return SendClientMessage(playerid, COLOR_GRAD1, "Точките ти живот са твърде много за да подейства този грамаж");
			if (health < healthPoints && newHealth <= 100)
			{
				SetPlayerHealth(playerid, newHealth);
			}

			SetPlayerWeather(playerid, 2009);
			SetPlayerDrunkLevel(playerid, 4000);
			format(string256, 256, "* %s взе %d грама марихуаната и ги използва!", GetPlayerNickname(playerid), grams);
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Наркотикът вече подейства! Той ви зареди определени точки живот!");
			PlayerTimerInfo[playerid][ptFinishDrugEffect] = 30 * grams;
			PlayerInfo[playerid][pMarijuana] -= 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/teleportjob", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/teleportjob [pizza, taxi, sweep, mechanic, bus, deliver, coalmine]");
			return 1;
		}

		if (strcmp(result, "pizza", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, PizzaJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "taxi", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, TaxiJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "sweep", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, SweepJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "mechanic", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, MechanicJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "bus", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, BusJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "deliver", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, DeliverJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "coalmine", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, CoalmineJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		return 1;
	}

	if (strcmp(cmd, "/gotols", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pPoliceJail] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в AFK!");
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Los Santos! *");
		SetPlayerPos(playerid, 1537.7205, -1691.0510, 13.5469);
		SetPlayerFacingAngle(playerid, 90.5010);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if (strcmp(cmd, "/gotolv", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pPoliceJail] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в AFK!");
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Las Venturas Airport! *");
		SetPlayerPos(playerid, 1699.6941, 1434.8165, 10.6869);
		SetPlayerFacingAngle(playerid, 272.8860);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if (strcmp(cmd, "/gotosf", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pPoliceJail] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в AFK!");
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на San Fierro Airport! *");
		SetPlayerPos(playerid, -1416.9932, -296.2564, 14.1484);
		SetPlayerFacingAngle(playerid, 132.8014);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if (strcmp(cmd, "/credits", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}Главните администратори на сървъра:\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}sTrIx{FFFFFF}: {17B7FF}Main Dev & Owner | Занимава се със скриптиране на сървъра\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FF0000}Lineblack{FFFFFF}: {17B7FF}Senior Dev & Owner | Занимава се с поддръжката на сървъра\n\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Връзка с главните администратори:\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FF0000}sTrIx{FFFFFF} Discord: {62dd49}didkoandreevofficial#5949\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FF0000}Lineblack{FFFFFF} Discord: {62dd49}Lineblack#5220\n\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Относно Gamemode, който сървъра използва:\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Модът е започнат през 2021-ва година, като бива завършен през 2022-ра година\n\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Модът е изцяло написан и създаден от {FF0000}sTrIx");
        strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF0000}Credits", string2230result, "OK", "");
		return 1;
	}

	if (strcmp(cmd, "/respawncarsvote", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (respawnVehsVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има вот за Respawn Vehs!");
		if (normalVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг вот!");
		respawnVehsVoteYES = 0;
		respawnVehsVoteNO = 0;
		new string256[256];
		format(string256, 256, "%s започна преброяване за Respawn на превозите! Използвай /vote имаш 2 минути!", accountNickname);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		respawnVehsVoteTimer = 2 * 60;
		return 1;
	}

    if(strcmp(cmd, "/vote", true) == 0)
    {
        if(respawnVehsVoteTimer == 0 && normalVoteTimer == 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма преброяване!");
        if(didVote[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си гласувал!");
        new string256[256];
        if(respawnVehsVoteTimer > 0)
        {
            format(string256, 256, "{FFFFFF}В момента има започнато гласуване и ти все още не си гласувал!\nИзползвай копчетата долу '{33AA33}ДА{FFFFFF}' и '{FF0000}НЕ{FFFFFF}', за да използваш своя глас\nВъпросът е: {00ff00}Да бъдат ли RESPAWN-нати превозните средства ?");
            ShowPlayerDialog(playerid,DIALOG_VOTE_RESPAWN,DIALOG_STYLE_MSGBOX,"{60FA00}VOTЕ:",string256,"ДА","НЕ");
            return 1;
        }
        if(normalVoteTimer > 0)
        {
            format(string256, 256, "{FFFFFF}В момента има започнато гласуване и ти все още не си гласувал!\nИзползвай копчетата долу '{33AA33}ДА{FFFFFF}' и '{FF0000}НЕ{FFFFFF}', за да използваш своя глас\nВъпросът е: {00ff00}%s", normalVoteQuestion);
            ShowPlayerDialog(playerid,DIALOG_VOTE_NORMAL,DIALOG_STYLE_MSGBOX,"{60FA00}VOTЕ:",string256,"ДА","НЕ");
        }
        return 1;
    }

	if (strcmp(cmd, "/startvote", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startvote [question]");
			return 1;
		}

		if (respawnVehsVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има вот за Respawn Vehs!");
		if (normalVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг вот!");
		normalVoteYES = 0;
		normalVoteNO = 0;
		new string256[256];
		format(string256, 256, "%s започна преброяване! Използвай /vote имаш 2 минути! *", accountNickname);
		SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
		format(string256, 256, "Въпросът от започнатото гласуване е {FF0000}%s {00ff00}*", result);
		SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
		format(normalVoteQuestion, 256, result);
		normalVoteTimer = 2 * 60;
		return 1;
	}

	if (strcmp(cmd, "/arefuelall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string256[256];
		format(string256, 256, "* Администратор %s зареди всички превози със 100 литра! *", accountNickname);
		SendClientMessageToAll(COLOR_WHITE, string256);
		for (new vehs = 0; vehs < MAX_VEHICLES; vehs++) vehFuel[vehs] = 100;
		return 1;
	}

	if (strcmp(cmd, "/rules", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}В това меню ще се запознаете със всички правила на сървъра\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Задължително е те да бъдат спазвани, в противен случай, вие ще бъдете наказан!\n\n");
		strcat(string2230result, string2230);

		format(string2230, 512, "{FFFFFF}1. Забранено е използването на всякакви хакове\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{40BF00}2. Забранени са CLEO-та, които ви помагат в играта\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}4. Забранен е CHEAT ENGINE\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}5. Забранен е SPAM-ът (повтарянето на едно и също нещо)\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{40BF00}6. Забранено е да досаждате на администраторите или да им пречите\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}7. Забранено е да /report играч, които не извършва нарушение\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}8. Забранено е да прикривате свой познат, който използва хакове\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{40BF00}9. Забранено е да сте AFK при следните ситуации:\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{40BF00}- Атака над територия\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{40BF00}- Атака над графит\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{40BF00}- По време на Job\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}10. Забранено е да използвате Job превозите за собствени цели\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}11. Забранено е псуването/обиждането на играч\n\n\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{A4A400}12. Боят или стрелянето не е забранено, но ще получите Wanted Level от полицията\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{A4A400}__________________________________________________\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{A4A400}Information About OOC and IC Chats:\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{A4A400}1. Препоръчително е IC Чатът да бъде Local, т.е. да пишете в /loc\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{A4A400}2. IC и OOC могат да се смесват\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{A4A400}3. Сървърът не е Roleplay, което означава, че твърде голямо IC действие не е препоръчително (но не и наказуемо)\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Ако забележите, че някой играч е нарушил някое правило, сигнализирайте, чрез {00FF00}/report");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Правила", string2230result, "Затвори", "");
		return 1;
	}

	if (strcmp(cmd, "/dice", true) == 0)
	{
		if (!PlayerInfo[playerid][pDice]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш зарче, което да метнеш!");
		SendClientMessage(playerid, COLOR_WHITE, "Ти метна зарчето..");
		new string256[256];
		new dice = randomex(1, 7);
		format(string256, 256, "* %s метна зарчето и се падна %d", GetPlayerNickname(playerid), dice);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/clearanimation", true) == 0)
	{
		PlayerTimerInfo[playerid][ptClearAnimation] = 1;
		return 1;
	}

	if (strcmp(cmd, "/animlist", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GREEN, "{FFAD33}.:: Анимации ::.");
		SendClientMessage(playerid, COLOR_WHITE, "{66B2FF}/fall - /fallback - /injured - /akick - /push - /lowbodypush - /handsup - /drunk - /getarrested - /laugh - /sup");
		SendClientMessage(playerid, COLOR_WHITE, "{66B2FF}/basket - /headbutt - /medic - /spray - /robman - /taichi - /lookout - /kiss - /cellin - /cellout - /crossarms - /lay");
		SendClientMessage(playerid, COLOR_WHITE, "{66B2FF}/deal - /crack - /smokeanim - /groundsit - /chat - /chat2 - /dance - /fucku - /strip - /vomit - /eat - /chairsit - /reload");
		SendClientMessage(playerid, COLOR_WHITE, "{66B2FF}/koface - /kostomach - /rollfall - /carjacked1 - /carjacked2 - /rcarjack1 - /rcarjack2 - /lcarjack1 - /lcarjack2 - /bat");
		SendClientMessage(playerid, COLOR_WHITE, "{66B2FF}/lifejump - /exhaust - /leftslap - /carlock - /hoodfrisked - /lightcig - /tapcig - /box - /lay2 - /chant - finger");
		SendClientMessage(playerid, COLOR_WHITE, "{66B2FF}/shouting - /knife - /cop - /elbow - /kneekick - /airkick - /gkick - /gpunch - /fstance - /lowthrow - /highthrow - /aim");
		SendClientMessage(playerid, COLOR_GREEN, "За да спреш анимацията напиши /clearanimation");
		return 1;
	}

	//Animations - open
	// carjacked
	if (strcmp(cmd, "/carjacked1", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_jackedLHS", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// carjacked
	if (strcmp(cmd, "/carjacked2", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_jackedRHS", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// HANDSUP
	if (strcmp(cmd, "/handsup", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		return 1;
	}

	// CELLPHONE IN
	if (strcmp(cmd, "/cellin", true) == 0)
	{
		SpecialActionWithCondition(playerid, SPECIAL_ACTION_USECELLPHONE);
		return 1;
	}

	// CELLPHONE OUT
	if (strcmp(cmd, "/cellout", true) == 0)
	{
		SpecialActionWithCondition(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		return 1;
	}

	// Drunk
	if (strcmp(cmd, "/drunk", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
		return 1;
	}

	// Place a Bomb
	// Police Arrest
	if (strcmp("/getarrested", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);	// Gun Arrest
		return 1;
	}

	// Laugh
	if (strcmp("/laugh", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);	// Laugh
		return 1;
	}

	// Rob Lookout
	if (strcmp("/lookout", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);	// Rob Lookout
		return 1;
	}

	// Rob Threat
	if (strcmp("/robman", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);	// Rob
		return 1;
	}

	// Arms crossed
	if (strcmp("/crossarms", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);	// Arms crossed
		return 1;
	}

	// Lay Down
	if (strcmp("/lay", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);	// Lay down
		return 1;
	}

	// Vomit
	if (strcmp("/vomit", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);	// Vomit BAH!
		return 1;
	}

	// Eat Burger
	if (strcmp("/eat", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);	// Eat Burger
		return 1;
	}

	// Wave
	if (strcmp("/wave", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);	// Wave
		return 1;
	}

	// Slap Ass
	if (strcmp("/slapass", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);	// Ass Slapping
		return 1;
	}

	// Dealer
	if (strcmp("/deal", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);	// Deal Drugs
		return 1;
	}

	// Crack Dieing
	if (strcmp("/crack", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);	// Dieing of Crack
		return 1;
	}

	// Smoking animations
	if (strcmp(cmd, "/smokeanim", true) == 0)
	{
		if (!strlen(cmdtext[7])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /smoke [1-4]");
		switch (cmdtext[7])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);	// male
			case '2':
				ApplyAnimationWithCondition(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);	//female
			case '3':
				ApplyAnimationWithCondition(playerid, "SMOKING", "M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0);	// standing-fucked
			case '4':
				ApplyAnimationWithCondition(playerid, "SMOKING", "M_smk_out", 4.0, 1, 0, 0, 0, 0);	// standing
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /smoke [1-4]");
		}

		return 1;
	}

	// Sit
	if (strcmp("/groundsit", cmdtext, true) == 0 || strcmp("/gro", cmdtext, true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);	// Sit
		return 1;
	}

	// Idle Chat
	if (strcmp(cmd, "/chat", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "IDLE_CHAT", 4.0, 1, 0, 0, 1, 1);
		return 1;
	}

	// Idle Chat2
	if (strcmp(cmd, "/chat2", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "MISC", "Idle_Chat_02", 4.0, 1, 0, 0, 1, 1);
		return 1;
	}

	// Fucku
	if (strcmp(cmd, "/fucku", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// TaiChi
	if (strcmp(cmd, "/taichi", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// ChairSit
	if (strcmp(cmd, "/chairsit", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "SEAT_down", 4.1, 0, 1, 1, 1, 0);
		return 1;
	}

	// Fall on the ground
	if (strcmp(cmd, "/fall", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "KO_skid_front", 4.1, 0, 1, 1, 1, 0);
		return 1;
	}

	// Fall
	if (strcmp(cmd, "/fallback", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// kiss
	if (strcmp(cmd, "/kiss", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
		return 1;
	}

	// Injujred
	if (strcmp(cmd, "/injured", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// Homie animations
	if (strcmp(cmd, "/sup", true) == 0)
	{
		if (!strlen(cmdtext[5])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /sup [1-3]");
		switch (cmdtext[5])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "GANGS", "hndshkba", 4.0, 0, 0, 0, 0, 0);
			case '2':
				ApplyAnimationWithCondition(playerid, "GANGS", "hndshkda", 4.0, 0, 0, 0, 0, 0);
			case '3':
				ApplyAnimationWithCondition(playerid, "GANGS", "hndshkfa_swt", 4.0, 0, 0, 0, 0, 0);
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /sup[1-3]");
		}

		return 1;
	}

	// Rap animations
	if (strcmp(cmd, "/rap", true) == 0)
	{
		if (!strlen(cmdtext[5])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /rap [1-4]");
		switch (cmdtext[5])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "RAPPING", "RAP_A_Loop", 4.0, 1, 0, 0, 0, 0);
			case '2':
				ApplyAnimationWithCondition(playerid, "RAPPING", "RAP_C_Loop", 4.0, 1, 0, 0, 0, 0);
			case '3':
				ApplyAnimationWithCondition(playerid, "GANGS", "prtial_gngtlkD", 4.0, 1, 0, 0, 0, 0);
			case '4':
				ApplyAnimationWithCondition(playerid, "GANGS", "prtial_gngtlkH", 4.0, 1, 0, 0, 1, 1);
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /rap [1-4]");
		}

		return 1;
	}

	// Violence animations
	if (strcmp(cmd, "/push", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "GANGS", "shake_cara", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	if (strcmp(cmd, "/akick", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "POLICE", "Door_Kick", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	if (strcmp(cmd, "/lowbodypush", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "GANGS", "shake_carSH", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Spray
	if (strcmp(cmd, "/spray", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SPRAYCAN", "spraycan_full", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Headbutt
	if (strcmp(cmd, "/headbutt", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "WAYFARER", "WF_Fwd", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Medic
	if (strcmp(cmd, "/medic", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// KO Face
	if (strcmp(cmd, "/koface", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "KO_shot_face", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// KO Stomach
	if (strcmp(cmd, "/kostomach", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "KO_shot_stom", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// Jump for your life!
	if (strcmp(cmd, "/lifejump", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "EV_dive", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// Exhausted
	if (strcmp(cmd, "/exhaust", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "IDLE_tired", 3.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// Left big slap
	if (strcmp(cmd, "/leftslap", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "BIKE_elbowL", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Big fall
	if (strcmp(cmd, "/rollfall", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "BIKE_fallR", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// Locked
	if (strcmp(cmd, "/carlock", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_doorlocked_LHS", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// carjack
	if (strcmp(cmd, "/rcarjack1", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_pulloutL_LHS", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// carjack
	if (strcmp(cmd, "/lcarjack1", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_pulloutL_RHS", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// carjack
	if (strcmp(cmd, "/rcarjack2", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_pullout_LHS", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// carjack
	if (strcmp(cmd, "/lcarjack2", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "CAR_pullout_RHS", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Hood frisked
	if (strcmp(cmd, "/hoodfrisked", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// Lighting cigarette
	if (strcmp(cmd, "/lightcig", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SMOKING", "M_smk_in", 3.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Tap cigarette
	if (strcmp(cmd, "/tapcig", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SMOKING", "M_smk_tap", 3.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Bat stance
	if (strcmp(cmd, "/bat", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "BASEBALL", "Bat_IDLE", 4.0, 1, 1, 1, 1, 0);
		return 1;
	}

	// Boxing
	if (strcmp(cmd, "/box", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "GYMNASIUM", "GYMshadowbox", 4.0, 1, 1, 1, 1, 0);
		return 1;
	}

	// Lay 2
	if (strcmp(cmd, "/lay2", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SUNBATHE", "Lay_Bac_in", 3.0, 0, 1, 1, 1, 0);
		return 1;
	}

	// Gogogo
	if (strcmp(cmd, "/chant", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "RIOT", "RIOT_CHANT", 4.0, 1, 1, 1, 1, 0);
		return 1;
	}

	// Finger
	if (strcmp(cmd, "/finger", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "RIOT", "RIOT_FUKU", 2.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Shouting
	if (strcmp(cmd, "/shouting", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "RIOT", "RIOT_shout", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// Cop stance
	if (strcmp(cmd, "/cop", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "SWORD", "sword_block", 50.0, 0, 1, 1, 1, 1);
		return 1;
	}

	// Elbow
	if (strcmp(cmd, "/elbow", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FIGHT_D", "FightD_3", 4.0, 0, 1, 1, 0, 0);
		return 1;
	}

	// Knee kick
	if (strcmp(cmd, "/kneekick", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FIGHT_D", "FightD_2", 4.0, 0, 1, 1, 0, 0);
		return 1;
	}

	// Fight stance
	if (strcmp(cmd, "/fstance", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FIGHT_D", "FightD_IDLE", 4.0, 1, 1, 1, 1, 0);
		return 1;
	}

	// Ground punch
	if (strcmp(cmd, "/gpunch", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FIGHT_B", "FightB_G", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Air kick
	if (strcmp(cmd, "/airkick", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FIGHT_C", "FightC_M", 4.0, 0, 1, 1, 0, 0);
		return 1;
	}

	// Ground kick
	if (strcmp(cmd, "/gkick", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "FIGHT_D", "FightD_G", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Low throw
	if (strcmp(cmd, "/lowthrow", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "GRENADE", "WEAPON_throwu", 3.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Ground kick
	if (strcmp(cmd, "/highthrow", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "GRENADE", "WEAPON_throw", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Deal stance
	if (strcmp(cmd, "/dealstance", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// Knife animations
	if (strcmp(cmd, "/knife", true) == 0)
	{
		if (!strlen(cmdtext[7])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /knife [1-4]");
		switch (cmdtext[7])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "KNIFE", "KILL_Knife_Ped_Damage", 4.0, 0, 1, 1, 1, 0);
			case '2':
				ApplyAnimationWithCondition(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0);
			case '3':
				ApplyAnimationWithCondition(playerid, "KNIFE", "KILL_Knife_Player", 4.0, 0, 0, 0, 0, 0);
			case '4':
				ApplyAnimationWithCondition(playerid, "KNIFE", "KILL_Partial", 4.0, 0, 1, 1, 1, 1);
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /knife [1-4]");
		}

		return 1;
	}

	// Basket-ball
	if (strcmp(cmd, "/basket", true) == 0)
	{
		if (!strlen(cmdtext[8])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /basket [1-6]");
		switch (cmdtext[8])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "BSKTBALL", "BBALL_idleloop", 4.0, 1, 0, 0, 0, 0);
			case '2':
				ApplyAnimationWithCondition(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.0, 0, 0, 0, 0, 0);
			case '3':
				ApplyAnimationWithCondition(playerid, "BSKTBALL", "BBALL_pickup", 4.0, 0, 0, 0, 0, 0);
			case '4':
				ApplyAnimationWithCondition(playerid, "BSKTBALL", "BBALL_run", 4.1, 1, 1, 1, 1, 1);
			case '5':
				ApplyAnimationWithCondition(playerid, "BSKTBALL", "BBALL_def_loop", 4.0, 1, 0, 0, 0, 0);
			case '6':
				ApplyAnimationWithCondition(playerid, "BSKTBALL", "BBALL_Dnk", 4.0, 1, 0, 0, 0, 0);
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /basket [1-6]");
		}

		return 1;
	}

	// Reloading guns
	if (strcmp(cmd, "/reload", true) == 0)
	{
		if (!strlen(cmdtext[8])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /reload [deagle/smg/ak/m4]");
		if (strcmp("deagle", cmdtext[8], true) == 0)
		{
			ApplyAnimationWithCondition(playerid, "COLT45", "colt45_reload", 4.0, 0, 0, 0, 0, 1);
		}
		else if (strcmp("smg", cmdtext[8], true) == 0 || strcmp("ak", cmdtext[8], true) == 0 || strcmp("m4", cmdtext[8], true) == 0)
		{
			ApplyAnimationWithCondition(playerid, "UZI", "UZI_reload", 4.0, 0, 0, 0, 0, 0);
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Usage: /reload [deagle/smg/ak/m4]");
		return 1;
	}

	if (strcmp(cmd, "/gwalk", true) == 0)
	{
		if (!strlen(cmdtext[6])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /gwalk [1/2]");
		new style = strval(cmdtext[6]);
		if (style == 1)
		{
			ApplyAnimationWithCondition(playerid, "PED", "WALK_gang1", 4.1, 1, 1, 1, 1, 1);
		}
		else if (style == 2)
		{
			ApplyAnimationWithCondition(playerid, "PED", "WALK_gang2", 4.1, 1, 1, 1, 1, 1);
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Usage: /gwalk [1/2]");
		return 1;
	}

	//Aiming animation
	if (strcmp(cmd, "/aim", true) == 0)
	{
		if (!strlen(cmdtext[5])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /aim [1-3]");
		switch (cmdtext[5])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "PED", "gang_gunstand", 4.0, 1, 1, 1, 1, 1);
			case '2':
				ApplyAnimationWithCondition(playerid, "PED", "Driveby_L", 4.0, 0, 1, 1, 1, 1);
			case '3':
				ApplyAnimationWithCondition(playerid, "PED", "Driveby_R", 4.0, 0, 1, 1, 1, 1);
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /aim [1-3]");
		}

		return 1;
	}

	// Leaning animation
	if (strcmp(cmd, "/lean", true) == 0)
	{
		if (!strlen(cmdtext[6])) return SendClientMessage(playerid, COLOR_GRAD2, "Usage: /lean [1-2]");
		switch (cmdtext[6])
		{
			case '1':
				ApplyAnimationWithCondition(playerid, "GANGS", "leanIDLE", 4.0, 0, 1, 1, 1, 0);
			case '2':
				ApplyAnimationWithCondition(playerid, "MISC", "Plyrlean_loop", 4.0, 0, 1, 1, 1, 0);
			default:
				SendClientMessage(playerid, COLOR_GRAD2, "Usage: /lean[1-2]");
		}

		return 1;
	}

	if (strcmp(cmd, "/run", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "PED", "sprint_civi", floatstr(cmdtext[5]), 1, 1, 1, 1, 1);
		printf("%f", floatstr(cmdtext[5]));
		return 1;
	}

	// Clear
	if (strcmp(cmd, "/clearanim", true) == 0)
	{
		//ClearAnimations(playerid);
		ApplyAnimationWithCondition(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
		return 1;
	}

	// Bed Sleep R
	if (strcmp(cmd, "/inbedright", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "INT_HOUSE", "BED_Loop_R", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// Bed Sleep L
	if (strcmp(cmd, "/inbedleft", true) == 0)
	{
		ApplyAnimationWithCondition(playerid, "INT_HOUSE", "BED_Loop_L", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	// START DANCING
	if (strcmp(cmd, "/dance", true) == 0)
	{
		// Get the dance style param
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Usage: /dance [style 1-4]");
			return 1;
		}

		new dancestyle = strval(tmp);
		if (dancestyle < 1 || dancestyle > 4)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Usage: /dance [style 1-4]");
			return 1;
		}

		if (dancestyle == 1)
		{
			SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE1);
		}
		else if (dancestyle == 2)
		{
			SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE2);
		}
		else if (dancestyle == 3)
		{
			SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE3);
		}
		else if (dancestyle == 4)
		{
			SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE4);
		}

		return 1;
	}

	//Animations - close

    if (strcmp(cmd, "/top", true) == 0)
    {
        new string2230[512];
        new string2230result[2230];
        format(string2230, 512, "{FFFFFF}TOP Killers\n");
        strcat(string2230result, string2230);
        ShowPlayerDialog(playerid, DIALOG_TOP, DIALOG_STYLE_LIST, "{FFFFFF}Класациите", string2230result, "Напред", "Затвори");
        return 1;
    }

	//
	if (strcmp(cmd, "/snow", true) == 0)
    {
		if(!christmasTime) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма как да вали сняг!");
		if(!startedSnow[playerid])
		{
			AddSnowObjects(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да спреш снега, напиши отново /snow");
		}
		else
		{
			RemoveSnowObjects(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да пуснеш снега отновно, напиши /snow");
		}
		return 1;
    }
	//

	if (strcmp(cmd, "/jlock", true) == 0)
	{
		if(rentorVeh[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си наел личен транспорт!");
		if(GetPlayerVehicleID(playerid) != vehRented[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в наетия от теб транспорт!");
		new vehID = GetPlayerVehicleID(playerid);
		if(VehicleInfo[vehID][vRentLock] == 0)
		{
			VehicleInfo[vehID][vRentLock] = 1;
			new string256[256];
			format(string256, 256, "* %s заключи вратите на наетия от него транспорт *", GetPlayerNickname(playerid));
			SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else
		{
			VehicleInfo[vehID][vRentLock] = 0;
			new string256[256];
			format(string256, 256, "* %s отключи вратите на наетия от него транспорт *", GetPlayerNickname(playerid));
			SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		return 1;
	}

	if (strcmp(cmd, "/unrent", true) == 0)
	{
		if(rentorVeh[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си наел личен транспорт!");
		UnRentPlayerVeh(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Ти освободи транспорта, който беше наел последно!");
		return 1;
	}

	if (strcmp(cmd, "/help", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}Всички Команди\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Как се играе?");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, DIALOG_HELP, DIALOG_STYLE_LIST, "{FFFFFF}Помощно меню", string2230result, "Напред", "Затвори");
		return 1;
	}

	if (strcmp(cmd, "/scriptermode", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			if (scripterMode[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вие включихте Scripter мода!");
				scripterMode[playerid] = true;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вие изключихте Scripter мода!");
				scripterMode[playerid] = false;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/toggleradio", true) == 0)
	{
		if (!PlayerInfo[playerid][pDisableCarRadio])
		{
			SendClientMessage(playerid, COLOR_RADIO, "[Radio] {FFFFFF}Вече няма да чувате радио в колата, когато то е пуснато!");
			PlayerInfo[playerid][pDisableCarRadio] = true;
			if (IsPlayerInAnyVehicle(playerid))
			{
				new hisVeh = GetPlayerVehicleID(playerid);
				if (radioveh[hisVeh] > 0)
				{
					StopAudioStreamForPlayer(playerid);
				}
			}

			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_RADIO, "[Radio] {FFFFFF}Вече ще чувате радио в колата, когато то е пуснато!");
			PlayerInfo[playerid][pDisableCarRadio] = false;
			if (IsPlayerInAnyVehicle(playerid))
			{
				new hisVeh = GetPlayerVehicleID(playerid);
				PlayAudioStreamForPlayer(playerid, radioAudioStream[radioveh[hisVeh]]);
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/togglenews", true) == 0)
	{
		if (!PlayerInfo[playerid][pDisableNews])
		{
			SendClientMessage(playerid, COLOR_NEWS, "Вие вече няма да чувате новините, когато ги съобщават.");
			PlayerInfo[playerid][pDisableNews] = true;
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_NEWS, "Вие вече ще чувате отновно новините, когато ги съобщават.");
			PlayerInfo[playerid][pDisableNews] = false;
		}

		return 1;
	}

	if (strcmp(cmd, "/unlockhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (PlayerInfo[playerid][pHouseOwnedID] == alh)
				{
					houseID = alh;
				}
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашата къща.");
		if (HouseInfo[houseID][hLocked] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази къща вече е отключена.");
			return 1;
		}

		HouseInfo[houseID][hLocked] = 0;
		SaveHouse(houseID);
		SendClientMessage(playerid, COLOR_HOUSE, "Вие отключихте къщата си!");
		new stringLock[256];
		format(stringLock, 256, "%s отключи своята къща!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/vehlock", true) == 0)
	{
		LockOrUnlockVehicle(playerid);
		return 1;
	}

	if (strcmp(cmd, "/privatevehid", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new privateVehID = VehicleInfo[vehicleid][vPrivateID];
		if (PrivateVehInfo[privateVehID][vVehID] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в лично превозно средство!");
		new string256[256];
		format(string256, 256, "Това лично превозно средство е Private Veh ID: %d", privateVehID);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		return 1;
	}

	if (strcmp(cmd, "/park", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в превозно средство.");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да запаметите превозното си средство в този Virtual World.");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да запаметите превозното си средство в този Interior.");
		if (IsPlayerInHisPrivateVeh(playerid) == 0)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в свое лично превозно средство!");
		}

		new hisVehID = PlayerInfo[playerid][pPrivateVeh][GetPlayerPrivateVehID(playerid)];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие запаметихте позицията на вашето превозно средство.");
		new string256[256];
		format(string256, 256, "* %s паркира своя личен превоз!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		new Float: VX, Float: VY, Float: VZ, Float: VA;
		GetVehiclePos(vehicleid, VX, VY, VZ);
		GetVehicleZAngle(vehicleid, VA);
		PrivateVehInfo[hisVehID][vVehX] = VX;
		PrivateVehInfo[hisVehID][vVehY] = VY;
		PrivateVehInfo[hisVehID][vVehZ] = VZ;
		PrivateVehInfo[hisVehID][vVehA] = VA;
		PrivateVehInfo[hisVehID][vParked] = 1;
		new vehColor1, vehColor2;
		GetVehicleColor(vehicleid, vehColor1, vehColor2);
		PrivateVehInfo[hisVehID][vVehC1] = vehColor1;
		PrivateVehInfo[hisVehID][vVehC2] = vehColor2;
		SavePrivateVehicle(hisVehID);
		SavePrivateVehTune(vehicleid);
		PlayerTimerInfo[playerid][ptPark] = 1;
		return 1;
	}

	if (strcmp(cmd, "/findveh", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/findveh [slot: 1-3]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3.");
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот.");
		if (isPlayerWorkingNow(playerid) == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента имате друг маркер, преминете първо през него.");
			return 1;
		}

		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		if (PrivateVehInfo[hisVehID][vParked] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вашето превозно средство не е паркирано още. Вземете си го от автосалона с /getmycar");
		SendClientMessage(playerid, COLOR_YELLOW, "Следвайте маркера за да достигнете до вашето превозно средство.");
		new Float: X, Float: Y, Float: Z;
		GetVehiclePos(vehicleid, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 4.0);
		findVehX[playerid] = X;
		findVehY[playerid] = Y;
		findVehZ[playerid] = Z;
		return 1;
	}

	if (strcmp(cmd, "/listvehs", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
			return 1;
		}

		new string256[256];
		for (new i; i < 3; i++)
		{
			new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
			new fakeSlot = (i + 1);
			if (PlayerInfo[playerid][pPrivateVeh][i] != -1)
			{
				if (IsValidPrivateVehID(hisVehID) == 0)
				{
					format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
					RemovePlayerPrivateVehInfo(playerid, i);
				}
				else if (IsValidPrivateVehID(hisVehID) == 1)
				{
					new vehicleid = PrivateVehInfo[hisVehID][vVeh];
					format(string256, 256, "[Слот %d]     {FFFFFF}Модел: %s", fakeSlot, GetVehicleName(vehicleid));
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
				}
			}
			else if (PlayerInfo[playerid][pPrivateVeh][i] == -1)
			{
				format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
				SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
			}
		}

		return 1;
	}

	//check listvehs - open
	if (strcmp(cmd, "/checkvehs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/checkvehs [playerid]");
			return 1;
		}

		new giveplayerid = ReturnUser(tmp);
		if (GetPrivateVehsNumber(giveplayerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма лични превозни средства!");
			return 1;
		}

		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerid, giveplayeridNickname, 25);
		new string256[256];
		format(string256, 256, "Личните превозни средства на {40BF00}%s", giveplayeridNickname);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		for (new i; i < 3; i++)
		{
			new hisVehID = PlayerInfo[giveplayerid][pPrivateVeh][i];
			new fakeSlot = (i + 1);
			if (PlayerInfo[giveplayerid][pPrivateVeh][i] != -1)
			{
				if (IsValidPrivateVehID(hisVehID) == 0)
				{
					format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
					RemovePlayerPrivateVehInfo(giveplayerid, i);
				}
				else if (IsValidPrivateVehID(hisVehID) == 1)
				{
					new vehicleid = PrivateVehInfo[hisVehID][vVeh];
					format(string256, 256, "[Слот %d]     {FFFFFF}Модел: %s [Private Veh ID: %d]", fakeSlot, GetVehicleName(vehicleid), hisVehID);
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
				}
			}
			else if (PlayerInfo[playerid][pPrivateVeh][i] == -1)
			{
				format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
				SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
			}
		}

		return 1;
	}

	//check listvehs - close
	//get keys - open
	if (strcmp(cmd, "/getkeys", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getkeys [playerid] [slot: 1-3]");
			return 1;
		}

		new giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getkeys [playerid] [slot: 1-3]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (giveplayerid != INVALID_PLAYER_ID)
		{
			if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3!");
			new realSlot = slot;
			realSlot -= 1;
			if (PlayerInfo[giveplayerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма превоз в този слот!");
			new string256[256];
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, giveplayeridNickname, 25);
			format(string256, 256, "Admin: Ти премахна %d слот превоз на %s!", slot, giveplayeridNickname);
			SendClientMessage(giveplayerid, COLOR_PRIVATEVEH, string256);
			format(string256, 256, "Admin: %s премахна твоя личен превоз от слот %d завинаги!", accountNickname, slot);
			SendClientMessage(giveplayerid, COLOR_PRIVATEVEH, string256);
			new hisVehID = PlayerInfo[giveplayerid][pPrivateVeh][realSlot];
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			DestroyVehicle(vehicleid);
			PrivateVehInfo[hisVehID][vVehID] = 0;
			format(string256, 256, "/PrivateVehs/%d.ini", hisVehID);
			dini_Remove(string256);
			PlayerInfo[giveplayerid][pPrivateVeh][realSlot] = -1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		}

		return 1;
	}

	//get keys - close
	if (strcmp(cmd, "/destroymycar", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
			return 1;
		}

		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да премахнете превоза си в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да премахнете превоза си в този Interior!");
		if (!IsPlayerInRangeOfPoint(playerid, 23, 1796.0702, -1922.7603, 13.3912))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до главния гараж!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroymycar [slot: 1-3] [confirm]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3!");
		//confirm open
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroymycar [slot: 1-3] [confirm]");
			SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен, че искаш да унищожиш превоза си, използвай /destroymycar[slot: 1-3] [confirm]");
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroymycar [slot: 1-3] [confirm]");
			SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен, че искаш да унищожиш превоза си, използвай /destroymycar[slot: 1-3] [confirm]");
			return 1;
		}

		//confirm close
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот!");
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие премахнахте вашето превозно средство завинаги!");
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		DestroyVehicle(vehicleid);
		PrivateVehInfo[hisVehID][vVehID] = 0;
		new string256[256];
		format(string256, 256, "/PrivateVehs/%d.ini", hisVehID);
		dini_Remove(string256);
		RestartPrivateTuneInfo(hisVehID);
		PlayerInfo[playerid][pPrivateVeh][realSlot] = -1;
		return 1;
	}

	if (strcmp(cmd, "/getmycar", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
			return 1;
		}

		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното си средство в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното си средство в този Interior!");
		if (!NearParking(playerid) && NearFactionParking(playerid) == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до автосалон или главен гараж!");
			return 1;
		}

		if (NearFactionParking(playerid) != -1)
		{
			new parkingFaction = NearFactionParking(playerid);
			if (PlayerInfo[playerid][pFaction] != parkingFaction)
			{
				new string256[256];
				format(string256, 256, "Не можеш да използваш паркинга на %s!", FactionInfo[parkingFaction][fName]);
				SendClientMessage(playerid, COLOR_GRAD1, string256);
				return 1;
			}
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getmycar [slot: 1-3]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3.");
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот!");
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];

		if (IsValidPrivateVehID(hisVehID) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство е унищожено от база данните!");
			RemovePlayerPrivateVehInfo(playerid, realSlot);
			return 1;
		}

		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие пуснахте превозното си средство! Използвайте /park за да го паркирате!");
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetVehiclePos(vehicleid, X, Y, Z);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		return 1;
	}

	if (strcmp(cmd, "/lockhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (PlayerInfo[playerid][pHouseOwnedID] == alh)
				{
					houseID = alh;
				}
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашата къща.");
		if (HouseInfo[houseID][hLocked] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази къща вече е заключена.");
			return 1;
		}

		HouseInfo[houseID][hLocked] = 1;
		SaveHouse(houseID);
		SendClientMessage(playerid, COLOR_HOUSE, "Вие заключихте къщата си!");
		new stringLock[256];
		format(stringLock, 256, "%s заключи своята къща!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/lockbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес!");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (PlayerInfo[playerid][pBizOwnedID] == alb)
				{
					bizID = alb;
				}
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашия бизнес!");
		if (BizInfo[bizID][bLocked] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес вече е залючен!");
			return 1;
		}

		BizInfo[bizID][bLocked] = 1;
		SaveBiz(bizID);
		SendClientMessage(playerid, COLOR_BIZ, "Вие заключихте бизнеса си!");
		new stringLock[256];
		format(stringLock, 256, "%s заключи своя бизнес!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/unlockbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес!");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (PlayerInfo[playerid][pBizOwnedID] == alb)
				{
					bizID = alb;
				}
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашия бизнес!");
		if (BizInfo[bizID][bLocked] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес вече е отключен!");
			return 1;
		}

		BizInfo[bizID][bLocked] = 0;
		SaveBiz(bizID);
		SendClientMessage(playerid, COLOR_BIZ, "Вие отключихте бизнеса си!");
		new stringLock[256];
		format(stringLock, 256, "%s отключи своя бизнес!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/rbarricade", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_RCPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_KACC &&
			PlayerInfo[playerid][pFaction] != FACTION_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш барикади, която да махнеш!");
			return 1;
		}

		new string2230[512];
		new string2230result[2230];
		for (new i = 0; i < 20; i++)
		{
			new slotID = i + 1;
			if (policeBarricade[playerid][i] == -1)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {40BF00}[Празен]\n", slotID);
				strcat(string2230result, string2230);
			}
			else if (policeBarricade[playerid][i] != -1)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {FF0000}[Използван]\n", slotID);
				strcat(string2230result, string2230);
			}
		}

		strcat(string2230result, "{FF0000}Махни всички барикади");
		ShowPlayerDialog(playerid, DIALOG_REM_BARRICADE, DIALOG_STYLE_LIST, "Remove Barricade:", string2230result, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/barricade", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_RCPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_KACC &&
			PlayerInfo[playerid][pFaction] != FACTION_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш барикади, която да добавиш!");
			return 1;
		}

		OpenBarricadeItems(playerid);
		return 1;
	}

	if (strcmp(cmd, "/siren", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_RCPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_KACC &&
			PlayerInfo[playerid][pFaction] != FACTION_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш сирена, която да добавиш!");
			return 1;
		}

		if (policeSiren[playerid] != -1)
		{
			RemovePlayerSiren(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "*Ти премахна сирената от превоза си! *");
			new string256[256];
			format(string256, 256, "%s премахна сирената от превоза си!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (policeSiren[playerid] == -1)
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
			SendClientMessage(playerid, COLOR_WHITE, "* Ти добави сирена към превоза си, намести я! *");
			new string256[256];
			format(string256, 256, "%s добави сирена към превоза си!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			policeSiren[playerid] = CreateDynamicObject(18646, X, Y, Z, 0, 0, 0);
			isSirenObject[policeSiren[playerid]] = true;
			EditDynamicObject(playerid, policeSiren[playerid]);
		}

		return 1;
	}

	if (strcmp(cmd, "/creategraffiti", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш графит във Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш графит в Interior!");
		SendClientMessage(playerid, COLOR_GRAFFITS, "Ти създаде нов графит! Сега трябва да го наместиш!");
		new gangColor = FactionInfo[FACTION_CIVILIAN][fGrColor];
		new gangName[80];
		format(gangName, 80, "%s", getFactionName(FACTION_CIVILIAN));
		new graffiti[64];
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		maxGraffiti += 1;
		format(graffiti, 64, "/Graffiti/%d.ini", maxGraffiti);
		if (!dini_Exists(graffiti))
		{
			dini_Create(graffiti);
			dini_FloatSet(graffiti, "gX", X);
			dini_FloatSet(graffiti, "gY", Y);
			dini_FloatSet(graffiti, "gZ", Z);
			dini_FloatSet(graffiti, "gXY", 0);
			dini_FloatSet(graffiti, "gYY", 0);
			dini_FloatSet(graffiti, "gZY", 0);
			dini_IntSet(graffiti, "GraffitiOwner", FACTION_CIVILIAN);
		}

		GraffitiInfo[maxGraffiti][gX] = X;
		GraffitiInfo[maxGraffiti][gY] = Y;
		GraffitiInfo[maxGraffiti][gZ] = Z;
		GraffitiInfo[maxGraffiti][gXY] = 0;
		GraffitiInfo[maxGraffiti][gYY] = 0;
		GraffitiInfo[maxGraffiti][gZY] = 0;
		GraffitiInfo[maxGraffiti][gObjectID] = CreateDynamicObject(19482, X, Y, Z, 0.0, 0.0, 0.0, 0);
		EditDynamicObject(playerid, GraffitiInfo[maxGraffiti][gObjectID]);
		SetDynamicObjectMaterialText(GraffitiInfo[maxGraffiti][gObjectID], 0, gangName, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, gangColor, 0, 1);
		CreateDynamicMapIconEx(GraffitiInfo[maxGraffiti][gX], GraffitiInfo[maxGraffiti][gY], GraffitiInfo[maxGraffiti][gZ], 53, 0, MAPICON_LOCAL, 145.0);

		new grObjectID = GraffitiInfo[maxGraffiti][gObjectID];
		isGraffitiObject[grObjectID] = true;
		graffitiSpecialIndex[grObjectID] = maxGraffiti;
		return 1;
	}

	if (strcmp(cmd, "/furnitures", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща!");
		if (!IsPlayerInHisHouse(playerid) && !IsPlayerNearHisHouse(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си вътре в къщата си или близо до нея!");

		new string2230[512];
		new string2230result[2230];
		new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
		for (new i; i < MAX_HOUSE_FURNITURES; i++)
		{
			new isSetObject = HouseInfo[hisHouse][hFurSlot][i];
			new isSetString[50];
			if (isSetObject == 0)
			{
				format(isSetString, 50, "{00FF00}Свободен");
			}
			else if (isSetObject == 1)
			{
				format(isSetString, 50, "{FF0000}Зает | Промени/Премахни");
			}

			new realSlot = i;
			realSlot += 1;
			format(string2230, 512, "{FFFFFF}Слот {40BF00}[%d] {FFFFFF}- %s\n", realSlot, isSetString);
			strcat(string2230result, string2230);
		}

		ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_SLOT, DIALOG_STYLE_LIST, "{EBEBEB}House furnitures:", string2230result, "Напред", "Затвори");
		return 1;
	}

	if (strcmp(cmd, "/sellhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (PlayerInfo[playerid][pHouseOwnedID] == alh)
				{
					houseID = alh;
				}
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до къща ви.");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellhouse [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурен ли сте, че искате да продадете къщата си за $%d ?", HouseInfo[houseID][hPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellhouse [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурен ли сте, че искате да продадете къщата си за $%d ?", HouseInfo[houseID][hPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pHouseOwnedID] = -1;
		format(HouseInfo[houseID][hOwnerName], 256, "None");
		HouseInfo[houseID][hOwner] = 0;
		GivePlayerCash(playerid, HouseInfo[houseID][hPrice] / 2);
		format(string256, 256, "Вие продадохте къщата си на стойност $%d", HouseInfo[houseID][hPrice] / 2);
		SendClientMessage(playerid, COLOR_HOUSE, string256);
		if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN) SetToFactionSpawnWithText(playerid);
		SaveHouse(houseID);
		UpdateHouse3DText(houseID);
		return 1;
	}

	if (strcmp(cmd, "/earnings", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		new hisBiz = PlayerInfo[playerid][pBizOwnedID];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[hisBiz][bX], BizInfo[hisBiz][bY], BizInfo[hisBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		if (BizInfo[hisBiz][bEarnings] == 0) return SendClientMessage(playerid, 0xB4B5B7FF, "Твоят бизнес няма изкарани пари все още!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/earnings [confirm]");
			format(stringResult, 256, "Earnings:{FFFFFF} Сигурен ли сте, че искате да вземете {40BF00}$%d {FFFFFF}от бизнеса ви?", BizInfo[hisBiz][bEarnings]);
			SendClientMessage(playerid, COLOR_BIZ, stringResult);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/earnings [confirm]");
			format(stringResult, 256, "Earnings:{FFFFFF} Сигурен ли сте, че искате да вземете {40BF00}$%d {FFFFFF}от бизнеса ви?", BizInfo[hisBiz][bEarnings]);
			SendClientMessage(playerid, COLOR_BIZ, stringResult);
			return 1;
		}

		new string256[256];
		format(string256, 256, "Вие взехте {40BF00}$%d {FFFFFF}от печалбата на бизнеса ви!");
		SendClientMessage(playerid, COLOR_WHITE, string256);
		GivePlayerCash(playerid, BizInfo[hisBiz][bEarnings]);
		BizInfo[hisBiz][bEarnings] = 0;
		return 1;
	}

	if (strcmp(cmd, "/checkstock", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		new hisBiz = PlayerInfo[playerid][pBizOwnedID];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[hisBiz][bX], BizInfo[hisBiz][bY], BizInfo[hisBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		if (BizInfo[hisBiz][bFee] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят бизнес няма нужда от стока!");
		new string256[256];
		format(string256, 256, "Бизнесът ти има {40BF00}%d {FFFFFF}броя стоки! За да бъде напълно зареден трябват {FFFF00}60 стоки!", BizInfo[hisBiz][bStock]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/buystock", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buystock [брой стока]");
			return 1;
		}

		new bizStock = strval(tmp);
		new playersBiz = PlayerInfo[playerid][pBizOwnedID];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[playersBiz][bX], BizInfo[playersBiz][bY], BizInfo[playersBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		if (bizStock < 1) return SendClientMessage(playerid, 0xB4B5B7FF, "Стоката не може да е под 1 бр.!");
		new oldStock = BizInfo[playersBiz][bStock];
		if (oldStock >= 60) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът ти има достатъчно стока!");
		new string256[256];
		new maximumStock = 60 - oldStock;
		new stockPrice = bizStock * 400;
		format(string256, 256, "Можеш да купиш максимум %d бр. стока", maximumStock);
		if (oldStock + bizStock > 60) return SendClientMessage(playerid, COLOR_GRAD1, string256);
		format(string256, 256, "Нямаш достатъчно пари! Цената за %d бр. стока е $%d", bizStock, stockPrice);
		if (PlayerInfo[playerid][pCash] < stockPrice) return SendClientMessage(playerid, COLOR_GRAD1, string256);
		format(string256, 256, "Вие купихте {40BF00}%d {ffffff}броя стока за бизнеса на цена {ff0000}$%d{ffffff}!", bizStock, stockPrice);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		BizInfo[playersBiz][bStock] += bizStock;
		GivePlayerCash(playerid, stockPrice);
		SaveBiz(playersBiz);
		return 1;
	}

	if (strcmp(cmd, "/fee", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fee [входна такса]");
			return 1;
		}

		new fee = strval(tmp);
		new playersBiz = PlayerInfo[playerid][pBizOwnedID];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[playersBiz][bX], BizInfo[playersBiz][bY], BizInfo[playersBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		if (fee < 1 || fee > 5) return SendClientMessage(playerid, 0xB4B5B7FF, "Цената на входа трябва да бъде между $1 и $5!");
		new string256[256];
		format(string256, 256, "Вие сложихте входната такса на бизнеса ви да е {40BF00}$%d", fee);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		BizInfo[playersBiz][bFee] = fee;
		UpdateBiz3DText(playersBiz);
		SaveBiz(playersBiz);
		return 1;
	}

	if (strcmp(cmd, "/sellbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес.");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (PlayerInfo[playerid][pBizOwnedID] == alb)
				{
					bizID = alb;
				}
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до бизнеса ви.");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellbiz [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурен ли сте, че искате да продадете бизнеса си за $%d ?", BizInfo[bizID][bPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellbiz [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурен ли сте, че искате да продадете бизнеса си за $%d ?", BizInfo[bizID][bPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pBizOwnedID] = -1;
		format(BizInfo[bizID][bOwnerName], 256, "None");
		BizInfo[bizID][bOwner] = 0;
		GivePlayerCash(playerid, BizInfo[bizID][bPrice] / 2);
		format(string256, 256, "Вие продадохте бизнеса си на стойност $%d", BizInfo[bizID][bPrice] / 2);
		SendClientMessage(playerid, COLOR_BIZ, string256);
		if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN) SetToFactionSpawnWithText(playerid);
		SaveBiz(bizID);
		UpdateBiz3DText(bizID);
		return 1;
	}

	if (strcmp(cmd, "/buybiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizOwnedID] > -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие вече притежавате бизнес!");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				bizID = alb;
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до бизнес!");
		if (BizInfo[bizID][bOwner] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес вече има притежател!");
			return 1;
		}

		if (BizInfo[bizID][bLevel] > PlayerInfo[playerid][pLevel])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво за бизнеса!");
			return 1;
		}

		if (BizInfo[bizID][bPrice] > PlayerInfo[playerid][pCash])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за този бизнес!");
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pBizOwnedID] = bizID;
		GetPlayerName(playerid, accountNickname, 25);
		format(BizInfo[bizID][bOwnerName], 256, "%s", accountNickname);
		BizInfo[bizID][bOwner] = 1;
		SaveBiz(bizID);
		GivePlayerCash(playerid, -BizInfo[bizID][bPrice]);
		format(string256, 256, "*** Поздравления, ти си купи бизнес за $%d ***", BizInfo[bizID][bPrice]);
		SendClientMessage(playerid, COLOR_BIZ, string256);
        SendClientMessage(playerid, COLOR_WHITE, "Използвай /help за да видиш командите за твоя бизнес");
		if (!IsAchieved(playerid, ACHIEVEMENT_BUYBIZ))
        {
            GivePlayerAchievement(playerid, ACHIEVEMENT_BUYBIZ);
        }
		UpdateBiz3DText(bizID);
		return 1;
	}

    if (strcmp(cmd, "/bizhelp", true) == 0)
    {
        if(PlayerInfo[playerid][pBizOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес!");
        SendClientMessage(playerid, COLOR_BIZ, "Команди: /psellbiz /sellbiz /fee /earnings");
        SendClientMessage(playerid, COLOR_BIZ, "Команди: /lockbiz /unlockbiz /checkstock /buystock");
        return 1;
    }

    if (strcmp(cmd, "/househelp", true) == 0)
    {
        if(PlayerInfo[playerid][pHouseOwnedID] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
        SendClientMessage(playerid, COLOR_HOUSE, "Команди: /psellhouse /sellhouse /getarmour /furnitures");
        SendClientMessage(playerid, COLOR_HOUSE, "Команди: /lockhouse /unlockhouse");
        return 1;
    }

	if (strcmp(cmd, "/buyhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseOwnedID] > -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие вече притежавате къща!");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				houseID = alh;
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до къща!");
		if (HouseInfo[houseID][hOwner] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази къща вече има притежател!");
			return 1;
		}

		if (HouseInfo[houseID][hLevel] > PlayerInfo[playerid][pLevel])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво за къщата!");
			return 1;
		}

		if (HouseInfo[houseID][hPrice] > PlayerInfo[playerid][pCash])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази къща!");
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pHouseOwnedID] = houseID;
		format(HouseInfo[houseID][hOwnerName], 256, "%s", accountNickname);
		HouseInfo[houseID][hOwner] = 1;
		GivePlayerCash(playerid, -HouseInfo[houseID][hPrice]);
		format(string256, 256, "*** Честито, ти си купи къща са $%d ***", HouseInfo[houseID][hPrice]);
		SendClientMessage(playerid, COLOR_HOUSE, string256);
        SendClientMessage(playerid, COLOR_WHITE, "Използвай /househelp за да видиш командите за твоята къща");
		SaveHouse(houseID);
		if (!IsAchieved(playerid, ACHIEVEMENT_BUYHOUSE))
        {
            GivePlayerAchievement(playerid, ACHIEVEMENT_BUYHOUSE);
        }
		UpdateHouse3DText(houseID);
		return 1;
	}

	if (strcmp(cmd, "/bosses", true) == 0)
	{
		new leadersOnline, jobName[256];
		new string512[512];
		new string2230result[2230];
		new leaderNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "Job:\t Шеф:\t Статус:\n");
		new bool: onlineJobLeader[MAX_JOBS] = false;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pJobBoss])
				{
					leadersOnline++;
					GetPlayerName(i, leaderNickname, 25);
					format(jobName, 256, "%s", JobInfo[PlayerInfo[i][pJob]][jName]);
					new leaderStatus[25];
					switch (PlayerInfo[i][pAFK])
					{
						case 0:
							format(leaderStatus, 25, "{40BF00}Online");
						case 1:
							format(leaderStatus, 25, "{CAE7F6}Away From Keyboard");
					}

					format(string512, 512, "{33CCFF}%s\t {FFFFFF}%s\t %s\n", jobName, leaderNickname, leaderStatus);
					strcat(string2230result, string512, 2230);
					onlineJobLeader[PlayerInfo[i][pJob]] = true;
				}
			}
		}

		for (new i = 0; i < MAX_JOBS; i++)
		{
			if (i != JOB_NO)
			{
				if (onlineJobLeader[i] == false)
				{
					format(jobName, 256, "%s", JobInfo[i][jName]);
					format(string512, 512, "{33CCFF}%s\t {FFFFFF}No Boss Online\t {FF0000}Offline\n", jobName);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Онлайн шефове на Jobs", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/leaders", true) == 0)
	{
		new leadersOnline, gangName[256];
		new string512[512];
		new string2230result[2230];
		new leaderNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "Организация:\t Лидер:\t Статус:\n");
		new bool: onlineFactionLeader[MAX_FACTIONS] = false;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pRank] == 6)
				{
					leadersOnline++;
					GetPlayerName(i, leaderNickname, 25);
					format(gangName, 256, "%s", FactionInfo[PlayerInfo[i][pFaction]][fName]);
					new leaderStatus[25];
					switch (PlayerInfo[i][pAFK])
					{
						case 0:
							format(leaderStatus, 25, "{40BF00}Online");
						case 1:
							format(leaderStatus, 25, "{CAE7F6}Away From Keyboard");
					}

					format(string512, 512, "{33CCFF}%s\t {FFFFFF}%s\t %s\n", gangName, leaderNickname, leaderStatus);
					strcat(string2230result, string512, 2230);
					onlineFactionLeader[PlayerInfo[i][pFaction]] = true;
				}

				if (PlayerInfo[i][pRank] == 5)
				{
					leadersOnline++;
					GetPlayerName(i, leaderNickname, 25);
					format(gangName, 256, "%s", FactionInfo[PlayerInfo[i][pFaction]][fName]);
					new leaderStatus[25];
					switch (PlayerInfo[i][pAFK])
					{
						case 0:
							format(leaderStatus, 25, "{40BF00}Online");
						case 1:
							format(leaderStatus, 25, "{CAE7F6}Away From Keyboard");
					}

					format(string512, 512, "{33CCFF}Co-Leader: %s\t {FFFFFF}%s\t %s\n", gangName, leaderNickname, leaderStatus);
					strcat(string2230result, string512, 2230);
					onlineFactionLeader[PlayerInfo[i][pFaction]] = true;
				}
			}
		}

		for (new i = 0; i < MAX_FACTIONS; i++)
		{
			if (i != FACTION_CIVILIAN)
			{
				if (onlineFactionLeader[i] == false)
				{
					format(gangName, 256, "%s", FactionInfo[i][fName]);
					format(string512, 512, "{33CCFF}%s\t {FFFFFF}No Leader Online\t {FF0000}Offline\n", gangName);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Онлайн лидери на организации", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/employees", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си нает никъде на работа!");
		new bool: isBoss;
		new string512[512];
		new string2230result[2230];
		format(string2230result, 2230, "");
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction])
				{
					if (PlayerInfo[i][pJobBoss])
						isBoss = true;
					if (isBoss == true)
					{
						format(string512, 512, "{FFFFFF}• {33CCFF}%s [ID: %d] {FFFFFF}е {40BF00}шеф на фирмата\n", GetPlayerNickname(i), i);
					}
					else
					{
						format(string512, 512, "{FFFFFF}• {33CCFF}%s [ID: %d] {FFFFFF}е {40BF00}служител във фирмата\n", GetPlayerNickname(i), i);
					}

					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{ffffff}Онлайн членове", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/members", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си член на никой Faction!");
		new rankName[256];
		new string512[512];
		new string2230result[2230];
		new memberNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "Nickname:\t ID:\t Rank:\n");
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction])
				{
					GetPlayerName(i, memberNickname, 25);
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							format(rankName, 64, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName1]);
						case 2:
							format(rankName, 64, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName2]);
						case 3:
							format(rankName, 64, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName3]);
						case 4:
							format(rankName, 64, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName4]);
						case 5:
							format(rankName, 64, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName5]);
						case 6:
							format(rankName, 64, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName6]);
					}

					format(string512, 512, "{FFFFFF}%s\t(ID: %d)\t%s(%d)\n", memberNickname, i, rankName, PlayerInfo[i][pRank]);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Online Faction Members", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/suspects", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD
			&& PlayerInfo[playerid][pFaction] != FACTION_RCPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на полицията!");
		new suspectsOnline;
		new string256[256];
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pWantedLevel] >= 1)
				{
					suspectsOnline++;
					if (suspectsOnline == 1)
					{
						SendClientMessage(playerid, COLOR_POLICE_2, "{ff0000}Police Device: Онлайн заподозрени:");
						SendClientMessage(playerid, COLOR_POLICE_2, "{ff0000}__________________________________________________________");
					}

					format(string256, 256, "(%d): Име на издирвания: %s | Ниво на издирване: %d", suspectsOnline, GetPlayerNickname(i), PlayerInfo[i][pWantedLevel]);
					SendClientMessage(playerid, COLOR_POLICE_2, string256);
				}
			}
		}

		if (suspectsOnline == 0)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "Police Device: Няма онлайн заподозрени в момента!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "{ff0000}__________________________________________________________");
		}

		return 1;
	}

    if (strcmp(cmd, "/vipusers", true) == 0)
    {
        new vipsOnline = 0;
        new string512[512];
        new string2230result[2230];
        for (new i = 0; i < MAX_PLAYERS; i++)
        {
            if (IsPlayerConnected(i))
            {
                if (PlayerInfo[i][pVip] >= 1)
                {
                    vipsOnline++;
                    lastVipUsersID[playerid] = i;
                    format(string512, 512, "{00ff00}%d{ffffff}. %s (ID: %d) - V.I.P. Level: {FF3737}%d\n", vipsOnline, GetPlayerNickname(i), i, PlayerInfo[i][pVip]);
                    strcat(string2230result, string512, 2230);
                }
            }
        }
        if (vipsOnline == 0)
        {
            format(string512, 512, "{ffffff}Няма онлайн V.I.P. играчи в сървъра!");
            ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF3737}V.I.P. Players Online", string512, "Затвори", "");
        }
        else if (vipsOnline > 0  && vipsOnline < 20)
        { 
            ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF3737}V.I.P. Players Online", string2230result, "Затвори", "");
        }
        else if (vipsOnline > 20)
        {
            ShowPlayerDialog(playerid, DIALOG_MORE_VIPS, DIALOG_STYLE_MSGBOX, "{FF3737}V.I.P. Players Online", string2230result, "Още", "Затвори");
        }
        return 1;
    }

	if (strcmp(cmd, "/admins", true) == 0)
	{
		new status[25];
		new adminsOnline;
		new string512[512];
		new string2230result[2230];
		new adminNickname[MAX_PLAYER_NAME];
		format(string512, 512, "Играч\tНиво\tСтатус\n");
		strcat(string2230result, string512);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pAdmin] >= 1)
				{
					switch (PlayerInfo[i][pAdminDuty])
					{
						case 0:
							format(status, 25, "{FF0000}Off Duty");
						case 1:
							format(status, 25, "{339933}• On Duty");
					}
                    new adminLevel = PlayerInfo[i][pAdmin];
					if (PlayerInfo[i][pAFK]) format(status, 25, "{CAE7F6}AFK");
					adminsOnline++;
					GetPlayerName(i, adminNickname, 25);
					format(string512, 512, "{FFFFFF}%s (ID: %d)\t %s\t %s\n", adminNickname, i, GetAdminLevelName(adminLevel), status);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		if (adminsOnline > 0)
		{
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{40BF00}Онлайн администратори:", string2230result, "Излез", "");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Няма онлайн администратори в момента.");
		}

		return 1;
	}

	if (strcmp(cmd, "/payfine", true) == 0)
	{
		if (!IsPlayerInRangeOfPoint(playerid, 3.0, 1560.4720, -1672.3912, 2113.0349)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в Los Santos Police управлението до касата!");
		if (PlayerInfo[playerid][pFine] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате глоби за плащане!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		new string256[256];
		new playerFine = PlayerInfo[playerid][pFine] + (PlayerInfo[playerid][pWantedLevel] *2000);
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/payfine [confirm]");
			format(string256, 256, "Управление:{FFFFFF} Вашата глоба е $%d. Потвърдете дали искате да я платите!", playerFine);
			SendClientMessage(playerid, COLOR_POLICE_2, string256);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/payfine [confirm]");
			format(string256, 256, "Управление:{FFFFFF} Вашата глоба е $%d. Потвърдете дали искате да я платите!", playerFine);
			SendClientMessage(playerid, COLOR_POLICE_2, string256);
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < playerFine) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да си платите глобите!");
		GivePlayerCash(playerid, -playerFine);
		format(string256, 256, "Вие си платихте глобите за $%d!", playerFine);
		SendClientMessage(playerid, COLOR_POLICE_2, string256);
		PlayerInfo[playerid][pFine] = 0;
		if (PlayerInfo[playerid][pWantedLevel] < 4)
		{
			GetPlayerAllWanted(playerid);
		}

		return 1;
	}

	if (strcmp(cmd, "/fine", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD
			|| PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
				return 1;
			}

			new finePrice;
			finePrice = strval(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
					return 1;
				}

				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да глобите себе си.");
				if (!PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда!");
				if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек!");
				if (finePrice < 1 || finePrice > 1500) return SendClientMessage(playerid, COLOR_GRAD1, "Глобата може да бъде между $1 и $1500!");
				new string256[256];
				PlayerInfo[giveplayerID][pFine] += finePrice;
				format(string256, 256, "%s сложи глоба на %s [Причина: %s]", accountNickname, giveplayeridNickname, result);
				SendLocalMessage(5.5, playerid, COLOR_POLICE_2, string256);
				format(string256, 256, "Вие сложихте глоба на %s на стойност $%d. Той трябва да отиде до управлението за да плати.", giveplayeridNickname, finePrice);
				SendClientMessage(playerid, COLOR_POLICE_2, string256);
				format(string256, 256, "Вие имате глоба от полицай на стойност $%d. Отидете до управлението за да платите.", finePrice);
				SendClientMessage(giveplayerID, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/drunktest", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD
			|| PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/drunktest [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да проверите себе си.");
				if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек!");
				new string256[256];
				new isDrunk[25];
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				if (GetPlayerDrunkLevel(giveplayerID) >= 3000)
				{
					format(isDrunk, 25, "Положителен");
				}
				else
				{
					format(isDrunk, 25, "Отрицателен");
				}

				format(string256, 256, "%s прави проверка за алкохол на %s ... Резултатите са готови: %s", accountNickname, giveplayeridNickname, isDrunk);
				SendLocalMessage(5.5, playerid, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unwanted", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD
			|| PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwanted [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете себе си за издирване.");
				if (PlayerInfo[giveplayerID][pWantedLevel] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този човек няма нива на издирване.");
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да премахнете себе си от издирване.");
				new string256[256];
				GetPlayerAllWanted(giveplayerID);
				format(string256, 256, "[UNWANTED] %s премахна издирването на %s", accountNickname, giveplayeridNickname);
				SendPolicePlayersMessage(COLOR_POLICE_2, string256);
				format(string256, 256, "[UNWANTED] Вашето издирване беше прекратено, вече можете да бъдете спокоен.");
				SendClientMessage(giveplayerID, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/wanted", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD
			|| PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/wanted [ID на играч] [причина]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/wanted [ID на играч] [причина]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/wanted [ID на играч] [причина]");
					return 1;
				}

				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете себе си за издирване!");
				if (PlayerInfo[giveplayerID][pWantedLevel] >= 2 && PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 3-ти ранг за да дадеш над Wanted Level 2 на играч!");
				new string256[256];
				GivePlayerWanted(giveplayerID, 1);
				format(string256, 256, "{ff0000}[SUSPECT] {0040FF}%s пусна %s за издирване. Ниво на издирване: %d[Reason: %s]", accountNickname, giveplayeridNickname, PlayerInfo[giveplayerID][pWantedLevel], result);
				SendPolicePlayersMessage(COLOR_POLICE_2, string256);
				format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте пуснат за издирване от %s.[Reason: %s]", GetPlayerNickname(playerid), result);
				SendClientMessage(giveplayerID, COLOR_LIGHTRED, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/warning", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD
			|| PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warning [ID на играч] [предупреждение]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warning [ID на играч] [предупреждение]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warning [ID на играч] [предупреждение]");
					return 1;
				}

				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да предупредите себе си.");
				if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек!");
				new string256[256];
				format(string256, 256, "%s was warned by %s [Reason: %s]", giveplayeridNickname, accountNickname, result);
				SendLocalMessage(5.5, playerid, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/arrest", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/arrest [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD
			&& PlayerInfo[playerid][pFaction] != FACTION_RCPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда.");
		if (!PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда!");
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да арестувате себе си!");
		if (!CorDetector(9.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек!");
		if (GetPlayerSpecialAction(giveplayerID) != SPECIAL_ACTION_CUFFED) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е закопчан с белезници.");
		if (!IsPlayerInRangeOfPoint(playerid, 8.0, 1578.2095, -1636.5558, 13.5550) && !IsPlayerInRangeOfPoint(playerid, 8.0, 2337.2117, 2459.1912, 14.9742)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до мястото за арест!");
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		new string256[256];
		ClearAnimations(giveplayerID);
		PlayerInfo[giveplayerID][pPoliceJail] = JailTimeByWanted(PlayerInfo[giveplayerID][pWantedLevel]);
		SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_CUFFED);
		SetPlayerPos(giveplayerID, 1579.2612, -1677.0515, 2982.2800);
		SetPlayerInterior(giveplayerID, 6);
		SetPlayerVirtualWorld(giveplayerID, 1);
		FreezeAntiDropOnSpawn(giveplayerID);
		GetPlayerAllGuns(giveplayerID);
		format(string256, 256, "{ff0000}[WASTED] {0040FF}Вие бяхте подложен на арест за %d минути!", JailTimeByWanted(PlayerInfo[giveplayerID][pWantedLevel]) / 60);
		SendClientMessage(giveplayerID, COLOR_POLICE_2, string256);
		if (PlayerInfo[playerid][pFine] > 0)
		{
			format(string256, 256, "Вие бяхте хванат с глоби, заради това те бяха изплатени! Вие изгубихте {ff0000}$%d{ffffff}!", PlayerInfo[playerid][pFine]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			GivePlayerCash(playerid, -PlayerInfo[playerid][pFine]);
		}

		GetPlayerAllWanted(giveplayerID);
		PlayerInfo[giveplayerID][pFine] = 0;
		return 1;
	}

	if (strcmp(cmd, "/uncuff", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/uncuff [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD
			&& PlayerInfo[playerid][pFaction] != FACTION_RCPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда.");
		if (!PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда!");
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да откопчеете себе си!");
		if (!CorDetector(2.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек!");
		if (!IsCuffed(giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е закопчан с белезници!");
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		new string256[256];
		RemovePlayerAttachedObject(giveplayerID, 0);
		SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_NONE);
		format(string256, 256, "* %s извади ключа за белезниците си и отключи белезниците на %s", accountNickname, giveplayeridNickname);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/cuff", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/cuff [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD
			&& PlayerInfo[playerid][pFaction] != FACTION_RCPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда.");
		if (!PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда!");
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да закопчеете себе си с белезници!");
		if (!CorDetector(2.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек!");
		if (!isHandsUp(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е вдигнал ръцете си, за да бъде закопчан!");
		if (IsCuffed(giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е закопчан с белезници!");
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		new string256[256];
		SetPlayerAttachedObject(giveplayerID, PLAYER_OBJECT_CUFFS, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_CUFFED);
		ClearAnimations(giveplayerID);
		format(string256, 256, "* %s извади белезниците си и закопча %s с тях.", accountNickname, giveplayeridNickname);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/aduty", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте администратор, за да използвате тази команда!");
		if (!PlayerInfo[playerid][pAdminDuty])
		{
			if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
			if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
			if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
			if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
			if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
			if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C. смяна първо!");
			if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от AFK!");
            if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
            if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
			if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
			SetAdminOnDuty(playerid);
			SendClientMessage(playerid, COLOR_ADMINDUTY, "Ти влезе на смяна, като администратор!");
			new string256[256];
			format(string256, 256, "Admin %s влезе на смяна! Ако имате въпроси, използвайте /ask", accountNickname);
			SendClientMessageToAll(COLOR_ADMINDUTY, string256);
		}
		else
		{
			SetAdminOffDuty(playerid);
			SendClientMessage(playerid, COLOR_ADMINDUTY, "Вие излязохте от смяна, като администратор!");
			new string256[256];
			format(string256, 256, "Admin %s излезе от смяна", accountNickname);
			SendClientMessageToAll(COLOR_ADMINDUTY, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/fuelcoduty", true) == 0)
	{
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Comapny за да имаш достъп до тази команда!");
		if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
		if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
		if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
		if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C. смяна първо!");
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 283.4168, 1387.7717, 10.5859) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			if (!PlayerInfo[playerid][pFuelCoDuty])
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти вече си на смяна в {FFFF00}Fuel Company");
				SetFuelCoOnDuty(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти излезе от смяна в Fuel Company");
				SetFuelCoOffDuty(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до иконката до Fuel Company!");
		}

		return 1;
	}

	if (strcmp(cmd, "/taxiduty", true) == 0)
	{
        if (PlayerInfo[playerid][pJob] != JOB_TAXI) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш като таксиджия за да имаш достъп до тази команда!");
		if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
		if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
		if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
		if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C. смяна първо!");
		if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1843.5786, 664.0244, 29.3228) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 1)
		{
			new string256[256];
			if (!PlayerInfo[playerid][pTaxiDuty])
			{
				format(string256, 256, "[San Andreas Taxi Co] %s вече е на смяна! Използвайте PM за връзка, ако имате нужда от такси!", GetPlayerNickname(playerid));
				SendClientMessageToAll(COLOR_YELLOW, string256);
				SendClientMessage(playerid, COLOR_WHITE, "Ти вече си на смяна, като {FFFF00}Taxi Driver");
				SetTaxiOnDuty(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти излезе от смяна, като Taxi Driver");
				SetTaxiOffDuty(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в сградата на такси компанията до бюрото!");
		}

		return 1;
	}

	if (strcmp(cmd, "/kaccduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_KACC) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте член на K.A.C.C, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (!IsPlayerInRangeOfPoint(playerid, 3, 2503.0823,2778.9441,10.8203)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (!PlayerInfo[playerid][pKACCDuty])
		{
			SetKACCOnDuty(playerid);
			SendClientMessage(playerid, COLOR_KACC, "* Ти влезе на смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(FACTION_KACC, COLOR_KACC, string256);
		}
		else
		{
			SetKACCOffDuty(playerid);
			SendClientMessage(playerid, COLOR_KACC, "* Ти излезе от смяна *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(FACTION_KACC, COLOR_KACC, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/armyduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте член на Army, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (!IsPlayerInRangeOfPoint(playerid, 3, 211.5823, 1812.2897, 21.8594)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (!PlayerInfo[playerid][pArmyDuty])
		{
			SetArmyOnDuty(playerid);
			SendClientMessage(playerid, COLOR_ARMY, "* Ти влезе на смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(FACTION_KACC, COLOR_ARMY, string256);
		}
		else
		{
			SetArmyOffDuty(playerid);
			SendClientMessage(playerid, COLOR_ARMY, "* Ти излезе от смяна *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(FACTION_KACC, COLOR_ARMY, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/fbiduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_FBI) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте член на ФБР, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (!IsPlayerInRangeOfPoint(playerid, 3, 1571.7607, -1689.3435, 62.1910))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на мястото за влизане на смяна.");
			return 1;
		}

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (!PlayerInfo[playerid][pFbiDuty])
		{
			SetFbiOnDuty(playerid);
			SendClientMessage(playerid, COLOR_FBI, "* Ти влезе на смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(FACTION_FBI, COLOR_FBI, string256);
		}
		else
		{
			SetFbiOffDuty(playerid);
			SendClientMessage(playerid, COLOR_FBI, "* Ти излезе от смяна *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(FACTION_FBI, COLOR_FBI, string256);
		}

		return 1;
	}
	
	if (strcmp(cmd, "/yes", true) == 0)
	{
		if (duelSended[playerid] != -1)
		{
			new bet = duelMoneyBet[duelSended[playerid]];
			new sender = duelSended[playerid];
			if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си заподозрян!");
			if (duelInvitor[playerid] != -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Вече си изпратил покана за дуел на друг играч, трябва първо да я отмениш!");
			if (PlayerInfo[sender][pCash] < bet) return SendClientMessage(playerid, 0xB4B5B7FF, "Противникът няма толкова пари за залог!");
			if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си Admin On-Duty и не можеш да играеш дуел!");
			if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си в дуел!");
			if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
			if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
			if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
			if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
			if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
			if (IsPlayerInMiniGame(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в мини-игра и не можеш да играеш дуел!");
			if (PlayerInfo[playerid][pCash] < bet) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш пари за залог!");
			new string[256];
			format(string, 256, "DUEL: Ти прие поканата за дуел на %s", GetPlayerNickname(duelSended[playerid]));
			SendClientMessage(playerid, COLOR_DUEL, string);
			format(string, 256, "DUEL: %s прие поканата ти за дуел", GetPlayerNickname(playerid));
			SendClientMessage(duelSended[playerid], COLOR_DUEL, string);
			isInDuel[playerid] = true;
			isInDuel[duelSended[playerid]] = true;
			duelEnemy[playerid] = duelSended[playerid];
			duelEnemy[duelSended[playerid]] = playerid;
			GetPlayerPos(playerid, beforeDuelX[playerid], beforeDuelY[playerid], beforeDuelZ[playerid]);
			GetPlayerHealth(playerid, beforeDuelHealth[playerid]);
			GetPlayerArmour(playerid, beforeDuelArmour[playerid]);
			beforeDuelVirtualWorld[playerid] = GetPlayerVirtualWorld(playerid);
			beforeDuelInterior[playerid] = GetPlayerInterior(playerid);
			beforeDuelVirtualWorld[duelSended[playerid]] = GetPlayerVirtualWorld(playerid);
			beforeDuelInterior[duelSended[playerid]] = GetPlayerInterior(playerid);
			SetPlayerVirtualWorld(playerid, 500 + playerid);
			SetPlayerInterior(playerid, 1);
			SetPlayerPos(playerid, 1410.3407, -1.3358, 1000.9233);
			PlayerTimerInfo[duelSended[playerid]][ptDuelTimer] = 1;
			duelMoneyBet[playerid] = duelMoneyBet[duelSended[playerid]];
			GetPlayerPos(playerid, beforeDuelX[duelSended[playerid]], beforeDuelY[duelSended[playerid]], beforeDuelZ[duelSended[playerid]]);
			GetPlayerHealth(playerid, beforeDuelHealth[duelSended[playerid]]);
			GetPlayerArmour(playerid, beforeDuelArmour[duelSended[playerid]]);
			beforeDuelVirtualWorld[duelSended[playerid]] = GetPlayerVirtualWorld(playerid);
			SetPlayerVirtualWorld(duelSended[playerid], 500 + playerid);
			SetPlayerInterior(duelSended[playerid], 1);
			SetPlayerPos(duelSended[playerid], 1373.1509, -33.9499, 1000.9219);
			TogglePlayerControllable(playerid, 0);
			TogglePlayerControllable(duelSended[playerid], 0);
			SetPlayerHealth(playerid, 100);
			SetPlayerHealth(duelSended[playerid], 100);
			SetPlayerArmour(playerid, 100);
			SetPlayerArmour(duelSended[playerid], 100);
			SetPlayerFacingAngle(playerid, 123.8814);
			SetPlayerFacingAngle(duelSended[playerid], 313.3936);
			beforeDuelVirtualWorld[duelSended[playerid]] = GetPlayerVirtualWorld(duelSended[playerid]);
			beforeDuelInterior[duelSended[playerid]] = GetPlayerInterior(duelSended[playerid]);
			SetPlayerColor(duelSended[playerid], 0xFF9068FF);
			SetPlayerColor(playerid, 0xFF9068FF);
			SetCameraBehindPlayer(playerid);
			SetCameraBehindPlayer(duelSended[playerid]);
			SetPlayerArmedWeapon(playerid, 0);
			SetPlayerArmedWeapon(duelSended[playerid], 0);
		} 
		else 
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Никой не ти е пратил покана за дуел!");
		}
		return 1;
	}
	
	if (strcmp(cmd, "/no", true) == 0) 
	{
		if (duelSended[playerid] == -1) 
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Никой не ти е пратил покана за дуел!");
		}
		new string[256];
		format(string, 256, "DUEL: Ти отказа поканата за дуел на %s", GetPlayerNickname(duelSended[playerid]));
		SendClientMessage(playerid, COLOR_DUEL, string);
		format(string, 256, "DUEL: %s отказа поканата ти за дуел", GetPlayerNickname(playerid));
		SendClientMessage(duelSended[playerid], COLOR_DUEL, string);
		new duelsendera = duelSended[playerid];
		duelSended[playerid] = -1;
		duelInvitor[duelsendera] = -1;
		return 1;
	}

	if (strcmp(cmd, "/duel", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/duel [playerid] [money]");
			return 1;
		}
		new zalog = strval(tmp);
		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		zalog = strval(tmp);
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш покана за дуел на себе си!");
		if (duelInvitor[playerid] != -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Вече си изпратил покана за дуел на друг играч!");
		if (duelSended[playerid] != -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Имаш показа за дуел от друг играч в момента!");
		if (zalog < 100 || zalog > 1000000) return SendClientMessage(playerid, COLOR_GRAD1, "Залогът трябва да е между $100 и $1,00,000!");
		if (PlayerInfo[playerid][pCash] < zalog) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова пари за залог!");
		if (PlayerInfo[giveplayerID][pCash] < zalog) return SendClientMessage(playerid, 0xB4B5B7FF, "Играчът няма толкова пари за залог!");
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си Admin On-Duty и не можеш да изпратиш покана за дуел!");
		if (PlayerInfo[giveplayerID][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът в момента е Admin On-Duty и не може да играе дуел!");
		if (isInDuel[giveplayerID]) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече е в дуел!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си в дуел!");
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (IsPlayerInMiniGame(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш покана за дуел, докато си в мини-игра!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си заподозрян!");
		new string[256];
		format(string, 256, "DUEL: Ти изпрати покана за дуел на %s. Ако искаш да отмениш поканата напиши /cduel", GetPlayerNickname(giveplayerID));
		SendClientMessage(playerid, COLOR_DUEL, string);
		format(string, 256, "DUEL: %s те покани на дуел със залог $%d. Напиши /yes за да приемеш или /no за да откажеш!", GetPlayerNickname(playerid), zalog);
		SendClientMessage(giveplayerID, COLOR_DUEL, string);
		duelSended[giveplayerID] = playerid;
		duelInvitor[playerid] = giveplayerID;
		duelMoneyBet[playerid] = zalog;
		return 1;
	}
	
	if (strcmp(cmd, "/cduel", true) == 0)
	{
		if (duelInvitor[playerid] != -1)
		{
			new duelstring[256];
			format(duelstring, 256, "DUEL: Ти отмени поканата за дуел, която изпрати на %s", GetPlayerNickname(duelInvitor[playerid]));
			SendClientMessage(playerid, COLOR_DUEL, duelstring);
			format(duelstring, 256, "DUEL: %s отказа поканата си за дуел", GetPlayerNickname(duelSended[duelInvitor[playerid]]));
			SendClientMessage(duelSended[playerid], COLOR_DUEL, duelstring);
			duelSended[duelInvitor[playerid]] = -1;
			duelInvitor[playerid] = -1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си поканил никого на дуел!");
		}
		return 1;
	}

	if (strcmp(cmd, "/policeduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD
			 && PlayerInfo[playerid][pFaction] != FACTION_RCPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
        if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
        if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 1588.2194, -1676.2596, 2982.2800)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 1349.9863, 1577.2742, 1467.6976)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}
		
		if (PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 256.7999,63.6477,1003.6406)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 3, 256.7999,63.6477,1003.6406) && PlayerInfo[playerid][pFaction] != FACTION_RCPD)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие трябва да сте член на RCPD за да влезете на смяна от тук!");
			return 1;
		}

		if (IsPlayerInRangeOfPoint(playerid, 3, 1588.2194, -1676.2596, 2982.2800) && PlayerInfo[playerid][pFaction] != FACTION_LVPD)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие трябва да сте член на LSPD за да влезете на смяна от тук!");
			return 1;
		}

		if (IsPlayerInRangeOfPoint(playerid, 3, 1349.9863, 1577.2742, 1467.6976) && PlayerInfo[playerid][pFaction] != FACTION_LSPD)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие трябва да сте член на LVPD за да влезете на смяна от тук!");
			return 1;
		}

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (!PlayerInfo[playerid][pPoliceDuty])
		{
			SetPoliceOnDuty(playerid);
			new string256[256];
			SendClientMessage(playerid, COLOR_POLICE_2, "* Ти влезе на смяна *");
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_POLICE_2, string256);
		}
		else
		{
			SetPoliceOffDuty(playerid);
			new string256[256];
			SendClientMessage(playerid, COLOR_POLICE_2, "* Ти излезе от смяна *");
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerNickname(playerid));
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_POLICE_2, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/turfattack", true) == 0)
	{
		new faction = PlayerInfo[playerid][pFaction];
		if (IsGangFaction(faction))
		{
			if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер за да използваш тази команда!");
			if (AttackTurfInfo[PlayerInfo[playerid][pFaction]][startedWar] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Твоята банда/мафия вече е нападнала територия!");
			if (FactionInfo[PlayerInfo[playerid][pFaction]][fTurfTime] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още преди да започнете атака!");
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Interior!");
            new isInTurf = GetPlayerTurf(playerid);
			if (isInTurf == -1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си над територия!");
				return 1;
			}
            new turfOwner = TurfInfo[isInTurf][TurfOwner];
            if(turfOwner == faction)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Тази територия е на твоята банда/мафия!");
                return 1;
            }
			if(isMainTurf(isInTurf))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да нападнеш главна територия на банда/мафия!");
                return 1;
			}
            new turfMembers = GetFactionPlayersOnTurf(faction, isInTurf);
			if (turfMembers < 3 && scripterMode[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Трябва да има трима члена на тази територия!");
				return 1;
			}
			if (turfOwner != FACTION_CIVILIAN)
			{
				new turfOwnerOnlinePlayers = GetPlayersCountFromFaction(turfOwner);
				if (turfOwnerOnlinePlayers == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Трябва да има поне 1 член онлайн на банда/мафията, която нападаш!");
					return 1;
				}
			}
			StartTurfWar(faction, isInTurf, turfMembers);
			FactionInfo[faction][fTurfTime] = 26 * 60;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на банда/мафия!");
		}

		return 1;
	}

	if (strcmp(cmd, "/graffitstime", true) == 0)
	{
		new faction = PlayerInfo[playerid][pFaction];
		if (IsGangFaction(faction))
		{
			new graffitStartTimer = AttackGraffitiInfo[faction][startTimer];
			new string256[256];
			if (graffitStartTimer > 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е %d минути!", graffitStartTimer / 60);
				SendClientMessage(playerid, COLOR_GRAFFITS, string256);
			}
			else if (graffitStartTimer > 0 && graffitStartTimer < 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е 1 минута!");
				SendClientMessage(playerid, COLOR_GRAFFITS, string256);
			}
			else if (graffitStartTimer == 0)
			{
				format(string256, 256, "Може да се направи нападение още сега!");
				SendClientMessage(playerid, COLOR_GRAFFITS, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на банда/мафия!");
		}

		return 1;
	}

	if (strcmp(cmd, "/turftime", true) == 0)
	{
		new faction = PlayerInfo[playerid][pFaction];
		if (IsGangFaction(faction))
		{
			new string256[256];
			new turfTime = FactionInfo[faction][fTurfTime];
			if (turfTime > 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е %d минути!", turfTime / 60);
				SendClientMessage(playerid, COLOR_TURF, string256);
			}
			else if (turfTime > 0 && turfTime < 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е 1 минута!");
				SendClientMessage(playerid, COLOR_TURF, string256);
			}
			else if (turfTime == 0)
			{
				format(string256, 256, "Твоята банда/мафия може да атакува още сега!");
				SendClientMessage(playerid, COLOR_TURF, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на банда/мафия!");
		}

		return 1;
	}

	if (strcmp(cmd, "/graffits", true) == 0)
	{
		if (IsGangFaction(PlayerInfo[playerid][pFaction]))
		{
			new string256[256];
			format(string256, 256, "Вашата банда/мафия има %d графита!", FactionInfo[PlayerInfo[playerid][pFaction]][fGraffits]);
			SendClientMessage(playerid, COLOR_GRAFFITS, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на банда/мафия.");
		}

		return 1;
	}

	if (strcmp(cmd, "/fhelp", true) == 0 || strcmp(cmd, "/factionhelp", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SendClientMessage(playerid, COLOR_FBI, "FBI Commands: {FFFFFF}/badge, /fbiduty, /siren, /barricade, /rbarricade");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_KACC)
		{
			SendClientMessage(playerid, COLOR_KACC, "Military Aviation Commands: {FFFFFF}/badge, /kaccduty, /siren, /barricade, /rbarricade");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_ARMY)
		{
			SendClientMessage(playerid, COLOR_ARMY, "San Andreas Army Commands: {FFFFFF}/badge, /armyduty, /especvehs, /siren, /barricade, /rbarricade");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "LSPD Commands: {FFFFFF}/(un)cuff, /policeduty, /badge, /fine, /warning, /arrest, /rbarricade");
			SendClientMessage(playerid, COLOR_POLICE_2, "LSPD Commands: {FFFFFF}/drunktest, /wanted, /unwanted, /siren, /barricade, /suspects");
		}
		
		if (PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "RCPD Commands: {FFFFFF}/(un)cuff, /policeduty, /badge, /fine, /warning, /arrest, /rbarricade");
			SendClientMessage(playerid, COLOR_POLICE_2, "RCPD Commands: {FFFFFF}/drunktest, /wanted, /unwanted, /siren, /barricade, /suspects");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "LVPD Commands: {FFFFFF}/(un)cuff, /policeduty, /badge, /fine, /warning, /arrest, /rbarricade");
			SendClientMessage(playerid, COLOR_POLICE_2, "LVPD Commands: {FFFFFF}/drunktest, /wanted, /unwanted, /siren, /barricade, /suspects");
		}

		if (IsGangFaction(PlayerInfo[playerid][pFaction]))
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Gang Commands: {FFFFFF}/turftime, /turfattack, /graffits, /graffitstime, /graffitattack");
		}

		SendClientMessage(playerid, COLOR_YELLOW, "General Faction Commands: {FFFFFF}За достъп до основните команди, използвай /help");
		return 1;
	}

    if (strcmp(cmd, "/turfs", true) == 0)
    {
		
        return 1;
    }

	if (strcmp(cmd, "/badge", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_KACC && PlayerInfo[playerid][pFaction] != FACTION_RCPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_ARMY && PlayerInfo[playerid][pFaction] != FACTION_LVPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		new string256[256];
		new faction = PlayerInfo[playerid][pFaction];
		new rankname[35];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(rankname, 64, FactionInfo[faction][fRankName1]);
			case 2:
				format(rankname, 64, FactionInfo[faction][fRankName2]);
			case 3:
				format(rankname, 64, FactionInfo[faction][fRankName3]);
			case 4:
				format(rankname, 64, FactionInfo[faction][fRankName4]);
			case 5:
				format(rankname, 64, FactionInfo[faction][fRankName5]);
			case 6:
				format(rankname, 64, FactionInfo[faction][fRankName6]);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			format(string256, 256, "%s си извади значката и показа, че е назначен в FBI, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в полицията (LSPD), като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в полицията (RCPD), като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в полицията (LVPD), като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_KACC)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в Military Aviation, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_ARMY)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в San Andreas Army, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/news", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_NEWS)
		{
			if (IsPlayerInRangeOfPoint(playerid, 6.0, 3190.9307, -1757.5547, 3001.0859))
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/news [text]");
					return 1;
				}

				if (PlayerInfo[playerid][pDisableNews]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да можете да чувате новините, за да ги съобщавате. Използвайте /togglenews");
				new string256[256];
				format(string256, 256, "[NEWS] %s: %s", accountNickname, result);
				SendNewsMessage(COLOR_NEWS, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в студиото, за да публикувате новините.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте работник в медийте, за да използвате тази команда.");
		}

		return 1;
	}

	if (strcmp(cmd, "/cnnn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			new txtid;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/cnnn [type 1-6] [text]");
				return 1;
			}

			txtid = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{

				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/cnnn [type 1-4] [text]");
				return 1;
			}

			if (txtid == 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш id 2!");
				return 1;
			}

			if (txtid < 1 || txtid > 4) return SendClientMessage(playerid, COLOR_GRAD1, "Типът трябва да е от 1 до 4!");
			new string256[256];
			format(string256, 256, "~w~%s", result);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				GameTextForPlayer(i, string256, 5000, txtid);
			}

			format(string256, 256, "Admin: %s (ID: %d) изпрати Screen Message до всички играчи онлайн", accountNickname, playerid);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/message", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/message [text]");
				return 1;
			}

			new string256[256];
			format(string256, 256, "[Message]: {00FF00}%s", result);
			SendClientMessageToAll(COLOR_WHITE, string256);
			format(string256, 256, "Message: %s (ID: %d) изпрати Message до всички играчи онлайн", accountNickname, playerid);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/ann", true) == 0 || strcmp(cmd, "/announce", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ann(ounce) [text]");
				return 1;
			}
            new adminLevel = PlayerInfo[playerid][pAdmin];
			new string256[256];
			format(string256, 256, "Announcement: %s(%d) %s [ID: %d]: %s", GetAdminLevelName(adminLevel), PlayerInfo[playerid][pAdmin], accountNickname, playerid, result);
			SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

    if (strcmp(cmd, "/vipchat", true) == 0)
    {
        if (PlayerInfo[playerid][pVip] >= 1)
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }

            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }

            result[idx - offset] = EOS;
            if (!strlen(result))
            {
                SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/vipchat [text]");
                return 1;
            }
            new string256[256];
            format(string256, 256, "[V.I.P. CHAT] %s (ID: %d) каза: %s", GetPlayerNickname(playerid), playerid, result);
            SendVipChatMessage(COLOR_VIP_RED_2, string256);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
        }

        return 1;
    }

	if (strcmp(cmd, "/a", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/a [text]");
				return 1;
			}
            new adminLevel = PlayerInfo[playerid][pAdmin];
			new string256[256];
			format(string256, 256, "%s(%d) %s (ID: %d) каза: %s", GetAdminLevelName(adminLevel), PlayerInfo[playerid][pAdmin], accountNickname, playerid, result);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/checkbgn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/checkbgn [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		new string256[256];
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		format(string256, 256, "Ваучери в BGN: {40BF00}%s {ffffff}притежава {0099FF}%d {ffffff}лева в сметката си!", giveplayeridNickname, PlayerInfo[giveplayerID][pVoucherBGN]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		format(string256, 256, "Ваучери в BGN: Парите са регистрирани на профил: {0099FF}%s", giveplayeridNickname);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/check", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/check [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			ShowPlayerStats(playerid, giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setarmour", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setarmour [ID на играч] [armour]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new armour = strval(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Вие сменихте Armour точките на %s", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти Armour точките", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Armour: %s (ID: %d) смени Armour на %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetArmour(giveplayerID, armour);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/sethp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sethp [ID на играч] [hp]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new health = strval(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Вие сменихте HP точките на %s", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти HP точките", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Hp: %s (ID: %d) смени HP на %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetPlayerHealth(giveplayerID, health);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setpermskin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setpermskin [ID на играч] [skin id]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new skin = strval(tmp);
			if (skin < 0 || skin > 311)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setpermskin [ID на играч] [skin id]");
				return 1;
			}

			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Вие сменихте постоянния скин на %s", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти смени постоянния скин!", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Skin: %s (ID: %d) смени постоянния скин на %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				PlayerInfo[giveplayerID][pNormalSkin] = skin;
                RestartPlayerSkin(giveplayerID);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setskin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setskin [ID на играч] [skin id]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new skin = strval(tmp);
			if (skin < 0 || skin > 311)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setskin [ID на играч] [skin id]");
				return 1;
			}

			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Вие сменихте скина на %s", giveplayeridNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти смени скина", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Skin: %s (ID: %d) смени скина на %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetPlayerSkin(giveplayerID, skin);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/gethere", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gethere [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			new string256[256];
			format(string256, 256, "Вие телепортирахте %s до себе си", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви телепортира до себе си", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(giveplayerID, X, Y, Z);
			new hisInt = GetPlayerInterior(playerid);
			new hisVw = GetPlayerVirtualWorld(playerid);
			SetPlayerInterior(giveplayerID, hisInt);
			SetPlayerVirtualWorld(giveplayerID, hisVw);
			format(string256, 256, "Gethere: %s (ID: %d) телепортира %s (ID: %d) до себе си", accountNickname, playerid, giveplayeridNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/goto", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/goto [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			new string256[256];
			format(string256, 256, "Вие се телепортирахте до %s", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s се телепортира до вас", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(giveplayerID, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z);
			new hisInt = GetPlayerInterior(giveplayerID);
			new hisVw = GetPlayerVirtualWorld(giveplayerID);
			SetPlayerInterior(playerid, hisInt);
			SetPlayerVirtualWorld(playerid, hisVw);
			format(string256, 256, "Goto: %s (ID: %d) се телепортира до %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unfreeze", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unfreeze [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			new string256[256];
			format(string256, 256, "Вие отмрази %s", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви отмрази", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			TogglePlayerControllable(giveplayerID, 1);
			format(string256, 256, "Unfreeze: %s (ID: %d) отмрази %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/freeze", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/freeze [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			new string256[256];
			format(string256, 256, "Вие замразихте %s", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви замрази", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			TogglePlayerControllable(giveplayerID, 0);
			format(string256, 256, "Freeze: %s (ID: %d) замрази %s (ID: %d)", accountNickname, playerid, giveplayeridNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/slap", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/slap [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			new string256[256];
			format(string256, 256, "Вие дигнахте %s във въздуха", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви дигна във въздуха", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(giveplayerID, X, Y, Z);
			SetPlayerPos(giveplayerID, X, Y, Z + 5);
			format(string256, 256, "Slap: %s (ID: %d) дигна %s (ID: %d) във въздуха", accountNickname, playerid, giveplayeridNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/spec", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/spec [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (playerid == giveplayerID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можете да наблюдавате себе си.");
				return 1;
			}

			if (spec[playerid] == false)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = GetPlayerInterior(playerid);
				Unspec[playerid][sVw] = GetPlayerVirtualWorld(playerid);
				GetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
			}

			spec[playerid] = true;
			TogglePlayerSpectating(playerid, 1);
			SetPlayerInterior(playerid, GetPlayerInterior(giveplayerID));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerID));
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			new string256[256];
			format(string256, 256, "Вие започнахте да наблюдавате %s", giveplayeridNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "Spec: %s (ID: %d) започна да наблюдава %s (ID: %d)", playeridNickname, playerid, giveplayeridNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
			if (IsPlayerInAnyVehicle(giveplayerID))
			{
				new carid = GetPlayerVehicleID(giveplayerID);
				PlayerSpectateVehicle(playerid, carid);
			}
			else
			{
				PlayerSpectatePlayer(playerid, giveplayerID);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/specoff", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (spec[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "В момента не наблюдаваш играч!");
				return 1;
			}

			TogglePlayerSpectating(playerid, 0);
			SetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
			SetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
			SetPlayerInterior(playerid, Unspec[playerid][sPint]);
			SetPlayerVirtualWorld(playerid, Unspec[playerid][sVw]);
			SendClientMessage(playerid, COLOR_YELLOW, "Вие спряхте да наблюдавате играча.");
			spec[playerid] = false;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unban", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unban [nickname]");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new string115[115];
			format(string115, 115, "%s.ini", result);
			if (dini_Exists(string115))
			{
				new string256[256];
				format(string256, 256, "unbanip %s", dini_Int(string115, "pIP"));
				SendRconCommand(string256);
				SendRconCommand("reloadbans");
				format(string256, 256, "Admin: %s was unbanned by %s", result, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}

		return 1;
	}

	if (strcmp(cmd, "/ban", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ban [ID на играч] [причина]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				if (PlayerInfo[giveplayerID][pAdmin] > PlayerInfo[playerid][pAdmin])
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да BAN администратор с по-високо ниво от твоето.");
					return 1;
				}

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				new string256[256];
				format(string256, 256, "Admin: %s was banned by %s [Reason: %s]", giveplayeridNickname, playeridNickname, (result));
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				PlayerTimerInfo[giveplayerID][ptBan] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/kick", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				if (PlayerInfo[giveplayerID][pAdmin] > PlayerInfo[playerid][pAdmin])
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да KICK администратор с по-високо ниво от твоето.");
					return 1;
				}

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				new string256[256];
				format(string256, 256, "Admin: %s was kicked by %s [Reason: %s]", giveplayeridNickname, playeridNickname, (result));
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				PlayerTimerInfo[giveplayerID][ptKick] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/answer", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/answer [ID на играч] [text]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да отговориш на себе си!");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/answer [ID на играч] [text]");
			return 1;
		}

		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		new string256[256];
		format(string256, 256, "*Admin %s [ID: %d] ти отговори: %s", accountNickname, playerid, result);
		SendClientMessage(giveplayerID, COLOR_ANSWER, string256);
		format(string256, 256, "*Answer до %s [ID: %d]: %s", giveplayeridNickname, giveplayerID, result);
		SendClientMessage(playerid, COLOR_ANSWER, string256);
		return 1;
	}

	if (strcmp(cmd, "/report", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/report [ID на играч] [оплакване]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш доклад за себе си.");
			return 1;
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/report [ID на играч] [оплакване]");
			return 1;
		}

		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		SendClientMessage(playerid, COLOR_REPORT, "Вие предадохте доклад за нарушител на правилата");
		format(string256, 256, "Доклад от %s (ID: %d) за %s (ID: %d): %s", accountNickname, playerid, giveplayerIDNickname, giveplayerID, result);
		SendAdminMessage(COLOR_REPORT, string256);
		return 1;
	}

    if (strcmp(cmd, "/r", true) == 0 || strcmp(cmd, "/reply", true) == 0)
    {
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }

        new offset = idx;
        new result[256];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }

        result[idx - offset] = EOS;
        if (!strlen(result))
        {
            SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/r [text]");
            return 1;
        }
        new toReplyID = replyPM[playerid];

        if(toReplyID == -1)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Не си изпращал лични съобщения досега!");
            return 1;
        }

        if (!IsPlayerConnected(toReplyID))
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
            return 1;
        }

        if (playerid == toReplyID)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш лично съобщение до себе си!");
            return 1;
        }

        if(IsPlayerNPC(toReplyID))
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш лично съобщение до NPC!");
            return 1;
        }

        new string256[256];
        format(string256, 256, "* PM от %s [ID: %d]: %s", GetPlayerNickname(playerid), playerid, result);
        SendClientMessage(toReplyID, 0xFFFF00FF, string256);
        format(string256, 256, "* PM до %s [ID: %d]: %s", GetPlayerNickname(toReplyID), toReplyID, result);
        SendClientMessage(playerid, 0xFFFF00FF, string256);
        return 1;
    }

	if (strcmp(cmd, "/pm", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pm [ID на играч] [text]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш лично съобщение до себе си!");
			return 1;
		}

        if(IsPlayerNPC(giveplayerID))
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш лично съобщение до NPC!");
            return 1;
        }

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pm [ID на играч] [text]");
			return 1;
		}

		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		new string256[256];
		format(string256, 256, "* PM от %s [ID: %d]: %s", accountNickname, playerid, result);
		SendClientMessage(giveplayerID, 0xFFFF00FF, string256);
		format(string256, 256, "* PM до %s [ID: %d]: %s", giveplayeridNickname, giveplayerID, result);
		SendClientMessage(playerid, 0xFFFF00FF, string256);
        replyPM[playerid] = giveplayerID;
		if (playerAfkSeconds[giveplayerID] > 0 || playerAfkMinutes[giveplayerID] > 0)
		{
			SendClientMessage(playerid, COLOR_AFK, "Играчът е ESC AFK и може да не види твоето съобщение!");
		}

		return 1;
	}

	if (strcmp(cmd, "/gotoveh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new car = strval(tmp);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotoveh [vehicle id]");
			return 1;
		}

		if (car < 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID на превозно средство!");
			return 1;
		}

		if (!IsValidVehicle(car))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не съществува!");
			return 1;
		}

		new stringveh[256];
		new Float: XX;
		new Float: YY;
		new Float: ZZ;
		GetVehiclePos(car, XX, YY, ZZ);
		SetPlayerPos(playerid, XX, YY, ZZ + 3.0);
		format(stringveh, 256, "Ти успешно се телепортира до превозното средство ID %d", car);
		SendClientMessage(playerid, COLOR_YELLOW, stringveh);
		return 1;
	}

	if (strcmp(cmd, "/destroyvehs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Ти унищожи всички SPAWN-нати превозни средства от админи!");
			for (new vehID = 0; vehID < MAX_VEHICLES; vehID++)
			{
				if (adminVeh[vehID] == true)
				{
					DestroyVehicle(vehID);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/jail", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jail [ID на играч] [време] [причина]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			tmp = strtok(cmdtext, idx);
			new time = strval(tmp);
			if (time < 1 || time > 100000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Минутите трябва да са между 1 и 100000.");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jail [ID на играч] [време] [причина]");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pJailed] > 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е в Админ Затвора.");
				return 1;
			}

			new jailMinutes = time * 60;
			PlayerInfo[giveplayerID][pJailed] = jailMinutes;
			new string256[256];
			new giveplayeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayeridNickname, 25);
			if (PlayerInfo[giveplayerID][pPoliceJail] > 0)
				PlayerInfo[giveplayerID][pPoliceJail] = 0;
			if (PlayerInfo[giveplayerID][pAFK])
				PlayerInfo[giveplayerID][pAFK] = false;
			format(string256, 256, "Admin: %s was Jailed by %s for %d minutes[Reason: %s]", giveplayeridNickname, accountNickname, time, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			SetPlayerVirtualWorld(giveplayerID, 1);
			SetPlayerInterior(giveplayerID, 4);
			SetPlayerPos(giveplayerID, 299.7077, 303.4193, 999.1484);
			SetPlayerAttachedObject(giveplayerID, PLAYER_OBJECT_CUFFS, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
			SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_CUFFED);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unpjail", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unpjail [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pPoliceJail] > 0)
			{
				new string256[256];
				PlayerInfo[giveplayerID][pPoliceJail] = 0;
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Admin: %s was unjailed from police arrest by %s", giveplayeridNickname, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
				SetToSpawn(giveplayerID);
				RemovePlayerAttachedObject(giveplayerID, 1);
				SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_NONE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в Полицейския Затвор!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/vrepair", true) == 0)
	{
		if (PlayerInfo[playerid][pVip] < 1)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
		}

		if (PlayerInfo[playerid][pLastVRepair] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изминат поне 20 минути от последното ползване на командата!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
		if (IsPlayerInRangeOfPoint(playerid, 22.0, Garage))
		{
			new Float: vehHealth;
			GetVehicleHealth(GetPlayerVehicleID(playerid), vehHealth);
			if (vehHealth >= 1000.0) return SendClientMessage(playerid, COLOR_GRAD1, "Превозът ти е напълно здрав!");
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][pLastVRepair] = 20 * 60;
			SendClientMessage(playerid, 0xFFFFFFFF, "*Вие поправихте вашето превозно средство *");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в Tuning гараж!");
		}

		return 1;
	}

	if (strcmp(cmd, "/fixveh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (IsPlayerInAnyVehicle(playerid))
			{
				SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
				RepairVehicle(GetPlayerVehicleID(playerid));
				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, 0xFFFFFFFF, "*Вие поправихте вашето превозно средство *");
				new string256[256];
				format(string256, 256, "Fix Veh: %s (ID: %d) поправи превоза си", accountNickname, playerid);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unjail", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unjail [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pJailed] > 0)
			{
				new string256[256];
				PlayerInfo[giveplayerID][pJailed] = 0;
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Admin: %s was unjailed by %s", giveplayeridNickname, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
				SetToSpawn(giveplayerID);
				RemovePlayerAttachedObject(giveplayerID, 1);
				SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_NONE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в Админ Затвора.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unmute", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unmute [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pMuted] > 0)
			{
				new string256[256];
				PlayerInfo[giveplayerID][pMuted] = 0;
				new giveplayeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayeridNickname, 25);
				format(string256, 256, "Admin: %s was unmuted by %s", giveplayeridNickname, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е заглушен.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/mute", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/mute [ID на играч] [опция]");
				SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
				SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: По-сериозно");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				tmp = strtok(cmdtext, idx);
				new option = strval(tmp);
				if (!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/mute [ID на играч] [опция]");
					SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
					SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: По-сериозно");
					return 1;
				}

				if (option < 1 || option > 5)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Грешна опция! Опциите са от 1 до 5!");
					return 1;
				}

				if (PlayerInfo[giveplayerID][pMuted] == 0)
				{
					new mutereasonStr[256];
					switch (option)
					{
						case 1:
							format(mutereasonStr, 256, "Спам");
						case 2:
							format(mutereasonStr, 256, "Псуване/Обиждане");
						case 3:
							format(mutereasonStr, 256, "Спам/Псуване/Обиждане");
						case 4:
							format(mutereasonStr, 256, "Пречи на играта");
						case 5:
							format(mutereasonStr, 256, "По-сериозно нарушение");
					}

					new string256[256];
					new muteTime = (15 *option) *60;
					new muteTimeShow = (muteTime / 60);
					PlayerInfo[giveplayerID][pMuted] = muteTime;
					new giveplayeridNickname[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerID, giveplayeridNickname, 25);
					format(string256, 256, "Admin: %s was Muted by %s for %d minutes[Reason: %s]", giveplayeridNickname, accountNickname, muteTimeShow, mutereasonStr);
					SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е заглушен.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/awarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/awarn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/awarn [ID на играч] [причина]");
			return 1;
		}

		if (PlayerInfo[giveplayerID][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е администратор!");
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		PlayerInfo[giveplayerID][pAdminWarns] += 1;
		new warns = PlayerInfo[giveplayerID][pAdminWarns];
		new string256[256];
		format(string256, 256, "Admin: %s добави едно Admin предупреждение на %s [%d/3][Reason: %s]", accountNickname, giveplayeridNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		if (warns == 3)
		{
			format(string256, 256, "Admin: %s получи 3 Admin предупреждения и загуби правата си!", giveplayeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			PlayerInfo[giveplayerID][pAdmin] = 0;
			PlayerInfo[giveplayerID][pAdminWarns] = 0;
		}

		return 1;
	}

	if (strcmp(cmd, "/unawarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		if (PlayerInfo[giveplayerID][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е администратор!");
		if (PlayerInfo[giveplayerID][pAdminWarns] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви Admin предупреждения!");
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		PlayerInfo[giveplayerID][pAdminWarns] -= 1;
		new warns = PlayerInfo[giveplayerID][pAdminWarns];
		new string256[256];
		format(string256, 256, "Admin: %s премахна едно Admin предупреждение на %s [%d/3][Reason: %s]", accountNickname, giveplayeridNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
		return 1;
	}

	if (strcmp(cmd, "/unwarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwarn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwarn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwarn [ID на играч] [причина]");
			return 1;
		}

		if (PlayerInfo[giveplayerID][pWarns] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви предупреждения!");
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		PlayerInfo[giveplayerID][pWarns] -= 1;
		new warns = PlayerInfo[giveplayerID][pWarns];
		new string256[256];
		format(string256, 256, "Admin: %s премахна едно предупреждение на %s [%d/5][Reason: %s]", accountNickname, giveplayeridNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
		return 1;
	}

	//
	if (strcmp(cmd, "/rban", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			//
			tmp = strtok(cmdtext, idx);
			new nickname[32];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/rban [nickname] [reason]");
				return 1;
			}

			strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
			//
			tmp = strtok(cmdtext, idx);
			new result[32];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/rban [nickname] [reason]");
				return 1;
			}

			strmid(result, tmp, 0, sizeof(result), sizeof(result));
			if (strlen(nickname) < 1 || strlen(nickname) > 30)
			{
				SendClientMessage(playerid, 0xB4B5B7FF, "Името трябва да бъде с до 30 символа!");
				return 1;
			}

			if (strlen(result) < 1 || strlen(result) > 30)
			{
				SendClientMessage(playerid, 0xB4B5B7FF, "Причината трябва да бъде с до 30 символа!");
				return 1;
			}

			new nicknameFile[50];
			format(nicknameFile, 50, "%s.ini", nickname);
			if (dini_Exists(nicknameFile))
			{
				new string256[256];
				format(string256, 256, "Admin: %s was banned by %s [Reason: %s]", nickname, accountNickname, result);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				new nicknamesIP[35];
				format(nicknamesIP, 35, "%s", dini_Get(nicknameFile, "pIP"));
				new rconCommandString[115];
				format(rconCommandString, 115, "banip %s", nicknamesIP);
				SendRconCommand(rconCommandString);
				SendRconCommand("reloadbans");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	//
	if (strcmp(cmd, "/nunwarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new nickname[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nunwarn [nickname] [reason]");
			return 1;
		}

		strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
		tmp = strtok(cmdtext, idx);
		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nunwarn [nickname] [reason]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strlen(nickname) < 1 || strlen(nickname) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името трябва да бъде с до 30 символа!");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Причината трябва да бъде с до 30 символа!");
			return 1;
		}

		new string256[256];
		new nname[MAX_PLAYER_NAME];
		//IF ONLINE:
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, nname, sizeof(nname));
				if (strcmp(nname, nickname, true) == 0)
				{
					new warns = PlayerInfo[playerid][pWarns];
					if (warns == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви предупреждения!");
					PlayerInfo[i][pWarns] -= 1;
					warns -= 1;
					format(string256, 256, "Admin: %s премахна едно предупреждение на %s [%d/5][Reason: %s]", accountNickname, nname, warns, result);
					SendClientMessageToAll(COLOR_ADMIN_GREEN, string256);
					return 1;
				}
			}
		}

		//IF OFFLINE:
		new bool: existAccount = false;
		new nicknameFile[42];
		format(nicknameFile, 42, "%s.ini", nickname);
		if (dini_Exists(nicknameFile))
		{
			existAccount = true;
			new warns = dini_Int(nicknameFile, "pWarns");
			if (warns == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви предупреждения!");
			warns -= 1;
			format(string256, 256, "Admin: %s премахна едно предупреждение на %s [%d/5][Reason: %s]", accountNickname, nickname, warns, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			dini_IntSet(nicknameFile, "pWarns", warns);
		}

		if (existAccount == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не съществува такъв акаунт!");
		}

		return 1;
	}

	//animation - open
	if (strcmp(cmd, "/admanimation", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new nickname[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/admanimation [nickname] [reason]");
			return 1;
		}

		strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
		tmp = strtok(cmdtext, idx);
		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/admanimation [nickname] [reason]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strlen(nickname) < 1 || strlen(nickname) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името 1 трябва да бъде с до 30 символа!");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името 2 трябва да бъде с до 30 символа!");
			return 1;
		}

		ApplyAnimation(playerid, nickname, result, 4.1, 0, 1, 1, 0, 60000, 1);
		return 1;
	}

	//animation - close
	if (strcmp(cmd, "/nwarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new nickname[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nwarn [nickname] [reason]");
			return 1;
		}

		strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
		tmp = strtok(cmdtext, idx);
		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nwarn [nickname] [reason]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strlen(nickname) < 1 || strlen(nickname) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името трябва да бъде с до 30 символа!");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Причината трябва да бъде с до 30 символа!");
			return 1;
		}

		new string256[256];
		new nname[MAX_PLAYER_NAME];
		//IF ONLINE:
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, nname, sizeof(nname));
				if (strcmp(nname, nickname, true) == 0)
				{
					new warns = PlayerInfo[playerid][pWarns];
					if (warns >= 5) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има 5 предупреждения!");
					PlayerInfo[i][pWarns] += 1;
					warns += 1;
					format(string256, 256, "Admin: %s сложи предупреждение на %s [%d/5][Reason: %s]", accountNickname, nname, warns, result);
					SendClientMessageToAll(COLOR_ADMIN_RED, string256);
					if (warns == 5)
					{
						format(string256, 256, "Admin: %s събра 5 предупреждения и акаунтът му е блокиран!", nname);
						SendClientMessageToAll(COLOR_ADMIN_RED, string256);
						PlayerTimerInfo[i][ptKick] = 1;
					}

					return 1;
				}
			}
		}

		//IF OFFLINE:
		new bool: existAccount = false;
		new nicknameFile[42];
		format(nicknameFile, 42, "%s.ini", nickname);
		if (dini_Exists(nicknameFile))
		{
			existAccount = true;
			new warns = dini_Int(nicknameFile, "pWarns");
			if (warns >= 5) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има 5 предупреждения!");
			warns += 1;
			format(string256, 256, "Admin: %s сложи предупреждение на %s [%d/5][Reason: %s]", accountNickname, nickname, warns, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			dini_IntSet(nicknameFile, "pWarns", warns);
			if (warns == 5)
			{
				format(string256, 256, "Admin: %s събра 5 предупреждения и акаунтът му е блокиран!", nickname);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			}
		}

		if (existAccount == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не съществува такъв акаунт!");
		}

		return 1;
	}

	if (strcmp(cmd, "/warn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warn [ID на играч] [причина]");
			return 1;
		}

		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		PlayerInfo[giveplayerID][pWarns] += 1;
		new warns = PlayerInfo[giveplayerID][pWarns];
		new string256[256];
		format(string256, 256, "Admin: %s сложи предупреждение на %s [%d/5][Reason: %s]", accountNickname, giveplayeridNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		if (PlayerInfo[giveplayerID][pWarns] == 5)
		{
			format(string256, 256, "Admin: %s събра 5 предупреждения и акаунтът му е блокиран!", giveplayeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			PlayerTimerInfo[giveplayerID][ptKick] = 1;
		}

		return 1;
	}

	//setname - open
	if (strcmp(cmd, "/setname", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setname [ID на играч] [ново име]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setname [ID на играч] [ново име]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setname [ID на играч] [ново име]");
			return 1;
		}

		if (strlen(result) < 0 || strlen(result) > MAX_PLAYER_NAME)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името трябва да е от 0 до 24 символа!");
			return 1;
		}

		if (isLogged[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва играчът да влезе в профила си първо!");
		new newAccountFileNickname[256];
		format(newAccountFileNickname, 256, "%s.ini", result);
		if (dini_Exists(newAccountFileNickname)) return SendClientMessage(playerid, COLOR_GRAD1, "Вече има регистриран такъв Nickname!");
		new string256[256];
		new giveplayeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayeridNickname, 25);
		format(string256, 256, "*Ти смени името на %s на %s *", giveplayeridNickname, result);
		SendClientMessage(playerid, COLOR_ADMIN_RED, string256);
		format(string256, 256, "*Администратор %s смени твоето име на %s *", accountNickname, result);
		SendClientMessage(giveplayerID, COLOR_ADMIN_RED, string256);
		SetPlayerName(giveplayerID, result);
		new currentProfileIni[60];
		format(currentProfileIni, 60, "%s.ini", giveplayeridNickname);
		dini_Remove(currentProfileIni);
		SaveAccount(giveplayerID);
		//Houses:
		if (PlayerInfo[giveplayerID][pHouseOwnedID] > -1)
		{
			new houseID = PlayerInfo[giveplayerID][pHouseOwnedID];
			format(HouseInfo[houseID][hOwnerName], 256, result);
			SaveHouse(houseID);
		}

		//Bizz:
		if (PlayerInfo[giveplayerID][pBizOwnedID] > -1)
		{
			new bizID = PlayerInfo[giveplayerID][pBizOwnedID];
			format(BizInfo[bizID][bOwnerName], 256, result);
			SaveHouse(bizID);
		}

		//Private Vehs:
		for (new i = 0; i < 3; i++)
		{
			if (PlayerInfo[giveplayerID][pPrivateVeh][i] > -1)
			{
				new privateVehID = PlayerInfo[giveplayerID][pPrivateVeh][i];
				format(PrivateVehInfo[privateVehID][vOwnerName], 256, result);
				SavePrivateVehicle(privateVehID);
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/jetpack", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да бъдете администратор за да използвате тази команда!");
			return 1;
		}

		new string2230[512];
		new string2230result[2530];
        format(string2230, 512, "{FFFFFF}Команди за Admin Level: {009BFF}Helper (1)\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Команди за Admin Level: {009BFF}Administrator (2)\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Команди за Admin Level: {009BFF}Moderator (3)\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Команди за Admin Level: {009BFF}Grand Admin (4)\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Команди за Admin Level: {009BFF}Server Owner (5) Лист 1\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Команди за Admin Level: {009BFF}Server Owner (5) Лист 2\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Команди за {00ff00}EVENT ADMIN\n");
        strcat(string2230result, string2230);
        ShowPlayerDialog(playerid, DIALOG_AHELP, DIALOG_STYLE_TABLIST, "{009BFF}ADMIN HELP", string2230result, "Напред", "Затвори");
		return 1;
	}

	if (strcmp(cmd, "/setweather", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setweather [weather ID]");
			return 1;
		}

		new weather = strval(tmp);
		if (weather < 1 || weather > 19)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Времето трябва да е между 1 и 19.");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string256[256];
		SetWeather(weather);
		format(string256, 256, "* Времето в сървъра беше променено от %s на Weather ID %d *", accountNickname, weather);
		SendClientMessageToAll(COLOR_YELLOW, string256);
		return 1;
	}

	if (strcmp(cmd, "/sethours", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sethours [hours]");
			return 1;
		}

		new hours = strval(tmp);
		if (hours < 1 || hours > 23)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Часът трябва да е между 1 и 23.");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string256[256];
		SetWorldTime(hours);
		serverTime = hours;
		format(string256, 256, "* Часът в сървъра беше променен от %s на %d часа *", accountNickname, hours);
		SendClientMessageToAll(COLOR_YELLOW, string256);
		return 1;
	}

	if (strcmp(cmd, "/especvehs", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на армията!");
		if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер на армията!");
		new string256[256];
		if (PlayerInfo[playerid][pFaction] == FACTION_ARMY)
		{
			if (eSpecVehsArmy == false)
			{
				format(string256, 256, "* %s позволи да карате специалните превозни средства за отбрана на щата! *", accountNickname);
				SendFactionMessage(FACTION_ARMY, COLOR_ARMY, string256);
				eSpecVehsArmy = true;
			}
			else
			{
				format(string256, 256, "* %s забрани да карате специалните превозни средства! *", accountNickname);
				SendFactionMessage(FACTION_ARMY, COLOR_ARMY, string256);
				eSpecVehsArmy = false;
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/pay", true) == 0)
	{
		if (PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва ви поне 5-ти Level за тази команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pay [ID на играч] [стойност]");
			return 1;
		}

		new giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pay [ID на играч] [стойност]");
			return 1;
		}

		new moneys = strval(tmp);
		if (moneys < 1 || moneys > 1000000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Сумата трябва да е между $1 до $1 000 000.");
			return 1;
		}

		if (IsPlayerConnected(giveplayerid))
		{
			if (giveplayerid != playerid)
			{
				if (CorDetector(4.0, playerid, giveplayerid))
				{
					if (PlayerInfo[playerid][pCash] < moneys) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова пари!");
					GivePlayerCash(playerid, -moneys);
					GivePlayerCash(giveplayerid, moneys);
					new string256[256];
					new giveplayeridNickname[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerid, giveplayeridNickname, 25);
					format(string256, 256, "Ти даде на {FFFFFF}%s {FFFF00}$%d {FFFFFF}пари в брой.", giveplayeridNickname, moneys);
					SendClientMessage(playerid, COLOR_WHITE, string256);
					format(string256, 256, "Ти получи {FFFF00}$%d {FFFFFF}пари в брой от %s.", moneys, accountNickname);
					SendClientMessage(giveplayerid, COLOR_WHITE, string256);
					format(string256, 256, "* %s извади пари от джоба си и ги даде на %s", GetPlayerNickname(playerid), GetPlayerNickname(giveplayerid));
					SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на себе си!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		}

		return 1;
	}

	//invalid command message
	return SendClientMessage(playerid, COLOR_LIGHTBLUE_GRAY, "Командата, която въведохте не е разпозната. Полезни команди: /help /ahelp /viphelp");
}

stock CheckForEnterInPrivateVeh(playerid, vehicleid, ispassenger)
{
	new privateVehIndex = VehicleInfo[vehicleid][vPrivateID];

	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		if (strcmp(PrivateVehInfo[privateVehIndex][vOwnerName], accountNickname, false))
		{
			if (!ispassenger)
			{
				if (PrivateVehInfo[privateVehIndex][vLocked] == 1)
				{
					new Float: X, Float: Y, Float: Z;
					GetPlayerPos(playerid, X, Y, Z);
					SetPlayerPos(playerid, X, Y, Z);
					if (PrivateVehInfo[privateVehIndex][vOwner] == 1)
					{
						LockedPlayerVehMessage(playerid, privateVehIndex, false);
					}
					else if (PrivateVehInfo[privateVehIndex][vOwner] == 0)
					{
						LockedPlayerVehMessage(playerid, privateVehIndex, true);
					}
				}
			}
		}
	}
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	RemovePlayerAttachedObject(playerid, 0);
	CheckForEnterInPrivateVeh(playerid, vehicleid, ispassenger);

	if (VehicleInfo[vehicleid][vRentable] == 1 && !ispassenger)
	{
		if (VehicleInfo[vehicleid][vRentedBy] >= 0 && VehicleInfo[vehicleid][vRentedBy] != playerid)
		{
			if(VehicleInfo[vehicleid][vRentLock] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Това превозно средство е заключено!");
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}
	}

	if (isUnseenCriminalsVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_UNSEEN);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}
	}

	if (isArmySpecialVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_ARMY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_ARMY);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (!PlayerInfo[playerid][pArmyDuty])
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате това превозно средство.");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (eSpecVehsArmy == false)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Превозните средства за защита на щата са забранени от генерала!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLvpdDutyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LVPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_LVPD);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (!PlayerInfo[playerid][pPoliceDuty])
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате служебно превозно средство!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLspdDutyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_LSPD);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (!PlayerInfo[playerid][pPoliceDuty])
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате служебно превозно средство!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isRcpdVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_RCPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_RCPD);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLvpdVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LVPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_LVPD);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLspdVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_LSPD);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isFbiVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_FBI)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_FBI);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isKACCVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_KACC)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_KACC);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isArmyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_ARMY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_ARMY);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isGroveVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_GROVE)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_GROVE);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isCripVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_CRIP)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_CRIP);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isTriadsVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_TRIADS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_TRIADS);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isAztecasVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_AZTECAS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_AZTECAS);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isItalianVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_ITALIAN_MAFIA)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_ITALIAN_MAFIA);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isWcwVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_WCW)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_WCW);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isUnseenCriminalsVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_UNSEEN);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isBallasVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_BALLAS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_BALLAS);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isVagosVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_VAGOS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedFactionVehMessage(playerid, FACTION_VAGOS);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isTaxiVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_TAXI)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedJobVehMessage(playerid, JOB_TAXI);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (!PlayerInfo[playerid][pTaxiDuty])
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да си на смяна, за да караш този превоз!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isFuelComapnyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedJobVehMessage(playerid, JOB_FUELCOMPANY);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
        if(!PlayerInfo[playerid][pFuelCoDuty])
        {
            new Float: X, Float: Y, Float: Z;
            GetPlayerPos(playerid, X, Y, Z);
            SendClientMessage(playerid, COLOR_GRAD2, "Трябва да си на смяна, за да караш този превоз!");
            SetPlayerPos(playerid, X, Y, Z);
        }
	}

	if (isNewsVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_NEWS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedJobVehMessage(playerid, JOB_NEWS);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isMechanicVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_MECHANIC)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				LockedJobVehMessage(playerid, JOB_MECHANIC);
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{   
    if(IsPlayerNPC(playerid))
    {
        HandleNpcOnExitVehicle(playerid);
    }
    else
    {
    	UnlockOLockedVeh(playerid);
    	if (PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] >= 0)
    	{
    		PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] = 0;
    	}

        if(isFuelComapnyVeh[vehicleid]) 
        {
            TextDrawHideForPlayer(playerid, TankFuel[playerid]);
        }

    	if (isWorkingCoalmine[playerid] == true)
    	{
    		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
    		switch (PlayerInfo[playerid][pVip])
    		{
    			case 0:
    				{
    					PlayerInfo[playerid][pCoalmineTimer] = 35 * 60;
    				}

    			case 1:
    				{
    					PlayerInfo[playerid][pCoalmineTimer] = 30 * 60;
    				}

    			case 2:
    				{
    					PlayerInfo[playerid][pCoalmineTimer] = 25 * 60;
    				}

    			case 3:
    				{
    					PlayerInfo[playerid][pCoalmineTimer] = 20 * 60;
    				}
    		}

    		DisablePlayerCheckpoint(playerid);
    		SetVehicleToRespawn(vehicleid);
    		isWorkingCoalmine[playerid] = false;
    	}

    	if (isWorkingDeliver[playerid] == true)
    	{
    		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
    		switch (PlayerInfo[playerid][pVip])
    		{
    			case 0:
    				{
    					PlayerInfo[playerid][pDeliverTimer] = 35 * 60;
    				}

    			case 1:
    				{
    					PlayerInfo[playerid][pDeliverTimer] = 30 * 60;
    				}

    			case 2:
    				{
    					PlayerInfo[playerid][pDeliverTimer] = 25 * 60;
    				}

    			case 3:
    				{
    					PlayerInfo[playerid][pDeliverTimer] = 20 * 60;
    				}
    		}

    		DisablePlayerCheckpoint(playerid);
    		SetVehicleToRespawn(vehicleid);
    		isWorkingDeliver[playerid] = false;
    	}

    	if (isWorkingSweep[playerid] == true)
    	{
    		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
    		switch (PlayerInfo[playerid][pVip])
    		{
    			case 0:
    				{
    					PlayerInfo[playerid][pSweeperTimer] = 35 * 60;
    				}

    			case 1:
    				{
    					PlayerInfo[playerid][pSweeperTimer] = 30 * 60;
    				}

    			case 2:
    				{
    					PlayerInfo[playerid][pSweeperTimer] = 25 * 60;
    				}

    			case 3:
    				{
    					PlayerInfo[playerid][pSweeperTimer] = 20 * 60;
    				}
    		}

    		DisablePlayerCheckpoint(playerid);
    		SetVehicleToRespawn(vehicleid);
    		isWorkingSweep[playerid] = false;
    	}

    	if (isWorkingPizza[playerid] == true)
    	{
    		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
    		switch (PlayerInfo[playerid][pVip])
    		{
    			case 0:
    				{
    					PlayerInfo[playerid][pPizzaTimer] = 35 * 60;
    				}

    			case 1:
    				{
    					PlayerInfo[playerid][pPizzaTimer] = 30 * 60;
    				}

    			case 2:
    				{
    					PlayerInfo[playerid][pPizzaTimer] = 25 * 60;
    				}

    			case 3:
    				{
    					PlayerInfo[playerid][pPizzaTimer] = 20 * 60;
    				}
    		}

    		DisablePlayerCheckpoint(playerid);
    		SetVehicleToRespawn(vehicleid);
    		isWorkingPizza[playerid] = false;
    	}

    	if (isWorkingBus[playerid] == true)
    	{
    		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
    		switch (PlayerInfo[playerid][pVip])
    		{
    			case 0:
    				{
    					PlayerInfo[playerid][pBusTimer] = 35 * 60;
    				}

    			case 1:
    				{
    					PlayerInfo[playerid][pBusTimer] = 30 * 60;
    				}

    			case 2:
    				{
    					PlayerInfo[playerid][pBusTimer] = 25 * 60;
    				}

    			case 3:
    				{
    					PlayerInfo[playerid][pBusTimer] = 20 * 60;
    				}
    		}

    		isBusVehWorking[vehicleid] = false;
    		SetVehicleToRespawn(vehicleid);
    		isWorkingBus[playerid] = false;
    		DisablePlayerCheckpoint(playerid);
    	}

    	if (isTaxiVehWorking[vehicleid] == true && IsPlayerDriver(playerid))
    	{
    		isTaxiVehWorking[vehicleid] = false;
    		new string256[256];
    		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Вие напуснахте таксито, заради което се спря начисляването на сметката.");
    		for (new i; i < MAX_PLAYERS; i++)
    		{
    			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
    			{
    				format(string256, 256, "Шофьорът напусна таксито и сега трябва да платите $%d.", VehicleInfo[vehicleid][vTaxiFare]);
    				SendClientMessage(i, COLOR_LIGHTYELLOW, string256);
    				TextDrawHideForPlayer(i, FareStatus[i]);
    			}
    		}
    	}

    	if (radioveh[vehicleid] > 0)
    	{
    		StopAudioStreamForPlayer(playerid);
    	}
    }
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(IsPlayerNPC(playerid))
    {
        if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_ONFOOT)
        {
            HandleNpcOnExitVehicle(playerid);
        }
    }

	if (newstate == PLAYER_STATE_ONFOOT)
	{
		UnlockOLockedVeh(playerid);
	}

	//is driven vehicle - open
	if (newstate == PLAYER_STATE_DRIVER)
	{
		new hisVeh = GetPlayerVehicleID(playerid);
		hisLastVeh[playerid] = hisVeh;
	}

	//is driven vehicle - close

	if (newstate == PLAYER_STATE_DRIVER)
	{
        new vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			PlayerTimerInfo[playerid][ptFuel] = 50;
		}
	}

	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		UpdateSpeedoText(playerid);
		ShowSpeedoStatusForPlayer(playerid);
	}

	if (newstate == PLAYER_STATE_DRIVER)
	{
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			new vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsNoFuelVehicle(vehModel) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Натисни {40BF00}2{FFFFFF} за да включиш двигателя!");
			}
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		if (VehicleInfo[vehicleid][vForSaleShop] == 1)
		{
			new string256[256];
			new vehicleidSellCar = VehicleInfo[vehicleid][vForSaleID];
			format(string256, 256, "{FFFFFF}Транспорът се продава!\n\n{FFFFFF}Информация:\n{FFFFFF}Модел: {40BF00}%s\n{FFFFFF}Цена: {40BF00}$%s\n\n{FFFFFF}За да купите този превоз, натиснете {40BF00}Купи", GetVehicleName(vehicleid), FormatNumber(SellCarInfo[vehicleidSellCar][scVehPrice]));
			ShowPlayerDialog(playerid, DIALOG_BUYVEH, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Купи", "Излез");
		}

		if (VehicleInfo[vehicleid][vRentable] == 1)
		{
			if (VehicleInfo[vehicleid][vRentedBy] == -1)
			{
				new string256[256];
				format(string256, 256, "{FFFFFF}Транспорът се дава под наем!\n\n{FFFFFF}Информация:\n{FFFFFF}Модел: {40BF00}%s\n{FFFFFF}Цена: {40BF00}$%d\n\n{FFFFFF}За да наемете този превоз, натиснете {40BF00}Наеми", GetVehicleName(vehicleid), VehicleInfo[vehicleid][vRentPrice]);
				ShowPlayerDialog(playerid, DIALOG_RENTVEH, DIALOG_STYLE_MSGBOX, "{FFFFFF}Транспорт под наем", string256, "Наеми", "Излез");
			}
		}

		if (isPizzaVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да разнасяш пица, напиши {e7905e}/pizzajob {ffffff}(Rule: Не използвай мотора за лични цели)");
		}

		if (isBusVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да разнасяш хора, напиши {e7905e}/busjob {ffffff}(Rule: Не използвай автобуса за лични цели)");
		}

		if (isSweepVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да почистваш, напиши {e7905e}/sweepjob {ffffff}(Rule: Не използвай чистача за лични цели)");
		}

		if (isDeliverVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да доставяш, напиши {e7905e}/deliverjob {ffffff}(Rule: Не използвай превозното средство за лични цели)");
		}

		if (isCoalmineVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да работиш, напиши {e7905e}/coalminejob {ffffff}(Rule: Не използвай превозното средство за лични цели)");
		}
	}
	//onfoot check - close
	if (newstate == PLAYER_STATE_ONFOOT)
	{
		if (inTaxiVeh[playerid] == true)
		{
			inTaxiVeh[playerid] = false;
			TextDrawHideForPlayer(playerid, FareStatus[playerid]);
		}

		HideSpeedoStatusForPlayer(playerid);
		StopAudioStreamForPlayer(playerid);
	}

	//
	if (newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (isTaxiVeh[vehicleid] == true)
		{
			inTaxiVeh[playerid] = true;
			if (isTaxiVehWorking[vehicleid] == true)
			{
				TextDrawShowForPlayer(playerid, FareStatus[playerid]);
			}
		}

		if (radioveh[vehicleid] == 0)
		{
			if (!PlayerInfo[playerid][pDisableCarRadio])
			{
				PlayAudioStreamForPlayer(playerid, "www.google.com");
			}
			GameTextForPlayer(playerid, "~r~~h~RADIO OFF", 650, 1);
		}
		else
		{
			new stringRadio[50];
			format(stringRadio, 50, "~b~~h~RADIO %s", radioAudioStreamNames[radioveh[vehicleid]]);
			GameTextForPlayer(playerid, stringRadio, 650, 1);
			if (!PlayerInfo[playerid][pDisableCarRadio])
			{
				PlayAudioStreamForPlayer(playerid, radioAudioStream[radioveh[vehicleid]]);
			}
		}
	}

	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	new hisVeh = GetPlayerVehicleID(playerid);
	if (IsPlayerInRangeOfPoint(playerid, 4.0, findVehX[playerid], findVehY[playerid], findVehZ[playerid]))
	{
		SendClientMessage(playerid, COLOR_YELLOW, "[Tracker] Вие достигнахте до вашата кола.");
		DisablePlayerCheckpoint(playerid);
	}

    if(gpsOn[playerid])
    {  
        for(new i=0; i<MAX_FUEL_STATIONS; i++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 4.0, FuelStationInfo[i][fsCoordsX], FuelStationInfo[i][fsCoordsY], FuelStationInfo[i][fsCoordsZ]))
            {
                SendClientMessage(playerid, COLOR_GPS, "[GPS] Вие достигнахте до избраната от вас бензиностанция!");
                DisablePlayerCheckpoint(playerid);
                gpsOn[playerid] = false;
            }
        }

    	if (IsPlayerInRangeOfPoint(playerid, 4.0, PizzaJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, TaxiJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, TaxiJobBC) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, SweepJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, MechanicJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Garage) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, GarageNeon) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, DeliverJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, CoalmineJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, BusJob) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Police) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, TheNews) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Bank) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, BankBC) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Army) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, RobPoint) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, RobPointBC) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, FishingPlace) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, MiniGamesArena) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Crip) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, WestCoastWheelers) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Vagos) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, UnseenCriminals) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Ballas) ||
    		IsPlayerInRangeOfPoint(playerid, 4.0, Autosallon))
    	{
    		SendClientMessage(playerid, COLOR_GPS, "[GPS] Вие достигнахте до избраното от вас място.");
    		DisablePlayerCheckpoint(playerid);
    		gpsOn[playerid] = false;
    	}
    }

	if (IsPlayerInRangeOfPoint(playerid, 4.0, Tip0Checkpoint))
	{
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "[Напътствие] {ffffff}Напишете /enter, след което си купете GPS, чрез /buy");
		DisablePlayerCheckpoint(playerid);
	}

	if (isDeliverVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC1)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC2)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC3)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC4)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC5)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC6)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC7)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC8)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC9)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC10)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC11)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC12, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC12)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC13, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC13))
		{
			SetPlayerCheckpoint(playerid, JOB_DELIVER_FINAL, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_DELIVER);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingDeliver[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pDeliverTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pDeliverTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pDeliverTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pDeliverTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			PlayerInfo[playerid][pExp] += 3;
			PlayerPassedJob(playerid, SIDEJOB_DELIVER);
		}
	}

	//Coalmine open
	if (isCoalmineVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC1)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC2)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC3)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC4)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC5)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC6)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC7)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC8))
		{
			SetPlayerCheckpoint(playerid, JOB_COALMINE_FINAL, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_COALMINE);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingDeliver[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			PlayerInfo[playerid][pExp] += 3;
			PlayerPassedJob(playerid, SIDEJOB_COALMINE);
		}
	}

	//Coalmine close

	if (isPizzaVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC1)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC2)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC3)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC4)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC5)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC6)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC7)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC8)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC9)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC10)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC11))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
			SetPlayerCheckpoint(playerid, JOB_PIZZA_FINAL, 4.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_PIZZA);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingPizza[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pPizzaTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pPizzaTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pPizzaTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pPizzaTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			PlayerInfo[playerid][pExp] += 3;
			PlayerPassedJob(playerid, SIDEJOB_PIZZA);
		}
	}

	if (isBusVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC1)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC2)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC3)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC4)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC5)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC6)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC7)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC8)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC9)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC10)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC11))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
			SetPlayerCheckpoint(playerid, JOB_BUS_FINAL, 4.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_BUS);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			new vehicleid = GetPlayerVehicleID(playerid);
			isBusVehWorking[vehicleid] = false;
			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingBus[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pBusTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pBusTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pBusTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pBusTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			PlayerInfo[playerid][pExp] += 3;
			PlayerPassedJob(playerid, SIDEJOB_BUS);
		}
	}

	if (isSweepVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC1)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC2)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC3)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC4)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC5)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC6)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC7)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC8))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
			SetPlayerCheckpoint(playerid, JOB_SWEEP_FINAL, 4.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_SWEEP);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}
			RemovePlayerFromVehicle(playerid);
			SetVehicleToRespawn(hisVeh);
			DisablePlayerCheckpoint(playerid);
			isWorkingSweep[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pSweeperTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pSweeperTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pSweeperTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pSweeperTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			GivePlayerExp(playerid, 2);
			PlayerPassedJob(playerid, SIDEJOB_SWEEP);
		}
	}

	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	new playerMission = PlayerInfo[playerid][pMission];
	switch(playerMission)
	{
		case 1:
		{
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{33CCFF}Ти достигна до своята първа банда!\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}Ако искате да напуснете първата ви банда, напишете {33CCFF}/leavefaction {ffffff}и ще станете цивилен!\n\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}Първите мисии в нашия сървър ви предоставят по-кратък и ясен начин да научите какво можете да правите тук\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}Екипът на сървъра ви пожелава приятна игра!");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_HELP, DIALOG_STYLE_MSGBOX, "{FFFF00}Начална информация", string2230result, "Затвори", "");
			FinishMission(playerid, 1000, 2);
		}
	}
	//MISSION_1_START
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(IsPlayerNPC(playerid))
    {
        SpawnPlayer(playerid);
    }
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if (pickupid == pizzaJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_PIZZA);
		new string256[256];
		if (PlayerInfo[playerid][pPizzaTimer] > 0)
		{
			format(string256, 256, "~g~PIZZA BOY SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pPizzaTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~PIZZA BOY SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == sweepJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_SWEEP);
		new string256[256];
		if (PlayerInfo[playerid][pSweeperTimer] > 0)
		{
			format(string256, 256, "~g~SWEEP SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pSweeperTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~SWEEP SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == busJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_BUS);
		new string256[256];
		if (PlayerInfo[playerid][pBusTimer] > 0)
		{
			format(string256, 256, "~g~BUS SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pBusTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~BUS SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == deliverJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_DELIVER);
		new string256[256];
		if (PlayerInfo[playerid][pDeliverTimer] > 0)
		{
			format(string256, 256, "~g~DELIVER SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pDeliverTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~DELIVER SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == coalmineJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_COALMINE);
		new string256[256];
		if (PlayerInfo[playerid][pCoalmineTimer] > 0)
		{
			format(string256, 256, "~g~COALMINE SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pCoalmineTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~COALMINE SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == mechanicJobPickup)
	{
		GameTextForPlayer(playerid, "~g~MECHANIC JOB", 1500, 3);
	}

	if (pickupid == KACCArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_KACC)
		{
			SetArmour(playerid, 100);
		}
	}

	if (pickupid == ArmyArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_ARMY)
		{
			SetArmour(playerid, 100);
		}
	}

	if (pickupid == fbiArmour[0] || pickupid == fbiArmour[1])
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SetArmour(playerid, 100);
		}
	}
	
	if (pickupid == rcpdArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_RCPD)
		{
			SetArmour(playerid, 100);
		}
	}

	if (pickupid == lspdArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			SetArmour(playerid, 100);
		}
	}

	if (pickupid == lvpdArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SetArmour(playerid, 100);
		}
	}

	if (isBizPickup[pickupid] == true)
	{
		new string256[356];
		new bizID = bizPickupIndex[pickupid];
		if (BizInfo[bizID][bOwner] == 0 && BizInfo[bizID][bFee] == 0)
		{
			format(string256, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[bizID][bName], BizInfo[bizID][bPrice], BizInfo[bizID][bLevel], BizInfo[bizID][bPayOut]);
			SendMessageScreenText(playerid, string256);
			return 1;
		}

		if (BizInfo[bizID][bOwner] == 0 && BizInfo[bizID][bFee] > 0)
		{
			format(string256, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[bizID][bName], BizInfo[bizID][bPrice], BizInfo[bizID][bLevel], BizInfo[bizID][bFee], BizInfo[bizID][bPayOut]);
			SendMessageScreenText(playerid, string256);
			return 1;
		}

		if (BizInfo[bizID][bOwner] == 1 && BizInfo[bizID][bFee] == 0)
		{
			format(string256, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[bizID][bName], BizInfo[bizID][bOwnerName], BizInfo[bizID][bLevel], BizInfo[bizID][bPayOut]);
			SendMessageScreenText(playerid, string256);
			return 1;
		}

		if (BizInfo[bizID][bOwner] == 1 && BizInfo[bizID][bFee] > 0)
		{
			format(string256, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~w~~n~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[bizID][bName], BizInfo[bizID][bOwnerName], BizInfo[bizID][bLevel], BizInfo[bizID][bFee], BizInfo[bizID][bPayOut]);
		}
		SendMessageScreenText(playerid, string256);
	}

	if (isHousePickup[pickupid] == true)
	{
		new string256[256];
		new houseID = housePickupIndex[pickupid];
		if (HouseInfo[houseID][hOwner] == 0)
		{
			if (HouseInfo[houseID][hInterior] == 1)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 2)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 3)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 4)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 5)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 6 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 6)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 7)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 8)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 9)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 10)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 11)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 12)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 13)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 14)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 15)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 16)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 17)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 18)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 19)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 2 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 20)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 21)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 22)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 22 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 23)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 24)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 25)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}

			if (HouseInfo[houseID][hInterior] == 26)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
			}
		}
		else
		{
			format(string256, 256, "~w~Owner:~g~ %s~n~~w~Level: ~b~ %d~n~", HouseInfo[houseID][hOwnerName], HouseInfo[houseID][hLevel]);
		}
		SendMessageScreenText(playerid, string256);
	}

	for (new i; i < 11; i++)
	{
		if (pickupid == ATMPickup[i])
		{
		TextDrawSetString(CommandInfo[playerid], "~w~USE ~g~/atm~n~~n~~w~START ROB WITH ~g~/robatm");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		}
	}

	for (new i; i < 9; i++)
	{
		if (pickupid == pressEnterOutside[i])
		{
			SendMessageScreenText(playerid, "~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
		}
	}
	for (new i; i < 8; i++)
	{
		if (pickupid == pressEnterInside[i])
		{
			SendMessageScreenText(playerid, "~w~PRESS ~r~ENTER ~w~TO GO OUTSIDE");
		}
	}

	if (pickupid == giftPickup)
	{
		TextDrawSetString(CommandInfo[playerid], "~p~~h~GIFTS~n~~w~PRESS ~y~Y ~w~TO GET GIFT");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == robberyStartPickup || pickupid == robberyStartPickup2)
	{		
		TextDrawSetString(CommandInfo[playerid], "~r~ROBBERY START POINT~n~~w~TYPE ~y~/robbery ~w~TO START A ROB");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == fineGunLicPickup)
	{
		TextDrawSetString(CommandInfo[playerid], "~b~POLICE~n~~w~USE ~y~/payfine ~w~TO PAY FINE");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == bankPickup)
	{
		SendMessageScreenText(playerid, "~g~BANK~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == blackMarket)
	{
		TextDrawSetString(CommandInfo[playerid], "~r~BLACK MARKET~n~~w~TYPE ~r~/buy");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == bikeShopPickup)
	{
		SendMessageScreenText(playerid, "~b~BIKE SHOP~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == taxiPickup)
	{
		SendMessageScreenText(playerid, "~y~TAXI JOB~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == minigamesArenaPickup)
	{
		SendMessageScreenText(playerid, "~b~MINI-GAMES ARENA~n~~w~TYPE ~r~/minigames ~w~TO JOIN A GAME");
	}

	if (pickupid == lspdPickup)
	{
		SendMessageScreenText(playerid, "~b~LOS SANTOS POLICE~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == lvpdPickup)
	{
		SendMessageScreenText(playerid, "~b~LAS VENTURAS POLICE~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}
	
	if (pickupid == rcpdPickup)
	{
		SendMessageScreenText(playerid, "~b~RED COUNTY POLICE~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == newsPickup[0])
	{
		SendMessageScreenText(playerid, "~p~THE NEWS BUILDING~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == fbiPickup[0] || pickupid == fbiPickup[1])
	{
		SendMessageScreenText(playerid, "~p~Federal Bureau Of Investigation~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE");
	}

	if (pickupid == buyBikePickup)
	{
		TextDrawSetString(CommandInfo[playerid], "~b~BIKE SHOP~n~~w~USE ~y~/buyveh");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == RobPickup)
	{
		TextDrawSetString(CommandInfo[playerid], "~g~TO START STEALING MONEY~w~~n~TYPE /rob");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == buyCarPickup)
	{
		TextDrawSetString(CommandInfo[playerid], "~b~CAR SHOP~n~~w~USE ~y~/buyveh");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	if (pickupid == bankPickupDollar)
	{
		TextDrawSetString(CommandInfo[playerid], "~g~LOS SANTOS BANK~n~~n~~w~USE ~y~/bank");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
	}

	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if (pickupid == BIZPICKUP[0])
	{
		TextDrawSetString(CommandInfo[playerid], "~g~GENERAL STORE~n~~w~Use /BUY");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[1])
	{
		TextDrawSetString(CommandInfo[playerid], "~b~BAR~n~~w~Use /DRINK");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[2])
	{
		TextDrawSetString(CommandInfo[playerid], "~b~BAR~n~~w~Use /DRINK");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[3])
	{
		TextDrawSetString(CommandInfo[playerid], "~g~GENERAL STORE~n~~w~Use /BUY");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[4])
	{
		TextDrawSetString(CommandInfo[playerid], "~r~AMMUNATION~n~~w~Use /BUYGUN /BUYARMOUR ($450)");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[5])
	{
		TextDrawSetString(CommandInfo[playerid], "~r~AMMUNATION~n~~w~Use /BUYGUN /BUYARMOUR ($450)");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[6])
	{
		TextDrawSetString(CommandInfo[playerid], "~r~AMMUNATION~n~~w~Use /BUYGUN /BUYARMOUR ($450)");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[7])
	{
		TextDrawSetString(CommandInfo[playerid], "~g~GENERAL STORE~n~~w~Use /BUY");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[8])
	{
		TextDrawSetString(CommandInfo[playerid], "~p~CLOTHES STORE~n~~w~Use /BUYSKIN");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[9])
	{
		TextDrawSetString(CommandInfo[playerid], "~p~CLOTHES STORE~n~~w~Use /BUYSKIN");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[10])
	{
		TextDrawSetString(CommandInfo[playerid], "~y~FOOD STORE~n~~w~Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[11])
	{
		TextDrawSetString(CommandInfo[playerid], "~y~FOOD STORE~n~~w~Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[12])
	{
		TextDrawSetString(CommandInfo[playerid], "~y~FOOD STORE~n~~w~Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[13])
	{
		TextDrawSetString(CommandInfo[playerid], "~p~FISHING STORE~n~~w~Use /buy /sellfish /sellcrate");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[14])
	{
		TextDrawSetString(CommandInfo[playerid], "~g~GYM~n~~w~Use /train");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[15])
	{
		TextDrawSetString(CommandInfo[playerid], "~g~GYM~n~~w~Use /train");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == FOODPICKUP[0])
	{
		TextDrawSetString(CommandInfo[playerid], "~y~FOOD AND DRINKS~n~~w~Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == FOODPICKUP[1])
	{
		TextDrawSetString(CommandInfo[playerid], "~y~FOOD AND DRINKS~n~~w~Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == FOODPICKUP[2])
	{
		TextDrawSetString(CommandInfo[playerid], "~y~FOOD AND DRINKS~n~~w~Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new privateVehID = VehicleInfo[vehicleid][vPrivateID];
		PrivateVehInfo[privateVehID][vVehPaintJob] = paintjobid;
	}

	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

stock SendInCarMessage(playerid, COLOR, string[])
{
	new vehID = GetPlayerVehicleID(playerid);
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (GetPlayerVehicleID(i) == vehID)
		{
			SendClientMessage(i, COLOR, string);
		}
	}
}

stock SendLocalMessageExceptPlayerid(Float: cor, playerid, COLOR, string[])
{
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (i != playerid)
		{
			if (CorDetector(cor, i, playerid))
			{
				if (GetPlayerInterior(playerid) == GetPlayerInterior(i))
				{
					if (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
					{
						SendClientMessage(i, COLOR, string);
					}
				}
			}
		}
	}
}

stock SendLocalMessage(Float: cor, playerid, COLOR, string[])
{
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (CorDetector(cor, i, playerid))
		{
			if (GetPlayerInterior(playerid) == GetPlayerInterior(i))
			{
				if (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
				{
					SendClientMessage(i, COLOR, string);
				}
			}
		}
	}
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	//RCPD Cell - open
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,267.1508,82.2370,1001.0391))
		{
			if(PlayerInfo[playerid][pFaction] != FACTION_RCPD)
			{
				return NotInFactionMessage(playerid, FACTION_RCPD);
			}
			if(rcpdCell1open==false)
			{
				MoveObject(rcpdCell1, 266.352783, 83.219932, 1001.280395, 3);
				rcpdCell1open = true;
			}
			else
			{
				MoveObject(rcpdCell1, 266.282501, 80.981002, 1001.280395, 3);
				rcpdCell1open = false;
			}
		}
	}
	
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,267.0193,86.9113,1001.0391))
		{
			if(PlayerInfo[playerid][pFaction] != FACTION_RCPD)
			{
				return NotInFactionMessage(playerid, FACTION_RCPD);
			}
			if(rcpdCell2open==false)
			{
				MoveObject(rcpdCell2, 266.486785, 87.487892, 1001.280395, 3);
				rcpdCell2open = true;
			}
			else
			{
				MoveObject(rcpdCell2, 266.434112, 85.750198, 1001.271728, 3);
				rcpdCell2open = false;
			}
		}
	}
	//RCPD Cell - close
	//H Menu - open
	if (newkeys & 262144)
	{
		if (IsPlayerSpawned(playerid) && IsPlayerOnFoot(playerid))
		{
			//OpenInventory(playerid);
            new string2230[512];
            new string2230result[2230];
            format(string2230, 512, "{62dd49}1. {ffffff}Отвори помощното меню\n");
            strcat(string2230result, string2230);
            format(string2230, 512, "{62dd49}2. {ffffff}Отвори инвентара\n");
            strcat(string2230result, string2230);
            format(string2230, 512, "{62dd49}3. {ffffff}Отвори статистиката си\n");
            strcat(string2230result, string2230);
            format(string2230, 512, "{62dd49}4. {ffffff}Смени своя SPAWN Skin\n");
            strcat(string2230result, string2230);
            format(string2230, 512, "{62dd49}5. {ffffff}Избери дали да се SPAWN-ваш с Faction Skin\n");
            strcat(string2230result, string2230);
			format(string2230, 512, "{62dd49}6. {ffffff}Пусни оръжието си на земята\n");
            strcat(string2230result, string2230);
            ShowPlayerDialog(playerid, DIALOG_INTERATICE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Меню", string2230result, "Напред", "Затвори");
		}
	}
	//H Menu - close
	//ports, gates - open
	if (newkeys & KEY_SUBMISSION)
	{
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1583.2211, -1637.3295, 13.3905))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
			lspdGateDoorTimer = 10;
            SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
			MoveDynamicObject(lspdGateDoor, 1581.937133, -1637.983764, 9.981795, 2.0, 0.000000, 0.000000, -87.099975);
		}
	}

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 1542.8047, -1627.7461, 13.3828))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
				lspdPortTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 2, 1.00000, 11.0000, -89.20010);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
				lspdPortTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 2, 1.00000, 11.0000, -89.20010);
			}
		}
	}
	
	//LVPD - open
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 2236.8057,2453.7966,10.6956))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return NotInFactionMessage(playerid, FACTION_LVPD);
				lvpdPort1Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lvpdPort1, 2238.143798, 2450.422607, 10.642805, 5.0, 0.000000, 0.300016, -90.500106);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return NotInFactionMessage(playerid, FACTION_LVPD);
				lvpdPort1Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lvpdPort1, 2238.143798, 2450.422607, 10.642805, 5.0, 0.000000, 0.300016, -90.500106);
			}
		}
	}
	
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 2338.5601,2443.2805,6.3782))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return NotInFactionMessage(playerid, FACTION_LVPD);
				lvpdPort2Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lvpdPort2, 2335.135498, 2443.826660, 4.351267, 5.0, 0.000000, 0.000000, 63.700000);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return NotInFactionMessage(playerid, FACTION_LVPD);
				lvpdPort2Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lvpdPort2, 2335.135498, 2443.826660, 4.351267, 5.0, 0.000000, 0.000000, 63.700000);
			}
		}
	}
	//LVPD - close

	//GROVE  - open
	if (IsPlayerInRangeOfPoint(playerid, 15.0, 2448.5400, -1650.9452, 13.4048))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_GROVE) return NotInFactionMessage(playerid, FACTION_GROVE);
				groveGateTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_GROVE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(groveGate, 2451.77979, -1648.77783, 13.54984, 2, 0.00000, 0.00000, 0.00000);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_GROVE) return NotInFactionMessage(playerid, FACTION_GROVE);
				groveGateTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_GROVE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(groveGate, 2451.77979, -1648.77783, 13.54984, 2, 0.00000, 0.00000, 0.00000);
			}
		}
	}

	//GROVE - close

	//Unseen Criminals  - open
	if (IsPlayerInRangeOfPoint(playerid, 15.0, 1355.8478, -2048.7498, 56.6921))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN) return NotInFactionMessage(playerid, FACTION_UNSEEN);
				MoveDynamicObject(unseenCriminalsGate1, 1341.79736, -2049.01465, 59.41744, 16.0, 0.00000, 0.00000, 4.00000);
				MoveDynamicObject(unseenCriminalsGate2, 1366.25281, -2045.44141, 59.11782, 16.0, 0.00000, 0.00000, 9.00000);
                SendClientMessage(playerid, COLOR_FACTION_UNSEEN, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				unseenCriminalsGate1Timer = 10;
				unseenCriminalsGate2Timer = 10;
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN) return NotInFactionMessage(playerid, FACTION_UNSEEN);
				MoveDynamicObject(unseenCriminalsGate1, 1341.79736, -2049.01465, 59.41744, 16.0, 0.00000, 0.00000, 4.00000);
				MoveDynamicObject(unseenCriminalsGate2, 1366.25281, -2045.44141, 59.11782, 16.0, 0.00000, 0.00000, 9.00000);
                SendClientMessage(playerid, COLOR_FACTION_UNSEEN, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				unseenCriminalsGate1Timer = 10;
				unseenCriminalsGate2Timer = 10;
			}
		}
	}

	//Unseen Criminals - close

	//San Andreas Army - open
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 136.5198, 1941.1293, 19.3139))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return NotInFactionMessage(playerid, FACTION_ARMY);
				armyPort1Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_ARMY, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(armyPort1, 135.142593, 1941.479492, 15.087491, 5.00, 0, 0, 0);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return NotInFactionMessage(playerid, FACTION_ARMY);
				armyPort1Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_ARMY, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(armyPort1, 135.142593, 1941.479492, 15.087491, 5.00, 0, 0, 0);
			}
		}
	}

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 285.2253, 1820.8843, 17.6406))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return NotInFactionMessage(playerid, FACTION_ARMY);
				armyPort2Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_ARMY, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(armyPort2, 285.723236, 1820.534057, 13.034932, 5.00, 0, 0, 89.800071);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_ARMY) return NotInFactionMessage(playerid, FACTION_ARMY);
				armyPort2Timer = 10;
                SendClientMessage(playerid, COLOR_FACTION_ARMY, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(armyPort2, 285.723236, 1820.534057, 13.034932, 5.00, 0, 0, 89.800071);
			}
		}
	}

	//San Andreas Army - close

	//Military Aviation - open
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 2495.6892,2773.1677,10.8188))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_KACC) return NotInFactionMessage(playerid, FACTION_KACC);
				kaccPortTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_ARMY, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(kaccPort, 2497.108642, 2784.875976, 11.421746, 5.00, 0, 0, 90.000007);
				MoveDynamicObject(kaccPort2, 2496.778808, 2761.218750, 11.428609, 5.00, 0, 0, 90.000007);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_KACC) return NotInFactionMessage(playerid, FACTION_KACC);
				kaccPortTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_ARMY, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(kaccPort, 2497.108642, 2784.875976, 11.421746, 5.00, 0, 0, 90.000007);
				MoveDynamicObject(kaccPort2, 2496.778808, 2761.218750, 11.428609, 5.00, 0, 0, 90.000007);
			}
		}
	}

	//Military Aviation - close

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 1588.2328, -1635.5154, 13.3828))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
				lspdGateTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lspdGate, 1588.6683, -1638.3994, 10.2556, 2, 0.0000, 0.0000, -90.6001);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return NotInFactionMessage(playerid, FACTION_LSPD);
				lspdGateTimer = 10;
                SendClientMessage(playerid, COLOR_FACTION_POLICE, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				MoveDynamicObject(lspdGate, 1588.6683, -1638.3994, 10.2556, 2, 0.0000, 0.0000, -90.6001);
			}
		}
	}

	//Unseen Criminals
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 1027.3562,1177.6782,10.6719))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN) return NotInFactionMessage(playerid, FACTION_UNSEEN);
                SendClientMessage(playerid, COLOR_FACTION_UNSEEN, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				unseenCriminalsGateTimer_LV = 10;
				MoveDynamicObject(unseenCriminalsGate1_LV, 1037.571899, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
				MoveDynamicObject(unseenCriminalsGate2_LV, 1017.189880, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN) return NotInFactionMessage(playerid, FACTION_UNSEEN);
                SendClientMessage(playerid, COLOR_FACTION_UNSEEN, "Barrier: Бариерата ще бъде затворена след 10 секунди!");
				unseenCriminalsGateTimer_LV = 10;
				MoveDynamicObject(unseenCriminalsGate1_LV, 1037.571899, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
				MoveDynamicObject(unseenCriminalsGate2_LV, 1017.189880, 1174.793701, 13.425606, 6, 0.000000, 0.000030, 0.000000);
			}
		}
	}

	//ports, gates - close
	//items - open
	if (newkeys & KEY_YES)
	{
		if (Item_Nearest(playerid) != -1)
		{
			new itemid = Item_Nearest(playerid);
			PickupItem(playerid, itemid);
		}
	}

	//items - close
	//gift - open
	if (newkeys & KEY_YES)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5, 1480.3031, -1702.7001, 14.5226))
		{
			if (PlayerInfo[playerid][pGiftPaydays] >= 2)
			{
				new string256[256];
				new randomCash = randomex(1000, 6000);
				new randomExp = randomex(3, 10);
				GivePlayerExp(playerid, randomExp);
				GivePlayerCash(playerid, randomCash);
				format(string256, 256, "[GIFT] Вие получихте вашия подарък, който е $%d и %d EXP", randomCash, randomExp);
				SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, string256);
				if (PlayerInfo[playerid][pVip] == 1)
				{
					SendClientMessage(playerid, COLOR_VIP, "[GIFT] VIP Bonus: 2 Exp");
					GivePlayerExp(playerid, 2);
				}

				if (PlayerInfo[playerid][pVip] == 2)
				{
					SendClientMessage(playerid, COLOR_VIP, "[GIFT] VIP Bonus: 4 Exp");
					GivePlayerExp(playerid, 4);
				}

				if (PlayerInfo[playerid][pVip] == 3)
				{
					SendClientMessage(playerid, COLOR_VIP, "[GIFT] VIP Bonus: 6 Exp");
					GivePlayerExp(playerid, 6);
				}

				PlayerInfo[playerid][pGiftPaydays] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED2, "[GIFT] Вие още нямате подаръци, получавате ги при 2 Payday-а.");
			}
		}
	}

	//gift - close
	//change job - open
	//change job - close
	//radio - open
	if (IsPlayerDriver(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (newkeys &KEY_ANALOG_UP && VehicleTimerInfo[vehicleid][vtRadioChange] == 0)
		{
			if (radioveh[vehicleid] < sizeof(radioAudioStreamNames))
			{
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				radioveh[vehicleid]++;
				VehicleTimerInfo[vehicleid][vtRadioChange] = 1;
				new string256[256];
				new accountNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, accountNickname, 25);
				format(string256, 256, "[Radio] {ffffff}%s смени радиостанцията", GetPlayerNickname(playerid));
				SendInCarMessage(playerid, COLOR_RADIO, string256);
			}
			else
			{
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
			}
		}
		else if (newkeys &KEY_ANALOG_DOWN && VehicleTimerInfo[vehicleid][vtRadioChange] == 0)
		{
			if (radioveh[vehicleid] > 0)
			{
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				radioveh[vehicleid]--;
				VehicleTimerInfo[vehicleid][vtRadioChange] = 1;
				new string256[256];
				new accountNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, accountNickname, 25);
				format(string256, 256, "[Radio] {ffffff}%s смени радиостанцията", GetPlayerNickname(playerid));
				SendInCarMessage(playerid, COLOR_RADIO, string256);
			}
			else
			{
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
			}
		}
	}

	//radio - close
	if (newkeys & KEY_YES)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1535.3966, -1712.6166, 13.5469))
		{
			ShowPlayerDialog(playerid, DIALOG_LOTTO, DIALOG_STYLE_LIST, "Лотария", "{ffffff}1. Лотария на момента - {40BF00}$15\n{ffffff}2. Лотария на всеки час (San Andreas Lottery) - {40BF00}$10", "Избери", "Затвори");
		}
	}

	//lottery - close
	if (newkeys & 131072)
	{
		if (IsPlayerInAnyVehicle(playerid) && IsPlayerDriver(playerid))
		{
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 &&
				GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 &&
				GetVehicleModel(GetPlayerVehicleID(playerid)) != 510 &&
				GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
			{
				new string256[256];
				format(string256, 256, "{88C864}Багажник\n{88C864}Фарове\n{88C864}Аларма\n{88C864}Капак");
				ShowPlayerDialog(playerid, DIALOG_VEHMENU, DIALOG_STYLE_LIST, "         ", string256, "Напред", "Излез");
			}
		}
	}

	if (newkeys & 16)
	{
		//bikeshop - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 701.7798, -510.9636, -5.5826) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 501)
		{
			SetPlayerPos(playerid, 701.7157, -518.4803, 16.3245);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 701.7157, -518.4803, 16.3245) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			PlayerTimerInfo[playerid][ptUnfreeze] = 2;
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 701.7798, -510.9636, -5.5826);
			SetPlayerVirtualWorld(playerid, 501);
			SetPlayerInterior(playerid, 1);
		}

		//bikeshop - close
		//lspd police - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1363.3411, 1567.6639, 1468.7877) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1555.5004, -1675.5570, 16.1953);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1555.5004, -1675.5570, 16.1953) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1363.3411, 1567.6639, 1468.7877);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			FreezeAntiDropOnSpawn(playerid);
		}

		//lspd police - close
		
		//rcpd police - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 246.7134,62.8534,1003.6406) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 626.9652,-571.6403,17.9207);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 626.9652,-571.6403,17.9207) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 246.7134,62.8534,1003.6406);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
		}
		//rcpd police - close
		
		//lvpd police - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1568.0807, -1672.6967, 2982.2800) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 2287.1235, 2432.0078, 10.8203);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2287.1235, 2432.0078, 10.8203) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1568.0807, -1672.6967, 2982.2800);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			FreezeAntiDropOnSpawn(playerid);
		}

		//lvpd police - close

		//taxi - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1839.1335, 653.5633, 29.2490) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1796.5181, -1937.3527, 13.5469);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1796.5181, -1937.3527, 13.5469) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1839.1335, 653.5633, 29.2490);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 1);
			FreezeAntiDropOnSpawn(playerid);
		}

		//taxi - close

		//triads - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1924.3322, 959.7982, 10.8203) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_TRIADS)
			{
				LockedFactionHouseMessage(playerid, FACTION_TRIADS);
				return 1;
			}
			SetPlayerPos(playerid, 2196.8513, -1204.4027, 1049.0234);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2196.8513, -1204.4027, 1049.0234) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_TRIADS)
			{
				LockedFactionHouseMessage(playerid, FACTION_TRIADS);
				return 1;
			}
			SetPlayerPos(playerid, 1924.3322, 959.7982, 10.8203);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//triads - close

		//aztecas - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 742.3114,-495.7193,18.0129) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_AZTECAS)
			{
				LockedFactionHouseMessage(playerid, FACTION_AZTECAS);
				return 1;
			}
			SetPlayerPos(playerid, 2237.5168, -1081.1450, 1049.0234);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2237.5168, -1081.1450, 1049.0234) && GetPlayerInterior(playerid) == 2 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_AZTECAS)
			{
				LockedFactionHouseMessage(playerid, FACTION_AZTECAS);
				return 1;
			}
			SetPlayerPos(playerid, 742.3114,-495.7193,18.0129);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//aztecas - close
		//italian mafia - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2814.7825,973.3302,10.7500) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_ITALIAN_MAFIA)
			{
				LockedFactionHouseMessage(playerid, FACTION_ITALIAN_MAFIA);
				return 1;
			}
			SetPlayerPos(playerid, 447.0938, 1397.3625, 1084.3047);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 447.0938, 1397.3625, 1084.3047) && GetPlayerInterior(playerid) == 2 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_ITALIAN_MAFIA)
			{
				LockedFactionHouseMessage(playerid, FACTION_ITALIAN_MAFIA);
				return 1;
			}
			SetPlayerPos(playerid, 2814.7825,973.3302,10.7500);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//italian mafia - close
		//grove - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2495.3496, -1690.8401, 14.7656) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_GROVE)
			{
				LockedFactionHouseMessage(playerid, FACTION_GROVE);
				return 1;
			}
			SetPlayerPos(playerid, 2495.9983, -1692.9227, 1014.7422);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2495.9983, -1692.9227, 1014.7422) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_GROVE)
			{
				LockedFactionHouseMessage(playerid, FACTION_GROVE);
				return 1;
			}
			SetPlayerPos(playerid, 2495.3496, -1690.8401, 14.7656);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//grove - close
		//crip - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 300.3634, -1154.5724, 81.3906) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CRIP)
			{
				LockedFactionHouseMessage(playerid, FACTION_CRIP);
				return 1;
			}
			SetPlayerPos(playerid, 140.1744, 1366.1003, 1083.8594);
			SetPlayerVirtualWorld(playerid, 2);
			SetPlayerInterior(playerid, 5);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 140.1744, 1366.1003, 1083.8594) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 2)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CRIP)
			{
				LockedFactionHouseMessage(playerid, FACTION_CRIP);
				return 1;
			}
			SetPlayerPos(playerid, 300.3634, -1154.5724, 81.3906);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//crip - close
		//unseen - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1122.7068, -2036.9517, 69.8942) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN)
			{
				LockedFactionHouseMessage(playerid, FACTION_UNSEEN);
				return 1;
			}
			SetPlayerPos(playerid, 887.7363,1918.0835,-88.9744);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 7);
			FreezeAntiDropOnSpawn(playerid);
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1035.6404,1016.3115,11.0000) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN)
			{
				LockedFactionHouseMessage(playerid, FACTION_UNSEEN);
				return 1;
			}
			SetPlayerPos(playerid, 887.7363,1918.0835,-88.9744);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 7);
			FreezeAntiDropOnSpawn(playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 887.7363,1918.0835,-88.9744) && GetPlayerInterior(playerid) == 7 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN)
			{
				LockedFactionHouseMessage(playerid, FACTION_UNSEEN);
				return 1;
			}
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}Los Santos база\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}Las Venturas база");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_UNSEEN_HOUSE_EXIT, DIALOG_STYLE_LIST, "{FF3737}Unseen Criminals's House Exit", string2230result, "Напред", "Затвори");
		}

		//unseen - close
		//vagos - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1879.1915,2339.4619,10.9799) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_VAGOS)
			{
				LockedFactionHouseMessage(playerid, FACTION_VAGOS);
				return 1;
			}
			SetPlayerPos(playerid, 140.1744, 1366.1003, 1083.8594);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 140.1744, 1366.1003, 1083.8594) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_VAGOS)
			{
				LockedFactionHouseMessage(playerid, FACTION_VAGOS);
				return 1;
			}
			SetPlayerPos(playerid, 1879.1915,2339.4619,10.9799);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//vagos - close
		//ballas - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2148.9360,-1484.9001,26.6240) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_BALLAS)
			{
				LockedFactionHouseMessage(playerid, FACTION_BALLAS);
				return 1;
			}
			SetPlayerPos(playerid, 318.5366, 1114.6714, 1083.8828);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 318.5366, 1114.6714, 1083.8828) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_BALLAS)
			{
				LockedFactionHouseMessage(playerid, FACTION_BALLAS);
				return 1;
			}
			SetPlayerPos(playerid, 2148.9360,-1484.9001,26.6240);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//ballas - close
		//fbi - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1565.4529, -1693.0446, 62.1910) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 326.1825, -1513.9746, 36.0325);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 326.1825, -1513.9746, 36.0325) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1565.4529, -1693.0446, 62.1910);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			FreezeAntiDropOnSpawn(playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1565.4529, -1693.0446, 62.1910) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, -329.7000, 1537.0417, 76.6117);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, -329.7000, 1537.0417, 76.6117) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1565.4529, -1693.0446, 62.1910);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			FreezeAntiDropOnSpawn(playerid);
		}

		//fbi - close
		//bank - open

		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1388.7638,-26.7493,1000.8729) && GetPlayerInterior(playerid) == 2 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1412.0486, -1699.9275, 13.5395);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1412.0486, -1699.9275, 13.5395) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1388.7638,-26.7493,1000.8729);
			PlayerTimerInfo[playerid][ptUnfreeze] = 2;
			TogglePlayerControllable(playerid, 0);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
		}

		//bank - close
		//the news - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1654.2100, -1654.7755, 22.5156) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 3190.9485, -1762.9432, 3001.0859);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			FreezeAntiDropOnSpawn(playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 3190.9485, -1762.9432, 3001.0859) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1654.2100, -1654.7755, 22.5156);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//the news - close
	}

	if (newkeys &KEY_SUBMISSION && gateopening[playerid] == false)
	{
		if (IsPlayerInAnyVehicle(playerid) && IsPlayerDriver(playerid))
		{
			new vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsNoFuelVehicle(vehModel) == 0)
			{
				if (PlayerTimerInfo[playerid][ptTurnEngine] == 0)
				{
					new vehicleID = GetPlayerVehicleID(playerid);
					new accountNickname[MAX_PLAYER_NAME];
					GetPlayerName(playerid, accountNickname, 25);
					PlayerTimerInfo[playerid][ptTurnEngine] = 3;
					if (vehEngineStatusON[vehicleID] == true)
					{
						if (isVehicleToggleEngineForb(vehicleID)) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изключиш двигателя на това превозно средство.");
						ToggleEngine(vehicleID, VEHICLE_PARAMS_OFF);
						vehEngineStatusON[vehicleID] = false;
						new string256[256];
						format(string256, 256, "* %s завъртя ключовете и изключи двигателя. *", GetPlayerNickname(playerid));
						SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
						format(string256, 256, "> Двигателят е {FF0000}Изключен");
						SendInCarMessage(playerid, COLOR_WHITE, string256);
					}
					else
					{
						if (vehFuel[vehicleID] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Превозното средство няма бензин за да запали.");
						if (isVehicleToggleEngineForb(vehicleID)) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да запалиш това превозно средство.");
						PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] = randomex(2, 4);
						new string256[256];
						format(string256, 256, "* %s завъртя ключовете и се опита да запали двигателя... *", GetPlayerNickname(playerid));
						SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}
				}
			}
		}
	}

	gateopening[playerid] = false;
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

public OnPlayerUpdate(playerid)
{
	AFKDetect[playerid] = gettime();

	new drunknew;
    drunknew = GetPlayerDrunkLevel(playerid);
    if (drunknew < 100) 
	{
        SetPlayerDrunkLevel(playerid, 2000);
    }
	else
	{
        if (pDrunkLevelLast[playerid] != drunknew) {
            new wfps = pDrunkLevelLast[playerid] - drunknew;
            if ((wfps > 0) && (wfps < 400))
            pFPS[playerid] = wfps;
            pDrunkLevelLast[playerid] = drunknew;

        }
    }

    if(!paintBallStarted && inPaintBall[playerid])
    {
        if(GetPlayerWeapon(playerid) >= 2)
        {
            SetPlayerArmedWeapon(playerid, 0);
        }
    }

	if (IsPlayerInAnyVehicle(playerid))
	{
		UpdateSpeedoText(playerid);
        new vehicleid = GetPlayerVehicleID(playerid);
        if(isFuelComapnyVeh[vehicleid] && fuelTruckHasTrailer[vehicleid])
        {
            UpdateTankFuelText(playerid);
        }
	}

    if(IsPlayerDriver(playerid))
    {
        new vehicleid = GetPlayerVehicleID(playerid);
        if(isFuelComapnyVeh[vehicleid])
        {
            if (IsTrailerAttachedToVehicle(vehicleid))
            {
                if(!fuelTruckHasTrailer[vehicleid])
                {
                    TextDrawShowForPlayer(playerid, TankFuel[playerid]);
                    fuelTruckHasTrailer[vehicleid] = true;
                    fuelVehTrailer[vehicleid] = GetVehicleTrailer(vehicleid);
                }
            }
            else
            {
                if(fuelTruckHasTrailer[vehicleid])
                {
                    TextDrawHideForPlayer(playerid, TankFuel[playerid]);
                    fuelTruckHasTrailer[vehicleid] = false;
                }
            }
        }
    }

	if (GetPlayerMoney(playerid) != PlayerInfo[playerid][pCash])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	}

	if (!IsPlayerInAnyVehicle(playerid))
	{
		if (PlayerInfo[playerid][pLaser] >= 1)
		{
			if (PlayerInfo[playerid][pVip] >= 1)
			{
				RemovePlayerAttachedObject(playerid, 0);
				if ((IsPlayerInAnyVehicle(playerid)) || (IsPlayerInWater(playerid))) return 1;
				switch (GetPlayerWeapon(playerid))
				{
					case 31:
						{
							if (IsPlayerAiming(playerid))
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// M4 standing aiming
										0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
								}
								else
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// M4 crouched aiming
										0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
								}
							}
							else
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// M4 standing not aiming
										0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
								}
								else
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// M4 crouched not aiming
										0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
								}
							}
						}

					case 29:
						{
							if (IsPlayerAiming(playerid))
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// MP5 standing aiming
										0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
								}
								else
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// MP5 crouched aiming
										0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
								}
							}
							else
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// MP5 standing not aiming
										0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
								}
								else
								{
									SetPlayerAttachedObject(playerid, PLAYER_OBJECT_LASER, GetPVarInt(playerid, "color"), 6,	// MP5 crouched not aiming
										0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
								}
							}
						}
				}
			}
		}
	}

	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{

	if(dialogid == DIALOG_DROP_GUN)
	{
		if(response)
		{
			if(inPaintBall[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да спуснеш оръжие по време на Paintball!");
			new const selectedAmmu = strval(inputtext);
			new const playerGun = GetPlayerWeapon(playerid);
			if(playerGun < 16 || playerGun > 34) return SendClientMessage(playerid, COLOR_GRAD1, "Оръжието с което си въоражен не може да се пусне!");
			new const playeridAmmu = GetPlayerAmmo(playerid);
			if(selectedAmmu < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да пуснеш оръжие без патрони!");
			if(selectedAmmu > playeridAmmu) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова патрони за оръжието с което си въоражен!");
			new string256[256];
			new weaponname[32];
            GetWeaponName(playerGun, weaponname, 32);
			format(string256, 256, "Drop Gun: Ти пусна оръжие %s на земята с %d патрона", weaponname, selectedAmmu);
			SendClientMessage(playerid, COLOR_WEAPONS, string256);
			new const newPlayeridAmmu = playeridAmmu - selectedAmmu;
			SetPlayerAmmo(playerid, playerGun, newPlayeridAmmu);
			GivePlayerWeapon(playerid, playerGun, 0);
			DropPlayerGun(playerid, playerGun, selectedAmmu);
		}
	}

	if(dialogid == DIALOG_UNSEEN_HOUSE_EXIT)
	{
		if(response)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_UNSEEN)
			{
				LockedFactionHouseMessage(playerid, FACTION_UNSEEN);
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					SetPlayerPos(playerid, 1122.7068, -2036.9517, 69.8942);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid, 0);
				}
				case 1:
				{
					SetPlayerPos(playerid, 1035.6404,1016.3115,11.0000);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid, 0);
				}
			}
		}
	}

    if(dialogid == DIALOG_JOIN_MINIGAME)
    {
        switch(listitem)
        {
            case 0:
            {
                JoinPaintBall(playerid);
            }
        }
    }

    if(dialogid == DIALOG_MORE_VIPS)
    {
        if(response)
        {
            new string512[512];
            new string2230result[2230];
            new currentVips = 0;
            new moreVipsOnline = lastVipUsersID[playerid];
            new bool: vipsOn;
            for (new i = 0; i < MAX_PLAYERS; i++)
            {
                if(i > lastVipUsersID[playerid])
                {
                    if (IsPlayerConnected(i))
                    {
                        if (PlayerInfo[i][pVip] >= 1)
                        {
                            vipsOn = true;
                            moreVipsOnline++;
                            currentVips++;
                            lastVipUsersID[playerid] = i;
                            format(string512, 512, "{00ff00}%d{ffffff}. %s (ID: %d) - V.I.P. Level: {FF3737}%d\n", moreVipsOnline, GetPlayerNickname(i), i, PlayerInfo[i][pVip]);
                            strcat(string2230result, string512, 2230);
                        }
                    }
                }
            }
            if (vipsOn == false)
            {
                format(string512, 512, "{ffffff}Няма други онлайн V.I.P. играчи в сървъра!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF3737}V.I.P. Players Online", string512, "Затвори", "");
            }
            else if (vipsOn == true && currentVips < 20)
            { 
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF3737}V.I.P. Players Online", string2230result, "Затвори", "");
            }
            else if (currentVips > 20)
            {
                ShowPlayerDialog(playerid, DIALOG_MORE_VIPS, DIALOG_STYLE_MSGBOX, "{FF3737}V.I.P. Players Online", string2230result, "Още", "Затвори");
            }
        }
    }

    if(dialogid == DIALOG_ATTACHMENTS_FINAL_2)
    {
        new slot = attachIndex[playerid];
        if(response)
        {
            switch(listitem)
            {
                case 0:
                    {
                        CreateAndAttachToPlayer(playerid, 19023, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 1:
                    {
                        CreateAndAttachToPlayer(playerid, 19024, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 2:
                    {
                        CreateAndAttachToPlayer(playerid, 19025, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 3:
                    {
                        CreateAndAttachToPlayer(playerid, 19026, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 4:
                    {
                        CreateAndAttachToPlayer(playerid, 19027, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 5:
                    {
                        CreateAndAttachToPlayer(playerid, 19028, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 6:
                    {
                        CreateAndAttachToPlayer(playerid, 19029, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 7:
                    {
                        CreateAndAttachToPlayer(playerid, 19139, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
                case 8:
                    {
                        CreateAndAttachToPlayer(playerid, 19140, slot, 2, 0.099000,0.034000,0.002000,92.999984,97.199996);
                    }
            }
            SendClientMessage(playerid, COLOR_WHITE, "SERVER: Намести обекта, както пожелаеш!");
        }
    }

    if(dialogid == DIALOG_ATTACHMENTS_FINAL_3)
    {
        new slot = attachIndex[playerid];
        if(response)
        {
            switch(listitem)
            {
                case 0:
                    {
                        CreateAndAttachToPlayer(playerid, 18636, slot, 2, 0.045000,0.000000,0.000000,91.299964,94.699958);
                    }
                case 1:
                    {
                        CreateAndAttachToPlayer(playerid, 18929, slot, 2, 0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 2:
                    {
                        CreateAndAttachToPlayer(playerid, 18933, slot, 2, 0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 3:
                    {
                        CreateAndAttachToPlayer(playerid, 18934, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 4:
                    {
                        CreateAndAttachToPlayer(playerid, 18947, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 5:
                    {
                        CreateAndAttachToPlayer(playerid, 18969, slot, 2 ,0.160000,0.013999,-0.003998,176.500167,89.000022,101.900024);
                    }
                case 6:
                    {
                        CreateAndAttachToPlayer(playerid, 18944, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 7:
                    {
                        CreateAndAttachToPlayer(playerid, 18945, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 8:
                    {
                        CreateAndAttachToPlayer(playerid, 19068, slot, 2 ,0.114999,0.040999,0.010001,-80.699859,69.799980,-177.599975);
                    }
                case 9:
                    {
                        CreateAndAttachToPlayer(playerid, 18951, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 10:
                    {
                        CreateAndAttachToPlayer(playerid, 18962, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 11:
                    {
                        CreateAndAttachToPlayer(playerid, 19066, slot, 2 ,0.109999,0.031000,0.008000,-74.399864,52.800140,-176.600006);
                    }
                case 12:
                    {
                        CreateAndAttachToPlayer(playerid, 19528, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
                case 13:
                    {
                        CreateAndAttachToPlayer(playerid, 19069, slot, 2 ,0.110999,0.030000,-0.007998,76.400192,125.299964,9.200003);
                    }
                case 14:
                    {
                        CreateAndAttachToPlayer(playerid, 19096, slot, 2 ,0.161000,0.000000,-0.003999,176.500167,-170.999923,-176.600006);
                    }
            }
            SendClientMessage(playerid, COLOR_WHITE, "SERVER: Намести обекта, както пожелаеш!");
        }
    }

    if(dialogid == DIALOG_ATTACHMENTS_FINAL_4)
    {
        new slot = attachIndex[playerid];
        if(response)
        {
            switch(listitem)
            {
                case 0:
                    {
                        CreateAndAttachToPlayer(playerid, 19038, slot, 2, 0.096999,0.032000,-0.009000,91.299964,94.699958,0.000000);
                    }
                case 1:
                    {
                        CreateAndAttachToPlayer(playerid, 19036, slot, 2, 0.096999,0.032000,-0.009000,91.299964,94.699958,0.000000);
                    }
                case 2:
                    {
                        CreateAndAttachToPlayer(playerid, 18914, slot, 2, 0.035999,0.009000,-0.000999,91.299964,160.399917,93.100021);
                    }
                case 3:
                    {
                        CreateAndAttachToPlayer(playerid, 18919, slot, 2, 0.035999,0.009000,-0.000999,91.299964,160.399917,93.100021);
                    }
                case 4:
                    {
                        CreateAndAttachToPlayer(playerid, 18915, slot, 2, 0.035999,0.009000,-0.000999,91.299964,160.399917,93.100021);
                    }
                case 5:
                    {
                        CreateAndAttachToPlayer(playerid, 18916, slot, 2, 0.035999,0.009000,-0.000999,91.299964,160.399917,93.100021);
                    }
                case 6:
                    {
                        CreateAndAttachToPlayer(playerid, 18917, slot, 2, 0.035999,0.009000,-0.000999,91.299964,160.399917,93.100021);
                    }
                case 7:
                    {
                        CreateAndAttachToPlayer(playerid, 18918, slot, 2, 0.035999,0.009000,-0.000999,91.299964,160.399917,93.100021);
                    }
            }
            SendClientMessage(playerid, COLOR_WHITE, "SERVER: Намести обекта, както пожелаеш!");
        }
    }

    if(dialogid == DIALOG_ATTACHMENTS_2)
    {
        if(response)
        {
            new string2230[512];
            new string2230result[2230];
            switch(listitem)
            {
                case 0:
                {
                    format(string2230, 512, "{FFFFFF}Blue Sunglasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Purple Sunglasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Pink Sunglasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Red Sunglasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Yellow Sunglasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Transparent Glasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Stylish Black Glasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Red Police Glasses\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Blue Police Glasses\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, DIALOG_ATTACHMENTS_FINAL_2, DIALOG_STYLE_LIST, "{FFFFFF}Очила", string2230result, "Избери", "Затвори"); 
                }
                case 1:
                {
                    format(string2230, 512, "{FFFFFF}Police Hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Green Hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}White Hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Red Hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Black simple hat-the bowler hat like the mafia\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Mens hat yellow-orange color\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Red hat with large brim\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Gray hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Hat moss green\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Bright hat with black stripe\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Dark hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Christmas hat with the words Happy Xmas\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}The wizard's hat\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Black Hat 1\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Black Hat 2\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, DIALOG_ATTACHMENTS_FINAL_3, DIALOG_STYLE_LIST, "{FFFFFF}Шапки", string2230result, "Избери", "Затвори"); 
                }
                case 2:
                {
                    format(string2230, 512, "{FFFFFF}Green hockey mask\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}The gray mask\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Camouflage Mask\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}White scarf - kerchief\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Pink Mask\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Yellow Mask\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Blue Mask\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Green Mask\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, DIALOG_ATTACHMENTS_FINAL_4, DIALOG_STYLE_LIST, "{FFFFFF}Шапки", string2230result, "Избери", "Затвори"); 
                }
            }
        }
    }

    if(dialogid == DIALOG_ATTACHMENTS)
    {
        if(response)
        {
            if(listitem == MAX_PLAYER_ATTACHMENTS)
            {
                SendClientMessage(playerid, COLOR_RED,"* Ти премахна всички твои закачени обекти *");
                RemovePlayerAttacheds(playerid);
            }
            else
            {
                attachIndex[playerid] = listitem;
                new string2230[512];
                new string2230result[2230];
                format(string2230, 512, "{FFFFFF}Очила\n");
                strcat(string2230result, string2230);
                format(string2230, 512, "{FFFFFF}Шапки\n");
                strcat(string2230result, string2230);
                format(string2230, 512, "{FFFFFF}Маски\n");
                strcat(string2230result, string2230);
                ShowPlayerDialog(playerid, DIALOG_ATTACHMENTS_2, DIALOG_STYLE_LIST, "{FFFFFF}Clothes:", string2230result, "Избери", "Затвори"); 
            }
        }
    }

    if(dialogid == DIALOG_FUELSTATIONS_REFILLPT)
    {
        if(response)
        {
            if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп!");
            if (!PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна във Fuel Company за да заредиш цистерната!");
            new vehicleid = GetPlayerVehicleID(playerid);
            if (!isFuelComapnyVeh[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не принадлежи на Fuel Company!");
            if (!IsPlayerInRangeOfPoint(playerid, 15.0 , 264.3938,1457.5801,10.5859)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до мястото за зареждане на бензин!");
            if (!fuelTruckHasTrailer[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си закачил цистерната!");
            new trailerid = GetVehicleTrailer(vehicleid);
            new fuel = strval(inputtext);
            if(fuel <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да добавиш 0 литра!");
            if(fuel + VehicleInfo[trailerid][vTankFuel] > 10000) return SendClientMessage(playerid, COLOR_GRAD1, "Максимумът на цистерната е 10000 L!");
            VehicleInfo[trailerid][vTankFuel] += fuel;
            new string140[140];
            format(string140, sizeof(string140), "Ти зареди {ffff00}%d {ffffff}литра бензин в твоята цистерна!", fuel);
            SendClientMessage(playerid, COLOR_WHITE, string140);
            format(string140, 140, "%s добави бензин към цистерната!", GetPlayerNickname(playerid));
            SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string140);
        }
    }

    if(dialogid == DIALOG_FUELSTATIONS_GPS)
    {
        if(response)
        {
            SendClientMessage(playerid, COLOR_GPS, "[GPS] Бензиностанцията, която посочи беше поставена на картата ти с червен кръг!");
            SetPlayerCheckpoint(playerid, FuelStationInfo[listitem][fsCoordsX], FuelStationInfo[listitem][fsCoordsY], FuelStationInfo[listitem][fsCoordsZ], 4.0);
            gpsOn[playerid] = true;
        }
    }

    if(dialogid == DIALOG_TOP)
    {
        if(response)
        {
            switch(listitem)
            {
                case 0:
                {
                    new name[32], kills;
                    new string2230[512];
                    new string2230result[2230];
                    format(string2230, 512, "{FFFFFF}Рекорди по убийства:\n\n");
                    strcat(string2230result, string2230);
                    //Position 1
                    if(TopRecordInfo[TOP_RECORD_KILLS][trReached1])
                    {
                        format(name, sizeof(name), "%s",TopRecordInfo[TOP_RECORD_KILLS][trPlayerName1]);
                        kills = TopRecordInfo[TOP_RECORD_KILLS][trRecord1];
                        format(string2230, 512, "{FFFFFF}Първо място по убийства: {00ff00}%s {ffffff}- {ff0000}%d Kills\n", name, kills);
                        strcat(string2230result, string2230);
                    }
                    else
                    {
                        kills = TopRecordInfo[TOP_RECORD_KILLS][trRecord1];
                        format(string2230, 512, "{FFFFFF}Първо място по убийства: {00ff00}Няма класиран {ffffff}- {ff0000}%d Kills за класиране\n", kills);
                        strcat(string2230result, string2230);
                    }
                    //Position 2
                    if(TopRecordInfo[TOP_RECORD_KILLS][trReached2])
                    {
                        format(name, sizeof(name), "%s",TopRecordInfo[TOP_RECORD_KILLS][trPlayerName2]);
                        kills = TopRecordInfo[TOP_RECORD_KILLS][trRecord2];
                        format(string2230, 512, "{FFFFFF}Второ място по убийства: {00ff00}%s {ffffff}- {ff0000}%d Kills\n", name, kills);
                        strcat(string2230result, string2230);
                    }
                    else
                    {
                        kills = TopRecordInfo[TOP_RECORD_KILLS][trRecord2];
                        format(string2230, 512, "{FFFFFF}Второ място по убийства: {00ff00}Няма класиран {ffffff}- {ff0000}%d Kills за класиране\n", kills);
                        strcat(string2230result, string2230);
                    }
                    //Position 3
                    if(TopRecordInfo[TOP_RECORD_KILLS][trReached3])
                    {
                        format(name, sizeof(name), "%s",TopRecordInfo[TOP_RECORD_KILLS][trPlayerName3]);
                        kills = TopRecordInfo[TOP_RECORD_KILLS][trRecord3];
                        format(string2230, 512, "{FFFFFF}Трето място по убийства: {00ff00}%s {ffffff}- {ff0000}%d Kills\n", name, kills);
                        strcat(string2230result, string2230);
                    }
                    else
                    {
                        kills = TopRecordInfo[TOP_RECORD_KILLS][trRecord3];
                        format(string2230, 512, "{FFFFFF}Трето място по убийства: {00ff00}Няма класиран {ffffff}- {ff0000}%d Kills за класиране\n", kills);
                        strcat(string2230result, string2230);
                    }
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF0000}TOP Killers", string2230result, "Затвори", "");   
                }
            }
        }
    }

    if(dialogid == DIALOG_INTERATICE_MENU)
    {
        if(response)
        {
            switch(listitem)
            {
                case 0:
                {
                    new string2230[512];
                    new string2230result[2230];
                    format(string2230, 512, "{FFFFFF}Всички Команди\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFFFF}Как се играе?");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, DIALOG_HELP, DIALOG_STYLE_LIST, "{FFFFFF}Помощно меню", string2230result, "Напред", "Затвори");   
                }
                case 1:
                {
                    OpenInventory(playerid);
                }
                case 2:
                {
                    ShowPlayerStats(playerid, playerid);
                }
                case 3:
                {
                    new string256[256];
                    format(string256, 256, "{FFFFFF}1. Смени своя Skin при Spawn\n2. Изхвърли Skin");
                    ShowPlayerDialog(playerid, DIALOG_MY_CLOTHES, DIALOG_STYLE_LIST, "Clothes", string256, "Напред", "Излез");
                }
                case 4:
                {
                    if(PlayerInfo[playerid][pFactionSkin])
                    {
                        SendClientMessage(playerid, COLOR_WHITE ,"* Ти избра да се SPAWN-ваш с твоя личен Skin *");
                        SendClientMessage(playerid, COLOR_WHITE ,"SERVER: Ако си On Duty няма да се SPAWN-ваш с твоя личен Skin");
                        PlayerInfo[playerid][pFactionSkin] = false;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE ,"* Ти избра да се SPAWN-ваш с твоя Faction Skin *");
                        PlayerInfo[playerid][pFactionSkin] = true;
                    }
                }
				case 5:
				{
					if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да бъдеш поне 5-ти Level за да пускаш оръжия!");
					new const playerGun = GetPlayerWeapon(playerid);
					if(playerGun < 16 || playerGun > 34) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си въоражен с оръжието, което искаш да пуснеш!");
					new const playerState = GetPlayerState(playerid);
					if (playerState != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на земята, преди да пуснеш оръжие!");
					new string256[256];
                    format(string256, 256, "{FFFF00}Напиши броя патрони с които искаш да пуснеш своето оръжие!");
                    ShowPlayerDialog(playerid, DIALOG_DROP_GUN, DIALOG_STYLE_INPUT, "Drop a gun", string256, "Напред", "Излез");
				}
            }
        }
    }
	if (dialogid == DIALOG_VOUCHERS_BUY)
	{
		if (response)
		{
			new string512[512];
			new string2230result[2230];
            new string256[256];
			new voucherItem = buyItemWithBGNIndex[playerid];
			if (voucherItem == 3)
			{
				if (PlayerInfo[playerid][pVip] == 3)
				{
					buyItemWithBGNIndex[playerid] = -1;
					format(string512, 512, "Вече имаш 3-то ниво VIP! Няма следващо ниво!");
					strcat(string2230result, string512, 2230);
					ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Излез", "");
					return 1;
				}
			}

			if (voucherItem == 6 || voucherItem == 7)
			{
				if (GetPrivateVehsNumber(playerid) >= 3)
				{
					buyItemWithBGNIndex[playerid] = -1;
					format(string512, 512, "Нямаш свободен слот за лични превози!");
					strcat(string2230result, string512, 2230);
					ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Излез", "");
					return 1;
				}
                if (GetPrivateVehsNumber(playerid) >= 1 && PlayerInfo[playerid][pVip] < 2)
                {
                    buyItemWithBGNIndex[playerid] = -1;
                    format(string512, 512, "Нямаш свободен слот за лични превози!");
                    strcat(string2230result, string512, 2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Излез", "");
                    return 1;
                }
                if (GetPrivateVehsNumber(playerid) >= 2 && PlayerInfo[playerid][pVip] < 3)
                {
                    buyItemWithBGNIndex[playerid] = -1;
                    format(string512, 512, "Нямаш свободен слот за лични превози!");
                    strcat(string2230result, string512, 2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Излез", "");
                    return 1;
                }
                if (ExistVehicleID(1850)) 
                {
                    buyItemWithBGNIndex[playerid] = -1;
                    format(string256, 256, "Достигнат е тоталният лимит на превозни средства!");
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string256, "Излез", "");
                    return 1;
                }
			}

			if (PlayerInfo[playerid][pVoucherBGN] < GetItemPriceWithBGN(voucherItem))
			{
				buyItemWithBGNIndex[playerid] = -1;
				format(string512, 512, "Нямаш достатъчно пари в касата си за тази поръчка!");
				strcat(string2230result, string512, 2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Излез", "");
				return 1;
			}
            new priceBGN = GetItemPriceWithBGN(voucherItem);
            PlayerInfo[playerid][pVoucherBGN] -= priceBGN;
			format(string512, 512, "{FFFFFF}Успешна поръчка!\n\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Име на поръчката: {0099FF}%s\n", GetItemNameWithBGN(voucherItem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Цена на поръчката: {40BF00}%d лева\n\n", GetItemPriceWithBGN(voucherItem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}След като направихте поръчката ви остават: {40BF00}%d лева {ffffff}в касата", PlayerInfo[playerid][pVoucherBGN]);
			strcat(string2230result, string512, 2230);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Излез", "");
			GivePlayerItemWithBGN(playerid, buyItemWithBGNIndex[playerid]);
			buyItemWithBGNIndex[playerid] = -1;
		}
	}

	if (dialogid == DIALOG_VOUCHERS_SERVICE)
	{
		if (response)
		{
			buyItemWithBGNIndex[playerid] = listitem;
			new string512[512];
			new string2230result[2230];
			format(string512, 512, "{FFFFFF}На път си да направиш поръчка срещу пари в каса!\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Твоите пари в каса (BGN): {40BF00}%d лв\n\n", PlayerInfo[playerid][pVoucherBGN]);
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Име на покупката: {0099FF}%s\n", GetItemNameWithBGN(listitem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Цена на покупката: {40BF00}%d лв\n\n", GetItemPriceWithBGN(listitem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Натисни {0099FF}'Потвърди'{FFFFFF} за да осъществиш покупката!\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Натисни {FF0000}'Излез'{FFFFFF} за да откажеш покупката!\n\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FF0000}Важно: Парите в касата ти няма да бъдат възстановени, ако се откажеш от поръчката си!");
			strcat(string2230result, string512, 2230);
			ShowPlayerDialog(playerid, DIALOG_VOUCHERS_BUY, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Потвърди", "Излез");
		}
	}

	if (dialogid == DIALOG_VOUCHERS)
	{
		if (response)
		{
			new string512[512];
			new string2230result[2230];
			format(string512, 512, "Услуга:\tЦена:\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Пари в играта: {40BF00}$22300\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Пари в играта: {40BF00}$35300\t{0099FF}4 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Пари в играта: {40BF00}$48300\t{0099FF}6 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Следващ VIP Level\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Exp: {40BF00}20\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Level: {40BF00}5\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Sultan\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Infernus\t{0099FF}4 лева\n");
			strcat(string2230result, string512, 2230);
			ShowPlayerDialog(playerid, DIALOG_VOUCHERS_SERVICE, DIALOG_STYLE_TABLIST_HEADERS, "{7C94FF}VOUCHERS", string2230result, "Купи", "Излез");
		}
	}

	if (dialogid == DIALOG_TUNEMECHANIC)
	{
		if (response)
		{
			new vehid = workingOnVeh[playerid];
			new vehmd = GetVehicleModel(vehid);
			switch (listitem)
			{
				case 0:
					AddVehicleComponent(vehid, 1010), MechanicCarmodDialog(playerid), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				case 1:
					ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_LIST, "Choose primary color:", "White\nBlack\nOrange\nLight Blue\nDark Blue\nPurple\nRed\nDark Red\nGrey", "Ok", "Cancle");
				case 2:
					ShowPlayerDialog(playerid, 1113, DIALOG_STYLE_LIST, "Choose a wheel:", "Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces\n{FF0000}Back", "Ok", "Cancle");
				case 3:
					AddVehicleComponent(vehid, 1086), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0), MechanicCarmodDialog(playerid);
				case 4:
					AddVehicleComponent(vehid, 1087), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0), MechanicCarmodDialog(playerid);
				case 5:
					{
						if (vehmd == 562 || vehmd == 565 || vehmd == 559 || vehmd == 561 || vehmd == 560 || vehmd == 558)
						{
							ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nAlien\nX-Flow\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 576 || vehmd == 575 || vehmd == 535)
						{
							ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nChrome\nSlamin\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 567 || vehmd == 536)
						{
							ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nChrome\nSlamin\nHardtop Roof\nSofttop Roof\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 534)
						{
							ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nChrome\nSlamin\nFlame Sideskirt \nArches Sideskirt Roof\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 496 || vehmd == 505 || vehmd == 516 || vehmd == 517 || vehmd == 518 || vehmd == 527 ||
							vehmd == 529 || vehmd == 540 || vehmd == 546 || vehmd == 547 || vehmd == 549 || vehmd == 550 || vehmd == 551 ||
							vehmd == 580 || vehmd == 585 || vehmd == 587 || vehmd == 589 || vehmd == 600 || vehmd == 603 || vehmd == 401 ||
							vehmd == 410 || vehmd == 415 || vehmd == 418 || vehmd == 420 || vehmd == 436 || vehmd == 439 || vehmd == 458 ||
							vehmd == 489 || vehmd == 491 || vehmd == 492)
						{
							RegularCarDialog(playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_RED, "Your car cannot be tuned!");
						}
					}
			}
		}
	}

	if (dialogid == 1112 && response)
	{
		new color1, color2;
		new vehid = workingOnVeh[playerid];
		//				new vehmd = GetVehicleModel(vehid);
		GetVehicleColor(vehid, color1, color2);
		new Carray[] = { 1, 0, 6, 2, 79, 149, 151, 3, 34 };

		ChangeVehicleColor(vehid, Carray[listitem], color2);
		return ShowPlayerDialog(playerid, 1116, DIALOG_STYLE_LIST, "Choose second color:", "White\nBlack\nOrange\nLight Blue\nDark Blue\nPurple\nRed\nDark Red\nGrey", "Ok", "Cancle");
	}

	if (dialogid == 1116 && response)
	{
		new color1, color2;
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		GetVehicleColor(vehid, color1, color2);
		new Carray[] = { 1, 0, 6, 2, 79, 149, 151, 3, 34 };

		ChangeVehicleColor(vehid, Carray[listitem], Carray[listitem]);
		return MechanicCarmodDialog(playerid);
	}

	if (dialogid == 1113 && response)
	{
		if (listitem == 16) return MechanicCarmodDialog(playerid);
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		new Warray[] = { 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1098 };

		AddVehicleComponent(vehid, Warray[listitem]);
		return MechanicCarmodDialog(playerid);
	}

	if (dialogid == 1114 && response)
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					if (vehmd == 560)	//Sultan
					{
						AddVehicleComponent(vehid, 1026);
						AddVehicleComponent(vehid, 1027);
						AddVehicleComponent(vehid, 1028);
						AddVehicleComponent(vehid, 1032);
						AddVehicleComponent(vehid, 1138);
						AddVehicleComponent(vehid, 1141);
						AddVehicleComponent(vehid, 1169);
					}

					if (vehmd == 562)	//Elegy
					{
						AddVehicleComponent(vehid, 1036);
						AddVehicleComponent(vehid, 1040);
						AddVehicleComponent(vehid, 1034);
						AddVehicleComponent(vehid, 1038);
						AddVehicleComponent(vehid, 1147);
						AddVehicleComponent(vehid, 1171);
						AddVehicleComponent(vehid, 1149);
					}

					if (vehmd == 565)	//Flash
					{
						AddVehicleComponent(vehid, 1047);
						AddVehicleComponent(vehid, 1051);
						AddVehicleComponent(vehid, 1046);
						AddVehicleComponent(vehid, 1054);
						AddVehicleComponent(vehid, 1049);
						AddVehicleComponent(vehid, 1150);
						AddVehicleComponent(vehid, 1153);
					}

					if (vehmd == 559)	//Jester
					{
						AddVehicleComponent(vehid, 1069);
						AddVehicleComponent(vehid, 1071);
						AddVehicleComponent(vehid, 1065);
						AddVehicleComponent(vehid, 1067);
						AddVehicleComponent(vehid, 1162);
						AddVehicleComponent(vehid, 1159);
						AddVehicleComponent(vehid, 1160);
					}

					if (vehmd == 561)	//Stratum
					{
						AddVehicleComponent(vehid, 1056);
						AddVehicleComponent(vehid, 1062);
						AddVehicleComponent(vehid, 1064);
						AddVehicleComponent(vehid, 1055);
						AddVehicleComponent(vehid, 1058);
						AddVehicleComponent(vehid, 1154);
						AddVehicleComponent(vehid, 1155);
					}

					if (vehmd == 558)	//Uranus
					{
						AddVehicleComponent(vehid, 1090);
						AddVehicleComponent(vehid, 1094);
						AddVehicleComponent(vehid, 1092);
						AddVehicleComponent(vehid, 1088);
						AddVehicleComponent(vehid, 1164);
						AddVehicleComponent(vehid, 1168);
						AddVehicleComponent(vehid, 1166);
					}
				}

			case 2:
				{
					if (vehmd == 560)	//Sultan
					{
						AddVehicleComponent(vehid, 1031);
						AddVehicleComponent(vehid, 1030);
						AddVehicleComponent(vehid, 1029);
						AddVehicleComponent(vehid, 1033);
						AddVehicleComponent(vehid, 1139);
						AddVehicleComponent(vehid, 1140);
						AddVehicleComponent(vehid, 1170);
					}

					if (vehmd == 562)	//Elegy
					{
						AddVehicleComponent(vehid, 1041);
						AddVehicleComponent(vehid, 1039);
						AddVehicleComponent(vehid, 1037);
						AddVehicleComponent(vehid, 1035);
						AddVehicleComponent(vehid, 1146);
						AddVehicleComponent(vehid, 1148);
						AddVehicleComponent(vehid, 1172);
					}

					if (vehmd == 565)	//Flash
					{
						AddVehicleComponent(vehid, 1048);
						AddVehicleComponent(vehid, 1045);
						AddVehicleComponent(vehid, 1053);
						AddVehicleComponent(vehid, 1050);
						AddVehicleComponent(vehid, 1152);
						AddVehicleComponent(vehid, 1151);
						AddVehicleComponent(vehid, 1052);
					}

					if (vehmd == 559)	//Jester
					{
						AddVehicleComponent(vehid, 1070);
						AddVehicleComponent(vehid, 1072);
						AddVehicleComponent(vehid, 1066);
						AddVehicleComponent(vehid, 1068);
						AddVehicleComponent(vehid, 1158);
						AddVehicleComponent(vehid, 1161);
						AddVehicleComponent(vehid, 1173);
					}

					if (vehmd == 561)	//Stratum
					{
						AddVehicleComponent(vehid, 1057);
						AddVehicleComponent(vehid, 1063);
						AddVehicleComponent(vehid, 1059);
						AddVehicleComponent(vehid, 1061);
						AddVehicleComponent(vehid, 1060);
						AddVehicleComponent(vehid, 1154);
						AddVehicleComponent(vehid, 1157);
					}

					if (vehmd == 558)	//Uranus
					{
						AddVehicleComponent(vehid, 1093);
						AddVehicleComponent(vehid, 1095);
						AddVehicleComponent(vehid, 1089);
						AddVehicleComponent(vehid, 1091);
						AddVehicleComponent(vehid, 1163);
						AddVehicleComponent(vehid, 1167);
						AddVehicleComponent(vehid, 1165);
					}
				}

			case 3:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1001 && response)
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					if (vehmd == 576)	//Tornado
					{
						AddVehicleComponent(vehid, 1134);
						AddVehicleComponent(vehid, 1136);
						AddVehicleComponent(vehid, 1137);
						AddVehicleComponent(vehid, 1191);
						AddVehicleComponent(vehid, 1192);
					}

					if (vehmd == 575)	//Broadway
					{
						AddVehicleComponent(vehid, 1042);
						AddVehicleComponent(vehid, 1044);
						AddVehicleComponent(vehid, 1099);
						AddVehicleComponent(vehid, 1174);
						AddVehicleComponent(vehid, 1176);
					}

					if (vehmd == 535)	//Slamvan
					{
						AddVehicleComponent(vehid, 1109);
						AddVehicleComponent(vehid, 1113);
						AddVehicleComponent(vehid, 1115);
						AddVehicleComponent(vehid, 1117);
						AddVehicleComponent(vehid, 1118);
						AddVehicleComponent(vehid, 1120);
					}
				}

			case 2:
				{
					if (vehmd == 576)	//Tornado
					{
						AddVehicleComponent(vehid, 1135);
						AddVehicleComponent(vehid, 1190);
						AddVehicleComponent(vehid, 1193);
					}

					if (vehmd == 575)	//Broadway
					{
						AddVehicleComponent(vehid, 1177);
						AddVehicleComponent(vehid, 1175);
						AddVehicleComponent(vehid, 1143);
					}

					if (vehmd == 535)	//Slamvan
					{
						AddVehicleComponent(vehid, 1110);
						AddVehicleComponent(vehid, 1114);
						AddVehicleComponent(vehid, 1116);
						AddVehicleComponent(vehid, 1119);
						AddVehicleComponent(vehid, 1121);
					}
				}

			case 3:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1002)
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1129);
						AddVehicleComponent(vehid, 1133);
						AddVehicleComponent(vehid, 1102);
						AddVehicleComponent(vehid, 1187);
						AddVehicleComponent(vehid, 1189);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1104);
						AddVehicleComponent(vehid, 1107);
						AddVehicleComponent(vehid, 1108);
						AddVehicleComponent(vehid, 1182);
						AddVehicleComponent(vehid, 1184);
					}
				}

			case 2:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1188);
						AddVehicleComponent(vehid, 1186);
						AddVehicleComponent(vehid, 1132);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1105);
						AddVehicleComponent(vehid, 1183);
						AddVehicleComponent(vehid, 1181);
					}
				}

			case 3:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1130);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1128);
					}
				}

			case 4:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1131);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1103);
					}
				}

			case 5:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1003)	//Remington
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					AddVehicleComponent(vehid, 1100);
					AddVehicleComponent(vehid, 1122);
					AddVehicleComponent(vehid, 1123);
					AddVehicleComponent(vehid, 1125);
					AddVehicleComponent(vehid, 1126);
					AddVehicleComponent(vehid, 1179);
					AddVehicleComponent(vehid, 1180);
				}

			case 2:
				{
					AddVehicleComponent(vehid, 1185);
					AddVehicleComponent(vehid, 1178);
					AddVehicleComponent(vehid, 1127);
				}

			case 3:
				AddVehicleComponent(vehid, 1122), AddVehicleComponent(vehid, 1101);
			case 4:
				AddVehicleComponent(vehid, 1106), AddVehicleComponent(vehid, 1124);
			case 5:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1004 && response)	//regular cars
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				{
					ShowPlayerDialog(playerid, 1010, DIALOG_STYLE_LIST, "Spoiler", "Pro\nWin\nDrag\nAlpha\nChamp\nRace\nWorx\nFury\n{FF0000}Back", "Select", "Cancel");
				}

			case 1:
				{
					if (vehmd == 585 || vehmd == 603 || vehmd == 439 || vehmd == 458 || vehmd == 418 || vehmd == 527 || vehmd == 580)
					{
						AddVehicleComponent(vehid, 1006);
						return RegularCarDialog(playerid);
					}
					else if (vehmd == 439 || vehmd == 458 || vehmd == 491 || vehmd == 517 || vehmd == 547)
					{
						ShowPlayerDialog(playerid, 1040, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 415)
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
					else ShowPlayerDialog(playerid, 1020, DIALOG_STYLE_LIST, "Hood", "Champ\nFury\nRace\nWorx\n{FF0000}Back", "Select", "Cancel");
				}

			case 2:
				{
					if (vehmd == 549 || vehmd == 585 || vehmd == 603)
					{
						ShowPlayerDialog(playerid, 1040, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 410 || vehmd == 436 || vehmd == 439 || vehmd == 458 || vehmd == 516 || vehmd == 491 || vehmd == 517 || vehmd == 418 || vehmd == 527 || vehmd == 580)
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
					else if (vehmd == 415 || vehmd == 547 || vehmd == 420 || vehmd == 587)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						AddVehicleComponent(vehid, 1006);
						return RegularCarDialog(playerid);
					}
				}

			case 3:
				{
					if (vehmd == 549 || vehmd == 585 || vehmd == 603 || vehmd == 551 || vehmd == 492 || vehmd == 529)
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
					else if (vehmd == 410 || vehmd == 436 || vehmd == 439 || vehmd == 458 || vehmd == 489 || vehmd == 505)
					{
						ShowPlayerDialog(playerid, 1060, DIALOG_STYLE_LIST, "Lights", "Round Fog\nSquare Fog\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 418 || vehmd == 527 || vehmd == 580 || vehmd == 491 || vehmd == 517 || vehmd == 516)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						ShowPlayerDialog(playerid, 1040, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n{FF0000}Back", "Select", "Cancel");
					}
				}

			case 4:
				{
					if (vehmd == 549 || vehmd == 550 || vehmd == 585 || vehmd == 603)
					{
						ShowPlayerDialog(playerid, 1060, DIALOG_STYLE_LIST, "Lights", "Round Fog\nSquare Fog\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 489 || vehmd == 505 || vehmd == 551 || vehmd == 492 || vehmd == 529 || vehmd == 439 || vehmd == 458 || vehmd == 410 || vehmd == 436)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
				}

			case 5:
				{
					if (vehmd == 585 || vehmd == 603 || vehmd == 550 || vehmd == 549)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						ShowPlayerDialog(playerid, 1060, DIALOG_STYLE_LIST, "Lights", "Round Fog\nSquare Fog\n{FF0000}Back", "Select", "Cancel");
					}
				}

			case 6:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1010 && response)
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		if (listitem == 8) return RegularCarDialog(playerid);
		new Xarray[] = { 1000, 1001, 1002, 1003, 1014, 1015, 1016, 1023 };

		AddVehicleComponent(vehid, Xarray[listitem]);
		return RegularCarDialog(playerid);
	}

	if (dialogid == 1020 && response)
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		if (listitem == 4) return RegularCarDialog(playerid);
		new Xarray[] = { 1004, 1005, 1011, 1012 };

		AddVehicleComponent(vehid, Xarray[listitem]);
		return RegularCarDialog(playerid);
	}

	if (dialogid == 1040 && response)
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				{
					AddVehicleComponent(vehid, 1142);
					AddVehicleComponent(vehid, 1143);
					return RegularCarDialog(playerid);
				}

			case 1:
				{
					AddVehicleComponent(vehid, 1144);
					AddVehicleComponent(vehid, 1145);
					return RegularCarDialog(playerid);
				}

			case 2:
				RegularCarDialog(playerid);
		}
	}

	if (dialogid == 1060 && response)
	{
		new vehid = workingOnVeh[playerid];
		//new vehmd = GetVehicleModel(vehid);
		if (listitem == 2) return RegularCarDialog(playerid);
		new Xarray[] = { 1013, 1024 };

		AddVehicleComponent(vehid, Xarray[listitem]);
		return RegularCarDialog(playerid);
	}

	if (dialogid == 1115 && response)
	{
		new vehid = workingOnVeh[playerid];
		//new vehmd = GetVehicleModel(vehid);
		new Parray[] = { 0, 1, 2 };

		ChangeVehiclePaintjob(vehid, Parray[listitem]);
		return MechanicCarmodDialog(playerid);
	}

    if (dialogid == DIALOG_AHELP)
    {
        if(response)
        {
            new string2230[512];
            new string2230result[2530];
            switch(listitem)
            {
                case 0:
                {
                    if(PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно ADMIN права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {FFFF00}Admin Level: \t{009BFF}Helper (1)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/а \t \t за да използвате ADMIN чата\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/kick \t \t за да изхвърлите играч от сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/spec \t \t за да наблюдавате играч от сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/specoff \t \t за да спрете да наблюдавате даден играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/аduty \t \t за да влезете на смяна, като администратор\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/ann \t \t за да направите обява относно сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/pm \t \t за да напишеш лично съобщение до играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/answer \t \t за да отговориш на въпроса, зададен от играч\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }

                case 1:
                {
                    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно ADMIN права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {009BFF}Admin Level: \t{009BFF}Administrator (2)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/slap \t \t за да хвърлите играч в небето\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/check \t \t за да видите статистиката на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/goto \t \t за да се телепортирате до играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/mute \t \t за да заглушите играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unmute \t \t за да отглушите играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/jail \t \t за да вкарате играч в АДМИН Затвора\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unjail \t \t за да изкарате играч от АДМИН Затвора\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unpjail \t \t за да изкарате играч от Полицейския Затвор\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/fixveh \t \t за да поправиш првоза си\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/jetpack \t \t за да използваш Jetpack\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }

                case 2:
                {
                    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно ADMIN права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {009BFF}Admin Level: \t{009BFF}Moderator (3)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setint \t \t за да смениш Interior на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setworld \t \t за да смениш Virtual World на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/akill \t \t за да убиете играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/respawn \t \t за да пуснеш играч на Spawn позицията му\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/gethere \t \t за да телепортирате играч до себе си\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/ban \t \t за да BAN-нете играч от сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unban \t \t за да UNBAN-нете играч от сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/clearchat \t \t за да изтриете чата\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/gotols \t \t за да се телепортираш до Los Santos\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/gotolv \t \t за да се телепортираш до Las Venturas\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/gotosf \t \t за да се телепортираш до San Fierro\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/teleportjob \t \t за да се телепортираш някъде\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/teleportfaction \t \t за да се телепортираш някъде\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/startvote \t \t за да пуснеш вот\n");
                    strcat(string2230result, string2230);
                    format(string2230,512,  "{FFFF00}/respawncarsvote \t \t за да пуснеш вот за Respawn на превозите\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/arefuelall \t \t за да заредиш всички превози с бензин\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/warn \t \t за да сложиш предупреждение\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/nwarn \t \t за да сложиш предупреждение на човек извън сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/message \t \t за да пуснеш съобщение в сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/cnnn \t \t за да пуснеш съобщение в сървъра на екрана\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/checkvehs \t \t за да провериш какви лични превози има играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/privatevehid \t \t за да провериш Private Veh ID на превозно средство\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }

                case 3:
                {
                    if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно ADMIN права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {009BFF}Admin Level: \t{009BFF}Grand Admin (4)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/veh \t \t за да създадете превозно средство\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setskin \t \t сменя скина на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setpermskin \t \t сменя постоянния скин\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/sethp \t \t сменя HP играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setarmour \t \t сменя Armour играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/freeze \t \t да замразиш играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unfreeze \t \t да отмразиш играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unwarn \t \t за да махнеш предупреждение\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/nunwarn \t \t за да махнеш предупреждение на човек извън сървъра\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }

                case 4:
                {
                    if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно ADMIN права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {009BFF}Admin Level: \t{009BFF}Server Owner (5)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/gotoveh \t \t телепорт до превозно средство\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/destroyvehs \t \t унищожава SPAWNED колите\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/gmx \t \t рестартира сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/saveserver \t \t запаметява сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/disarm \t \t маха оръжията на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givegun \t \t дава оръжие на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givecash \t \t дава пари на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setcash \t \t слага пари на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setbgn \t \t слага пари в касата на играч (BG Валута)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givebgn \t \t добавя пари в касата на играч (BG Валута)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givebgnall \t \t добавя пари в касата на всеки онлайн играч (BG Валута)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setlevel \t \t слага Level на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givecashall \t \t дава пари на всеки\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/giveexp \t \t дава Exp на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/giveexpall \t \t дава Exp на всеки\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givelevel \t \t дава Level на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givelevelall \t \t дава Level на всеки\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/sethours \t \t променя часа в сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setweather \t \t променя времето в сървъра\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/scriptermode \t \t за да включите Scripter мода\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/makevip \t \t за да направите играч VIP\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/makeadmin \t \t за да направите играч администратор\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/creategraffiti \t \t за да направите графит\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/getadmin \t \t махате админ права\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/awarn \t \t добавяте админ предупреждение\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unawarn \t \t махате админ предупреждение\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/getvip \t \t махате VIP\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/makeevent \t \t за да направите играч Event Admin\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/getevent \t \t за да махнете Event Admin\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/makeboss \t \t за да направите играч шеф на работа\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/makeleader \t \t за да направите играч лидер на FACTION\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/getleader \t \t за да махнете лидерство\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/getboss \t \t за да махнете шефска позиция\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/createhouse \t \t за да създадете къща\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/createbiz \t \t за да създадете бизнес\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/govvote \t \t за да пуснете гласуване за правителство\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givekeys \t \t за да създадеш личен превоз и да предадеш ключовете на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/checkbgn \t \t за да провериш колко пари в касата има играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/managecrews \t \t за управляваш Crews\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }

                case 5:
                {
                    if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно ADMIN права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {009BFF}Admin Level: \t{009BFF}Server Owner (5)\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/checkhouseinterior \t \t за да провериш Interior на къща\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/golastpos \t \t за да се върнеш в предходната си позиция\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setturf \t \t за да промениш притежателя на дадена територия\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/vehobjects \t \t за да изкара менюто, което отговаря за обектите по превозите\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/veh3dtext \t \t за да сложиш/махнещ 3D Text на лично превозно средство\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/getkeys \t \t за да унищожиш нечий личен превоз\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/spawnprivate \t \t за да унищожиш нечий личен превоз\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/destroyprivateveh \t \t за да унищожиш лично превозно средство\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/givefactionmoney \t \t за да дадеш пари на Faction\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setfactionmoney \t \t за да дадеш пари на Faction\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setname \t \t за да смениш нечий Nickname\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }
                case 6:
                {
                    if(!PlayerInfo[playerid][pEvent]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Event Admin права за да видиш тези команди!");
                    format(string2230, 512, "{FFFFFF}Commands of\t {009BFF}Admin Level: \t{00ff00}Event\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/startevent \t \t за да създадеш нов Event без награда\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/startevent2 \t \t за да създадеш нов Event с награда\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/endevent \t \t за да спреш Event-а\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/egivereward \t \t за да спреш влизането в Event-а\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/ncolor \t \t за да смениш цвета на играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/stopevent \t \t за да спреш влизането в Event-а\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/ec \t \t за да пуснеш брояча\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setlimit \t \t за да сложиш лимит на Event-а\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/egivegun \t \t за да дадеш оръжия на всеки в Event-а\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/egivegunall \t \t за да дадеш оръжия на всеки в Event-а\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/efreeze \t \t за да замразиш играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/eunfreeze \t \t за да отмразиш играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/freezeall \t \t за да замразиш всеки\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/unfreezeall \t \t за да отмразиш всеки играч\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/sethpall \t \t за да зададеш HP на всеки\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/setarmourall \t \t за да зададеш броня на всеки\n");
                    strcat(string2230result, string2230);
                    format(string2230, 512, "{FFFF00}/esetskin \t \t за да смениш Skin-а на играч\n");
                    strcat(string2230result, string2230);
                    ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_TABLIST_HEADERS, "{009BFF}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
                }
            }
        }
    }

	if (dialogid == DIALOG_HOUSE_FURNITURES_FINAL)
	{
		new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
		if (!response)
		{
			DestroyDynamicObject(HouseInfo[hisHouse][hTempFurObj]);
		}

		if (response)
		{
			if (PlayerInfo[playerid][pCash] < houseObjectPrice[playerid])
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за да купиш мебела!");
				GivePlayerCash(playerid, -houseObjectPrice[playerid]);
				DestroyDynamicObject(HouseInfo[hisHouse][hTempFurObj]);
				return 1;
			}
            new playerVirtualWorld = GetPlayerVirtualWorld(playerid);
            new hisHouseWorld = GetHouseVirtualWorld(hisHouse);
            new string256[256];
			DestroyDynamicObject(HouseInfo[hisHouse][hTempFurObj]);
            if(playerVirtualWorld == 0)
            {
			HouseInfo[hisHouse][hFurObject][houseUsedFurSlot[playerid]] = CreateDynamicObject(furnitureModel[playerid], tempHouseFurX[playerid], tempHouseFurY[playerid], tempHouseFurZ[playerid], tempHouseFurRX[playerid], tempHouseFurRY[playerid], tempHouseFurRZ[playerid]
                , 0, -1);
            }
            else
            {
                HouseInfo[hisHouse][hFurObject][houseUsedFurSlot[playerid]] = CreateDynamicObject(furnitureModel[playerid], tempHouseFurX[playerid], tempHouseFurY[playerid], tempHouseFurZ[playerid], tempHouseFurRX[playerid], tempHouseFurRY[playerid], tempHouseFurRZ[playerid]
                , hisHouseWorld, -1);
            }
			HouseInfo[hisHouse][hFurSlot][houseUsedFurSlot[playerid]] = 1;
			HouseInfo[hisHouse][hFurID][houseUsedFurSlot[playerid]] = furnitureModel[playerid];
			HouseInfo[hisHouse][hFurX][houseUsedFurSlot[playerid]] = tempHouseFurX[playerid];
			HouseInfo[hisHouse][hFurY][houseUsedFurSlot[playerid]] = tempHouseFurY[playerid];
			HouseInfo[hisHouse][hFurZ][houseUsedFurSlot[playerid]] = tempHouseFurZ[playerid];
			HouseInfo[hisHouse][hFurRX][houseUsedFurSlot[playerid]] = tempHouseFurRX[playerid];
			HouseInfo[hisHouse][hFurRY][houseUsedFurSlot[playerid]] = tempHouseFurRY[playerid];
			HouseInfo[hisHouse][hFurRZ][houseUsedFurSlot[playerid]] = tempHouseFurRZ[playerid];
            if(playerVirtualWorld == 0)
            {
                HouseInfo[hisHouse][hFurVirtualWorld][houseUsedFurSlot[playerid]] = true;
                format(string256, 256, "Ти добави обект пред къщата си за $%d!", houseObjectPrice[playerid]);
                SendClientMessage(playerid, COLOR_HOUSE, string256);
            }
            else
            {
                HouseInfo[hisHouse][hFurVirtualWorld][houseUsedFurSlot[playerid]] = false;
                format(string256, 256, "Ти добави мебел в къщата си за $%d!", houseObjectPrice[playerid]);
                SendClientMessage(playerid, COLOR_HOUSE, string256);
            }
			SaveHouse(hisHouse);
			GivePlayerCash(playerid, -houseObjectPrice[playerid]);
		}
	}

    if(dialogid == DIALOG_HOUSE_FURNITURES_REMOVE)
    {
        if(response)
        {
            new hisHouse=PlayerInfo[playerid][pHouseOwnedID];
            new itemID=houseUsedFurSlot[playerid];
            DestroyDynamicObject(HouseInfo[hisHouse][hFurObject][itemID]);
            SendClientMessage(playerid,COLOR_HOUSE,"Ти премахна обекта от къщата си!");
            HouseInfo[hisHouse][hFurSlot][itemID]=0;
            SaveHouse(hisHouse);
        }
    }

    if(dialogid == DIALOG_HOUSE_FURNITURES_MANAGE)
    {
        if(response)
        {
            new string256[256];
            switch(listitem)
            {
                case 0:
                {
                    new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
                    if(hisHouse != -1)
                    {
                        //new bool: furInWorld = HouseInfo[hisHouse][hFurVirtualWorld];
                        //if(!furInWorld && IsPlayerInHisHouse(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в твоята къща за да преместиш този обект!");
                        //if(furInWorld && GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до твоята къща за да преместиш този обект!");
                        SendClientMessage(playerid, COLOR_WHITE, "SERVER: Трябва да наместиш обекта, както прецениш!");
                        new furSlot = houseUsedFurSlot[playerid];
                        objectID[playerid] = HouseInfo[hisHouse][hFurObject][furSlot];
                        editFurniturePos[objectID[playerid]] = true;
                        EditDynamicObject(playerid, objectID[playerid]);
                    }

                }
                case 1:
                {
                    format(string256, 256, "{FFFF00}Искаш ли да премахнеш избрания обект от къщата си?");
                    ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_REMOVE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Furnitures", string256, "Премахни", "Излез");
                }
            }
        }
    }

	if (dialogid == DIALOG_HOUSE_FURNITURES_SLOT)
	{
		if (response)
		{
			new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
			new isSetObject = HouseInfo[hisHouse][hFurSlot][listitem];
            houseUsedFurSlot[playerid] = listitem;
			if (isSetObject == 1)
			{
                new string256[256];
                format(string256, 256, "1. Премести\n{FF0000}2. Премахни обекта");
                ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_MANAGE, DIALOG_STYLE_LIST, "Furniture", string256, "Напред", "Затвори");
			}
			else if (isSetObject == 0)
			{
				OpenBuyHouseFurniture(playerid);
			}
		}
	}

    if (dialogid == DIALOG_BUYFURNITURES_MENU)
    {
        if (response)
        {
            new furnitureID = furnitureSelect[playerid];
            new furnitureObjectID = BuyFurnitureInfo[furnitureID][buyfModel];
            furnitureModel[playerid] = furnitureObjectID;
            new itsPrice = BuyFurnitureInfo[furnitureID][buyfPrice];
            new stringBuy[256];
            if (PlayerInfo[playerid][pCash] < itsPrice)
            {
                format(stringBuy, 256, "Вие нямате достатъчно пари за тази поръчка! Трябват ви {40BF00}$%s", FormatNumber(itsPrice));
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Furniture", stringBuy, "ОК", "");
                return 1;
            }
            SendClientMessage(playerid, COLOR_HOUSE, "SERVER: Трябва да наместиш обекта, както прецениш!");
            houseObjectPrice[playerid] = itsPrice;
            objectID[playerid] = furnitureID;
            new Float: X, Float: Y, Float: Z;
            GetPlayerPos(playerid, X, Y, Z);
            X += 1.1;
            Y += 1.1;
            new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
            HouseInfo[hisHouse][hTempFurObj] = CreateDynamicObject(furnitureObjectID, X, Y, Z, 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
            EditDynamicObject(playerid, HouseInfo[hisHouse][hTempFurObj]);
        }
    }

	if (dialogid == DIALOG_BUYCLOTHES_MENU)
	{
		if (response)
		{
			new clothID = buySkinsSelect[playerid];
			new itsPrice = BuyClothesInfo[playerid][clothID][buycPrice];
			new stringBuy[256];
			if (PlayerInfo[playerid][pCash] < itsPrice)
			{
				format(stringBuy, 256, "{ffffff}Вие нямате достатъчно пари за тази поръчка. Трябват ви {40BF00}$%d", itsPrice);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", stringBuy, "ОК", "");
				return 1;
			}

			new freeSlot = GetPlayerClothesFreeSlot(playerid);
			if (freeSlot == -1)
			{
				format(stringBuy, 256, "{ffffff}Вие нямате достатъчно място в гардероба!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", stringBuy, "ОК", "");
				return 1;
			}

			new skinID = BuyClothesInfo[playerid][clothID][buycModel];
			if (DoesPlayerHaveSkin(playerid, skinID))
			{
				format(stringBuy, 256, "{ffffff}Вие вече имате това облекло!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", stringBuy, "ОК", "");
				return 1;
			}

			format(stringBuy, 256, "{ffffff}Ти си купи нов Skin за {FF0000}$%d\n{FFFFFF}Използвай /myskins за достъп до твоите Skin-ове!", itsPrice);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", stringBuy, "ОК", "");
			GivePlayerCash(playerid, -itsPrice);
			PlayerInfo[playerid][pNormalSkin] = skinID;
			PlayerInfo[playerid][pClothes][freeSlot] = skinID;
		}
	}

	if (dialogid == DIALOG_BUYBIKE_2)
	{
		if (response)
		{
			new string256[256];
			new vehID = buyVehFromStoreIndex[playerid];
			if (GetPrivateVehsNumber(playerid) >= 3)
			{
				format(string256, 256, "Вие вече имате 3 лични превозни средства и не можете да си купите ново!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 501);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pLevel] < sellBikeFromStoreInfo[vehID][sbVehLevel])
			{
				format(string256, 256, "Нямате достатъчно Level за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 501);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < sellBikeFromStoreInfo[vehID][sbVehPrice])
			{
				format(string256, 256, "Нямате достатъчно пари за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 501);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

            if (GetPrivateVehsNumber(playerid) >= 1 && PlayerInfo[playerid][pVip] < 2)
            {
                format(string256, 256, "Вие нямате право на повече от 1 лично превозно средство!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
                SetPlayerVirtualWorld(playerid, 501);
                inBuyVehVW[playerid] = -1;
                if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
                SetCameraBehindPlayer(playerid);
                return 1;
            }

            if (GetPrivateVehsNumber(playerid) >= 2 && PlayerInfo[playerid][pVip] < 3)
            {
                format(string256, 256, "Вие нямате право на повече от 2 лични превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
                SetPlayerVirtualWorld(playerid, 501);
                inBuyVehVW[playerid] = -1;
                if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
                SetCameraBehindPlayer(playerid);
                return 1;
            }

            if (ExistVehicleID(1850)) 
            {
                format(string256, 256, "Достигнат е тоталният лимит на превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
                SetPlayerVirtualWorld(playerid, 501);
                inBuyVehVW[playerid] = -1;
                if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
                SetCameraBehindPlayer(playerid);
                return 1;
            }

			new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
			new oldVehID = unusedPrivateVehID;
			BuyBikeFromStore(playerid);
			new hisNewVehicle = PrivateVehInfo[oldVehID][vVeh];
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "Превозното ти средство е паркирано отвън сградата!");
			SetVehiclePos(hisNewVehicle, 703.8214, -525.2336, 15.7632);
			SetPlayerVirtualWorld(playerid, 501);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
		else if (!response)
		{
			SetPlayerVirtualWorld(playerid, 501);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
	}

	if (dialogid == DIALOG_BUYBIKE)
	{
		if (response)
		{
			new string556[556];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
			new vehName[70];
			format(vehName, 70, "%s", sellBikeFromStoreInfo[vehID][sbVehName]);
			format(string556, 556, "{FFFFFF}На път сте да си купите ново превозно средство!\nСигурен ли сте?\n\nЗа да си купите превозното средство, натиснете {40BF00}'Buy'{FFFFFF}, а за да се откажете {FF0000}'Close'\n{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%s", vehName, FormatNumber(vehPrice));
			ShowPlayerDialog(playerid, DIALOG_BUYBIKE_2, DIALOG_STYLE_MSGBOX, "Bike Store", string556, "Buy", "Close");
		}
		else if (!response)
		{
			new maxVehs = MAX_SELLBIKE - 1;
			if (buyVehFromStoreIndex[playerid] == maxVehs)
			{
				buyVehFromStoreIndex[playerid] = 0;
			}
			else if (buyVehFromStoreIndex[playerid] < MAX_SELLBIKE)
			{
				buyVehFromStoreIndex[playerid] += 1;
			}

			new string556[556];
			new vehName[70];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehModelID = sellBikeFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellBikeFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellBikeFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d\n{FFFFFF}Level: {FFFF00}%d", vehName, vehPrice, vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYBIKE, DIALOG_STYLE_MSGBOX, "Bike Store", string556, "Buy", "Next");
		}
	}

	if (dialogid == DIALOG_BUYCAR)
	{
		if (response)
		{
			new string556[556];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
			new vehName[70];
			format(vehName, 70, "%s", sellCarFromStoreInfo[vehID][sbVehName]);
			format(string556, 556, "{FFFFFF}На път сте да си купите ново превозно средство!\nСигурен ли сте?\n\nЗа да си купите превозното средство, натиснете {40BF00}'Buy'{FFFFFF}, а за да се откажете {FF0000}'Close'\n{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d", vehName, vehPrice);
			ShowPlayerDialog(playerid, DIALOG_BUYCAR_2, DIALOG_STYLE_MSGBOX, "Veh Store", string556, "Buy", "Close");
		}
		else if (!response)
		{
			new maxVehs = MAX_SELLBIKE - 1;
			if (buyVehFromStoreIndex[playerid] == maxVehs)
			{
				buyVehFromStoreIndex[playerid] = 0;
			}
			else if (buyVehFromStoreIndex[playerid] < MAX_SELLBIKE)
			{
				buyVehFromStoreIndex[playerid] += 1;
			}

			new string556[556];
			new vehName[70];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehModelID = sellCarFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellCarFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellCarFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%s\n{FFFFFF}Level: {FFFF00}%d", vehName, FormatNumber(vehPrice), vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYCAR, DIALOG_STYLE_MSGBOX, "Veh Store", string556, "Buy", "Next");
		}
	}

	if (dialogid == DIALOG_BUYNEON)
	{
		if (response)
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
			if (IsPlayerInHisPrivateVeh(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в твое лично превозно средство!");
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 510 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
				//motors
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 463 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 521 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 423 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 522 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 581 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 586 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 461 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 468
				//flying
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 476 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 497 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 501 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 511 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 520 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 548 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 553 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 465 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 464 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 469 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 563 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 577 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 592 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 593 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 417 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 447 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не може да има неон!");
				return 1;
			}

			new vehicleid = GetPlayerVehicleID(playerid);
			new specialIndex = VehicleInfo[vehicleid][vPrivateID];
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 114000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -114000);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18647;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е червен!");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pCash] < 124000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -124000);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18648;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е син!");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 125000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -125000);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18649;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е зелен!");
					}

				case 3:
					{
						if (PlayerInfo[playerid][pCash] < 126000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -126000);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18650;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е жълт!");
					}

				case 4:
					{
						if (PlayerInfo[playerid][pCash] < 127000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -127000);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18651;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е розов!");
					}

				case 5:
					{
						if (PlayerInfo[playerid][pCash] < 128000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -128000);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18652;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е бял!");
					}
			}

			LoadVehicleNeon(vehicleid);
		}
	}

	if (dialogid == DIALOG_BUYCAR_2)
	{
		if (response)
		{
			new string256[256];
			new vehID = buyVehFromStoreIndex[playerid];
			if (GetPrivateVehsNumber(playerid) >= 3)
			{
				format(string256, 256, "Вие вече имате 3 лични превозни средства и не можете да си купите ново!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 0);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pLevel] < sellCarFromStoreInfo[vehID][sbVehLevel])
			{
				format(string256, 256, "Нямате достатъчно Level за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 0);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < sellCarFromStoreInfo[vehID][sbVehPrice])
			{
				format(string256, 256, "Нямате достатъчно пари за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 0);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

            if (GetPrivateVehsNumber(playerid) >= 1 && PlayerInfo[playerid][pVip] < 2)
            {
                format(string256, 256, "Вие нямате право на повече от 1 лично превозно средство!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
                SetPlayerVirtualWorld(playerid, 0);
                inBuyVehVW[playerid] = -1;
                if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
                SetCameraBehindPlayer(playerid);
                return 1;
            }

            if (GetPrivateVehsNumber(playerid) >= 2 && PlayerInfo[playerid][pVip] < 3)
            {
                format(string256, 256, "Вие нямате право на повече от 2 лични превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
                SetPlayerVirtualWorld(playerid, 0);
                inBuyVehVW[playerid] = -1;
                if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
                SetCameraBehindPlayer(playerid);
                return 1;
            }

            if (ExistVehicleID(1850)) 
            {
                format(string256, 256, "Достигнат е тоталният лимит на превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
                SetPlayerVirtualWorld(playerid, 501);
                inBuyVehVW[playerid] = -1;
                if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
                SetCameraBehindPlayer(playerid);
                return 1;
            }

			new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
			new oldVehID = unusedPrivateVehID;
			BuyCarFromStore(playerid);
			new hisNewVehicle = PrivateVehInfo[oldVehID][vVeh];
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "Превозното ти средство е паркирано до сградата!");
			SetVehiclePos(hisNewVehicle, 2124.2815, -1128.2109, 25.2091);
			SetPlayerVirtualWorld(playerid, 0);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
		else if (!response)
		{
			SetPlayerVirtualWorld(playerid, 0);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
	}

	if (dialogid == DIALOG_MY_CLOTHES)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						OpenGetClothes(playerid);
					}

				case 1:
					{
						OpenDropClothes(playerid);
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYVEH)
	{
		new string256[256];
		new vehicleid = GetPlayerVehicleID(playerid);
		new vehicleidSellCar = VehicleInfo[vehicleid][vForSaleID];
		if (!response)
		{
			RemovePlayerFromVehicle(playerid);
		}

		if (response)
		{
			if (SellCarInfo[vehicleidSellCar][scFaction] != -1)
			{
				new neededFaction = SellCarInfo[vehicleidSellCar][scFaction];
				if (PlayerInfo[playerid][pFaction] != neededFaction)
				{
					format(string256, 256, "Това превозно средство може да се продаде само на членовете на %s!", FactionInfo[neededFaction][fName]);
					ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}

			if (PlayerInfo[playerid][pLevel] < SellCarInfo[vehicleidSellCar][scVehLevel])
			{
				format(string256, 256, "Вие нямате достатъчно голямо ниво за това превозно средство!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < SellCarInfo[vehicleidSellCar][scVehPrice])
			{
				format(string256, 256, "Вие нямате достатъчно пари за това превозно средство!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

            if (GetPrivateVehsNumber(playerid) >= 1 && PlayerInfo[playerid][pVip] < 2)
            {
                format(string256, 256, "Вие нямате право на повече от 1 лично превозно средство!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
                RemovePlayerFromVehicle(playerid);
                return 1;
            }

            if (GetPrivateVehsNumber(playerid) >= 2 && PlayerInfo[playerid][pVip] < 3)
            {
                format(string256, 256, "Вие нямате право на повече от 2 лични превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
                RemovePlayerFromVehicle(playerid);
                return 1;
            }

            if (GetPrivateVehsNumber(playerid) >= 2 && PlayerInfo[playerid][pVip] < 3)
            {
                format(string256, 256, "Вие нямате право на повече от 2 лични превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
                RemovePlayerFromVehicle(playerid);
                return 1;
            }

			if (GetPrivateVehsNumber(playerid) >= 3)
			{
				format(string256, 256, "Вие вече имате 3 лични превозни средства и не можете да си купите ново!");
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

            if (ExistVehicleID(1850)) 
            {
                format(string256, 256, "Достигнат е тоталният лимит на превозни средства!");
                ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
                RemovePlayerFromVehicle(playerid);
                return 1;
            }

			GivePlayerCash(playerid, -SellCarInfo[vehicleidSellCar][scVehPrice]);
			new color1 = SellCarInfo[vehicleidSellCar][scVehC1], color2 = SellCarInfo[vehicleidSellCar][scVehC2];
			new accountNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, accountNickname, 25);
			new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
			format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, accountNickname);
			new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "*** Честито, вие си купихте лично превозно средство ***");
			PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
			PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
			PrivateVehInfo[unusedPrivateVehID][vVehID] = GetVehicleModel(vehicleid);	//goto
			PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
			PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
			PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
			PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
			DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
			PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
			new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
			VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
			VehicleInfo[vehicle][vIsPrivate] = 1;
			SavePrivateVehicle(unusedPrivateVehID);
			RemovePlayerFromVehicle(playerid);
			Inventory_Add(playerid, "Ключове за кола", 11746, 1);
			PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Използвайте /getmycar за да пуснете превозното си средство!");
		}
	}

	if (dialogid == DIALOG_LOTTO)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 15) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $15 за лотарията на момента.");
						GivePlayerCash(playerid, -15);
						new string256[256];
						format(string256, 256, "* %s изтърка билетче от лотарията!", GetPlayerNickname(playerid));
						SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
						new randomNum[6];new randomNumLotto[6];new randomReward[6];

						randomNum[0] = randomex(1, 32);
						randomNum[1] = randomex(1, 32);
						randomNum[2] = randomex(1, 32);
						randomNum[3] = randomex(1, 32);
						randomNum[4] = randomex(1, 32);
						randomNum[5] = randomex(1, 32);

						randomNumLotto[0] = randomex(1, 32);
						randomNumLotto[1] = randomex(1, 32);
						randomNumLotto[2] = randomex(1, 32);
						randomNumLotto[3] = randomex(1, 32);
						randomNumLotto[4] = randomex(1, 32);
						randomNumLotto[5] = randomex(1, 32);

						randomReward[0] = randomex(1, 5);
						randomReward[1] = randomex(1, 11);
						randomReward[2] = randomex(1, 11);
						randomReward[3] = randomex(1, 13);
						randomReward[4] = randomex(1, 15);
						randomReward[5] = randomex(1, 12);

						format(string256, 1200, "{00ff00}                   Лотария на мига\n{FF0000}Ако имате някои числа от тези долу,\nто печелите награда.\n{b031a5}%d, %d, %d, %d, %d, %d\n{4667e0}Вашите числа са %d, %d, %d, %d, %d, %d\n\n\n{00ff00}Награди: %d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d",
							randomNumLotto[0], randomNumLotto[1], randomNumLotto[2], randomNumLotto[3], randomNumLotto[4], randomNumLotto[5],
							randomNum[0], randomNum[1], randomNum[2], randomNum[3], randomNum[4], randomNum[5],
							randomNumLotto[0], randomReward[0], randomNumLotto[1], randomReward[1], randomNumLotto[2], randomReward[2],
							randomNumLotto[3], randomReward[3], randomNumLotto[4], randomReward[4], randomNumLotto[5], randomReward[5]);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Лотария", string256, "OK", "");

						new allSum;
						for (new i; i < 6; i++)
						{
							for (new i2; i2 < 6; i2++)
							{
								if (randomNum[i] == randomNumLotto[i2])
								{
									GivePlayerCash(playerid, randomReward[i2]);
									allSum += randomReward[i2];
									break;
								}
							}
						}

						if (allSum > 0)
						{
							format(string256, 256, "~y~CONGRATS! ~g~YOU WON $%d", allSum);
							GameTextForPlayer(playerid, string256, 2000, 3);
						}
					}

				case 1:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Моля, напишете с какво число ще играете в лотарията.\nМожете да играете с числата между {ffff00}1 и 64");
						ShowPlayerDialog(playerid, DIALOG_SELECT_LOTTO_NUM, DIALOG_STYLE_INPUT, "{FFFFFF}Лотария", string256, "Избери", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_SELECT_LOTTO_NUM)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $10 за да участвате във вечерната лотария.");
			if (lottoNumber[playerid] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече участвате в лотарията.");
			new hisNumber = strval(inputtext);
			if (hisNumber < 1 || hisNumber > 64) return SendClientMessage(playerid, COLOR_GRAD1, "Числото трябва да бъде между 1 и 64.");
			GivePlayerCash(playerid, -10);
			new string256[256];
			format(string256, 256, "* %s регистрира билетче за лотарията!", GetPlayerNickname(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			format(string256, 256, "San Andreas Lottery: Вие си купихте билетче с число %d за лотарията! Не излизайте от сървъра за да не се анулира!", hisNumber);
			SendClientMessage(playerid, COLOR_LOTTO, string256);
			SendClientMessage(playerid, COLOR_LOTTO, "San Andreas Lottery: Лотарията се състои всеки час в 9-тата минута!");
			lottoNumber[playerid] = hisNumber;
		}
	}

	if (dialogid == DIALOG_GPS_2)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Police, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Los Santos Police.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Army, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Армията в Los Santos.");
					}

				case 2:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Bank, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Банката.");
					}

				case 3:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, TheNews, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до San Andreas News.");
					}

				case 4:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, RobPoint, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Точката за обир.");
					}

				case 5:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Autosallon, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Автосалона.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS_3)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, PizzaJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Pizzaboy Job.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, SweepJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Sweep Job.");
					}

				case 2:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, BusJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Bus Job.");
					}

				case 3:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, MechanicJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Mechanic Job.");
					}

				case 4:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, TaxiJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Taxi Job.");
					}

				case 5:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, DeliverJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Deliver Job.");
					}

				case 6:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, CoalmineJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Coalmine Job.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS_4)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Crip, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Crip.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, WestCoastWheelers, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до West Coast Wheelers.");
					}

				case 2:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Vagos, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Vagos.");
					}

				case 3:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Ballas, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Ballas.");
					}

				case 4:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, UnseenCriminals, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Unseen Criminals.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS_5)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, GarageNeon, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Автосервиза за неон.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Garage, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Автосервиза.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS)
	{
		if (response)
		{
			switch (listitem)
			{
			 	//format(string456,456,"{FFFFFF}1. Важни места\n2. Места за работа\n3. Място за риболов\n4. Организации\n5. Автосервизи\n{FF0000}6. Изключи GPS-а");
				//ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
				case 0:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Los Santos Police\nАрмията в Los Santos\nБанката\nSan Andreas News\nТочка за обир\nАвтосалон");
						ShowPlayerDialog(playerid, DIALOG_GPS_2, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 1:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Pizzaboy Job\nSweep Job\nBus Job\nМеханик\nТаксиджия\nDeliver Job\nCoalmine Job");
						ShowPlayerDialog(playerid, DIALOG_GPS_3, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 2:
					{
					 			//Fishing
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, FishingPlace, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Мястото за риболов.");
					}

				case 3:
					{
					 			//DrugPoint
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, MiniGamesArena, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Mini-Games Arena.");
					}

				case 4:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Crip\nWest Coast Wheelers\nVagos\nBallas\nMafia");
						ShowPlayerDialog(playerid, DIALOG_GPS_4, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 5:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Автосервиз за {40BF00}Неон\n{FFFFFF}Обикновен автосервиз");
						ShowPlayerDialog(playerid, DIALOG_GPS_5, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 6:
					{
						if (gpsOn[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте включили GPS-а.");
						gpsOn[playerid] = false;
						DisablePlayerCheckpoint(playerid);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Вие си изключихте GPS-а.");
					}
			}
		}
	}

	if (dialogid == DIALOG_DRINKSSTORE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -5);
						BizInfo[bizID][bEarnings] += 5;
						BizInfo[bizID][bStock] -= 1;
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DRINK_BEER);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте бира за $5.");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -10);
						BizInfo[bizID][bEarnings] += 10;
						BizInfo[bizID][bStock] -= 1;
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DRINK_WINE);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте вино за $10.");
					}

				case 2:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -10);
						BizInfo[bizID][bEarnings] += 10;
						BizInfo[bizID][bStock] -= 1;
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DRINK_WINE);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте водка за $10.");
					}
			}
		}
	}

	if (dialogid == DIALOG_AMMUSTORE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 5250) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката.");
						GivePlayerCash(playerid, -5250);
						BizInfo[bizID][bEarnings] += 5250;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, 23, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте пистолет със заглушител за $5250 (300 патрона)");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 7420) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката.");
						GivePlayerCash(playerid, -7420);
						BizInfo[bizID][bEarnings] += 7420;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, 29, 500);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте MP5 за $7420 (500 патрона)");
					}

				case 2:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 7420) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката.");
						GivePlayerCash(playerid, -7420);
						BizInfo[bizID][bEarnings] += 7420;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, 32, 500);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте Tec9 за $6420 (500 патрона)");
					}

				case 3:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 7420) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката.");
						GivePlayerCash(playerid, -7420);
						BizInfo[bizID][bEarnings] += 7420;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, 26, 200);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте Sawn-Off за $7420 (200 патрона)");
					}
				case 4:
					{
						if (PlayerInfo[playerid][pVip] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "За да вземете това оръжие, трябва да имате Vip Level 1");
						if (PlayerInfo[playerid][pVipGunSpamTimer] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакаш още, преди да си вземеш отново VIP оръжие!");
						if (GetPlayerWeaponAmmu(playerid, 2) >= 500) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 23, 120);
						PlayerInfo[playerid][pVipGunSpamTimer] = 50*60;
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте VIP оръжие от магазина (120 патрона)");
					}
			}
            if (!IsAchieved(playerid, ACHIEVEMENT_BUYLEGALWEAPON))
            {
                GivePlayerAchievement(playerid, ACHIEVEMENT_BUYLEGALWEAPON);
            }
		}
	}

	if (dialogid == DIALOG_BUYFISH)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pVudica]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате въдица!");
						if (PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -50);
						BizInfo[bizID][bEarnings] += 50;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pVudica] = true;
						SendClientMessage(playerid, COLOR_WHITE, "Вие си купихте въдица за риба на стойност {ff0000}$50");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 31) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -31);
						BizInfo[bizID][bEarnings] += 31;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pStruv] += 10;
						SendClientMessage(playerid, COLOR_WHITE, "Вие си купихте 10 червея стръв на стойност {ff0000}$31");
					}
			}
		}
	}

	if (dialogid == DIALOG_INVENTORY_MENU)
	{
		if (response)
		{
			new string256[256];
			new itemid = inventorySelect[playerid], string[64];
			format(string, 64, "%s", InventoryInfo[playerid][itemid][invItem]);
			switch (listitem)
			{
				case 0:	//Използвай - open
					{
						format(string256, 256, "[Инвентар] {ffffff}Вие извадихте предмет {40BF00}%s{ffffff} и го използвахте", string);
						SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
						//other
						if (strcmp(string, "Ключове за кола", true) == 0)
						{
							LockOrUnlockVehicle(playerid);
							return 1;
						}

						if (strcmp(string, "Първа помощ", true) == 0)
						{
							new Float: health;
							GetPlayerHealth(playerid, health);
							if (health >= 100) return SendClientMessage(playerid, COLOR_GRAD2, "Вие сте в отлично здраве и нямате нужда от първа помощ.");
							SetPlayerHealth(playerid, 100);
							ApplyAnimationWithCondition(playerid, "SWAT", "gnstwall_injurd", 4.0, 1, 0, 0, 0, 0);
						}

						if (strcmp(string, "Спрей", true) == 0)
						{
							if (!AttackGraffit(playerid)) return 1;
						}

						if (strcmp(string, "Инструменти за кола", true) == 0)
						{
							if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Излезте от превозното средство първо.");
							if (IsPlayerInRangeOfAnyVehicle(playerid, 6.0) == -1) return SendClientMessage(playerid, COLOR_GRAD2, "Не сте близо до никое превозно средство.");
							new vehicleid = IsPlayerInRangeOfAnyVehicle(playerid, 6.0);
							new Float: health;
							GetVehicleHealth(vehicleid, health);
							if (health >= 1000) return SendClientMessage(playerid, COLOR_GRAD2, "Превозното средство е в отлично състояние");
							PlayerTimerInfo[playerid][ptWorkingVeh] = 6;
							ApplyAnimationWithCondition(playerid, "BD_FIRE", "wash_up", 4.1, 0, 0, 0, 0, 0, 1);
						}

						if (strcmp(string, "GPS Устройство", true) == 0)
						{
							new accountNickname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, accountNickname, 25);
							format(string256, 256, "%s си извади навигатора.", accountNickname);
							SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
							ShowPlayerGPS(playerid);
							return 1;
						}

						Inventory_Remove(playerid, string);
					}	//Използвай - close
				case 1:	//Подай - open
					{
					 			//droped thins - open
						if (strcmp(string, "Ключове за кола", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да свалите ключовете си");
							return 1;
						}

						if (strcmp(string, "GPS Устройство", true) == 0)
						{
							PlayerInfo[playerid][pGPS] = false;
							format(string256, 256, "[Инвентар] {ffffff}Вие свалихте предмет {40BF00}%s{ffffff} на земята", string);
							SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
							DropPlayerItem(playerid, itemid);
							return 1;
						}

						//droped things - close
						ShowPlayerDialog(playerid, DIALOG_DROP_INVENTORY, DIALOG_STYLE_INPUT, "{FFFFFF}Inventory", "{40BF00}Какво количество искате да свалите на земята?", "Напред", "Затвори");
						inventorySelect[playerid] = itemid;
					}	//Подай - close
				case 2:	//Изхвърли - open
					{
					 			//droped thins - open
						if (strcmp(string, "Ключове за кола", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да изхвърлите ключовете си");
							return 1;
						}

						if (strcmp(string, "GPS Устройство", true) == 0)
						{
							PlayerInfo[playerid][pGPS] = false;
							format(string256, 256, "[Инвентар] {ffffff}Вие изхвърлихте предмет {40BF00}%s{ffffff} на земята", string);
							SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
							Inventory_Remove(playerid, string);
							return 1;
						}

						//droped things - close
						ShowPlayerDialog(playerid, DIALOG_THROW_INVENTORY, DIALOG_STYLE_INPUT, "{FFFFFF}Inventory", "{40BF00}Какво количество искате да изхвърлите?", "Напред", "Затвори");
						inventorySelect[playerid] = itemid;
					}	//Изхвърли - close
			}
		}
	}

	if (dialogid == DIALOG_THROW_INVENTORY)
	{
		if (response)
		{
			new itemid = inventorySelect[playerid], string[64];
			format(string, 64, "%s", InventoryInfo[playerid][itemid][invItem]);
			new amount = strval(inputtext);
			if (amount < 0) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно количество.");
			if (InventoryInfo[playerid][itemid][invQuantity] < amount)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате такова количество от предмета.");
				return 1;
			}

			new string256[256];
			format(string256, 256, "[Инвентар] {ffffff}Вие изхвърлихте един предмет в количество {40BF00}%d", amount);
			SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
			Inventory_Remove(playerid, string, amount);
		}
	}

	if (dialogid == DIALOG_DROP_INVENTORY)
	{
		if (response)
		{
			new itemid = inventorySelect[playerid], string[64];
			format(string, 64, "%s", InventoryInfo[playerid][itemid][invItem]);
			new amount = strval(inputtext);
			if (amount < 0) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно количество.");
			if (InventoryInfo[playerid][itemid][invQuantity] < amount)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате такова количество от предмета.");
				return 1;
			}

			new string256[256];
			format(string256, 256, "[Инвентар] {ffffff}Вие свалихте предмет {40BF00}%s{ffffff} на земята в количество {40BF00}%d", string, amount);
			SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
			DropPlayerItem(playerid, itemid, amount);
		}
	}

	if (dialogid == DIALOG_BUYDRINK)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 300) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $300 за да си купите напитката!");
						if (PlayerHealth(playerid) > 70.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изпиеш напитката!");
						GivePlayerHP(playerid, 30);
						GivePlayerCash(playerid, -300);
						ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи вода за $300 и възстанови 30 HP!");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $200 за да си купите напитката!");
						if (PlayerHealth(playerid) > 80.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изпиеш напитката!");
						GivePlayerHP(playerid, 20);
						GivePlayerCash(playerid, -200);
						ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи Fanta за $200 и възстанови 20 HP!");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 300) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $300 за да си купите напитката!");
						if (PlayerHealth(playerid) > 70.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изпиеш напитката!");
						GivePlayerHP(playerid, 30);
						GivePlayerCash(playerid, -300);
						ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи Coca-Cola за $300 и възстанови 30 HP!");
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYFOOD)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $200 за да си купите този хранителен продукт!");
						if (PlayerHealth(playerid) > 80.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изядеш този продукт!");
						GivePlayerHP(playerid, 20);
						GivePlayerCash(playerid, -200);
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи хляб за $200 и възстанови 20 HP!");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pCash] < 300) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $300 за да си купите този хранителен продукт!");
						if (PlayerHealth(playerid) > 70.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изядеш този продукт!");
						GivePlayerHP(playerid, 30);
						GivePlayerCash(playerid, -300);
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи сладкиш за $300 и възстанови 30 HP!");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 100) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $100 за да си купите този хранителен продукт!");
						if (PlayerHealth(playerid) > 90.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изядеш този продукт!");
						GivePlayerHP(playerid, 10);
						GivePlayerCash(playerid, -100);
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи месо за $100 и възстанови 10 HP!");
					}

				case 3:
					{
						if (PlayerInfo[playerid][pCash] < 300) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $300 за да си купите този хранителен продукт!");
						if (PlayerHealth(playerid) > 70.0) return SendClientMessage(playerid, COLOR_GRAD2, "Ти имаш твърде много HP точки за да изядеш този продукт!");
						GivePlayerHP(playerid, 30);
						GivePlayerCash(playerid, -300);
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						SendClientMessage(playerid, 0x82D8FFFF, "Ти си купи бургер за $300 и възстанови 30 HP!");
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYFOODORDRINK)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Хляб ($200): 20 HP точки\n{FFFFFF}Сладкиш ($300): 30 HP точки\n{FFFFFF}Месо ($100): 10 HP точки\n{FFFFFF}Бургер ($300): 30 HP точки");
						ShowPlayerDialog(playerid, DIALOG_BUYFOOD, DIALOG_STYLE_LIST, "STORE", string256, "Вземи", "Излез");
					}

				case 1:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Вода ($300): 30 HP точки\n{FFFFFF}Fanta ($200): 20 HP точки\n{FFFFFF}Coca-Cola ($300): 30 HP точки");
						ShowPlayerDialog(playerid, DIALOG_BUYDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Вземи", "Излез");
					}
			}
		}
	}

	if (dialogid == DIALOG_BLACKMARKET)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pMoneyBag]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате Money Bag!");
						if (PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						PlayerInfo[playerid][pMoneyBag] = true;
						GivePlayerCash(playerid, -10000);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте Money Bag на стойност $10000!");
					}

				case 1:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}На път си да си купиш кокаин!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$145");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_COCA, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}

				case 2:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}На път си да си купиш марихуана!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$255");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_MARI, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}

				case 3:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}На път си да си купиш хероин!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$365");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_HEROIN, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_GENERALSTORE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -10);
						BizInfo[bizID][bEarnings] += 10;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте нож за $10.");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 15) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -15);
						BizInfo[bizID][bEarnings] += 15;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, WEAPON_BAT, 1);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте бухалка за $15.");
					}

				case 2:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 25) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -25);
						BizInfo[bizID][bEarnings] += 25;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, WEAPON_CAMERA, 55);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте камера за $25.");
					}

				case 3:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pGPS]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате GPS устройство.");
						if (PlayerInfo[playerid][pCash] < 350) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -350);
						BizInfo[bizID][bEarnings] += 350;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pGPS] = true;
						Inventory_Add(playerid, "GPS Устройство", 18875, 1);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте GPS за $35, използвайте го чрез /gps.");
					}

				case 4:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -6);
						BizInfo[bizID][bEarnings] += 6;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pCiggs] += 10;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте кутия цигари за $6. Използвайте /smoke за да пушите.");
					}

				case 5:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pTracker]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате 3 тракера.");
						if (PlayerInfo[playerid][pCash] < 900) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -900);
						BizInfo[bizID][bEarnings] += 900;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pTracker] = true;
						SendClientMessage(playerid, COLOR_YELLOW, "Ако имате лична кола, то можете да я намерите с тракера. Използвайте /findveh.");
					}

				case 6:
					{
						ShowPlayerDialog(playerid, DIALOG_LOTTO, DIALOG_STYLE_LIST, "Лотария", "{00ff00}Лотария на момента - $15\n{00ff00}Лотария на всеки час (San Andreas Lottery) - $10", "Избери", "Затвори");
					}

				case 7:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Храни\nНапитки");
						ShowPlayerDialog(playerid, DIALOG_BUYFOODORDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Напред", "Излез");
					}

				case 8:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно място в себе си.");
						if (Inventory_Count(playerid, "Първа помощ") >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате над 3 комплекта бърза помощ");
						if (PlayerInfo[playerid][pCash] < 70) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						Inventory_Add(playerid, "Първа помощ", 1580, 1);
						GivePlayerCash(playerid, -70);
						BizInfo[bizID][bStock] -= 1;
						BizInfo[bizID][bEarnings] += 70;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте комплект бърза помощ за $70.");
					}

				case 9:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно място в себе си.");
						if (Inventory_Count(playerid, "Инструменти за кола") >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате над 3 комплекта инструменти");
						if (PlayerInfo[playerid][pCash] < 170) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						Inventory_Add(playerid, "Инструменти за кола", 920, 1);
						GivePlayerCash(playerid, -170);
						BizInfo[bizID][bStock] -= 1;
						BizInfo[bizID][bEarnings] += 170;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте комплект инструменти за поправка на кола за $170. Използвайте ги, чрез инвентара.");
					}

				case 10:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно място в себе си.");
						if (Inventory_Count(playerid, "Спрей") >= 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате спрей за графити!");
						if (PlayerInfo[playerid][pCash] < 3000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						Inventory_Add(playerid, "Спрей", 365, 1);
						GivePlayerCash(playerid, -3000);
						BizInfo[bizID][bStock] -= 1;
						BizInfo[bizID][bEarnings] += 3000;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте спрей за графити, с него маркирате териториите на бандата. Използвайте го, чрез инвентара.");
					}

				case 11:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pDice]) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате зарче!");
						if (PlayerInfo[playerid][pCash] < 160) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -160);
						BizInfo[bizID][bEarnings] += 160;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pDice] = true;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте зарче, използвайте го, чрез /dice");
					}
			}
		}
	}

	if (dialogid == DIALOG_GUNMACHINE_FBI)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (GetPlayerWeaponAmmu(playerid, 5) >= 160) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						if (PlayerInfo[playerid][pCash] < 2200) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш $2200 за да купиш това оръжие!");
						GivePlayerWeapon(playerid, 31, 80);
						GivePlayerCash(playerid, -2200);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте автомат M4 (80 патрона)");
					}

				case 1:
					{
						if (GetPlayerWeaponAmmu(playerid, 2) >= 50) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						if (PlayerInfo[playerid][pCash] < 1500) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш $1500 за да купиш това оръжие!");
						GivePlayerWeapon(playerid, 24, 25);
						GivePlayerCash(playerid, -1500);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте пистолет Deagle (25 патрона)");
					}

				case 2:
					{
						GivePlayerWeapon(playerid, 3, 1);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте бухалка от оръжията на фбр");
					}
			}
		}
	}

	if (dialogid == DIALOG_GUNMACHINE_ARMY)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (GetPlayerWeaponAmmu(playerid, 5) >= 160) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						if (PlayerInfo[playerid][pCash] < 2200) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш $2200 за да купиш това оръжие!");
						GivePlayerWeapon(playerid, 31, 80);
						GivePlayerCash(playerid, -2200);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте автомат M4 (80 патрона)");
					}

				case 1:
					{
						if (GetPlayerWeaponAmmu(playerid, 2) >= 50) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						if (PlayerInfo[playerid][pCash] < 1500) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш $1500 за да купиш това оръжие!");
						GivePlayerWeapon(playerid, 24, 25);
						GivePlayerCash(playerid, -1500);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте пистолет Deagle (25 патрона)");
					}

				case 2:
					{
						GivePlayerWeapon(playerid, 3, 1);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте бухалка от оръжията на армията");
					}
			}
		}
	}

	if (dialogid == DIALOG_GUNMACHINE_POLICE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (GetPlayerWeaponAmmu(playerid, 5) >= 160) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						if (PlayerInfo[playerid][pCash] < 2200) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш $2200 за да купиш това оръжие!");
						GivePlayerWeapon(playerid, 31, 80);
						GivePlayerCash(playerid, -2200);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте автомат M4 (80 патрона)");
					}

				case 1:
					{
						if (GetPlayerWeaponAmmu(playerid, 2) >= 50) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						if (PlayerInfo[playerid][pCash] < 1500) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш $1500 за да купиш това оръжие!");
						GivePlayerWeapon(playerid, 24, 25);
						GivePlayerCash(playerid, -1500);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте пистолет Deagle (25 патрона)");
					}

				case 2:
					{
						GivePlayerWeapon(playerid, 3, 1);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте бухалка от оръжията на полицията");
					}
			}
		}
	}

	if (dialogid == DIALOG_RENTVEH)
	{
		if (!response)
		{
			RemovePlayerFromVehicle(playerid);
		}
		else if (response)
		{
			if(rentorVeh[playerid])
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Ти вече си наел друг транспорт, първо трябва да го оставиш във фирмата, чрез /unrent");
				return 1;
			}
			new string256[256];
			new vehicleid = GetPlayerVehicleID(playerid);
			if (PlayerInfo[playerid][pCash] < VehicleInfo[vehicleid][vRentPrice])
			{
				RemovePlayerFromVehicle(playerid);
				format(string256, 256, "Вие нямате $%d за да наемете това превозно средство!", VehicleInfo[vehicleid][vRentPrice]);
				SendClientMessage(playerid, COLOR_WHITE, string256);
				return 1;
			}

			GivePlayerCash(playerid, -VehicleInfo[vehicleid][vRentPrice]);
			GameTextForPlayer(playerid, "~w~VEHICLE RENTED", 2500, 3);
			format(string256, 256, "Вие наехте превозното средство за $%d!", VehicleInfo[vehicleid][vRentPrice]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_WHITE, "За да върнете транспорта обратно на фирмата, напишете /unrent");
			SendClientMessage(playerid, COLOR_WHITE, "За да заключите/отключите транспорта, напишете /jlock");
			VehicleInfo[vehicleid][vRentedBy] = playerid;
			rentorVeh[playerid] = true;
			vehRented[playerid] = GetPlayerVehicleID(playerid);
		}
	}

	if (dialogid == DIALOG_RENTVEH_2)
	{
		if (!response)
		{
			RemovePlayerFromVehicle(playerid);
		}
		else if (response)
		{
			new string256[256];
			new string2230[512];
			new string2230result[2230];

			if (strval(inputtext) < 5)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете минути, които са от 5 до 360!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_RENTVEH_2, DIALOG_STYLE_INPUT, "{FFFFFF}Транспорт под наем", string2230result, "Напред", "Затвори");
				return 1;
			}

			new minutes = strval(inputtext);

			new vehicleid = GetPlayerVehicleID(playerid);
			if (PlayerInfo[playerid][pCash] < VehicleInfo[vehicleid][vRentPrice] *minutes)
			{
				RemovePlayerFromVehicle(playerid);
				format(string256, 256, "Вие нямате $%d за да наемете това превозно средство!", VehicleInfo[vehicleid][vRentPrice] *minutes);
				SendClientMessage(playerid, COLOR_LIGHTPURPLE, string256);
				return 1;
			}

			GivePlayerCash(playerid, -VehicleInfo[vehicleid][vRentPrice] *minutes);
			GameTextForPlayer(playerid, "~w~VEHICLE RENTED", 2500, 3);
			format(string256, 256, "Вие наехте превозното средство за $%d. Имате %d минути да го карате.", VehicleInfo[vehicleid][vRentPrice] *minutes, minutes);
			SendClientMessage(playerid, COLOR_LIGHTPURPLE, string256);
			VehicleInfo[vehicleid][vRentedBy] = playerid;
			VehicleTimerInfo[vehicleid][vtRentTime] = minutes * 60;
		}
	}

	if (dialogid == DIALOG_BANK)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Account: %s\n{FFFFFF}Обща сметка: {40BF00}$%d", GetPlayerNickname(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
					}

				case 1:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Добре дошли!\n{FFFFFF}Каква сума искате да изтеглите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_WITHDRAW_MONEY, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Затвори", "");
					}

				case 2:
					{
						new string2230[512];new string2230result[2230];
						if (PlayerInfo[playerid][pLevel] < 5)
						{
							format(string2230, 512, "Трябва ви поне 5-ти Level за да дадете пари на играч!");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Затвори", "");
							return 1;
						}

						format(string2230, 512, "{FFFFFF}Добре дошли!\n{FFFFFF}Напишете името на което да бъдат прехвърлени пари!");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
					}

				case 3:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Добре дошли!\n{FFFFFF}Напишете колко долара искате да внесете в банковата ви сметка!");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
					}

				case 4:
					{
						new string2230[512];new string2230result[2230];
						new string256[256];
						if (PlayerInfo[playerid][pFine] == 0)
						{
							format(string2230, 512, "Вие нямате глоби, които да платите!");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
							return 1;
						}

						new playerFine = PlayerInfo[playerid][pFine] + (PlayerInfo[playerid][pWantedLevel] *2000);
						if (PlayerInfo[playerid][pCash] < playerFine)
						{
							format(string2230, 512, "Нужни са ти $%d за да си платиш глобите!", playerFine);
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
							return 1;
						}

						GivePlayerCash(playerid, -playerFine);
						format(string256, 256, "Вие си платихте глобите за $%d!", playerFine);
						SendClientMessage(playerid, COLOR_POLICE_2, string256);
						PlayerInfo[playerid][pFine] = 0;
						if (PlayerInfo[playerid][pWantedLevel] < 4)
						{
							GetPlayerAllWanted(playerid);
						}
					}

				case 5:
					{
						if (response)
						{
							if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не принадлежиш към никой Faction!");
							new string2230[512];
							new string2230result[2230];
							new factionName[60];
							format(factionName, 60, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
							new factionMoney = FactionInfo[PlayerInfo[playerid][pFaction]][fBankAccount];
							format(string2230, 512, "{FFFFFF}Банковата сметка на: %s\n{FFFFFF}Обща сметка: {40BF00}$%d", factionName, factionMoney);
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, DIALOG_BANK_FACTION, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Изтегли", "Затвори");
						}
					}
			}
		}
	}

	if (dialogid == DIALOG_BANK_FACTION)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не принадлежиш към никой Faction!");
			if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер на Faction!");
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}Следваща стъпка!\n{FFFFFF}Напишете каква сума искате да преведете отдолу.");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_BANK_FACTION_WITHDRAW, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
		}
	}

	if (dialogid == DIALOG_BANK_FACTION_WITHDRAW)
	{
		if (response)
		{
			//
			if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не принадлежиш към никой Faction!");
			if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер на Faction!");
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER_2, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
				return 1;
			}

			new hisFaction = PlayerInfo[playerid][pFaction];
			new factionBankAcc = FactionInfo[hisFaction][fBankAccount];
			if (factionBankAcc < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вашата организация няма такава сума в банката!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			FactionInfo[hisFaction][fBankAccount] -= strval(inputtext);
			GivePlayerCash(playerid, strval(inputtext));
			format(string2230, 512, "{FFFFFF}Вие успешно изтеглихте {40BF00}$%d {FFFFFF}от банковата сметка на {40BF00}%s", strval(inputtext), FactionInfo[hisFaction][fName]);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
			//
		}
	}

	if (dialogid == DIALOG_BANK_TRANSFER)
	{
		if (response)
		{
			format(bankTransferUser[playerid], 60, inputtext);
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}Следваща стъпка!\n{FFFFFF}Напишете каква сума искате да преведете отдолу.");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER_2, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
		}
	}

	//go here

	if (dialogid == DIALOG_BANK_TRANSFER_2)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER_2, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
				return 1;
			}

			if (PlayerInfo[playerid][pBank] < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вие нямате такава сума в банковата си карта!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			new transferID = FindUserByName(bankTransferUser[playerid]);
			if (transferID == playerid)
			{
				format(string2230, 512, "{FFFFFF}Вие въведохте вашето собствено име!\nИзползвайте различно от вашето име!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			if (transferID == INVALID_PLAYER_ID)
			{
				format(string2230, 512, "{FFFFFF}Въведеното име е невалидно!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			PlayerInfo[playerid][pBank] -= strval(inputtext);
			PlayerInfo[transferID][pBank] += strval(inputtext);
			format(string2230, 512, "{FFFFFF}Вие успешно прехвърлихте {40BF00}$%d {FFFFFF}на {40BF00}%s", strval(inputtext), bankTransferUser[playerid]);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
			new string256[256];
			format(string256, 256, "Вие получихте $%d по банковата сметка от %s!", strval(inputtext), GetPlayerNickname(playerid));
			SendClientMessage(transferID, COLOR_WHITE, string256);
		}
	}

	//
	if (dialogid == DIALOG_ATM)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Account: %s\n{FFFFFF}Обща сметка: {40BF00}$%d", GetPlayerNickname(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "ATM Services", string2230result, "Затвори", "");
					}

				case 1:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Добре дошли!\n\n", GetPlayerNickname(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Account: {40BF00}%s {FFFFFF}Обща сметка: {40BF00}$%d\n", GetPlayerNickname(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Каква сума искате да изтеглите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_WITHDRAW_MONEY, DIALOG_STYLE_INPUT, "ATM Services", string2230result, "Затвори", "");
					}
			}
		}
	}

	if (dialogid == DIALOG_BANK_DEPOSIT)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "Services", string2230result, "Затвори", "");
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вие нямате такава сума в брой!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
				return 1;
			}

			GivePlayerCash(playerid, -strval(inputtext));
			PlayerInfo[playerid][pBank] += strval(inputtext);
			format(string2230, 512, "{FFFFFF}Вие успешно внесохте пари!\n{FFFFFF}Внесена сума: {40BF00}$%d", strval(inputtext));
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
		}
	}

	if (dialogid == DIALOG_WITHDRAW_MONEY)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_WITHDRAW_MONEY, DIALOG_STYLE_INPUT, "Services", string2230result, "Затвори", "");
				return 1;
			}

			if (PlayerInfo[playerid][pBank] < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вие нямате такава сума в банковата си карта!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
				return 1;
			}

			PlayerInfo[playerid][pBank] -= strval(inputtext);
			GivePlayerCash(playerid, strval(inputtext));
			format(string2230, 512, "{FFFFFF}Вие успешно изтеглите пари!\n{FFFFFF}Изтеглена сума: {40BF00}$%d", strval(inputtext));
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
		}
	}

	if (dialogid == DIALOG_REFUEL)
	{
		if (strval(inputtext) < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можете да заредите 0 литра във вашето превозно средство!");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в превозно средство!");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (GetFuelStation(playerid) == -1)
		{
			new string256[256];
			format(string256, 256, "Ти не си до бензиностанция!");
			SendClientMessage(playerid, COLOR_WHITE, string256);
			return 1;
		}

		if (strval(inputtext) > 100 - vehFuel[hisVeh])
		{
			new string256[256];
			format(string256, 256, "Можете да заредите до {FFB20C}%d {ffffff}литра във вашето превозно средство!", 100 - vehFuel[hisVeh]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < strval(inputtext))
		{
			new string256[256];
			format(string256, 256, "За да заредите толкова литра, трябва да имате поне {FF0000}$%d!", strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			return 1;
		}

		new getFuel = strval(inputtext);
		new priceFuel = strval(inputtext);
		new string140[140];
		format(string140, 140, "Ти добави {FFB20C}%d {FFFFFF}литра в превозното си средство за {40BF00}$%d{ffffff}!", getFuel, priceFuel);
		SendClientMessage(playerid, COLOR_WHITE, string140);
		format(string140, 140, "%s добави бензин към превоза си!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string140);
		vehFuel[hisVeh] += getFuel;
		GivePlayerCash(playerid, -priceFuel);
        FuelStationInfo[GetFuelStation(playerid)][fsFuel] -=getFuel;
		UpdateFuelStation3DText(GetFuelStation(playerid));
		UpdateSpeedoText(playerid);
	}

	if (dialogid == DIALOG_BUYDRUG_COCA)
	{
		if (response)
		{
			if (strlen(inputtext) < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Въведете число по-голямо от 0!");
			if (PlayerInfo[playerid][pCash] < 145* strval(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази покупка.");
			new string256[256];
			format(string256, 256, "Dealer: Вие си купихте {ff0000}%d грама {FFFFFF}кокаин за {40BF00}$%d", strval(inputtext), 145* strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Dealer: За достъп до наркотиците ви, използвайте /usedrug!");
			GivePlayerCash(playerid, -145* strval(inputtext));
			PlayerInfo[playerid][pCocaine] += strval(inputtext);
		}
	}

	if (dialogid == DIALOG_BUYDRUG_MARI)
	{
		if (response)
		{
			if (strlen(inputtext) < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Въведете число по-голямо от 0!");
			if (PlayerInfo[playerid][pCash] < 255* strval(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази покупка.");
			new string256[256];
			format(string256, 256, "Dealer: Вие си купихте {ff0000}%d грама {FFFFFF}марихуана за {40BF00}$%d", strval(inputtext), 255* strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Dealer: За достъп до наркотиците ви, използвайте /usedrug!");
			GivePlayerCash(playerid, -255* strval(inputtext));
			PlayerInfo[playerid][pMarijuana] += strval(inputtext);
		}
	}

	if (dialogid == DIALOG_BUYDRUG_HEROIN)
	{
		if (response)
		{
			if (strlen(inputtext) < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Въведете число по-голямо от 0!");
			if (PlayerInfo[playerid][pCash] < 365* strval(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази покупка.");
			new string256[256];
			format(string256, 256, "Dealer: Вие си купихте {ff0000}%d грама {FFFFFF}хероин за {40BF00}$%d", strval(inputtext), 365* strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Dealer: За достъп до наркотиците ви, използвайте /usedrug!");
			GivePlayerCash(playerid, -365* strval(inputtext));
			PlayerInfo[playerid][pHeroin] += strval(inputtext);
		}
	}

	if (dialogid == DIALOG_BUYDRUG)
	{
		if (response)
		{
			new string256[256];
			switch (listitem)
			{
				case 0:
					{
						format(string256, 256, "{FFFFFF}На път си да си купиш кокаин!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$145");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_COCA, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}

				case 1:
					{
						format(string256, 256, "{FFFFFF}На път си да си купиш марихуана!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$255");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_MARI, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}

				case 2:
					{
						format(string256, 256, "{FFFFFF}На път си да си купиш хероин!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$365");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_HEROIN, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_REGISTER)
	{
		if (!response)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "SERVER: Вие пожелахте да напуснете сървъра.");
			PlayerTimerInfo[playerid][ptKick] = 1;
			return 1;
		}

		if (strlen(inputtext) < 4 || strlen(inputtext) > 20)
		{
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Паролата трябва да съдържа между 4 и 20 символа");
			new string256[256];
			format(string256, 256, "{F0F0F0}Профилът ви все още не е регистриран.\nВъведете паролата си отдолу");
			ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Регистрация:", string256, "Регистрирай", "Излез");
			return 1;
		}

		//Set Password
		format(PlayerInfo[playerid][pPassword], 500, EncryptPassword(inputtext));
		format(newRegPassword[playerid], 32, "%s", inputtext);
		new string256[256];
		//Choose Gender
		format(string256, 256, "{FFFFFF}Вие успешно зададохте парола за вашия профил!\nСледващата стъпка е да изберете пола на персонажа, изберете го от опциите отдолу");
		ShowPlayerDialog(playerid, DIALOG_SELECT_GENDER, DIALOG_STYLE_MSGBOX, "Избор на пол", string256, "Мъж", "Жена");
	}

	if (dialogid == DIALOG_LOGIN)
	{
		if (!response)
		{
			SendClientMessage(playerid, COLOR_DARKRED, "SERVER: Вие пожелахте да напуснете сървъра.");
			PlayerTimerInfo[playerid][ptKick] = 1;
			return 1;
		}

		if (strlen(inputtext) < 4 || strlen(inputtext) > 20)
		{
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Паролите тук съдържат между 4 и 20 символа.");
			new string256[256];
			format(string256, 256, "{F0F0F0}Профилът ви е регистриран, но вие все още не сте в него.\nВъведете паролата си отдолу за да влезете");
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Вход:", string256, "Влез", "Излез");
			return 1;
		}

		new accountFileNickname[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(accountFileNickname, 256, "%s.ini", accountNickname);
		new password[500];
		format(password, 500, "%s", dini_Get(accountFileNickname, "pPassword"));
		if (strcmp(EncryptPassword(inputtext), password) == 0)
		{
			ClearChatSmall(playerid);
			new string256[256];
			LoadAccount(playerid);
			SavePlayerCurrentIP(playerid);
			SendClientMessage(playerid, 0x62dd49FF, "SERVER: Ти успешно влезе в своя профил!");
			new lastMonth = PlayerInfo[playerid][pLastMonth];
			new lastDay = PlayerInfo[playerid][pLastDay];
			new lastYear = PlayerInfo[playerid][pLastYear];
			new lastHour = PlayerInfo[playerid][pLastHour];
			new lastMinute = PlayerInfo[playerid][pLastMinute];
			new lastSecond = PlayerInfo[playerid][pLastSecond];
			format(string256, 256, "Последното влизане в този профил е било на %d/%d/%d в %d:%d:%d", lastMonth, lastDay, lastYear, lastHour, lastMinute, lastSecond);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_WHITE, "");
			new hisRankName[32];
			switch (PlayerInfo[playerid][pRank])
			{
				case 0:
					format(hisRankName, 64, "N/A");
				case 1:
					format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
				case 2:
					format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
				case 3:
					format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
				case 4:
					format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
				case 5:
					format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
				case 6:
					format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
			}

			format(string256, 256, "Admin Level: %d | Level: %d | Exp: %d | Job: %s | Faction: %s (%s)", PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pLevel],
				PlayerInfo[playerid][pExp], JobInfo[PlayerInfo[playerid][pJob]][jName], FactionInfo[PlayerInfo[playerid][pFaction]][fName], hisRankName);
			SendClientMessage(playerid, COLOR_LIGHTBLUE3, string256);
			TogglePlayerSpectating(playerid, false);
			SavePlayerLastLogin(playerid);
			isLogged[playerid] = true;
			PlayerTimerInfo[playerid][ptSpawn] = 1;
			PlayerTimerInfo[playerid][ptSpawn] = 1;
			SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
			ShowPlayerLevelExp(playerid);
			TextDrawShowForPlayer(playerid, Date[playerid]);
			LoadPlayerBuyClothes(playerid);
		}
		else
		{
			passwordChances[playerid] -= 1;
			if (passwordChances[playerid] == 0)
			{
				PlayerTimerInfo[playerid][ptKick] = 1;
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вие сгрешихте паролата твърде много пъти, заради това сте KICKED.");
				return 1;
			}

			new string256[256];
			format(string256, 256, "SERVER: Въведената парола е невалидна. Имате още %d опита да влезете в профила си.", passwordChances[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string256);
			format(string256, 256, "{F0F0F0}Профилът ви е регистриран, но вие все още не сте в него.\nВъведете паролата си отдолу за да влезете");
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Вход:", string256, "Влез", "Излез");
		}
	}

	if (dialogid == DIALOG_HELP)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						format(string2230, 512, "{FFFFFF}1. Команди за Чата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}2. Команди за плащане/глоби/банкомат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}3. Команди за Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}4. Команди за Jobs\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}5. Команди за Къщи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}6. Команди за Бизнеси\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}7. Команди за Лични превозни средства\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}8. Команди за Риболов\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}9. Команди за Други помощни менюта\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}10. Команди за Skins\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}11. Команди за GPS, Инвентар, Ваучери\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}12. Команди за Новинарското шоу и Радиото\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}13. Команди за Превозите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}14. Команди за Текстовете на екрана\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}15. Команди за Дрогата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}16. Команди за Обир\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}17. Основните команди");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_HELP_CMDS, DIALOG_STYLE_LIST, "{FFFFFF}Помощно меню", string2230result, "Напред", "Затвори");
					}

				case 1:
					{
						format(string2230, 512, "{FFFFFF}1. Как се вдига Level и какво да правя с него?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}2. Как се събират пари и Exp?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}3. Как да намеря дадено място?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}4. Какво е инвентарът и как да го отворя?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}5. Как да започна работа?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}6. За какво да използвам парите и Level-а си?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}7. Как да ловя и след това да продам риба?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}8. Като какъв мога да работя?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}9. В какъв Faction мога да вляза?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}10. Какво е Weapon Skill и как се вдига?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}11. Как да се свържа с админите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_HELP_HOW_TO, DIALOG_STYLE_LIST, "{FFFFFF}Помощно меню", string2230result, "Напред", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_HELP_HOW_TO)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						format(string2230, 512, "Нивото(Level-а) се получава, когато имате достатъчно точки Exp! Нивото се вдигга автоматично\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Exp са точки, които събирате от Payday, Jobs и награди с които купувате Ниво\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "След като вече имате определено ниво, можете да си купите лично превозно средство, къща, бизнес или друго\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 1:
					{
						format(string2230, 512, "Най-лесният начин за събиране на пари и Exp е чрез Payday, можете дори да сте Afk и да вземете наградата от Payday-а в началото на всеки час\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Също така можете да печелите пари по много начини, например чрез риболов или друг дейност работа. Същото важи и за Exp\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Можете да печелите Exp чрез работа или когато администраторът подари точки на всички в сървъра\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 2:
					{
						format(string2230, 512, "Сървърът има множество локации, като например места за работа, риболов, автосервизи и т.н.\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Ако обаче не намирате желаната от вас дестинация, напишете /gps и навигатора ще ви отведе\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 3:
					{
						format(string2230, 512, "Инвентарът е място, където вие съхранявате вашите предмети, можете да го отворите, чрез копчето H или с /inventory\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Чрез инвентара вие можете да достъпите до предметите си и да ги използвате/подадете/хвърлите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 4:
					{
						format(string2230, 512, "Можете да започнете работа, като напишете командата, която ви излезе, след като влезете в превоза на работата ви\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Например за разносвач на пица, след като влезете в мотора ви изписва, че трябва да напишете /pizzajob\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 5:
					{
						format(string2230, 512, "Можете да използвате парите си за\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Kъща, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Бизнес, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Личен превоз, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Оръжия, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Други \n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 6:
					{
						format(string2230, 512, "За да ловиш риба ти трябва въдица и стръв\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "След като хванеш рибата, можеш да напишеш /myfish и да я достъпиш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Ако искаш да продадеш рибата си, можеш да продадеш цялата си раница или само определена риба\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 7:
					{
						format(string2230, 512, "Можете да работите без да сте във фирма, като\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Разносвач на пица, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Шофьор на автобус, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Чистач на улици, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Доставчик на стока \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Фирми в които можете да работите:\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Фирма за таксита, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Фирма за механици \n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 8:
					{
						format(string2230, 512, "Factions в които можете да влезете:\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Полиция, Military Aviation, San Andreas Army, FBI, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Crip, West Coast Wheelers, Vagos \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Ballas, Unseen Criminals \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Медици, Правителството, Новинари \n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 9:
					{
						format(string2230, 512, "Weapon Skill са нива, които ви дават по-добър прицел и захват при оръжията\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Когато стреляте често ви се вдига нивото!\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 10:
					{
						format(string2230, 512, "Ако имате въпрос, използвайте /ask и ще ви бъде отговорено от админите на смяна\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Също така можете да пишете /pm до админите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}
			}
		}
	}

	if (dialogid == DIALOG_HELP_CMDS)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						format(string2230,512,"{00FF00}---Команди за чата---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/loc: за да пишете в Local Chat\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/do: за да обясните какво действие извършихте\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/me: за да обясните какво правите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 1:
					{
						format(string2230,512,"{00FF00}---Команди за плащане/глоби/банкомат---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/pay: за да платиш пари в брой на играч до теб\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/atm: за да използваш банкомат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/bank: за да използваш услугите на банката\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/payfine: за да си платиш глобите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 2:
					{
						format(string2230,512,"{00FF00}---Команди за Factions---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/fhelp: за да видиш всички команди за твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/invite: за да поканиш играч в твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/uninvite: за да изгониш играч от твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/setrank: за да смениш ранга на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/setrankname: за да смениш името на ранг\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/acceptfaction: за да приемеш покана за Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/cancelfaction: за да откажеш покана за Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/leavefaction: за да напуснеш Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/leaders: за да видиш онлайн лидерите на Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/members: за да видиш онлайн членовете на твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/f: за да пишеш във Faction чата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/d: за да пишеш в Държавния чат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/getgun: за да вземеш оръжие от твоя Faction\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 3:
					{
						format(string2230,512,"{00FF00}---Команди за Jobs---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/jobhelp: за да видиш всички команди за твоя Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/jobs: за да видиш твоята Job статистика\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/acceptjob: за да приемеш покана за Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/canceljob: за да откажеш покана за Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/quitjob: за да напуснеш Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/bosses: за да видиш онлайн шефовете на Jobs\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/employees: за да видиш твоите онлайн колеги\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/coalminejob: за да започнеш работа в Coalmine Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/pizzajob: за да започнеш работа в Pizza Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/sweepjob: за да започнеш работа в Sweep Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/busjob: за да започнеш работа в Bus Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/deliverjob: за да започнеш работа в Deliver Job\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 4:
					{
						format(string2230,512,"{00FF00}---Команди за къщи---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/buyhouse: за да си купиш къща\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/psellhouse: за да си продадеш къщата си на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/cancelhouse: за да откажеш продажбата на къщата си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/ahouse: за да купиш къща от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/chouse: за да откажеш къща от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/sellhouse: за да си продадеш къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/lockhouse: за да си заключиш къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/unlockhouse: за да си отключиш къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/furnitures: за достъп до предметите в къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/getarmour: за да облечеш жилетка\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 5:
					{
						format(string2230,512,"{00FF00}---Команди за бизнеси---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/buybiz: за да си купиш бизнес\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/sellbiz: за да си продадеш бизнеса\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/psellbiz: за да си продадеш бизнеса на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/cancelbiz: за да откажеш продажбата на бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/abiz: за да купиш бизнес от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/cbiz: за да откажеш бизнес от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/fee: за да сложиш такса вход на бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/earnings: за да вземеш печалбата от бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/checkstock: за да провериш стоката в бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/buystock: за да купиш стока за бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/lockbiz: за да заключиш бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/unlockbiz: за да отключиш бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/buy: за да поръчаш нещо от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/buygun: за да купиш оръжие от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/buyskin: за да купиш дрехи от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/buyfood: за да купиш храна/напитка от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/train: за да тренираш боен стил\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 6:
					{
						format(string2230,512,"{00FF00}---Команди за лични превозни средства---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/destroymycar: за да премахнеш превозното си средство завинаги\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/getmycar: за да пуснеш превозното си средство\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/park: за да запаметиш позицията на превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/vehlock: за да си отключиш/заключиш превозното си средство\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/findveh: за да намериш превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/listvehs: за да видиш какви превози имаш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/sellveh: за да продадеш превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/vehaccept: за да купиш превоз от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/vehcancel: за да откажеш превоза на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/vehsellcancel: за да откажеш да продадеш превоза си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 7:
					{
						format(string2230,512,"{00FF00}---Команди за риболов---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/fish: за да ловуваш риба\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/sellfish: за да продадеш риба\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/sellcrate: за да продадеш всичката си риба, която имаш\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 8:
					{
						format(string2230,512,"{00FF00}---Команди за други помощни менюта---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/ahelp: за да отвориш админ менюто с команди\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/help: за да отвориш менюто с команди\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/viphelp: за да отвориш VIP менюто\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/fhelp: за да отвориш менюто с команди за Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/jobhelp: за да отвориш менюто с команди за Jobs\n");
						strcat(string2230result, string2230);
                        format(string2230, 512, "{40BF00}/bizhelp: за да отвориш менюто с командите за къщите\n");
                        strcat(string2230result, string2230);
                        format(string2230, 512, "{40BF00}/househelp: за да отвориш менюто с командите за бизнесите\n");
                        strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 9:
					{
						format(string2230,512,"{00FF00}---Команди за Skins---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/myskins: за да видиш какви Skin-ове имаш за Spawn\n");
						strcat(string2230result, string2230);
                        format(string2230, 512, "{FFFFFF}/fskin: за да избереш да се Spawn с Faction Skin или с личен Skin\n");
                        strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 10:
					{
						format(string2230,512,"{00FF00}---Команди за GPS, Инвентар и Ваучери---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/gps: за да отвориш GPS-а си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/mylocation: за да видиш локацията си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/inventory: за да отвориш инвентара си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/mybgn: за да видиш колко пари в лева (BGN) имаш в касата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/vouchers: за да отвориш менюто за ваучер услуги\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 11:
					{
						format(string2230,512,"{00FF00}---Команди за новинарското шоу и радиото---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/togglenews: за да заглушиш/отглушиш новинарското шоу\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/toggleradio: за да заглушиш/отглушиш радиото в колата\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 12:
					{
						format(string2230,512,"{00FF00}---Команди за превозите---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/alarm: за да включиш/изключиш алармата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/lights: за да включиш/изключиш лампите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/bonnet: за да отвориш/затвориш капака\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/boot: за да отвориш/затвориш багажника\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/olock: за да заключиш/отключиш превоза си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 13:
					{
						format(string2230,512,"{00FF00}---Команди за текстовете на екрана---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/time: за да премахнеш/добавиш текста за часа и датата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/logotext: за да премахнеш/добавиш логото\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 14:
					{
						format(string2230,512,"{00FF00}---Команди за дрогата---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/usedrug: за да използваш дрога\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/drugs: за да видиш колко дрога имаш в себе си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 15:
					{
						format(string2230,512,"{00FF00}---Команди за обир---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/robbery: за да организираш обир или да поканиш/изгониш играч от него\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/rob: за да започнеш да крадеш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/robatm: за да започнеш да крадеш от банкомат\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 16:
					{
						format(string2230,512,"{00FF00}---Основните команди---\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/changepass: за да смениш паролата си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/stats: за да видиш статистиката си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/weaponskills: за да видиш своите Weapon Skills\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/admins: за да видиш онлайн админите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/leaders: за да видиш онлайн лидерите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/bosses: за да видиш онлайн шефовете\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/afk: за да отидеш AFK\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/back: за да се върнеш от AFK\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/credits: за да видите Credits\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/id: за да провериш кое ID е търсен от теб играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/refuel: за да заредиш превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/vote: за да гласуваш във вот\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/joinpaintball: за да влезеш в играта PaintBall\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/leavepaintball: за да излезеш от играта PaintBall\n");
						strcat(string2230result, string2230);
                        format(string2230, 512, "{FFFFFF}/joinevent: за да влезеш в Event\n");
                        strcat(string2230result, string2230);
                        format(string2230, 512, "{FFFFFF}/leaveevent: за да излезеш от Event\n");
                        strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/barrier: за да вдигнеш бариера\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/spawn: за да промениш Spawn-а си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/mylocation: за да видиш локацията си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/animlist: за да си видиш анимациите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/clearanimation: за да спреш анимацията\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/dice: за да метнеш зарчето\n");
						strcat(string2230result, string2230);
                        format(string2230, 512, "{40BF00}/minigames: за да влезеш в мини-игра\n");
                        strcat(string2230result, string2230);
                        format(string2230, 512, "{FF0000}/vipusers: за да видиш всички V.I.P. играчи онлайн\n");
                        strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/duel: за да изпратиш покана за дуел на някого\n");
                        strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/cduel: за да откажеш изпратена от теб покана за дуел\n");
                        strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}/no: за да откажеш покана за дуел от някого\n");
                        strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}/yes: за да приемеш покана за дуел от някого\n");
                        strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}/dm и /dm2: за да се телепортираш до DM арените\n");
                        strcat(string2230result, string2230);
                        //format(string2230, 512, "{FFFFFF}/top: за да видиш класациите\n");
                        //strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}
			}
		}
	}

	if(dialogid == DIALOG_MANAGE_CREWS)
	{
		if(response)
		{
			new slotID = listitem;
			new string128[128];
			new string1024[1024];
			if (CrewInfo[slotID][cExists])
			{
				format(string128, sizeof(string128), "{FFFFFF}Преименувай\n");
				strcat(string1024, string128);
				format(string128, sizeof(string128), "{FFFFFF}Премахни");
				strcat(string1024, string128);
				ShowPlayerDialog(playerid, DIALOG_MANAGE_CREWS_OPTIONS_EXIST, DIALOG_STYLE_LIST, "{FFFFFF}Manage Crew Options:", string1024, "Напред", "Затвори");
			}
			else
			{
				format(string128, sizeof(string128), "{FFFFFF}Създай");
				strcat(string1024, string128);
				ShowPlayerDialog(playerid, DIALOG_MANAGE_CREWS_OPTIONS_NOT_EXIST, DIALOG_STYLE_LIST, "{FFFFFF}Manage Crew Options:", string1024, "Напред", "Затвори");
			}
		}
	}

	if (dialogid == DIALOG_VEHOBJECTS)
	{
		if (response)
		{
			new slotID = listitem;
			new vehicleid = GetPlayerVehicleID(playerid);
			vehOptionsSlotID[playerid] = slotID;
			new specialIndex = VehicleInfo[vehicleid][vPrivateID];
			if (PrivateVehInfo[specialIndex][vVehObject][slotID] != 0)
			{
				SendClientMessage(playerid, COLOR_ADMIN_RED, "Ти премахна избрания обект от това превозно средство!");
				if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][slotID]))
				{
					DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][slotID]);
				}

				PrivateVehInfo[specialIndex][vVehObject][slotID] = 0;
				SavePrivateVehicle(specialIndex);
			}
			else if (PrivateVehInfo[specialIndex][vVehObject][slotID] == 0)
			{
				new string2230[512];
				new string2230result[2230];
				format(string2230, 512, "{FFFFFF}Въведете Object ID, който да бъде сложен към превоза!");
				strcat(string2230result, string2230);
				vehApplyObjectID[playerid] = vehicleid;
				ShowPlayerDialog(playerid, DIALOG_VEHOBJECTS_OBJECTID, DIALOG_STYLE_INPUT, "{FFFFFF}Vehicle Object", string2230result, "Напред", "Затвори");
			}
		}
	}

	if (dialogid == DIALOG_VEHOBJECTS_OBJECTID)
	{
		if (response)
		{
			new objID = strval(inputtext);
			if (objID < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Object IDs са от 0 нагоре !");
				return 1;
			}

			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			addVehObjectIDType[playerid] = objID;
			addVehObjectID[playerid] = CreateDynamicObject(objID, X, Y, Z, 0, 0, 0);
			isAddVehObject[addVehObjectID[playerid]] = true;
			EditDynamicObject(playerid, addVehObjectID[playerid]);
		}
	}

	if (dialogid == DIALOG_MORE_STATS)
	{
		if (response)
		{
			ShowPlayerStatsPage2(playerid, seeingStats[playerid]);
		}
	}

	if (dialogid == DIALOG_VOTE_NORMAL)
	{
		didVote[playerid] = true;
		if (response)
		{
			normalVoteYES++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'ДА' на зададения въпрос!");
		}
		else if (!response)
		{
			normalVoteNO++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'НЕ' на зададения въпрос!");
		}
	}

	if (dialogid == DIALOG_VOTE_RESPAWN)
	{
		didVote[playerid] = true;
		if (response)
		{
			respawnVehsVoteYES++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'ДА' за Respawn Vehs!");
		}
		else if (!response)
		{
			respawnVehsVoteNO++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'НЕ' за Respawn Vehs!");
		}
	}

	if (dialogid == DIALOG_SELL_FISH)
	{
		if (response)
		{
			new fishID = (listitem + 1);
			new fishSlotID = PlayerInfo[playerid][pFishSlot][fishID];
			new fishWeight = PlayerInfo[playerid][pFishWeight][fishID];
			new fishPrice = GetPlayerFishPrice(playerid, fishID);
			new fishName[60];
			format(fishName, 60, GetFishName(fishSlotID));
			GivePlayerCash(playerid, fishPrice);
			PlayerInfo[playerid][pFishSlot][fishID] = 0;
			PlayerInfo[playerid][pFishWeight][fishID] = 0;
			new string556[556];
			format(string556, 556, "{FFFFFF}Вие продадохте %d Кг %s за {40BF00}$%d{FFFFFF}!\n", fishWeight, fishName, fishPrice);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Fishing Store", string556, "Излез", "");
			RearangeFishSlots(playerid);
		}
	}

	if (dialogid == DIALOG_SELL_FISHCRATE)
	{
		if (response)
		{
			new totalFishPrice;
			for (new i = 1; i < 11; i++)
			{
				totalFishPrice += GetPlayerFishPrice(playerid, i);
				PlayerInfo[playerid][pFishSlot][i] = 0;
				PlayerInfo[playerid][pFishWeight][i] = 0;
			}

			GivePlayerCash(playerid, totalFishPrice);
			new string556[556];
			format(string556, 556, "{FFFFFF}Вие продадохте наличната си риба на цена {40BF00}$%d{FFFFFF}!\n", totalFishPrice);
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Fishing Store", string556, "Излез", "");
		}
	}

	if (dialogid == DIALOG_DROPFISH)
	{
		if (response)
		{
			new fishItem = fishToDrop[playerid];
			PlayerInfo[playerid][pFishSlot][fishItem] = 0;
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Fish:", "Вие изхвърлихте рибата", "Излез", "");
			RearangeFishSlots(playerid);
		}
	}

	if (dialogid == DIALOG_REM_BARRICADE)
	{
		if (response)
		{
			if (listitem == 20)
			{
				RemovePoliceBarricade(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Ти премахна всички твои барикади!");
			}
			else if (listitem < 20)
			{
				if (policeBarricade[playerid][listitem] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бариера в този слот!");
				new objectBarrID = policeBarricade[playerid][listitem];
				DestroyDynamicObject(objectBarrID);
				isBarricadeObject[objectBarrID] = false;
				policeBarricade[playerid][listitem] = -1;
				SendClientMessage(playerid, COLOR_WHITE, "Ти премахна своята бариера!");
			}
		}
	}

	if (dialogid == DIALOG_MYFISH)
	{
		if (response)
		{
			new fishID = (listitem + 1);
			fishToDrop[playerid] = (listitem + 1);
			if (PlayerInfo[playerid][pFishSlot][fishID] == 0)
			{
				ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Fish:", "Вие нямате риба в този слот", "Излез", "");
			}
			else if (PlayerInfo[playerid][pFishSlot][fishID] != 0)
			{
				ShowPlayerDialog(playerid, DIALOG_DROPFISH, DIALOG_STYLE_MSGBOX, "Fish:", "Искате ли да изхвърлите тази риба?", "Хвърли", "Излез");
			}
		}
	}

	if (dialogid == DIALOG_SELECT_GENDER)
	{
		if (response)
		{
			PlayerInfo[playerid][pGender] = GENDER_MALE;
		}

		if (!response)
		{
			PlayerInfo[playerid][pGender] = GENDER_FEMALE;
		}

		new string256[256];
		SendClientMessage(playerid, COLOR_WHITE, "");
		format(string256, 256, "Вие успешно регистрирахте {40BF00}%s{FFFFFF} с парола {FFFF00}%s", GetPlayerNickname(playerid), newRegPassword[playerid]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		SendClientMessage(playerid, 0x62dd49FF, "SERVER: Ти автоматично влезе в своя профил!");
		//Configure Basics
		Inventory_Add(playerid, "GPS Устройство", 18875, 1);
		PlayerInfo[playerid][pGPS] = true;
		PlayerInfo[playerid][pFaction] = FACTION_UNSEEN;
		PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
		PlayerInfo[playerid][pRank] = 1;
		PlayerInfo[playerid][pInvCapacity] = 30;
		SetPlayerDefaultColor(playerid);
		//Give Level and Cash
		PlayerInfo[playerid][pBank] = 100;
		PlayerInfo[playerid][pLevel] = 1;
		GivePlayerCash(playerid, 5250);
		SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
		PlayerInfo[playerid][pExp] = 1;
		//Player Info Text
		SendClientMessage(playerid, COLOR_WHITE, "");
		new hisRankName[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 0:
				format(hisRankName, 64, "N/A");
			case 1:
				format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(hisRankName, 64, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}
		format(string256, 256, "Admin Level: %d | Level: %d | Exp: %d | Job: %s | Faction: %s (%s)", PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pLevel],
			PlayerInfo[playerid][pExp], JobInfo[PlayerInfo[playerid][pJob]][jName], FactionInfo[PlayerInfo[playerid][pFaction]][fName], hisRankName);
		SendClientMessage(playerid, COLOR_LIGHTBLUE3, string256);
		//Show Screen Texts
		AddScreenTexts(playerid);
		ShowPlayerLevelExp(playerid);
		TextDrawShowForPlayer(playerid, Date[playerid]);
		//Set Gender Skin
		switch (PlayerInfo[playerid][pGender])
		{
			case 0:
				{
					RandomMaleSkin(playerid);
				}

			case 1:
				{
					RandomFemaleSkin(playerid);
				}
		}

		//Spawn
		TogglePlayerSpectating(playerid, false);
		PlayerTimerInfo[playerid][ptSpawn] = 1;
		PlayerTimerInfo[playerid][ptSpawn] = 1;
		//First Spawn Var
		newProfile_firstSpawn[playerid] = true;
		//Configure Profile
		isLogged[playerid] = true;
		SavePlayerLastLogin(playerid);
		SavePlayerCurrentIP(playerid);
		LoadPlayerBuyClothes(playerid);
		new accountFileNickname[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(accountFileNickname, 256, "%s.ini", accountNickname);
		//Create Profile
		dini_Create(accountFileNickname);
		dini_Set(accountFileNickname, "pPassword", PlayerInfo[playerid][pPassword]);
		//Save Information
		PlayerInfo[playerid][pSelectedGender] = 1;
		//SQL_CreateUser(playerid);
		SaveAccount(playerid);
	}

	if (dialogid == DIALOG_VEHMENU)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehBOOTStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {40BF00}Отворен");
							vehBOOTStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {FF0000}Затворен");
							vehBOOTStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}

				case 1:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehLONStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {40BF00}Включени");
							vehLONStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {FF0000}Изключени");
							vehLONStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}

				case 2:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehAlarmStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {40BF00}Включена");
							vehAlarmStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {FF0000}Изключена");
							vehAlarmStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}

				case 3:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehBONTEStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {40BF00}Отворен");
							vehBONTEStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {FF0000}Затворен");
							vehBONTEStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}
			}
		}
	}

	return 1;
}

stock RandomFemaleSkin(playerid)
{
	new randomSkin = randomex(0, 3);
	if (randomSkin == 0)
	{
		SetPlayerSkin(playerid, 55);
		PlayerInfo[playerid][pNormalSkin] = 55;
	}
	else if (randomSkin == 1)
	{
		SetPlayerSkin(playerid, 93);
		PlayerInfo[playerid][pNormalSkin] = 93;
	}
	else if (randomSkin == 2)
	{
		SetPlayerSkin(playerid, 192);
		PlayerInfo[playerid][pNormalSkin] = 192;
	}
	else if (randomSkin == 3)
	{
		SetPlayerSkin(playerid, 233);
		PlayerInfo[playerid][pNormalSkin] = 233;
	}

	new normalSkin = PlayerInfo[playerid][pNormalSkin];
	PlayerInfo[playerid][pClothes][1] = normalSkin;
}

stock RandomMaleSkin(playerid)
{
	new randomSkin = randomex(0, 3);
	if (randomSkin == 0)
	{
		SetPlayerSkin(playerid, 29);
		PlayerInfo[playerid][pNormalSkin] = 29;
	}
	else if (randomSkin == 1)
	{
		SetPlayerSkin(playerid, 28);
		PlayerInfo[playerid][pNormalSkin] = 28;
	}
	else if (randomSkin == 2)
	{
		SetPlayerSkin(playerid, 30);
		PlayerInfo[playerid][pNormalSkin] = 30;
	}
	else if (randomSkin == 3)
	{
		SetPlayerSkin(playerid, 30);
		PlayerInfo[playerid][pNormalSkin] = 30;
	}

	new normalSkin = PlayerInfo[playerid][pNormalSkin];
	PlayerInfo[playerid][pClothes][1] = normalSkin;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,
	Float: fOffsetX, Float: fOffsetY, Float: fOffsetZ,
	Float: fRotX, Float: fRotY, Float: fRotZ,
	Float: fScaleX, Float: fScaleY, Float: fScaleZ)
{
	SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);

    if(attachIndex[playerid] != -1)
    {
        new slot = attachIndex[playerid] + MAX_PLAYER_ATTACHMENTS;
        new pInfoSlot = attachIndex[playerid];
        PlayerInfo[playerid][pAttachements][pInfoSlot] = modelid;
        PlayerInfo[playerid][pAttachementsSlot][pInfoSlot] = slot;
        PlayerInfo[playerid][pAttachementsBone][pInfoSlot] = boneid;
        PlayerInfo[playerid][pAttachements_X][pInfoSlot] = fOffsetX;
        PlayerInfo[playerid][pAttachements_Y][pInfoSlot] = fOffsetY;
        PlayerInfo[playerid][pAttachements_Z][pInfoSlot] = fOffsetZ;
        PlayerInfo[playerid][pAttachements_RX][pInfoSlot] = fRotX;
        PlayerInfo[playerid][pAttachements_RY][pInfoSlot] = fRotY;
        PlayerInfo[playerid][pAttachements_RZ][pInfoSlot] = fRotZ;
        attachIndex[playerid] = -1;
    }

/*
    new debug_string[256+1];
    format(debug_string,256,"SetPlayerAttachedObject(playerid,%d,%d,%d,%f,%f,%f,%f,%f,%f,%f,%f,%f)",
           index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
    print(debug_string);
*/
	return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float: fX, Float: fY, Float: fZ, Float: fRotX, Float: fRotY, Float: fRotZ) {}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float: x, Float: y, Float: z, Float: rx, Float: ry, Float: rz)	// calling fix, don't remove.
{
	new string256[256];
	if (response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
	{
		if (isGraffitiObject[objectid] == true)
		{
			new specialIndex = graffitiSpecialIndex[objectid];
			SendClientMessage(playerid, COLOR_GRAFFITS, "Ти успешно намести графита!");
			GraffitiInfo[specialIndex][gX] = x;
			GraffitiInfo[specialIndex][gY] = y;
			GraffitiInfo[specialIndex][gZ] = z;
			GraffitiInfo[specialIndex][gXY] = rx;
			GraffitiInfo[specialIndex][gYY] = ry;
			GraffitiInfo[specialIndex][gZY] = rz;
			CreateDynamicMapIconEx(x, y, z, 53, 0, MAPICON_LOCAL, 145.0);
			SaveGraffiti(specialIndex);
		}
	}

	if (response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
	{
		//barricades - open
		if (isBarricadeObject[objectid] == true)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "Ти намести барикадата!");
		}

		//barricades - close
		//add veh objects - open
		if (isAddVehObject[objectid] == true)
		{
			if (vehApplyObjectID[playerid] != -1)
			{
				new hisVeh = vehApplyObjectID[playerid];
				new specialIndex = VehicleInfo[hisVeh][vPrivateID];
				SendClientMessage(playerid, COLOR_WHITE, "> Обектът е {40BF00}Наместен");
				new Float: ofx, Float: ofy, Float: ofz, Float: ofaz;
				new Float: finalx, Float: finaly;
				new Float: px, Float: py, Float: pz, Float: roz;
				GetVehiclePos(hisVeh, px, py, pz);
				GetVehicleZAngle(hisVeh, roz);
				ofx = x - px;
				ofy = y - py;
				ofz = z - pz;
				ofaz = rz - roz;
				finalx = ofx* floatcos(roz, degrees) + ofy* floatsin(roz, degrees);
				finaly = -ofx* floatsin(roz, degrees) + ofy* floatcos(roz, degrees);
				new slotID = vehOptionsSlotID[playerid];
				PrivateVehInfo[specialIndex][vVehObject][slotID] = addVehObjectIDType[playerid];
				PrivateVehInfo[specialIndex][vVehObjectX][slotID] = finalx;
				PrivateVehInfo[specialIndex][vVehObjectY][slotID] = finaly;
				PrivateVehInfo[specialIndex][vVehObjectZ][slotID] = ofz;
				PrivateVehInfo[specialIndex][vVehObjectRX][slotID] = rx;
				PrivateVehInfo[specialIndex][vVehObjectRY][slotID] = ry;
				PrivateVehInfo[specialIndex][vVehObjectRZ][slotID] = ofaz;
				SavePrivateVehicle(specialIndex);
				DestroyDynamicObject(objectid);
				SetPrivateVehicleTune(hisVeh);
			}
		}

		//add veh objects - close
		//sirens - open
		if (isSirenObject[objectid] == true)
		{
			if (IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "> Сирената е {40BF00}Наместена");
				new Float: ofx, Float: ofy, Float: ofz, Float: ofaz;
				new Float: finalx, Float: finaly;
				new Float: px, Float: py, Float: pz, Float: roz;
				new hisVeh = GetPlayerVehicleID(playerid);
				GetVehiclePos(hisVeh, px, py, pz);
				GetVehicleZAngle(hisVeh, roz);
				ofx = x - px;
				ofy = y - py;
				ofz = z - pz;
				ofaz = rz - roz;
				finalx = ofx* floatcos(roz, degrees) + ofy* floatsin(roz, degrees);
				finaly = -ofx* floatsin(roz, degrees) + ofy* floatcos(roz, degrees);
				AttachDynamicObjectToVehicle(objectid, hisVeh, finalx, finaly,
					ofz, ofx, ofy, ofaz);
			}
		}

		//sirens - close
		new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
		if (hisHouse != -1)
		{
			new houseObject = HouseInfo[hisHouse][hTempFurObj];
			if (objectid == houseObject && editFurniturePos[objectid] == false)
			{
				tempHouseFurX[playerid] = x;
				tempHouseFurY[playerid] = y;
				tempHouseFurZ[playerid] = z;
				tempHouseFurRX[playerid] = rx;
				tempHouseFurRY[playerid] = ry;
				tempHouseFurRZ[playerid] = rz;
				format(string256, 256, "{00FF00}Искате ли този обект да остане в къщата ви?");
				ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_FINAL, DIALOG_STYLE_MSGBOX, "{FFFFFF}Furnitures", string256, "Да", "Не");
			}
		}
        if (hisHouse != -1)
        {
            if(editFurniturePos[objectid] == true)
            {
                new furModel = HouseInfo[hisHouse][hFurID][houseUsedFurSlot[playerid]];
                HouseInfo[hisHouse][hFurX][houseUsedFurSlot[playerid]] = x;
                HouseInfo[hisHouse][hFurY][houseUsedFurSlot[playerid]] = y;
                HouseInfo[hisHouse][hFurZ][houseUsedFurSlot[playerid]] = z;
                HouseInfo[hisHouse][hFurRX][houseUsedFurSlot[playerid]] = rx;
                HouseInfo[hisHouse][hFurRY][houseUsedFurSlot[playerid]] = ry;
                HouseInfo[hisHouse][hFurRZ][houseUsedFurSlot[playerid]] = rz;
                SaveHouse(hisHouse);
                editFurniturePos[objectid] = false;
                DestroyDynamicObject(objectid);
                new bool: isFurnitureVW = HouseInfo[hisHouse][hFurVirtualWorld][houseUsedFurSlot[playerid]];
                if(isFurnitureVW)
                {
                    HouseInfo[hisHouse][hFurObject][houseUsedFurSlot[playerid]] = CreateDynamicObject(furModel, x, y, z, rx, ry, rz, GetHouseVirtualWorld(hisHouse), -1);
                }
                else
                {
                    HouseInfo[hisHouse][hFurObject][houseUsedFurSlot[playerid]] = CreateDynamicObject(furModel, x, y, z, rx, ry, rz, 0, -1);
                }
                SendClientMessage(playerid, COLOR_WHITE, "SERVER: Обектът беше наместен успешно!");
            }
        }
	}
}

stock GetClothName(clothID)
{
new clothName[64];

//Glasses
if (clothID == 0)
{
    format(clothName,64,"Празен слот");
}
else if (clothID == 19023)
{
    format(clothName,64,"Blue Glasses");
}
else if (clothID == 19023)
{
    format(clothName,64,"Purple Glasses");
}
else if (clothID == 19024)
{
    format(clothName,64,"Pink Glasses");
}
else if (clothID == 19025)
{
    format(clothName,64,"Red Glasses");
}
else if (clothID == 19026)
{
    format(clothName,64,"Yellow Glasses");
}
else if (clothID == 19027)
{
    format(clothName,64,"Transparent Glasses");
}
else if (clothID == 19028)
{
    format(clothName,64,"Stylish Black Glasses");
}
else if (clothID == 19029)
{
    format(clothName,64,"Stylish Black Glasses");
}
else if (clothID == 19139)
{
    format(clothName,64,"Red Police Glasses");
}
else if (clothID == 19140)
{
    format(clothName,64,"Blue Police Glasses");
}
//Hats
else if (clothID == 18636)
{
    format(clothName,64,"Police Hat");
}
else if (clothID == 18929)
{
    format(clothName,64,"Green Hat");
}
else if (clothID == 18933)
{
    format(clothName,64,"White Hat");
}
else if (clothID == 18934)
{
    format(clothName,64,"Red Hat");
}
else if (clothID == 18947)
{
    format(clothName,64,"Black simple hat-the bowler hat like the mafia");
}
else if (clothID == 18969)
{
    format(clothName,64,"Mens hat yellow-orange color");
}
else if (clothID == 18944)
{
    format(clothName,64,"Red hat with large brim");
}
else if (clothID == 18945)
{
    format(clothName,64,"Gray hat");
}
else if (clothID == 19068)
{
    format(clothName,64,"Hat moss green");
}
else if (clothID == 18951)
{
    format(clothName,64,"Bright hat with black stripe");
}
else if (clothID == 18962)
{
    format(clothName,64,"Dark hat");
}
else if (clothID == 19066)
{
    format(clothName,64,"Christmas hat with the words Happy Xmas");
}
else if (clothID == 19528)
{
    format(clothName,64,"The wizard's hat");
}
else if (clothID == 19069)
{
    format(clothName,64,"Black Hat 1");
}
else if (clothID == 19096)
{
    format(clothName,64,"Black Hat 2");
}
//Masks
else if (clothID == 19038)
{
    format(clothName,64,"Green hockey mask");
}
else if (clothID == 19036)
{
    format(clothName,64,"The gray mask");
}
else if (clothID == 18914)
{
    format(clothName,64,"Camouflage Mask");
}
else if (clothID == 18919)
{
    format(clothName,64,"White scarf - kerchief");
}
else if (clothID == 18915)
{
    format(clothName,64,"Pink Mask");
}
else if (clothID == 18916)
{
    format(clothName,64,"Yellow Mask");
}
else if (clothID == 18917)
{
    format(clothName,64,"Blue Mask");
}
else if (clothID == 18918)
{
    format(clothName,64,"Green Mask");
}

return clothName;
}

stock GetHouseVirtualWorld(house)
{
    return house + 50;
}

public OnPlayerClickTextDraw(playerid, Text: clickedid)
{
	return 0;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText: playertextid)
{
	return 0;
}

stock StartFlashingForPlayer(playerid, Turf)
{
	if (Turf != -1)
	{
		new turfAttackerGang = TurfInfo[Turf][TurfWarGang];
		GangZoneFlashForPlayer(playerid, Turf, FactionInfo[turfAttackerGang][fColor]);
	}
}

stock StartFlashing(Turf)
{
	if (Turf != -1)
	{
		new turfAttackerGang = TurfInfo[Turf][TurfWarGang];
		for (new i; i < MAX_PLAYERS; i++)
		{
			GangZoneFlashForPlayer(i, Turf, FactionInfo[turfAttackerGang][fColor]);
		}
	}
}

stock LeaveTurfAttacker(playerid)
{
	new faction = PlayerInfo[playerid][pFaction];
	turfAttacker[playerid] = false;
	AttackTurfInfo[faction][turfPlayers]--;
	new turfMembers = AttackTurfInfo[faction][turfPlayers];
	if (turfMembers <= 0)
	{
		FailTurf(PlayerInfo[playerid][pFaction]);
	}
}

stock EventCountStart()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(inEvent[i] || eventCreator[i])
        {
            GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-]-~b~START~r~-]-", 2500, 3);
            TogglePlayerControllable(i, 1);
        }
    }
}

stock EventCount1()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(inEvent[i] || eventCreator[i])
        {
            GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 1 ~r~-", 2500, 3);
        }
    }
}

stock EventCount2()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(inEvent[i] || eventCreator[i])
        {
            GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 2 ~r~-", 2500, 3);
        }
    }
}

stock StartEventCount()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(inEvent[i] || eventCreator[i])
        {
            GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 3 ~r~-", 2500, 3);
        }
    }
    eventCount = 7;
}

stock FailTurf(Faction)
{
	new string256[256];
	format(string256, 256, "Turf War: {FF0000}%s {C800FF}не успяха да превземат територията за която се бореха!", FactionInfo[Faction][fName]);
	SendClientMessageToAll(COLOR_TURF, string256);
	new turfAttacked = AttackTurfInfo[Faction][attackedTurfID];
	GangZoneStopFlashForAll(turfAttacked);
	TurfInfo[turfAttacked][TurfWarGang] = 0;
	AttackTurfInfo[Faction][startedWar] = 0;
	turfAttacked = -1;
	AttackTurfInfo[Faction][attackedTurfID] = 0;
	AttackTurfInfo[Faction][finishTimer] = 0;
	for (new i; i < MAX_PLAYERS; i++)
	{
		turfAttacker[i] = false;
	}
}

stock FinishTurfSuccess(FactionAttacker)
{
	new string256[256];
	format(string256, 256, "Turf War: {FF0000}%s {C800FF}успя да превземе територията за която се бори!", FactionInfo[FactionAttacker][fName]);
	SendClientMessageToAll(COLOR_TURF, string256);
	FactionInfo[FactionAttacker][fTurfs]++;
	new turfAttacked = AttackTurfInfo[FactionAttacker][attackedTurfID];
	new oldTurfOwner = TurfInfo[turfAttacked][TurfOwner];
	FactionInfo[FactionAttacker][fTurfs]++;
	FactionInfo[oldTurfOwner][fTurfs]--;
	SaveFaction(oldTurfOwner);
	SaveFaction(FactionAttacker);
	TurfInfo[turfAttacked][TurfOwner] = FactionAttacker;
	GangZoneStopFlashForAll(turfAttacked);
	TurfInfo[turfAttacked][TurfWarGang] = 0;
	SaveTurf(turfAttacked);
	AttackTurfInfo[FactionAttacker][startedWar] = 0;
	turfAttacked = -1;
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (turfAttacker[i] == true)
		{
			SendClientMessage(i, COLOR_TURF, "Вие получихте бонус 3 Exp, защото спечелихте територия и останахте на нея!");
			GivePlayerExp(i, 3);
			turfAttacker[i] = false;
		}

		LoadPlayerTurfs(i);
	}
}

stock AttackGraffit(playerid)
{
	new faction = PlayerInfo[playerid][pFaction];
	if (IsGangFaction(faction))
	{
		new graffitStartTimer = AttackGraffitiInfo[faction][startTimer];
		if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер за да използваш тази команда!");
		if (AttackGraffitiInfo[faction][startedWar] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента твоята банда/мафия е нападнала друг графит!");
		if (graffitStartTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още преди да започнете атака!");
		new isInGraffit = -1;
		new bool: sameGang = false;
		for (new g = 0; g < maxGraffiti; g++)
		{
			if (IsPlayerInRangeOfGraffit(playerid, g) == 1)
			{
				isInGraffit = g;
				if (GraffitiInfo[g][GraffitiOwner] == PlayerInfo[playerid][pFaction])
				{
					sameGang = true;
				}
			}
		}

		if (sameGang == true)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този графит е на вашата банда!");
			return false;
		}

		if (isInGraffit == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на 5 метра от графит.");
			return false;
		}

		StartGraffitAttack(PlayerInfo[playerid][pFaction], isInGraffit, playerid);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на банда/мафия!");
		return false;
	}

	return true;
}

stock StartGraffitAttack(Faction, Graffit, playerid)
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new string256[256];
	format(string256, 256, "[Графит] %s се опитва да превземе графит на %s ", accountNickname, GetPlayerZone(playerid));
	SendClientMessageToAll(COLOR_GRAFFITS, string256);
	SendFactionMessage(Faction, COLOR_GRAFFITS, "[FACTION GRAFFITI] Защитавайте нападателя, докато той завърши графита!");
	AttackGraffitiInfo[Faction][startedWar] = 1;
	AttackGraffitiInfo[Faction][attackedGraffitiID] = Graffit;
	AttackGraffitiInfo[Faction][attackPlayerStarter] = playerid;
	AttackGraffitiInfo[Faction][finishTimer] = 3 * 60;
}

stock GetPlayerTurf(playerid)
{
    for (new t = 0; t < MAX_TURFS; t++)
    {
        if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
        {
            return t;
        }
    }
    return -1;
}

stock GetFactionPlayersOnTurf(Faction, Turf)
{
    new count = 0;
    for (new i; i < MAX_PLAYERS; i++)
    {
        if(PlayerInfo[i][pFaction] == Faction)
        {
            if (IsPlayerInTurf(i, TurfInfo[Turf][zMinX], TurfInfo[Turf][zMinY], TurfInfo[Turf][zMaxX], TurfInfo[Turf][zMaxY]))
            {
                count++;
            }
        }
    }
    return count;
}

stock StartTurfWar(Faction, Turf, Players)
{
	new string256[256];
	new turfOwner = TurfInfo[Turf][TurfOwner];
	format(string256, 256, "Turf War: {FF0000}%s {C800FF}се опитва да превземе територията {FF0000}%s{C800FF} на {FF0000}%s", FactionInfo[Faction][fName], TurfInfo[Turf][TurfName], FactionInfo[turfOwner][fName]);
	SendClientMessageToAll(COLOR_TURF, string256);
	SendFactionMessage(Faction, COLOR_TURF, "[FACTION CHAT] Никой от присъстващите на територията не трябва да я напуска до 4 минути!");
	AttackTurfInfo[Faction][startedWar] = 0;
	AttackTurfInfo[Faction][turfPlayers] = Players;
	AttackTurfInfo[Faction][attackedTurfID] = Turf;
	AttackTurfInfo[Faction][finishTimer] = 4 * 60;
	TurfInfo[Turf][TurfWarGang] = Faction;

	StartFlashing(Turf);
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (IsPlayerInTurf(i, TurfInfo[Turf][zMinX], TurfInfo[Turf][zMinY], TurfInfo[Turf][zMaxX], TurfInfo[Turf][zMaxY]))
			{
				if (PlayerInfo[i][pFaction] == Faction)
				{
					turfAttacker[i] = true;
				}
			}
		}
	}
}

SavePlayerCurrentIP(playerid)
{
	new playerAccountFile[115];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);

	format(playerAccountFile, 115, "%s.ini", accountNickname);
	new playerIP[35];
	GetPlayerIp(playerid, playerIP, 35);
	dini_Set(playerAccountFile, "pIP", playerIP);
}

stock BuyFoodNotForHome(playerid)
{
	switch (buyFoodSelect[playerid])
	{
		case 1:
			{
				if (PlayerInfo[playerid][pHungry] > 80)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -2);
						Inventory_Add(playerid, "Хляб", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 20;
				ProgressBarSetValue(playerHungry[playerid], PlayerInfo[playerid][pHungry]);
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -2);
				buyFoodSelect[playerid] = 0;
			}

		case 2:
			{
				if (PlayerInfo[playerid][pHungry] > 70)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -5);
						Inventory_Add(playerid, "Сладкиш", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 30;
				ProgressBarSetValue(playerHungry[playerid], PlayerInfo[playerid][pHungry]);
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -5);
				buyFoodSelect[playerid] = 0;
			}

		case 3:
			{
				if (PlayerInfo[playerid][pHungry] > 90)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -2);
						Inventory_Add(playerid, "Месо", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 10;
				ProgressBarSetValue(playerHungry[playerid], PlayerInfo[playerid][pHungry]);
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -2);
				buyFoodSelect[playerid] = 0;
			}

		case 4:
			{
				if (PlayerInfo[playerid][pHungry] > 70)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -5);
						Inventory_Add(playerid, "Бургер", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 30;
				ProgressBarSetValue(playerHungry[playerid], PlayerInfo[playerid][pHungry]);
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -5);
				buyFoodSelect[playerid] = 0;
			}
	}

	return 1;
}

stock LockOrUnlockVehicle(playerid)
{
	if (GetPrivateVehsNumber(playerid) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш нито едно лично превозно средство!");
		return 1;
	}
	new bool: nearPrivateVeh = false;
	new bool: inPrivateVeh = false; //TODO
	if (IsPlayerInHisPrivateVeh(playerid) == 1)
	{
		inPrivateVeh = true;
	}
	if(GetPlayerNearPrivateVeh(playerid) != -1)
	{
		nearPrivateVeh = true;
	}
	new hisVehID;
	if(inPrivateVeh == true)
	{
		hisVehID = PlayerInfo[playerid][pPrivateVeh][GetPlayerPrivateVehID(playerid)];
	}
	else if(nearPrivateVeh == true)
	{
		hisVehID = GetPlayerNearPrivateVeh(playerid);
	}
	if(nearPrivateVeh == false && inPrivateVeh == false)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си до свое превозно средство!");
		return 1;
	}
	if (PrivateVehInfo[hisVehID][vLocked] == 0)
	{
		PrivateVehInfo[hisVehID][vLocked] = 1;
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ти отключи своето лично превозно средство за останалите!");
		new stringVeh[256];
		format(stringVeh, 256, "%s заключи личния си транспорт!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringVeh);
	}
	else if (PrivateVehInfo[hisVehID][vLocked] == 1)
	{
		PrivateVehInfo[hisVehID][vLocked] = 0;
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ти заключи своето превозно средство за останалите!");
		new stringVeh[256];
		format(stringVeh, 256, "%s отключи личния си транспорт!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringVeh);
	}

	SavePrivateVehicle(hisVehID);
	return 1;
}

stock SetJobVehLocked(vehID)
{
	if (isCoalmineVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isDeliverVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isSweepVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isPizzaVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isBusVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}
}

stock isVehicleToggleEngineForb(vehID)
{
	if (isDeliverVeh[vehID] == true) return true;
	if (isPizzaVeh[vehID] == true) return true;
	if (isSweepVeh[vehID] == true) return true;
	if (isBusVeh[vehID] == true) return true;
	if (isCoalmineVeh[vehID] == true) return true;
	return false;
}

stock ShowPlayerGPS(playerid)
{
	new string456[456];
	format(string456, 456, "{FFFFFF}1. Важни места\n2. Места за работа\n{40BF00}3. Място за риболов\n{40BF00}4. Mini-games Arena\n{FFFFFF}5. Организации\n6. Автосервизи\n{FF0000}7. Изключи GPS-а");
	ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
}

public OnModelSelectionResponse(playerid, extraid, index, modelid, response)
{
	if ((extraid == MODEL_SELECTION_INVENTORY && response) && InventoryInfo[playerid][index][invExists])
	{
		new name[48];
		inventorySelect[playerid] = index;
		format(name, 48, "%s", InventoryInfo[playerid][index][invItem]);
		new inventoryHeader[256];
		format(inventoryHeader, 256, "{FF5733}%s", InventoryInfo[playerid][index][invItem]);
		ShowPlayerDialog(playerid, DIALOG_INVENTORY_MENU, DIALOG_STYLE_LIST, inventoryHeader, "{ffffff}Използвай\n{ffffff}Подай на земята\n{ffffff}Изхвърли в кофа", "Напред", "Назад");
	}

    if ((extraid == MODEL_SELECTION_BUY_FURNITURE && response))
    {
        new name[48];
        furnitureSelect[playerid] = index;
        format(name, 48, "%s", BuyFurnitureInfo[index][buyfItem]);
        new inventoryHeader[256];
        format(inventoryHeader, 256, "{FF5733}%s", BuyFurnitureInfo[index][buyfItem]);
        new itsPrice = BuyFurnitureInfo[index][buyfPrice];
        new stringBuy[256];
        format(stringBuy, 256, "{ffffff}На път си да купиш мебел за къщата си!\nИме на мебела: {40BF00}%s\n{ffffff}Цена: {40BF00}$%s", name, FormatNumber(itsPrice));
        ShowPlayerDialog(playerid, DIALOG_BUYFURNITURES_MENU, DIALOG_STYLE_MSGBOX, inventoryHeader, stringBuy, "Купи", "Излез");
    }

	if ((extraid == MODEL_SELECTION_BUYCLOTHES && response))
	{
		new name[48];
		buySkinsSelect[playerid] = index;
		format(name, 48, "%s", BuyClothesInfo[playerid][buycItem]);
		new inventoryHeader[256];
		format(inventoryHeader, 256, "{FF5733}%s", BuyClothesInfo[playerid][index][buycItem]);
		new itsPrice = BuyClothesInfo[playerid][index][buycPrice];
		new stringBuy[256];
		format(stringBuy, 256, "{ffffff}На път си да си купиш нов скин!\nЦена: {40BF00}$%d", itsPrice);
		ShowPlayerDialog(playerid, DIALOG_BUYCLOTHES_MENU, DIALOG_STYLE_MSGBOX, inventoryHeader, stringBuy, "Купи", "Излез");
	}

	if ((extraid == MODEL_SELECTION_DROPCLOTHES && response))
	{
		new skinSelect = index;
		if (skinSelect == 1)
		{
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", "{ffffff}Не можеш да изхвърлиш този Skin!", "OK", "");
		}
		else if (skinSelect != 1)
		{
			PlayerInfo[playerid][pClothes][skinSelect] = 0;
			new skinIDNew = PlayerInfo[playerid][pClothes][1];
			SetPlayerSkin(playerid, skinIDNew);
			PlayerInfo[playerid][pNormalSkin] = skinIDNew;
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", "{ffffff}Ти изхвърли своя Skin!", "OK", "");
		}
	}

	if ((extraid == MODEL_SELECTION_GETCLOTHES && response))
	{
		new skinSelect = index;
		new skinID = PlayerInfo[playerid][pClothes][skinSelect];
		if (PlayerInfo[playerid][pNormalSkin] == skinID)
		{
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", "{ffffff}Вече си избрал този Skin за Spawn!", "OK", "");
			return 1;
		}
		PlayerInfo[playerid][pNormalSkin] = skinID;
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Skin", "{ffffff}Ти смени своя Spawn Skin!", "OK", "");
	}

	if((extraid == MODEL_SELECTION_SEE_WEAPONSKILL && response))
	{
		new string126[126];
		new weaponIndex = index;
		new weaponSkill = PlayerInfo[playerid][pWeaponSkill][weaponIndex];
		format(string126, sizeof(string126), "{ffffff}Постигнатото ти ниво с %s е %d/10", GetWeaponName_WSIndex(weaponIndex),weaponSkill);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF0000}Weapon Skill", string126, "OK", "");
	}

	if ((extraid == MODEL_SELECTION_BARITEMS && response))
	{
		if (GetPlayerVirtualWorld(playerid) != 0)
		{
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Barricades", "Трябва да си извън Virutal World!", "OK", "");
			return 1;
		}

		if (GetPlayerInterior(playerid) != 0)
		{
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Barricades", "Трябва да си извън Interior!", "OK", "");
			return 1;
		}

		barrItemsSelect[playerid] = index;
		new hisFreeSlot = GetPlayerFreeBarricadeSlot(playerid);
		if (hisFreeSlot == -1)
		{
			ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Barricades", "Нямаш свободен слот! Използвай /rbarricade за да махнеш барикада!", "OK", "");
			return 1;
		}

		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		new objModelID = BarricadeItemsInfo[index][barrModel];
		policeBarricade[playerid][hisFreeSlot] = CreateDynamicObject(objModelID, X + 1, Y + 1, Z, 0, 0, 0);
		new objID = policeBarricade[playerid][hisFreeSlot];
		isBarricadeObject[objID] = true;
		EditDynamicObject(playerid, objID);
		new string256[256];
		SendClientMessage(playerid, COLOR_POLICE_2, "Ти постави барикада на улицата! Не забравяй да я махнеш по-късно!");
		format(string256, 256, "%s постави барикада на улицата!", GetPlayerNickname(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
	}

	return 1;	//gohere3
}

public IsPlayerInTurf(playerid, Float: min_x, Float: min_y, Float: max_x, Float: max_y)
{
	new Float: X3, Float: Y3, Float: Z3;
	GetPlayerPos(playerid, X3, Y3, Z3);
	if ((X3 <= max_x && X3 >= min_x) && (Y3 <= max_y && Y3 >= min_y)) return 1;
	return 0;
}

stock GetWeaponName_WSIndex(index)
{
	new string32[32];
	switch(index)
	{
		case 0: format(string32, 32, "Пистолет");
		case 1: format(string32, 32, "Пистолет със заглушител");
		case 2: format(string32, 32, "Deagle");
		case 3: format(string32, 32, "Shotgun");
		case 4: format(string32, 32, "Sawn-off");
		case 5: format(string32, 32, "Spas-12");
		case 6: format(string32, 32, "Micro-uzi");
		case 7: format(string32, 32, "MP5");
		case 8: format(string32, 32, "AK47");
		case 9: format(string32, 32, "M4");
		case 10: format(string32, 32, "Sniper");
	}
	return string32;
}

stock GetPlayerClothesFreeSlot(playerid)
{
	for (new i = 1; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] == 0) return i;
	}

	return -1;
}

stock GiveTrashItem(playerid, trashTypeID)
{
	switch (trashTypeID)
	{
		case 1:
			{
				GivePlayerCash(playerid, 340);
			}

		case 2:
			{
				GivePlayerCash(playerid, 540);
			}

		case 3:
			{
				if (!PlayerInfo[playerid][pGPS])
				{
					Inventory_Add(playerid, "GPS Устройство", 18875, 1);
					PlayerInfo[playerid][pGPS] = true;
				}
			}

		case 4:
			{
				PlayerInfo[playerid][pStruv] += 10;
			}
	}
}

stock GetTrashItemName(trashTypeID)
{
	new trashName[60];
	switch (trashTypeID)
	{
		case 0:
			{
				format(trashName, 60, "Empty");
			}

		case 1:
			{
				format(trashName, 60, "$340");
			}

		case 2:
			{
				format(trashName, 60, "$540");
			}

		case 3:
			{
				format(trashName, 60, "GPS");
			}

		case 4:
			{
				format(trashName, 60, "Стръв 10x");
			}
	}

	return trashName;
}

stock GetFishName(fishSlotID)
{
	new fishName[60];
	switch (fishSlotID)
	{
		case 0:
			{
				format(fishName, 60, "Empty");
			}

		case 1:
			{
				format(fishName, 60, "Шаран");
			}

		case 2:
			{
				format(fishName, 60, "Скумрия");
			}

		case 3:
			{
				format(fishName, 60, "Цаца");
			}

		case 4:
			{
				format(fishName, 60, "Скат");
			}

		case 5:
			{
				format(fishName, 60, "Омар");
			}
	}

	return fishName;
}

stock GetPlayerFishPrice(playerid, fishID)
{
	new fishSellPrice;
	new fishType = PlayerInfo[playerid][pFishSlot][fishID];
	new fishWeight = PlayerInfo[playerid][pFishWeight][fishID];
	switch (fishType)
	{
		case 1:
			{
				fishSellPrice = fishWeight * 2;
			}

		case 2:
			{
				fishSellPrice = fishWeight * 2;
			}

		case 3:
			{
				fishSellPrice = fishWeight * 2;
				fishSellPrice += 12;
			}

		case 4:
			{
				fishSellPrice = fishWeight * 3;
			}

		case 5:
			{
				fishSellPrice = fishWeight * 3;
				fishSellPrice += 15;
			}
	}

	return fishSellPrice;
}

//Barricade - open
stock GetPlayerFreeBarricadeSlot(playerid)
{
	for (new i = 0; i < 20; i++)
	{
		if (policeBarricade[playerid][i] == -1) return i;
	}

	return -1;
}

//Barricade - close
stock GetPlayerFreeFishSlot(playerid)
{
	for (new i = 1; i < 11; i++)
	{
		if (PlayerInfo[playerid][pFishSlot][i] == 0) return i;
	}

	return -1;
}

stock FindUserByName(name[])
{
	new playerID;
	playerID = ReturnUser(name);
	return playerID;
}

stock RearangeFishSlots(playerid)
{
	new newFishSlot = 1;
	for (new i = 1; i < 11; i++)
	{
		if (PlayerInfo[playerid][pFishSlot][i] != 0)
		{
			new tmpFish = PlayerInfo[playerid][pFishSlot][i];
			new tmpWeight = PlayerInfo[playerid][pFishWeight][i];
			PlayerInfo[playerid][pFishSlot][i] = 0;
			PlayerInfo[playerid][pFishWeight][i] = 0;
			PlayerInfo[playerid][pFishSlot][newFishSlot] = tmpFish;
			PlayerInfo[playerid][pFishWeight][newFishSlot] = tmpWeight;
			newFishSlot += 1;
		}
	}
}

stock DoesPlayerHaveSkin(playerid, skinid)
{
	for (new i; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] == skinid)
		{
			return true;
		}
	}

	return false;
}

stock CreateVehicleForBuying(playerid, vehID)
{
	if (playerVehToBuy[playerid] != -1)
	{
		DestroyVehicle(playerVehToBuy[playerid]);
	}

	if (buyingVehStoreIndex[playerid] == 0)
	{
		playerVehToBuy[playerid] = AddStaticVehicleEx(vehID, 697.3192, -514.7677, -5.6300, 0.0010, 1, 1, RESPAWN_VEHS_SECONDS);
	}
	else if (buyingVehStoreIndex[playerid] == 1)
	{
		playerVehToBuy[playerid] = AddStaticVehicleEx(vehID, 2124.2815, -1128.2109, 25.2091, 253.8429, 1, 1, RESPAWN_VEHS_SECONDS);
	}

	new veh = playerVehToBuy[playerid];
	LinkVehicleToInterior(veh, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(veh, GetPlayerVirtualWorld(playerid));
}

stock BuyCarFromStore(playerid)
{
	new vehID = buyVehFromStoreIndex[playerid];
	new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
	new vehModel = sellCarFromStoreInfo[vehID][sbVehModel];
	GivePlayerCash(playerid, -vehPrice);
	new color1 = 1, color2 = 1;
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
	format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, accountNickname);
	new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
	PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
	PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
	PrivateVehInfo[unusedPrivateVehID][vVehID] = vehModel;	//goto
	PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
	PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
	PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
	PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
	DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
	PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], 253.8429, PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
	new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
	VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
	VehicleInfo[vehicle][vIsPrivate] = 1;
	SavePrivateVehicle(unusedPrivateVehID);
	Inventory_Add(playerid, "Ключове за кола", 11746, 1);
	PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
	new vehName[70];
	format(vehName, 70, sellCarFromStoreInfo[vehID][sbVehName]);
	SendClientMessage(playerid, COLOR_PRIVATEVEH, "*** Честито, вие си купихте лично превозно средство ***");
	SendClientMessage(playerid, COLOR_WHITE, "SERVER: Използвайте /getmycar за да пуснете превозното си средство!");
}

stock BuyBikeFromStore(playerid)
{
	new vehID = buyVehFromStoreIndex[playerid];
	new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
	new vehModel = sellBikeFromStoreInfo[vehID][sbVehModel];
	GivePlayerCash(playerid, -vehPrice);
	new color1 = 1, color2 = 1;
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
	format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, accountNickname);
	new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
	PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
	PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
	PrivateVehInfo[unusedPrivateVehID][vVehID] = vehModel;	//goto
	PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
	PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
	PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
	PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
	DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
	PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], 268.2377, PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
	new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
	VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
	VehicleInfo[vehicle][vIsPrivate] = 1;
	SavePrivateVehicle(unusedPrivateVehID);
	Inventory_Add(playerid, "Ключове за кола", 11746, 1);
	PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
	new vehName[70];
	format(vehName, 70, sellBikeFromStoreInfo[vehID][sbVehName]);
	SendClientMessage(playerid, COLOR_PRIVATEVEH, "*** Честито, вие си купихте лично превозно средство ***");
	SendClientMessage(playerid, COLOR_WHITE, "SERVER: Използвайте /getmycar за да пуснете превозното си средство!");
}

stock HouseExists(houseID)
{
    if(HouseInfo[houseID][hExists])
    {
        return true;
    }
    return false;
}

stock IsPlayerInRangeOfHouse(playerid, Float: range, house)
{
    if(HouseExists(house))
    {
        if(IsPlayerInRangeOfPoint(playerid, range, HouseInfo[house][hX], HouseInfo[house][hY], HouseInfo[house][hZ]))
        {
            return true;
        }
    }
    return false;
}

stock IsPlayerNearHisHouse(playerid)
{
    if (PlayerInfo[playerid][pHouseOwnedID] != -1)
    {
        new hisHouse = PlayerInfo[playerid][pHouseOwnedID];
        if (IsPlayerInRangeOfHouse(playerid, 11.0, hisHouse))
        {
            return true;
        }
    }
    return false;
}

stock IsPlayerInHisHouse(playerid)
{
	if (PlayerInfo[playerid][pHouseOwnedID] != -1)
	{
		if (GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouseOwnedID] + 50)
		{
			return true;
		}
	}
	return false;
}

stock LoadVehicleStickers(vehicleid)
{
	new specialIndex = VehicleInfo[vehicleid][vPrivateID];
	for (new i = 0; i < 2; i++)
	{
		if (strcmp(GetVehicleStickerName(specialIndex, i), "", true) != 0)
		{
			if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]))
			{
				DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]);
			}

			new vehStickerText[256];
			format(vehStickerText, 256, "%s", GetVehicleStickerName(specialIndex, i));
			new vehSticker = PrivateVehInfo[specialIndex][vVehSticker][i];
			new Float: vehStickerX = PrivateVehInfo[specialIndex][vVehStickerX][i];
			new Float: vehStickerY = PrivateVehInfo[specialIndex][vVehStickerY][i];
			new Float: vehStickerZ = PrivateVehInfo[specialIndex][vVehStickerZ][i];
			new Float: vehStickerXY = PrivateVehInfo[specialIndex][vVehStickerXY][i];
			new Float: vehStickerYY = PrivateVehInfo[specialIndex][vVehStickerYY][i];
			new Float: vehStickerZY = PrivateVehInfo[specialIndex][vVehStickerZY][i];
			vehSticker = CreateDynamicObject(19482, vehStickerX, vehStickerY, vehStickerZ, vehStickerXY, vehStickerYY, vehStickerZY, -1, 0, -1, 200);
			SetDynamicObjectMaterialText(vehSticker, 0, vehStickerText, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(vehSticker, vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
		}
	}
}

stock LoadVehicleNeon(vehicleid)
{
	new specialIndex = VehicleInfo[vehicleid][vPrivateID];
	if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
	{
		new neonObjectID = PrivateVehInfo[specialIndex][vVehNeonColor];
		if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]))
		{
			DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]);
		}

		if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]))
		{
			DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]);
		}

		PrivateVehInfo[specialIndex][vVehNeon][0] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
		AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][0], vehicleid, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
		PrivateVehInfo[specialIndex][vVehNeon][1] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
		AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][1], vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
	}
}

stock GetVehicleStickerName(specialIndex, index)
{
	new stickerName[256];
	if (index == 0)
	{
		format(stickerName, 256, "%s", PrivateVehInfo[specialIndex][vVehStickerName1]);
	}
	else if (index == 1)
	{
		format(stickerName, 256, "%s", PrivateVehInfo[specialIndex][vVehStickerName2]);
	}

	return stickerName;
}

stock GetPlayerWeaponAmmu(playerid, slot)
{
	new weapons[13][2];
	GetPlayerWeaponData(playerid, slot, weapons[slot][0], weapons[slot][1]);
	new ammu = weapons[slot][1];
	return ammu;
}

stock LeavePlayerWork(playerid)
{
	if (isWorkingSweep[playerid] == true) isWorkingSweep[playerid] = false;
	if (isWorkingBus[playerid] == true) isWorkingBus[playerid] = false;
	if (isWorkingPizza[playerid] == true) isWorkingPizza[playerid] = false;
	if (isWorkingDeliver[playerid] == true) isWorkingDeliver[playerid] = false;
	if (isWorkingCoalmine[playerid] == true) isWorkingCoalmine[playerid] = false;
}

stock isPlayerWorkingNow(playerid)
{
	if (isWorkingSweep[playerid] == true) return 1;
	if (isWorkingBus[playerid] == true) return 1;
	if (isWorkingPizza[playerid] == true) return 1;
	if (isWorkingDeliver[playerid] == true) return 1;
	if (isWorkingCoalmine[playerid] == true) return 1;
	return 0;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
	/*
	if(PlayerInfo[playerid][pFaction]== FACTION_LSPD)
	{
	if(PlayerTimerInfo[damagedid][ptPoliceStunned] == 0)
	{
	PlayerTimerInfo[damagedid][ptPoliceStunned]=12;
	}
	}

	*/
	return 0;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float: fX, Float: fY, Float: fZ)
{
    if(hittype == BULLET_HIT_TYPE_VEHICLE && !isVehicleOccupied(hitid))
    {
		//TURN ON VEHICLE ALARM
		if(VehicleTimerInfo[hitid][vtLastAlarmON] == 0)
		{
			ToggleAlarm(hitid, VEHICLE_PARAMS_ON);
			VehicleTimerInfo[hitid][vtLastAlarmON] = 10*60;
			VehicleTimerInfo[hitid][vtTurnAlarmOFF] = 9;
		}
		
		//TAKE VEHICLE DAMAGE
        new Float:vhp;
        GetVehicleHealth(hitid, vhp);
        switch(weaponid)
        {
            case 22..34:
            {
                if(vhp-wdamage[weaponid-22] >= 0)
                    SetVehicleHealth(hitid, (vhp = vhp-wdamage[weaponid-22]));
            }
        }
        if(vhp <= 250.0)
        {
            if(VehicleTimerInfo[hitid][vtRespawn] == 0)
            {
                VehicleTimerInfo[hitid][vtRespawn] = 7;
                deadVeh[hitid] = true;
            }
        }
    }
    if(!paintBallStarted && inPaintBall[playerid])
    {
        SetToSpawn(playerid);
        SendClientMessage(playerid, COLOR_PAINTBALL, "SERVER: Изчакай играта да започне, преди да стреляш в PaintBall!");
    }
	if (hitid != INVALID_PLAYER_ID && playerid != hitid)
	{
		if (weaponid == 22)
		{
			if (PlayerInfo[playerid][pWeaponSkill][0] < 10)
			{
				new currentGun = 0;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Пистолет! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 23)
		{
			if (PlayerInfo[playerid][pWeaponSkill][1] < 10)
			{
				new currentGun = 1;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Пистолет със заглушител! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 24)
		{
			if (PlayerInfo[playerid][pWeaponSkill][2] < 10)
			{
				new currentGun = 2;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Deagle! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 25)
		{
			if (PlayerInfo[playerid][pWeaponSkill][3] < 10)
			{
				new currentGun = 3;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Shotgun! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 26)
		{
			if (PlayerInfo[playerid][pWeaponSkill][4] < 10)
			{
				new currentGun = 4;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Sawn-off! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 27)
		{
			if (PlayerInfo[playerid][pWeaponSkill][5] < 10)
			{
				new currentGun = 5;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Spas-12! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 28)
		{
			if (PlayerInfo[playerid][pWeaponSkill][6] < 10)
			{
				new currentGun = 6;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Micro Uzi! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 29)
		{
			if (PlayerInfo[playerid][pWeaponSkill][7] < 10)
			{
				new currentGun = 7;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Mp5! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 30)
		{
			if (PlayerInfo[playerid][pWeaponSkill][8] < 10)
			{
				new currentGun = 8;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с AK47! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 31)
		{
			if (PlayerInfo[playerid][pWeaponSkill][9] < 10)
			{
				new currentGun = 9;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с M4! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}

		if (weaponid == 34)
		{
			if (PlayerInfo[playerid][pWeaponSkill][10] < 10)
			{
				new currentGun = 10;
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
				new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
				if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
				{
					PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
					PlayerInfo[playerid][pWeaponSkill][currentGun]++;
					SetPlayerWeaponSkillByLevel(playerid);
					new string256[256];
					format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Sniper! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
					SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
				}
			}
		}
	}

	return 1;
}

stock FreezeAntiDropOnSpawn(playerid)
{
	PlayerTimerInfo[playerid][ptUnfreeze] = 2;
	TogglePlayerControllable(playerid, 0);
	SetCameraBehindPlayer(playerid);
}

stock SetToSpawn(playerid)
{
	setToSpawn[playerid] = true;
	SavePlayerAllGuns(playerid);
	SpawnPlayer(playerid);
	PlayerTimerInfo[playerid][ptSetToSpawnVar] = 2;
}

stock JailTimeByWanted(wantedLevel)
{
	new jailTime;
	switch (wantedLevel)
	{
		case 1:
			jailTime = 3 * 60;
		case 2:
			jailTime = 8 * 60;
		case 3:
			jailTime = 12 * 60;
		case 4:
			jailTime = 15 * 60;
		case 5:
			jailTime = 15 * 60;
		case 6:
			jailTime = 16 * 60;
	}

	return jailTime;
}

stock GetFuelStation(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_1)) return 0;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_2)) return 1;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_3)) return 2;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_4)) return 3;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_5)) return 4;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_6)) return 5;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_7)) return 6;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_8)) return 7;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_9)) return 8;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_10)) return 9;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_11)) return 10;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_12)) return 11;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_13)) return 12;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_14)) return 13;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_15)) return 14;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_16)) return 15;
	return -1;
}

stock UpdateFuelStation3DText(fuelStationID)
{
	new refuelString[500];
	format(refuelString, 500, "{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}%d", FuelStationInfo[fuelStationID][fsFuel]);
	Update3DTextLabelText(fuelStationText[fuelStationID], COLOR_LIGHTBLUE3, refuelString);
}

stock RemovePoliceBarricade(playerid)
{
	for (new i = 0; i < 20; i++)
	{
		if (policeBarricade[playerid][i] != -1)
		{
			new objectBarrID = policeBarricade[playerid][i];
			DestroyDynamicObject(objectBarrID);
			isBarricadeObject[objectBarrID] = false;
			policeBarricade[playerid][i] = -1;
		}
	}
}

stock RemovePlayerSiren(playerid)
{
	if (policeSiren[playerid] != -1)
	{
		DestroyDynamicObject(policeSiren[playerid]);
		isSirenObject[policeSiren[playerid]] = false;
		policeSiren[playerid] = -1;
	}
}

stock SetArmourObjectToPlayer(playerid)
{
	new Float: armourPoints;
	GetPlayerArmour(playerid, armourPoints);
	if (armourPoints == 0)
	{
		RemoveArmourObject(playerid);
	}
	else
	{
		PlayerTimerInfo[playerid][ptSetArmourObject] = 2;
		PlayerTimerInfo[playerid][ptSetArmourObject] = 6;
	}
}

stock RemoveArmourObject(playerid)
{
	PlayerTimerInfo[playerid][ptRemoveArmourObject] = 2;
	PlayerTimerInfo[playerid][ptRemoveArmourObject] = 6;
}

stock RemoveArmourObjectIfNotLaw(playerid)
{
	if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
		PlayerInfo[playerid][pFaction] != FACTION_RCPD &&
		PlayerInfo[playerid][pFaction] != FACTION_ARMY &&
		PlayerInfo[playerid][pFaction] != FACTION_KACC &&
		PlayerInfo[playerid][pFaction] != FACTION_FBI)
	{
		PlayerTimerInfo[playerid][ptRemoveArmourObject] = 2;
		PlayerTimerInfo[playerid][ptRemoveArmourObject] = 6;
	}

	new Float: armour;
	GetPlayerArmour(playerid, armour);
	if (armour > 0)
	{
		PlayerTimerInfo[playerid][ptSetArmourObject] = 2;
		PlayerTimerInfo[playerid][ptSetArmourObject] = 6;
	}
}

stock IsNoFuelVehicle(vehicleid)
{
	if (vehicleid == 481 || vehicleid == 509 || vehicleid == 510 || vehicleid == 481
        || vehicleid == 460 || vehicleid == 476 || vehicleid == 511 || vehicleid == 512 || vehicleid == 513 || vehicleid == 519
        || vehicleid == 520 || vehicleid == 553 || vehicleid == 577 || vehicleid == 592 || vehicleid == 593)
	{
		return 1;
	}

	return 0;
}

stock GivePlayerPaintBallGuns(playerid)
{
	GivePlayerWeapon(playerid, 31, 3000);
	GivePlayerWeapon(playerid, 34, 3000);
	GivePlayerWeapon(playerid, 24, 3000);
}

stock SetPlayerPosToPaintBall(playerid)
{
	SetPlayerInterior(playerid, 10);
	SetPlayerVirtualWorld(playerid, 1);
	new spawnPos = randomex(0, 2);
	switch (spawnPos)
	{
		case 0:
			{
				SetPlayerPos(playerid, -977.6664, 1061.4066, 1345.6719);
			}

		case 1:
			{
				SetPlayerPos(playerid, -993.7939, 1059.7830, 1342.9510);
			}

		case 2:
			{
				SetPlayerPos(playerid, -1024.2544, 1068.3567, 1343.8243);
			}

		case 3:
			{
				SetPlayerPos(playerid, -1055.9219, 1078.4906, 1343.0696);
			}

		case 4:
			{
				SetPlayerPos(playerid, -1073.3352, 1069.1577, 1342.5333);
			}
	}
}

stock LeaveFromEvent(playerid)
{
    eventPlayers--;
    inEvent[playerid]=false;
    SetToSpawn(playerid);
}

stock LeaveFromPaintBall(playerid)
{
	inPaintBall[playerid] = false;
	paintBallKills[playerid] = 0;
	GetPlayerAllGuns(playerid);
	SetPlayerPos(playerid, MiniGamesArena);
	GivePlayerAllGuns(playerid);
	SetPlayerHealth(playerid, beforeHealth[playerid]);
	SetArmour(playerid, beforeArmour[playerid]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	TextDrawHideForPlayer(playerid, PaintBallTimerText);
    paintBallPlayers--;
    if(paintBallPlayers < 4 && paintBallStarted)
    {
        ClosePaintBall();
    }
}

stock ClosePaintBall()
{
	paintBallOpen = false;
	paintBallEndTimer = 0;
	new winnerID = -1;
	new winnerKills = 0;
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
    	if (inPaintBall[i] == true)
    	{
    		if (paintBallKills[i] > winnerKills)
    		{
    			winnerID = i;
    			winnerKills = paintBallKills[i];
    		}

    		LeaveFromPaintBall(i);
    	}
    }
    if (winnerID == -1)
    {
    	SendClientMessageToAll(COLOR_PAINTBALL, "PaintBall: Играта приключи без победител!");
    }
    else if (winnerID != -1)
    {
    	new string256[256];
    	format(string256, 256, "PaintBall: %s спечели в арената! Неговата награда е 7 Exp и $2100!", GetPlayerNickname(winnerID));
    	SendClientMessageToAll(COLOR_PAINTBALL, string256);
    	GivePlayerCash(winnerID, 2100);
    	GivePlayerExp(winnerID, 7);
    }
}

stock UnlockOLockedVeh(playerid)
{
	if (vehLocker[playerid] != -1)
	{
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (i != playerid)
			{
				SetVehicleParamsForPlayer(vehLocker[playerid], i, 0, 0);
			}
		}

		vehLocker[playerid] = -1;
	}
}

stock RemovePlayerLaser(playerid)
{
	SetPVarInt(playerid, "color", 0);
	PlayerInfo[playerid][pLaser] = 0;
}

stock GivePlayerLaser(playerid)
{
	if (PlayerInfo[playerid][pLaser] == 1)
	{
		SetPVarInt(playerid, "color", 19084);
	}
	else if (PlayerInfo[playerid][pLaser] == 2)
	{
		SetPVarInt(playerid, "color", 19080);
	}
	else if (PlayerInfo[playerid][pLaser] == 3)
	{
		SetPVarInt(playerid, "color", 18643);
	}
	else if (PlayerInfo[playerid][pLaser] == 4)
	{
		SetPVarInt(playerid, "color", 19083);
	}
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
		(anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
	return 0;
}

stock IsPlayerInWater(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
	return 0;
}

stock GetPlayersCountFromFaction(Faction)
{
	new players = 0;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pFaction] == Faction)
		{
			players++;
		}
	}

	return players;
}

stock GetAdmins()
{
	new admins = 0;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			admins++;
		}
	}

	return admins;
}

stock SetVehicloEngineOff(vehicleid)
{
    new vehModel = GetVehicleModel(vehicleid);
    if(IsNoFuelVehicle(vehModel) == 0)
    {
	   ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF);
	   vehEngineStatusON[vehicleid] = false;
    }
}

stock GetItemVehicle(itemID)
{
	new vehID = 0;
	switch (itemID)
	{
		case 6:
			vehID = 560;
		case 7:
			vehID = 411;
	}

	return vehID;
}

stock GetItemPriceWithBGN(itemID)
{
	new price;
	switch (itemID)
	{
		case 0:
			price = 2;
		case 1:
			price = 4;
		case 2:
			price = 6;
		case 3:
			price = 2;
		case 4:
			price = 2;
		case 5:
			price = 2;
		case 6:
			price = 2;
		case 7:
			price = 4;
	}

	return price;
}

stock GetItemNameWithBGN(itemID)
{
	new string256[256];
	switch (itemID)
	{
		case 0:
			format(string256, 256, "Пари в играта: $22300");
		case 1:
			format(string256, 256, "Пари в играта: $35300");
		case 2:
			format(string256, 256, "Пари в играта: $48300");
		case 3:
			format(string256, 256, "Следващо ниво VIP");
		case 4:
			format(string256, 256, "20 Exp");
		case 5:
			format(string256, 256, "5 Level");
		case 6:
			format(string256, 256, "Sultan");
		case 7:
			format(string256, 256, "Infernus");
	}

	return string256;
}

stock GivePlayerItemWithBGN(playerid, itemID)
{
	switch (itemID)
	{
		case 0:
			{
				GivePlayerCash(playerid, 22300);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за $22300!");
			}

		case 1:
			{
				GivePlayerCash(playerid, 35300);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за $35300!");
			}

		case 2:
			{
				GivePlayerCash(playerid, 48300);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за $48300!");
			}

		case 3:
			{
				PlayerInfo[playerid][pVip] += 1;
				new string256[256];
				format(string256, 256, "Ти използва парите си от касата за Vip! Вече си Vip Level %d Честито", PlayerInfo[playerid][pVip]);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, string256);
			}

		case 4:
			{
				GivePlayerExp(playerid, 20);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за 20 Exp!");
			}

		case 5:
			{
				GivePlayerLevel(playerid, 5);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за 5 Level!");
			}

		case 6:
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
				format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, playeridNickname);
				new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
				SendClientMessage(playerid, COLOR_PRIVATEVEH, "*** Честито, вие си купихте лично превозно средство ***");
				PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
				PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehID] = 560;	//goto
				PrivateVehInfo[unusedPrivateVehID][vVehC1] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehC2] = 1;
				PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
				DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
				PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
				new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
				VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
				VehicleInfo[vehicle][vIsPrivate] = 1;
				SavePrivateVehicle(unusedPrivateVehID);
				Inventory_Add(playerid, "Ключове за кола", 11746, 1);
				PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Използвайте /getmycar за да пуснете превозното си средство!");
			}

		case 7:
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
				format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, playeridNickname);
				new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
				SendClientMessage(playerid, COLOR_PRIVATEVEH, "*** Честито, вие си купихте лично превозно средство ***");
				PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
				PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehID] = 411;	//goto
				PrivateVehInfo[unusedPrivateVehID][vVehC1] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehC2] = 1;
				PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
				DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
				PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
				new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
				VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
				VehicleInfo[vehicle][vIsPrivate] = 1;
				SavePrivateVehicle(unusedPrivateVehID);
				Inventory_Add(playerid, "Ключове за кола", 11746, 1);
				PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Използвайте /getmycar за да пуснете превозното си средство!");
			}
	}
    return 0;
}

stock SetToFactionSpawnWithText(playerid)
{
	SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят SPAWN беше променен на Faction!");
	PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
}

stock GetPlayerNearATM(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_1)) return 0;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_2)) return 1;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_3)) return 2;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_4)) return 3;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_5)) return 4;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_6)) return 5;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_7)) return 6;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_8)) return 7;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_9)) return 8;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_10)) return 9;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_11)) return 10;
	return -1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	new Float: armour;
	GetPlayerArmour(playerid, armour);
	if (armour == 0)
	{
		if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
		{
			RemoveArmourObject(playerid);
		}
	}

	return 0;
}

stock ApplyAnimationWithCondition(playerid, animlib[], animname[], Float: fDelta = 4.1, loop = 1, lockx = 1, locky = 1, freeze = 1, time = 1, forcesync = 1)
{
	ApplyAnimation(playerid, animlib, animname, Float: fDelta, loop, lockx, locky, freeze, time, forcesync);
}

stock SpecialActionWithCondition(playerid, actionid)
{
	SetPlayerSpecialAction(playerid, actionid);
}

stock SendMessageScreenText(playerid, messageText[])
{
	TextDrawSetString(MessageInfo[playerid], messageText);
	TextDrawShowForPlayer(playerid, MessageInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideMessageInfo] = 4;
}

stock SendCashScreenText(playerid, cash)
{
	new string[256];
	format(string, 256, "$%d", cash);
	TextDrawSetString(CashInfo[playerid], string);
	TextDrawShowForPlayer(playerid, CashInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideCashInfo] = 4;
}

stock ShowLevelStatsOnScreen(playerid)
{
	new hisLevel = PlayerInfo[playerid][pLevel];
	new hisNextLevel = PlayerInfo[playerid][pLevel] + 1;
	new hisExp = PlayerInfo[playerid][pExp];
	new expToNextLevel = PlayerInfo[playerid][pLevel] + EXP_PLUS;
	new stringText[50];

	format(stringText, 50, "%d", hisLevel);
	TextDrawSetString(LevelStats_CurrentLevel[playerid], stringText);
	format(stringText, 50, "%d", hisNextLevel);
	TextDrawSetString(LevelStats_NextLevel[playerid], stringText);

	ProgressBarShowForPlayer(playerid, LevelStats_EXP[playerid]);
	TextDrawShowForPlayer(playerid, LevelStats_CurrentLevel[playerid]);
	TextDrawShowForPlayer(playerid, LevelStats_NextLevel[playerid]);
	TextDrawShowForPlayer(playerid, LevelStats_Info[playerid]);
	TextDrawShowForPlayer(playerid, LevelStats_BACKGROUND[playerid]);

	new Float: floatHisExp = hisExp;
	new Float: percentage = floatHisExp / expToNextLevel *100.0;
	ProgressBarSetValue(LevelStats_EXP[playerid], percentage);

	new string256[256];
	format(string256, 256, "    You earned EXP~n~~w~%d/%d to Level Up", PlayerInfo[playerid][pExp], PlayerInfo[playerid][pLevel] + EXP_PLUS);
	TextDrawSetString(LevelStats_Info[playerid], string256);

	PlayerTimerInfo[playerid][ptHideScreenLevelInfo] = 6;
}

stock LegalFaction(factionID)
{
	if (factionID == FACTION_LSPD || factionID == FACTION_KACC || factionID == FACTION_ARMY || factionID == FACTION_RCPD)
	{
		return 1;
	}

	return 0;
}

stock QuitJobProcess(playerid)
{
	GetJobDuty(playerid);
}

stock StopTaxiFare(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if (isTaxiVehWorking[vehicleid] == true && IsPlayerDriver(playerid))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Вие вече не сте на смяна, като Taxi Driver и сметката спря!");
		TextDrawHideForPlayer(playerid, FareStatus[playerid]);
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
			{
				SendClientMessage(i, COLOR_WHITE, "Шофьорът на таксито вече не е на смяна и спря начисляването на сметката!");
				TextDrawHideForPlayer(i, FareStatus[i]);
			}
		}

		VehicleInfo[vehicleid][vTaxiFare] = 0;
		VehicleTimerInfo[vehicleid][vtTaxiFareTimer] = 0;
		isTaxiVehWorking[vehicleid] = false;
	}
}

stock HideSpeedoStatusForPlayer(playerid)
{
	for (new i = 0; i < 4; i++)
	{
		TextDrawHideForPlayer(playerid, VehicleSpeedo[i]);
	}

	TextDrawHideForPlayer(playerid, SpeedStatus[playerid]);
	TextDrawHideForPlayer(playerid, FuelStatus[playerid]);
	TextDrawHideForPlayer(playerid, VehicleNameSpeedo[playerid]);
}

stock ShowSpeedoStatusForPlayer(playerid)
{
	for (new i = 0; i < 4; i++)
	{
		if (i != 1)
		{
			TextDrawShowForPlayer(playerid, VehicleSpeedo[i]);
		}
	}

	TextDrawSetString(VehicleNameSpeedo[playerid], GetVehicleName(GetPlayerVehicleID(playerid)));
	TextDrawShowForPlayer(playerid, SpeedStatus[playerid]);
	TextDrawShowForPlayer(playerid, VehicleNameSpeedo[playerid]);
	new vehModel;
	vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (IsNoFuelVehicle(vehModel) == 0)
	{
		TextDrawShowForPlayer(playerid, FuelStatus[playerid]);
		TextDrawShowForPlayer(playerid, VehicleSpeedo[1]);
	}
}

stock GivePlayerAfkTimerSecond(playerid)
{
	if (isLogged[playerid] == true)
	{
		playerAfkSeconds[playerid] += 1;
		if (playerAfkSeconds[playerid] == 60)
		{
			playerAfkMinutes[playerid] += 1;
			playerAfkSeconds[playerid] = 0;
		}
	}
}

stock RemoveTmpVehApplyObject(playerid)
{
	if (addVehObjectID[playerid] != -1)
	{
		DestroyDynamicObject(addVehObjectID[playerid]);
		isAddVehObject[addVehObjectID[playerid]] = false;
		addVehObjectID[playerid] = -1;
	}
}

stock GetPrivateVehsNumber(playerid)
{
	new number = 0;
	for (new i = 0; i < 3; i++)
	{
		if (PlayerInfo[playerid][pPrivateVeh][i] != -1)
		{
			number += 1;
		}
	}

	return number;
}

stock RemovePlayerPrivateVehInfo(playerid, slot)
{
	PlayerInfo[playerid][pPrivateVeh][slot] = -1;
}

stock RestartPrivateTuneInfo(vehID)
{
	PrivateVehInfo[vehID][vVehSpoiler] = 0;
	PrivateVehInfo[vehID][vVehPaintJob] = 0;
	PrivateVehInfo[vehID][vVehHood] = 0;
	PrivateVehInfo[vehID][vVehRoof] = 0;
	PrivateVehInfo[vehID][vVehVentsR] = 0;
	PrivateVehInfo[vehID][vVehVentsL] = 0;
	PrivateVehInfo[vehID][vVehExhaust] = 0;
	PrivateVehInfo[vehID][vVehWheels] = 0;
	PrivateVehInfo[vehID][vVehStereo] = 0;
	PrivateVehInfo[vehID][vVehHyd] = 0;
	PrivateVehInfo[vehID][vVehBumperF] = 0;
	PrivateVehInfo[vehID][vVehBumperR] = 0;
	PrivateVehInfo[vehID][vVehNitro] = 0;
	PrivateVehInfo[vehID][vVehSideskirt] = 0;
	PrivateVehInfo[vehID][vVehLights] = 0;
	PrivateVehInfo[vehID][vVehNeonColor] = 0;
	format(PrivateVehInfo[vehID][vVehStickerName1], 256, "");
	format(PrivateVehInfo[vehID][vVehStickerName2], 256, "");
	for (new i = 0; i < 2; i++)
	{
		PrivateVehInfo[vehID][vVehNeon][i] = 0;
		PrivateVehInfo[vehID][vVehStickerX][i] = 0;
		PrivateVehInfo[vehID][vVehStickerY][i] = 0;
		PrivateVehInfo[vehID][vVehStickerZ][i] = 0;
		PrivateVehInfo[vehID][vVehStickerXY][i] = 0;
		PrivateVehInfo[vehID][vVehStickerYY][i] = 0;
		PrivateVehInfo[vehID][vVehStickerZY][i] = 0;
		PrivateVehInfo[vehID][vVehSticker][i] = 0;
	}

	for (new i = 0; i < 20; i++)
	{
		PrivateVehInfo[vehID][vVehObjectRY][i] = 0;
		PrivateVehInfo[vehID][vVehObjID][i] = 0;
		PrivateVehInfo[vehID][vVehObject][i] = 0;
		PrivateVehInfo[vehID][vVehObjectX][i] = 0;
		PrivateVehInfo[vehID][vVehObjectY][i] = 0;
		PrivateVehInfo[vehID][vVehObjectZ][i] = 0;
		PrivateVehInfo[vehID][vVehObjectRX][i] = 0;
		PrivateVehInfo[vehID][vVehObjectRZ][i] = 0;
	}
}

stock PlayerPassedJob(playerid, job)
{
	new string256[256];
	switch (job)
	{
		case SIDEJOB_PIZZA:
			{
				PlayerInfo[playerid][pPizzaPassed] += 1;
				new passedJob = PlayerInfo[playerid][pPizzaPassed];
				if (passedJob >= PlayerInfo[playerid][pPizzaLevel] *25)
				{
					PlayerInfo[playerid][pPizzaLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Pizza Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pPizzaLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_SWEEP:
			{
				PlayerInfo[playerid][pSweeperPassed] += 1;
				new passedJob = PlayerInfo[playerid][pSweeperPassed];
				if (passedJob == PlayerInfo[playerid][pSweeperLevel] *25)
				{
					PlayerInfo[playerid][pSweeperLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Sweeper Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pSweeperLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_BUS:
			{
				PlayerInfo[playerid][pBusPassed] += 1;
				new passedJob = PlayerInfo[playerid][pBusPassed];
				if (passedJob >= PlayerInfo[playerid][pBusLevel] *25)
				{
					PlayerInfo[playerid][pBusLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Bus Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pBusLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_DELIVER:
			{
				PlayerInfo[playerid][pDeliverPassed] += 1;
				new passedJob = PlayerInfo[playerid][pDeliverPassed];
				if (passedJob >= PlayerInfo[playerid][pDeliverLevel] *25)
				{
					PlayerInfo[playerid][pDeliverLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Deliver Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pDeliverLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_COALMINE:
			{
				PlayerInfo[playerid][pCoalminePassed] += 1;
				new passedJob = PlayerInfo[playerid][pCoalminePassed];
				if (passedJob >= PlayerInfo[playerid][pCoalmineLevel] *25)
				{
					PlayerInfo[playerid][pCoalmineLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Coalmine Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pCoalmineLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}
	}
}

stock GetPlayerJobCash(playerid, job)
{
	new cash = 1;
	switch (job)
	{
		case SIDEJOB_PIZZA:
			{
				cash = PlayerInfo[playerid][pPizzaLevel] *1600;
			}

		case SIDEJOB_SWEEP:
			{
				cash = PlayerInfo[playerid][pSweeperLevel] *1500;
			}

		case SIDEJOB_BUS:
			{
				cash = PlayerInfo[playerid][pBusLevel] *1450;
			}

		case SIDEJOB_DELIVER:
			{
				cash = PlayerInfo[playerid][pDeliverLevel] *1400;
			}

		case SIDEJOB_COALMINE:
			{
				cash = PlayerInfo[playerid][pCoalmineLevel] *1200;
			}
	}

	return cash;
}

stock FixPlayerInfoNullValues(playerid)
{
	if (PlayerInfo[playerid][pSweeperLevel] == 0)
	{
		PlayerInfo[playerid][pSweeperLevel] = 1;
	}

	if (PlayerInfo[playerid][pCoalmineLevel] == 0)
	{
		PlayerInfo[playerid][pCoalmineLevel] = 1;
	}

	if (PlayerInfo[playerid][pBusLevel] == 0)
	{
		PlayerInfo[playerid][pBusLevel] = 1;
	}

	if (PlayerInfo[playerid][pPizzaLevel] == 0)
	{
		PlayerInfo[playerid][pPizzaLevel] = 1;
	}

	if (PlayerInfo[playerid][pDeliverLevel] == 0)
	{
		PlayerInfo[playerid][pDeliverLevel] = 1;
	}
}

stock IsGangFaction(faction)
{
	if (faction == FACTION_CRIP || faction == FACTION_BALLAS || faction == FACTION_GROVE || faction == FACTION_UNSEEN ||
		faction == FACTION_WCW || faction == FACTION_ITALIAN_MAFIA ||
		faction == FACTION_VAGOS || faction == FACTION_AZTECAS || faction == FACTION_TRIADS)
		return true;
	return false;
}

stock SetArmour(playerid, Float: armour)
{
	SetPlayerArmour(playerid, armour);
	PlayerTimerInfo[playerid][ptSetPlayerArmourObjTimer] = 2;
}

stock SetPlayerWeaponSkillByLevel(playerid)
{
	for (new wepId = 0; wepId < 11; wepId++)
	{
		if (wepId != 2)
		{
			SetPlayerSkillLevel(playerid, wepId, PlayerInfo[playerid][pWeaponSkill]);
		}
	}
}

stock SetGangVehTune(vehicleid)
{
	if (vehicleid == unseenCriminalsVehs[16] || vehicleid == unseenCriminalsVehs[19])
	{
		AddVehicleComponent(vehicleid, 1034);
		AddVehicleComponent(vehicleid, 1035);
		AddVehicleComponent(vehicleid, 1041);
	}

	if (vehicleid == unseenCriminalsVehs[20] || vehicleid == unseenCriminalsVehs[15])
	{
		AddVehicleComponent(vehicleid, 1068);
		AddVehicleComponent(vehicleid, 1071);
	}

	//Objects - open
	//LSPD
	for (new i = 0; i < 3; i++)
	{
		if (!IsValidDynamicObject(lspdVehObjects[2][i]))
		{
			DestroyDynamicObject(lspdVehObjects[2][i]);
		}
	}

	if (!IsValidDynamicObject(lspdVehObjects[2][0]))
	{
		lspdVehObjects[2][0] = CreateDynamicObject(19620, 10, 13.0, 10.0, 0, 0, 0);
		AttachDynamicObjectToVehicle(lspdVehObjects[2][0], lspdVehs[2], 0.000000, -0.2, 0.792634, 0.000000, 0.000000, 0.000000);

		lspdVehObjects[2][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
		SetObjectMaterialText(lspdVehObjects[2][1],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFF1c69c1, 0, 1);
		AttachObjectToVehicle(lspdVehObjects[2][1], lspdVehs[2], 1.084, 0, 0, 0.3, 0.0, 0.0);

		lspdVehObjects[2][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
		SetObjectMaterialText(lspdVehObjects[2][2],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFF1c69c1, 0, 1);
		AttachObjectToVehicle(lspdVehObjects[2][2], lspdVehs[2], -1.084, 0, 0, 0.3, 0.0, 180.0);
	}

	for (new i = 0; i < 3; i++)
	{
		if (!IsValidDynamicObject(lspdVehObjects[3][i]))
		{
			DestroyDynamicObject(lspdVehObjects[3][i]);
		}
	}

	if (!IsValidDynamicObject(lspdVehObjects[3][0]))
	{
		lspdVehObjects[3][0] = CreateDynamicObject(19620, 10, 13.0, 10.0, 0, 0, 0);
		AttachDynamicObjectToVehicle(lspdVehObjects[3][0], lspdVehs[3], 0.000000, -0.2, 0.792634, 0.000000, 0.000000, 0.000000);

		lspdVehObjects[3][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
		SetObjectMaterialText(lspdVehObjects[3][1],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFF1c69c1, 0, 1);
		AttachObjectToVehicle(lspdVehObjects[3][1], lspdVehs[3], 1.084, 0, 0, 0.3, 0.0, 0.0);

		lspdVehObjects[3][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
		SetObjectMaterialText(lspdVehObjects[3][2],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFF1c69c1, 0, 1);
		AttachObjectToVehicle(lspdVehObjects[3][2], lspdVehs[3], -1.084, 0, 0, 0.3, 0.0, 180.0);
	}

	//Unseen
	if (!IsValidDynamicObject(UnseenCriminalsVehObjects[21][0]))
	{
		for (new i = 0; i < 2; i++)
		{
			if (!IsValidDynamicObject(UnseenCriminalsVehObjects[21][i]))
			{
				DestroyDynamicObject(UnseenCriminalsVehObjects[21][i]);
			}
		}

		UnseenCriminalsVehObjects[21][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690, 0.00000, 0.00000, 0.00000);
		AttachDynamicObjectToVehicle(UnseenCriminalsVehObjects[21][0], unseenCriminalsVehs[21], -0.72500, 0.00750, -0.58690, 0.00000, 0.00000, 0.00000);
		UnseenCriminalsVehObjects[21][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690, 0.00000, 0.00000, 0.00000);
		AttachDynamicObjectToVehicle(UnseenCriminalsVehObjects[21][1], unseenCriminalsVehs[21], 0.72500, 0.00750, -0.58690, 0.00000, 0.00000, 0.00000);
	}

	if (!IsValidDynamicObject(UnseenCriminalsVehObjects[22][0]))
	{
		for (new i = 0; i < 2; i++)
		{
			if (!IsValidDynamicObject(UnseenCriminalsVehObjects[22][i]))
			{
				DestroyDynamicObject(UnseenCriminalsVehObjects[22][i]);
			}
		}

		UnseenCriminalsVehObjects[22][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690, 0.00000, 0.00000, 0.00000);
		AttachDynamicObjectToVehicle(UnseenCriminalsVehObjects[22][0], unseenCriminalsVehs[22], -0.72500, 0.00750, -0.58690, 0.00000, 0.00000, 0.00000);
		UnseenCriminalsVehObjects[22][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690, 0.00000, 0.00000, 0.00000);
		AttachDynamicObjectToVehicle(UnseenCriminalsVehObjects[22][1], unseenCriminalsVehs[22], 0.72500, 0.00750, -0.58690, 0.00000, 0.00000, 0.00000);
	}

	//Objects - close
}

stock GetJobDuty(playerid)
{
	if(PlayerInfo[playerid][pTaxiDuty])
	{
		SetTaxiOffDuty(playerid);
	}
    if(PlayerInfo[playerid][pFuelCoDuty])
    {
        SetFuelCoOffDuty(playerid);
    }
}

stock SetPrivateVeh3DText(privateVehID) //TODO
{
	new vehicle = PrivateVehInfo[privateVehID][vVeh];
	if (strcmp(PrivateVehInfo[privateVehID][vVehText], "", true) != 0)
	{
			Attach3DTextLabelToVehicle(PrivateVehInfo[privateVehID][vVeh3DText], vehicle, 0.0, 0.0, 0.0);
	}
}

stock JoinFactionAffect(playerid)
{
	PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
	if (PlayerInfo[playerid][pPoliceDuty])
	{
		SetPoliceOffDuty(playerid);
	}

	if (PlayerInfo[playerid][pFbiDuty])
	{
		SetFbiOffDuty(playerid);
	}

	if (PlayerInfo[playerid][pArmyDuty])
	{
		SetArmyOffDuty(playerid);
	}
	
	if (PlayerInfo[playerid][pKACCDuty])
	{
		SetKACCOffDuty(playerid);
	}
	
	if (policeSiren[playerid] != -1)
	{
		RemovePlayerSiren(playerid);
	}
	if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
	{
		RemoveArmourObjectIfNotLaw(playerid);
	}
	RemovePoliceBarricade(playerid);
    SetPlayerDefaultColor(playerid);
    RestartPlayerSkin(playerid);
}

stock LeaveFactionAffect(playerid)
{
	PlayerInfo[playerid][pFaction] = FACTION_CIVILIAN;
	PlayerInfo[playerid][pRank] = 1;
	if (policeSiren[playerid] != -1)
	{
		RemovePlayerSiren(playerid);
	}
	if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
	{
		RemoveArmourObjectIfNotLaw(playerid);
	}
	RemovePoliceBarricade(playerid);
	if (PlayerInfo[playerid][pPoliceDuty])
	{
		SetPoliceOffDuty(playerid);
	}

	if (PlayerInfo[playerid][pFbiDuty])
	{
		SetFbiOffDuty(playerid);
	}

	if (PlayerInfo[playerid][pArmyDuty])
	{
		SetArmyOffDuty(playerid);
	}
	
	if (PlayerInfo[playerid][pKACCDuty])
	{
		SetKACCOffDuty(playerid);
	}

	if (turfAttacker[playerid] == true)
	{
		new string256[256];
		new Faction = PlayerInfo[playerid][pFaction];
		format(string256, 256, "[FACTION CHAT] %s излезе от бандата/мафията и отпадна от атаката на територията!", GetPlayerNickname(playerid));
		SendFactionMessage(Faction, COLOR_TURF, string256);
		LeaveTurfAttacker(playerid);
	}
    SetPlayerDefaultColor(playerid);
    RestartPlayerSkin(playerid);
}

stock isVehicleOccupied(vehicleid)
{
    for(new i;i < GetMaxPlayers();++i)
    {
        if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == 0)
            return true;
    }
    return false;
}

stock GetEventAdmin(playerid)
{
    if(eventCreator[playerid] == true)
    {
        eventCreator[playerid] = false;
    }
}

stock AddPlayerLabel(playerid)
{
    if(!IsValidDynamic3DTextLabel(PlayerLabel[playerid]))
    {
        CreateVipLabel(playerid); 
    }
    else
    {
        UpdateVipLabel(playerid);
    }
}

stock CreateVipLabel(playerid)
{
    switch(PlayerInfo[playerid][pVipTextColor])
    {
        case 0:
        {
            PlayerLabel[playerid] = CreateDynamic3DTextLabel(PlayerInfo[playerid][pVipText], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
        }
        case 1:
        {
            PlayerLabel[playerid] = CreateDynamic3DTextLabel(PlayerInfo[playerid][pVipText], 0x0074FFFF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
        }
        case 2:
        {
            PlayerLabel[playerid] = CreateDynamic3DTextLabel(PlayerInfo[playerid][pVipText], 0x14B80BFF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
        }
    }
}

stock UpdateVipLabel(playerid)
{
    switch(PlayerInfo[playerid][pVipTextColor])
    {
        case 0:
        {
            UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, PlayerInfo[playerid][pVipText]); //red
        }
        case 1:
        {
            UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x0074FFFF, PlayerInfo[playerid][pVipText]); //blue
        }
        case 2:
        {
            UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x14B80BFF, PlayerInfo[playerid][pVipText]); //green
        }
    }
}

stock Remove3DVipLabel(playerid)
{
    if(IsValidDynamic3DTextLabel(PlayerLabel[playerid]))
    {
        DestroyDynamic3DTextLabel(PlayerLabel[playerid]);
    }
}

stock ClearAnimationCondition(playerid)
{
    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_CUFFED)
    {
        TogglePlayerControllable(playerid, 1);
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
        ClearAnimations(playerid);
        ClearAnimations(playerid);
        ClearAnimations(playerid);
        ClearAnimations(playerid);
    }
}

stock ClearCuffAnimation(playerid)
{
    if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED)
    {
        TogglePlayerControllable(playerid, 1);
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    }
}

stock IsCuffed(playerid)
{
    if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED)
    {
        return true;
    }
    return false;
}

stock isHandsUp(playerid)
{
    if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_HANDSUP)
    {
        return true;
    }
    return false;
}

stock LoadPlayerrAttacheds(playerid)
{
    new slot, modelid, bone;
    new Float: X, Float: Y, Float: Z;
    new Float: RX, Float: RY, Float: RZ;
    for(new i=0; i<MAX_PLAYER_ATTACHMENTS; i++)
    {
        if(PlayerInfo[playerid][pAttachements][i] != 0)
        {
            slot = PlayerInfo[playerid][pAttachementsSlot][i];
            modelid = PlayerInfo[playerid][pAttachements][i];
            bone = PlayerInfo[playerid][pAttachementsBone][i];
            X = PlayerInfo[playerid][pAttachements_X][i];
            Y = PlayerInfo[playerid][pAttachements_Y][i];
            Z = PlayerInfo[playerid][pAttachements_Z][i];
            RX = PlayerInfo[playerid][pAttachements_RX][i];
            RY = PlayerInfo[playerid][pAttachements_RY][i];
            RZ = PlayerInfo[playerid][pAttachements_RZ][i];
            SetPlayerAttachedObject(playerid, slot, modelid, bone, X, Y, Z, RX, RY, RZ, 1.0, 1.0, 1.0);
        }
    }
}

stock RemovePlayerAttacheds(playerid)
{
    for(new i=ALL_PLAYER_OBJECTS; i<=9; i++)
    {
        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) 
        {
            RemovePlayerAttachedObject(playerid, i);
            //printf("deatached Slot: %d", i);
        }
    }
    for(new i=0; i<MAX_PLAYER_ATTACHMENTS; i++)
    {
        PlayerInfo[playerid][pAttachements][i] = 0;
    }
}

stock RearrangeTopRecord(playerid, position, record)
{
    
}

stock CheckForTopRecord(playerid, record)
{
    
}

stock GetAdminLevelName(adminLevel)
{
    new adminLevelName[25];
    switch (adminLevel)
    {
       case 1:
            {
                format(adminLevelName, 25, "Helper");
            }

        case 2:
            {
                format(adminLevelName, 25, "Administrator");
            }

        case 3:
            {
                format(adminLevelName, 25, "Moderator");
            }

        case 4:
            {
                format(adminLevelName, 25, "Grand Admin");
            }

        case 5:
            {
                format(adminLevelName, 25, "Server Owner");
            }
    }
    return adminLevelName;
}

stock CreateAndAttachToPlayer(playerid, objectid, item, bone, Float: X = 0.0, Float: Y = 0.0, Float: Z = 0.0, Float: RX = 0.0, Float: RY = 0.0, Float: RZ = 0.0,
 Float: ScX = 1.0, Float: ScY = 1.0, Float: ScZ = 1.0)
{
    new slot = item + ALL_PLAYER_OBJECTS;
    SetPlayerAttachedObject(playerid, slot, objectid, bone, X, Y, Z, RX, RY, RZ, ScX, ScY, ScZ);
    EditAttachedObject(playerid, slot);
}

stock JoinPaintBall(playerid)
{
    if (paintBallOpen == false) return SendClientMessage(playerid, COLOR_GRAD1, "Играта PaintBall не е отворена в момента!");
    if (!IsPlayerInRangeOfPoint(playerid, 4, MiniGamesArena)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до входа на сградата за мини-игри!");
    if (inPaintBall[playerid] == true) SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си в играта PaintBall!");
    if (paintBallPlayers >= 15) return SendClientMessage(playerid, COLOR_GRAD1, "Няма свободни места в играта!");
    if (PlayerInfo[playerid][pPoliceDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Police смяна първо!");
    if (PlayerInfo[playerid][pFbiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fbi смяна първо!");
    if (PlayerInfo[playerid][pTaxiDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
    if (PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
    if (PlayerInfo[playerid][pArmyDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Army смяна първо!");
	if (PlayerInfo[playerid][pKACCDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от K.A.C.C смяна първо!");
    if (PlayerInfo[playerid][pAdminDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Admin смяна първо!");
    if (PlayerInfo[playerid][pAFK]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от AFK първо!");
    if (inEvent[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
	if (isInDuel[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да приключиш дуела!");
    if (eventCreator[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Event-а първо!");
	if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в играта, докато си заподозрян!");
    GetPlayerHealth(playerid, beforeHealth[playerid]);
    GetPlayerArmour(playerid, beforeArmour[playerid]);
    SavePlayerAllGuns(playerid);
    GetPlayerAllGuns(playerid);
    GivePlayerPaintBallGuns(playerid);
    SetPlayerPosToPaintBall(playerid);
    SetArmour(playerid, 100);
    SetPlayerHealth(playerid, 100);
    if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
    {
        RemoveArmourObject(playerid);
    }
    SetPlayerArmedWeapon(playerid, 0);
    paintBallKills[playerid] = 0;
    inPaintBall[playerid] = true;
    paintBallPlayers++;
    new string256[256];
    if(!paintBallStarted)
    {
        format(string256, 256, "PaintBall: %s влезе в играта - /joinpaintball", GetPlayerNickname(playerid));
        SendClientMessageToAll(COLOR_PAINTBALL, string256);
        if(paintBallPlayers >= 5)
        {
            if(paintBallStartTimer == 0)
            {
                SendClientMessageToAll(COLOR_PAINTBALL, "PaintBall: Събра се нужният борй играчи! Играта започва след 1 минута!");
                paintBallStartTimer = 60;
            }
        }
        else
        {
            if(paintBallStartTimer == 0)
            {
                format(string256, 256, "PaintBall: Нужни са още %d играча да за започне играта!", 5-paintBallPlayers);
                SendClientMessageToAll(COLOR_PAINTBALL, string256);
            }
        }
    }
    else
    {
        format(string256, 256, "PaintBall: %s влезе в играта - /joinpaintball", GetPlayerNickname(playerid));
        SendClientMessageToAll(COLOR_PAINTBALL, string256);
        TextDrawShowForPlayer(playerid, PaintBallTimerText);
    }
    SendClientMessage(playerid, COLOR_PAINTBALL, "PaintBall: Ти влезе в играта! Използвай /leavepaintball за да излезеш!");
    return 0;
}

stock IsAchieved(playerid, achievement)
{
    if(PlayerInfo[playerid][pAchievement][achievement] == 1)
    {
        return true;
    }
    return false;
}

stock GivePlayerAchievement(playerid, achievement)
{
    new string256[256];
    switch(achievement)
    {
        case ACHIEVEMENT_BUYHOUSE:
        {
            format(string256, 256, "Постижение: Купи си къща\n\nНаграда: 3 Exp");
            ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
            GivePlayerExp(playerid, 3);
        }
        case ACHIEVEMENT_BUYBIZ:
        {
            format(string256, 256, "Постижение: Купи си бизнес\n\nНаграда: 3 Exp");
            ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
            GivePlayerExp(playerid, 3);
        }
        case ACHIEVEMENT_BUYLEGALWEAPON:
        {
            format(string256, 256, "Постижение: Купи си легално оръжие\n\nНаграда: 3 Exp");
            ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
            GivePlayerExp(playerid, 3);
        }
    }
    PlayerInfo[playerid][pAchievement][achievement] = 1;
}

stock ExistVehicleID(vehID)
{
    if(IsValidVehicle(vehID))
    {
        return true;
    }
    return false;
}

stock IsPlayerInMiniGame(playerid)
{
	if(inPaintBall[playerid]) 
	{
		return true;
	}
	return false;
}

stock TransferPlayerAmmuOnDeath(playerid, killerid)
{
	new armedPlayeridWeapon = GetPlayerWeapon(playerid);
	if(armedPlayeridWeapon >= 22 && armedPlayeridWeapon <= 34)
	{
		new playeridAmmu = GetPlayerAmmo(playerid);
		if(playeridAmmu >= 20)
		{
			new const toGet = 20;
			new newPlayeridAmmu = playeridAmmu - toGet;
			GivePlayerWeapon(killerid, armedPlayeridWeapon, toGet);
			SetPlayerAmmo(playerid, armedPlayeridWeapon, newPlayeridAmmu);
			GivePlayerWeapon(playerid, armedPlayeridWeapon, 0);
		}
		if(PlayerInfo[killerid][pVip] == 2)
		{
			playeridAmmu = GetPlayerAmmo(playerid);
			if(playeridAmmu >= 10)
			{
				new const toGet = 10;
				new newPlayeridAmmu = playeridAmmu - toGet;
				GivePlayerWeapon(killerid, armedPlayeridWeapon, toGet);
				SetPlayerAmmo(playerid, armedPlayeridWeapon, newPlayeridAmmu);
				GivePlayerWeapon(playerid, armedPlayeridWeapon, 0);
			}
		}
	}
}

stock AddBizActor(bizID)
{
	new bizType = BizInfo[bizID][bType];
	new const bizVW = bizID + 500;
	if(bizType == 1)
	{
		BizActors[bizID] = CreateDynamicActor(12, -23.4347,-57.3233,1003.5469,358.2181);
	}
	else if(bizType == 2)
	{
		BizActors[bizID] = CreateDynamicActor(23, 497.6500,-77.4640,998.7651,4.6948);
	}
	else if(bizType == 3)
	{
		BizActors[bizID] = CreateDynamicActor(12, 291.2089,-104.4918,1001.5156,179.8127);
	}
	else if(bizType == 4)
	{
		BizActors[bizID] = CreateDynamicActor(17, -30.3216,-30.6680,1003.5573,4.0031);
	}
	else if(bizType == 5)
	{
		BizActors[bizID] = CreateDynamicActor(17, 206.8955,-127.8072,1003.5078,178.3303);
	}
	else if(bizType == 6)
	{
		BizActors[bizID] = CreateDynamicActor(23, 377.1566,-65.8495,1001.5078,181.8432);
	}
	else if(bizType == 7)
	{
		BizActors[bizID] = CreateDynamicActor(17, -22.5515,-140.3081,1003.5469,4.1816);
	}
	else if(bizType == 8)
	{
		BizActors[bizID] = CreateDynamicActor(11, 203.8476,-41.6685,1001.8047,184.3500);
	}
	else if(bizType == 9)
	{
		BizActors[bizID] = CreateDynamicActor(12, 296.2200,-82.5274,1001.5156,359.7949);
	}
	else if(bizType == 10)
	{
		BizActors[bizID] = CreateDynamicActor(23, 308.2392,-143.0904,999.6016,356.6616);
	}
	else if(bizType == 19)
	{
		BizActors[bizID] = CreateDynamicActor(11, -223.3082,1403.3278,27.7734,93.1691);
	}
	else if(bizType == 20)
	{
		BizActors[bizID] = CreateDynamicActor(17, 369.8087,-4.4917,1001.8589,178.0598);
	}
	else if(bizType == 21)
	{
		BizActors[bizID] = CreateDynamicActor(11, 451.0748,-82.2322,999.5547,177.4332);
	}
	else if(bizType == 22)
	{
		BizActors[bizID] = CreateDynamicActor(12, 1782.2920,1666.7401,-12.8921,180.3748);
	}
	SetDynamicActorVirtualWorld(BizActors[bizID], bizVW);
}

stock SetSpawnRandomAnim(playerid)
{
	new randomAnim = randomex(0, 5); //CASE 4: WONT MAKE ANIMATION
	switch(randomAnim)
	{
		case 0:
		{
			ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
		case 1:
		{
			ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
		case 2:
		{
			ApplyAnimationWithCondition(playerid, "MISC", "Scratchballs_01", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
		case 3:
		{
			ApplyAnimationWithCondition(playerid, "MISC", "Scratchballs_01", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
	}
}

stock FinishMission(playerid, bonusCash, bonusExp)
{
	new string[256];
	format(string, 256, "[Мисия %d] Ти завърши своята мисия! Награда: $%d и %d Exp", PlayerInfo[playerid][pMission], bonusCash, bonusExp);
	SendClientMessage(playerid, COLOR_MISSION, string);
	DisablePlayerRaceCheckpoint(playerid);
	GivePlayerCash(playerid, bonusCash);
	GivePlayerExp(playerid, bonusExp);
	PlayerInfo[playerid][pMission] += 1;
}

stock StartMission(playerid)
{
	new missionID = PlayerInfo[playerid][pMission];
	switch(missionID)
	{
		case 1:
		{
			if(!sentMissionMSG[playerid])
			{
				SendClientMessage(playerid, COLOR_MISSION, "[Мисия 1] Ти се завърна в щата San Andreas! Отиди до своята банда, която е отбелязана на картата ти");
				sentMissionMSG[playerid] = true;
			}
			SetPlayerRaceCheckpoint(playerid, 2, MISSION_1_START, MISSION_1_START, MISSION_CHECKPOINT_RANGE_FOOT);
		}
	}
}

stock isMainTurf(turf)
{
	if(turf >= MAX_OCCUPY_TURFS)
	{
		return true;
	}
	return false;
}

stock LockedFactionHouseMessage(playerid, faction)
{
	new string[256];
	format(string, 256, "~b~~h~%s 's~n~~w~YOU DO NOT HAVE KEYS FOR THIS PROPERTY", FactionInfo[faction][fName]);
	TextDrawSetString(CommandInfo[playerid], string);
	TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideCommandInfo] = 5;
}

stock LockedFactionVehMessage(playerid, faction)
{
	new string[256];
	format(string, 256, "~b~~h~%s 's~n~~w~YOU DO NOT HAVE KEYS FOR THIS VEHICLE", FactionInfo[faction][fName]);
	TextDrawSetString(CommandInfo[playerid], string);
	TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideCommandInfo] = 5;
}

stock LockedJobVehMessage(playerid, job)
{
	new string[256];
	format(string, 256, "~g~~h~%s 's~n~~w~YOU DO NOT HAVE KEYS FOR THIS VEHICLE", JobInfo[job][jName]);
	TextDrawSetString(CommandInfo[playerid], string);
	TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideCommandInfo] = 5;
}

stock NotInFactionMessage(playerid, faction)
{
	new string256[256];
	format(string256, 256, "Трябва да си член на %s", FactionInfo[faction][fName]);
	SendClientMessage(playerid, COLOR_GRAD1, string256);
	return 0;
}

stock LockedPlayerVehMessage(playerid, vehID, bool: noOwner)
{
	new string[256];
	if(!noOwner)
	{
		format(string, 256, "~r~OWNED BY %s~n~~w~YOU DO NOT HAVE KEYS FOR THIS VEHICLE", PrivateVehInfo[vehID][vOwnerName]);
		TextDrawSetString(CommandInfo[playerid], string);
	}
	else
	{
		format(string, 256, "~r~OWNED BY UNITED STATES OF AMERICA~n~~w~YOU DO NOT HAVE KEYS FOR THIS VEHICLE");
		TextDrawSetString(CommandInfo[playerid], string);
	}
	TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideCommandInfo] = 5;
}

stock UnRentPlayerVeh(playerid)
{
	rentorVeh[playerid] = false;
	new rented = vehRented[playerid];
	VehicleInfo[rented][vRentedBy] = -1;
	if (GetPlayerVehicleID(playerid) == rented && IsPlayerDriver(playerid))
	{
		RemovePlayerFromVehicle(playerid);
	}
	vehRented[playerid] = -1;
}

stock GetPlayerFPS(playerid)
{
	return pFPS[playerid];
}

/*
· SA-MP Gamemode:[LoS] Life of San Andreas | Bulgaria
· Copyright © 2021-2023, Daniel Miroslavov Andreev
· Всички права са запазени.
*/
